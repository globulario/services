syntax = "proto3";
package repository;

import "resource.proto";

option go_package="github.com/globulario/services/golang/repository/repositorypb";

// Request for uploading a bundle.
message UploadBundleRequest {
  string user = 1;              // Username of the person uploading the bundle.
  string organization = 2;      // Name of the organization uploading the bundle.
  bytes data = 3;               // Binary data of the bundle being uploaded.
}

// Response after uploading a bundle.
message UploadBundleResponse {
  bool result = 1;              // Indicates success or failure of the bundle upload.
}

// Request for downloading a bundle.
message DownloadBundleRequest {
  resource.PackageDescriptor descriptor = 1;  // Descriptor of the package to be downloaded.
  string platform = 2;                         // Platform for which the bundle is intended.
}

// Response for downloading a bundle.
message DownloadBundleResponse {
  bytes data = 1;               // Binary data of the downloaded bundle.
}

// Service for managing package uploads and downloads in a repository.
service PackageRepository {
  // Downloads a package bundle from the package repository.
  // Input: DownloadBundleRequest containing the package descriptor and platform.
  // Output: Stream of DownloadBundleResponse containing the binary data of the bundle.
  rpc DownloadBundle(DownloadBundleRequest) returns(stream DownloadBundleResponse);
  
  // Uploads a package bundle to the repository.
  // Input: Stream of UploadBundleRequest containing the user, organization, and bundle data.
  // Output: UploadBundleResponse indicating the result of the upload operation.
  rpc UploadBundle(stream UploadBundleRequest) returns(UploadBundleResponse);
}
