/**
 * You can use search as starter project.
 */
syntax = "proto3";
package search;

option go_package="search/searchpb";


message GetEngineVersionRequest {

}

message GetEngineVersionResponse {
  string message = 1;
}

message IndexJsonObjectRequest {
	/** The path of the database on the server. If empty the db will be created in memory */
	string path = 1;
	/** The JSON string */
	string jsonStr = 2;
	/** The language to be use to index the object */
	string language = 3; 
	/** The field that contain the id of the object. */
	string id = 4;
	/** The list of fields to be use as index */
	repeated string indexs = 5;
	/** Must be anything, can be the path of object to access it. */
	string data = 6;
}

message IndexJsonObjectResponse {
	/** Nothing **/
}

message DeleteDocumentRequest {
	string path = 1;
	string id = 2;
}

message DeleteDocumentResponse {
}

message CountRequest {
	string path = 1;
}

message CountResponse {
	int32 result = 1;
}

message SearchResult {
	int32 rank = 1;
	string docId = 2;
	string data = 3;
    string snippet = 4;
}

message SearchResults {
	repeated SearchResult results=1;
}

message SearchDocumentsRequest{
	repeated string paths = 1;
	string query = 2;
	string language = 3;
	repeated string fields = 4;
	int32 offset = 5; // start result
	int32 pageSize = 6; // number of result to be return.
	int32 snippetLength = 7; // The length of the snippet.
}

message SearchDocumentsResponse{
	SearchResults results=1;
}

message StopRequest {
	
}

message StopResponse {
	
}

service SearchService {
	// Stop the server.
 	rpc Stop(StopRequest) returns (StopResponse);
	
	/**
	 * Return the version number of the search engine.
	 */
	 rpc GetEngineVersion(GetEngineVersionRequest) returns (GetEngineVersionResponse);

	/**
	 * That function is use to index JSON object/array of object
	 */
	rpc IndexJsonObject(IndexJsonObjectRequest) returns (IndexJsonObjectResponse);
	
	/**
	 * Return the number of document in a database.
	 */
	rpc Count(CountRequest) returns (CountResponse);
	
	/**
	 * Remove a document from the db
	 */
	rpc DeleteDocument(DeleteDocumentRequest) returns (DeleteDocumentResponse);
	
	/**
	 * Search documents
	 */
	rpc SearchDocuments(SearchDocumentsRequest) returns (stream SearchDocumentsResponse);

}	