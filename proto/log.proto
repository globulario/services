syntax = "proto3";

package log;

option go_package="github.com/globulario/services/golang/log/logpb";

////////////////////////////////////////////////////////////////////////////////
// Log service
////////////////////////////////////////////////////////////////////////////////

enum LogLevel{
	FATAL_MESSAGE=0;
	ERROR_MESSAGE=1;
	WARN_MESSAGE=2;
	INFO_MESSAGE=3;
	DEBUG_MESSAGE=4;
	TRACE_MESSAGE=5;
}


message LogInfo{
	string id = 1; // the id of the log
	LogLevel level = 2; // the level of the log
	string application = 3;
	string method = 4; // the method where the error occured
	string message = 5; // the encounter error message
	string line = 6; // the line number where the error occured
	int64 occurences = 7; // the number of time the error occured
}

message LogRqst{
	LogInfo info = 1;
}

message LogRsp{
	bool result=1;
}

message DeleteLogRqst{
	LogInfo log = 1;
}

message DeleteLogRsp{
	bool result=1;
}

message GetLogRqst{
	string query = 1;
}

message GetLogRsp{
	repeated LogInfo infos = 1;
}

message ClearAllLogRqst{
	string query = 1;
}

message ClearAllLogRsp{
	bool result=1;
}

service LogService {
	/** Set a method into the log... **/
	rpc Log(LogRqst) returns(LogRsp);
	
	/** Get the list of logs **/
	rpc GetLog(GetLogRqst) returns(stream GetLogRsp);

	/** Delete a single log entry **/
	rpc DeleteLog(DeleteLogRqst) returns(DeleteLogRsp);
	
	/** Delete all log or logs that match the key pattern... **/
	rpc ClearAllLog(ClearAllLogRqst) returns(ClearAllLogRsp);
}
