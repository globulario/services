// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v3.21.12
// source: applications_manager.proto

package applications_managerpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// InstallApplicationRequest represents a request to install a specific application.
type InstallApplicationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DiscoveryId   string                 `protobuf:"bytes,1,opt,name=discoveryId,proto3" json:"discoveryId,omitempty"`                          // Identifier for discovery service.
	ApplicationId string                 `protobuf:"bytes,2,opt,name=applicationId,proto3" json:"applicationId,omitempty"`                      // Unique identifier for the application to be installed.
	PublisherID   string                 `protobuf:"bytes,3,opt,name=PublisherID,proto3" json:"PublisherID,omitempty"`                          // Identifier of the application's publisher.
	Version       string                 `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`                                  // Version of the application to be installed.
	Domain        string                 `protobuf:"bytes,5,opt,name=domain,proto3" json:"domain,omitempty"`                                    // Optional. Useful if the server serves multiple domains.
	SetAsDefault  bool                   `protobuf:"varint,6,opt,name=set_as_default,json=setAsDefault,proto3" json:"set_as_default,omitempty"` // If true, sets the application as the default for its type.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InstallApplicationRequest) Reset() {
	*x = InstallApplicationRequest{}
	mi := &file_applications_manager_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InstallApplicationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstallApplicationRequest) ProtoMessage() {}

func (x *InstallApplicationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_applications_manager_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstallApplicationRequest.ProtoReflect.Descriptor instead.
func (*InstallApplicationRequest) Descriptor() ([]byte, []int) {
	return file_applications_manager_proto_rawDescGZIP(), []int{0}
}

func (x *InstallApplicationRequest) GetDiscoveryId() string {
	if x != nil {
		return x.DiscoveryId
	}
	return ""
}

func (x *InstallApplicationRequest) GetApplicationId() string {
	if x != nil {
		return x.ApplicationId
	}
	return ""
}

func (x *InstallApplicationRequest) GetPublisherID() string {
	if x != nil {
		return x.PublisherID
	}
	return ""
}

func (x *InstallApplicationRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *InstallApplicationRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *InstallApplicationRequest) GetSetAsDefault() bool {
	if x != nil {
		return x.SetAsDefault
	}
	return false
}

// InstallApplicationResponse represents the response after attempting an application installation.
type InstallApplicationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        bool                   `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"` // True if the installation was successful, false otherwise.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InstallApplicationResponse) Reset() {
	*x = InstallApplicationResponse{}
	mi := &file_applications_manager_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InstallApplicationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstallApplicationResponse) ProtoMessage() {}

func (x *InstallApplicationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_applications_manager_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstallApplicationResponse.ProtoReflect.Descriptor instead.
func (*InstallApplicationResponse) Descriptor() ([]byte, []int) {
	return file_applications_manager_proto_rawDescGZIP(), []int{1}
}

func (x *InstallApplicationResponse) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// UninstallApplicationRequest represents a request to uninstall a specific application.
type UninstallApplicationRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	ApplicationId     string                 `protobuf:"bytes,1,opt,name=applicationId,proto3" json:"applicationId,omitempty"`          // Unique identifier for the application to be uninstalled.
	PublisherID       string                 `protobuf:"bytes,2,opt,name=PublisherID,proto3" json:"PublisherID,omitempty"`              // Identifier of the application's publisher.
	Version           string                 `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`                      // Version of the application to be uninstalled.
	DeletePermissions bool                   `protobuf:"varint,4,opt,name=deletePermissions,proto3" json:"deletePermissions,omitempty"` // If true, also deletes all permissions associated with the application.
	Domain            string                 `protobuf:"bytes,5,opt,name=domain,proto3" json:"domain,omitempty"`                        // Optional. Useful if the server serves multiple domains.
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *UninstallApplicationRequest) Reset() {
	*x = UninstallApplicationRequest{}
	mi := &file_applications_manager_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UninstallApplicationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UninstallApplicationRequest) ProtoMessage() {}

func (x *UninstallApplicationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_applications_manager_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UninstallApplicationRequest.ProtoReflect.Descriptor instead.
func (*UninstallApplicationRequest) Descriptor() ([]byte, []int) {
	return file_applications_manager_proto_rawDescGZIP(), []int{2}
}

func (x *UninstallApplicationRequest) GetApplicationId() string {
	if x != nil {
		return x.ApplicationId
	}
	return ""
}

func (x *UninstallApplicationRequest) GetPublisherID() string {
	if x != nil {
		return x.PublisherID
	}
	return ""
}

func (x *UninstallApplicationRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *UninstallApplicationRequest) GetDeletePermissions() bool {
	if x != nil {
		return x.DeletePermissions
	}
	return false
}

func (x *UninstallApplicationRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

// UninstallApplicationResponse represents the response after attempting an application uninstallation.
type UninstallApplicationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        bool                   `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"` // True if the uninstallation was successful, false otherwise.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UninstallApplicationResponse) Reset() {
	*x = UninstallApplicationResponse{}
	mi := &file_applications_manager_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UninstallApplicationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UninstallApplicationResponse) ProtoMessage() {}

func (x *UninstallApplicationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_applications_manager_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UninstallApplicationResponse.ProtoReflect.Descriptor instead.
func (*UninstallApplicationResponse) Descriptor() ([]byte, []int) {
	return file_applications_manager_proto_rawDescGZIP(), []int{3}
}

func (x *UninstallApplicationResponse) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

var File_applications_manager_proto protoreflect.FileDescriptor

const file_applications_manager_proto_rawDesc = "" +
	"\n" +
	"\x1aapplications_manager.proto\x12\x14applications_manager\"\xdd\x01\n" +
	"\x19InstallApplicationRequest\x12 \n" +
	"\vdiscoveryId\x18\x01 \x01(\tR\vdiscoveryId\x12$\n" +
	"\rapplicationId\x18\x02 \x01(\tR\rapplicationId\x12 \n" +
	"\vPublisherID\x18\x03 \x01(\tR\vPublisherID\x12\x18\n" +
	"\aversion\x18\x04 \x01(\tR\aversion\x12\x16\n" +
	"\x06domain\x18\x05 \x01(\tR\x06domain\x12$\n" +
	"\x0eset_as_default\x18\x06 \x01(\bR\fsetAsDefault\"4\n" +
	"\x1aInstallApplicationResponse\x12\x16\n" +
	"\x06result\x18\x01 \x01(\bR\x06result\"\xc5\x01\n" +
	"\x1bUninstallApplicationRequest\x12$\n" +
	"\rapplicationId\x18\x01 \x01(\tR\rapplicationId\x12 \n" +
	"\vPublisherID\x18\x02 \x01(\tR\vPublisherID\x12\x18\n" +
	"\aversion\x18\x03 \x01(\tR\aversion\x12,\n" +
	"\x11deletePermissions\x18\x04 \x01(\bR\x11deletePermissions\x12\x16\n" +
	"\x06domain\x18\x05 \x01(\tR\x06domain\"6\n" +
	"\x1cUninstallApplicationResponse\x12\x16\n" +
	"\x06result\x18\x01 \x01(\bR\x06result2\x93\x02\n" +
	"\x19ApplicationManagerService\x12w\n" +
	"\x12InstallApplication\x12/.applications_manager.InstallApplicationRequest\x1a0.applications_manager.InstallApplicationResponse\x12}\n" +
	"\x14UninstallApplication\x121.applications_manager.UninstallApplicationRequest\x1a2.applications_manager.UninstallApplicationResponseBSZQgithub.com/globulario/services/golang/applications_manager/applications_managerpbb\x06proto3"

var (
	file_applications_manager_proto_rawDescOnce sync.Once
	file_applications_manager_proto_rawDescData []byte
)

func file_applications_manager_proto_rawDescGZIP() []byte {
	file_applications_manager_proto_rawDescOnce.Do(func() {
		file_applications_manager_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_applications_manager_proto_rawDesc), len(file_applications_manager_proto_rawDesc)))
	})
	return file_applications_manager_proto_rawDescData
}

var file_applications_manager_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_applications_manager_proto_goTypes = []any{
	(*InstallApplicationRequest)(nil),    // 0: applications_manager.InstallApplicationRequest
	(*InstallApplicationResponse)(nil),   // 1: applications_manager.InstallApplicationResponse
	(*UninstallApplicationRequest)(nil),  // 2: applications_manager.UninstallApplicationRequest
	(*UninstallApplicationResponse)(nil), // 3: applications_manager.UninstallApplicationResponse
}
var file_applications_manager_proto_depIdxs = []int32{
	0, // 0: applications_manager.ApplicationManagerService.InstallApplication:input_type -> applications_manager.InstallApplicationRequest
	2, // 1: applications_manager.ApplicationManagerService.UninstallApplication:input_type -> applications_manager.UninstallApplicationRequest
	1, // 2: applications_manager.ApplicationManagerService.InstallApplication:output_type -> applications_manager.InstallApplicationResponse
	3, // 3: applications_manager.ApplicationManagerService.UninstallApplication:output_type -> applications_manager.UninstallApplicationResponse
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_applications_manager_proto_init() }
func file_applications_manager_proto_init() {
	if File_applications_manager_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_applications_manager_proto_rawDesc), len(file_applications_manager_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_applications_manager_proto_goTypes,
		DependencyIndexes: file_applications_manager_proto_depIdxs,
		MessageInfos:      file_applications_manager_proto_msgTypes,
	}.Build()
	File_applications_manager_proto = out.File
	file_applications_manager_proto_goTypes = nil
	file_applications_manager_proto_depIdxs = nil
}
