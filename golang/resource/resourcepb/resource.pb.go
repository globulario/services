// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.12.4
// source: resource.proto

package resourcepb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Enum to define the type of package.
type PackageType int32

const (
	PackageType_UNKNOW_TYPE      PackageType = 0 // Default value for unknown type.
	PackageType_SERVICE_TYPE     PackageType = 1 // Indicates a service package.
	PackageType_APPLICATION_TYPE PackageType = 2 // Indicates an application package.
)

// Enum value maps for PackageType.
var (
	PackageType_name = map[int32]string{
		0: "UNKNOW_TYPE",
		1: "SERVICE_TYPE",
		2: "APPLICATION_TYPE",
	}
	PackageType_value = map[string]int32{
		"UNKNOW_TYPE":      0,
		"SERVICE_TYPE":     1,
		"APPLICATION_TYPE": 2,
	}
)

func (x PackageType) Enum() *PackageType {
	p := new(PackageType)
	*p = x
	return p
}

func (x PackageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PackageType) Descriptor() protoreflect.EnumDescriptor {
	return file_resource_proto_enumTypes[0].Descriptor()
}

func (PackageType) Type() protoreflect.EnumType {
	return &file_resource_proto_enumTypes[0]
}

func (x PackageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PackageType.Descriptor instead.
func (PackageType) EnumDescriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{0}
}

// Enum to represent the approval state of a peer.
type PeerApprovalState int32

const (
	PeerApprovalState_PEER_PENDING  PeerApprovalState = 0 // Approval is pending.
	PeerApprovalState_PEER_ACCETEP  PeerApprovalState = 1 // Peer has been accepted.
	PeerApprovalState_PEER_REJECTED PeerApprovalState = 2 // Peer has been rejected.
)

// Enum value maps for PeerApprovalState.
var (
	PeerApprovalState_name = map[int32]string{
		0: "PEER_PENDING",
		1: "PEER_ACCETEP",
		2: "PEER_REJECTED",
	}
	PeerApprovalState_value = map[string]int32{
		"PEER_PENDING":  0,
		"PEER_ACCETEP":  1,
		"PEER_REJECTED": 2,
	}
)

func (x PeerApprovalState) Enum() *PeerApprovalState {
	p := new(PeerApprovalState)
	*p = x
	return p
}

func (x PeerApprovalState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PeerApprovalState) Descriptor() protoreflect.EnumDescriptor {
	return file_resource_proto_enumTypes[1].Descriptor()
}

func (PeerApprovalState) Type() protoreflect.EnumType {
	return &file_resource_proto_enumTypes[1]
}

func (x PeerApprovalState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PeerApprovalState.Descriptor instead.
func (PeerApprovalState) EnumDescriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{1}
}

// Enumeration for different types of notifications.
type NotificationType int32

const (
	NotificationType_USER_NOTIFICATION        NotificationType = 0
	NotificationType_APPLICATION_NOTIFICATION NotificationType = 1
	NotificationType_SYSTEM_NOTIFICATION      NotificationType = 2
)

// Enum value maps for NotificationType.
var (
	NotificationType_name = map[int32]string{
		0: "USER_NOTIFICATION",
		1: "APPLICATION_NOTIFICATION",
		2: "SYSTEM_NOTIFICATION",
	}
	NotificationType_value = map[string]int32{
		"USER_NOTIFICATION":        0,
		"APPLICATION_NOTIFICATION": 1,
		"SYSTEM_NOTIFICATION":      2,
	}
)

func (x NotificationType) Enum() *NotificationType {
	p := new(NotificationType)
	*p = x
	return p
}

func (x NotificationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NotificationType) Descriptor() protoreflect.EnumDescriptor {
	return file_resource_proto_enumTypes[2].Descriptor()
}

func (NotificationType) Type() protoreflect.EnumType {
	return &file_resource_proto_enumTypes[2]
}

func (x NotificationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NotificationType.Descriptor instead.
func (NotificationType) EnumDescriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{2}
}

// Enumeration for session states.
type SessionState int32

const (
	SessionState_ONLINE  SessionState = 0 // Indicates the user is online.
	SessionState_OFFLINE SessionState = 1 // Indicates the user is offline.
	SessionState_AWAY    SessionState = 2 // Indicates the user is away.
)

// Enum value maps for SessionState.
var (
	SessionState_name = map[int32]string{
		0: "ONLINE",
		1: "OFFLINE",
		2: "AWAY",
	}
	SessionState_value = map[string]int32{
		"ONLINE":  0,
		"OFFLINE": 1,
		"AWAY":    2,
	}
)

func (x SessionState) Enum() *SessionState {
	p := new(SessionState)
	*p = x
	return p
}

func (x SessionState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SessionState) Descriptor() protoreflect.EnumDescriptor {
	return file_resource_proto_enumTypes[3].Descriptor()
}

func (SessionState) Type() protoreflect.EnumType {
	return &file_resource_proto_enumTypes[3]
}

func (x SessionState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SessionState.Descriptor instead.
func (SessionState) EnumDescriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{3}
}

// *
// PackageBundle contains the information for updating a service or application on a node.
type PackageBundle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PackageDescriptor *PackageDescriptor `protobuf:"bytes,1,opt,name=packageDescriptor,proto3" json:"packageDescriptor,omitempty"` // Describes the package details.
	// Additional information not found in the descriptor.
	Checksum  string `protobuf:"bytes,2,opt,name=checksum,proto3" json:"checksum,omitempty"`   // Checksum for validating the package integrity.
	Plaform   string `protobuf:"bytes,3,opt,name=plaform,proto3" json:"plaform,omitempty"`     // Platform for which the package is intended.
	Size      int32  `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`          // Size of the package in bytes.
	Modified  int64  `protobuf:"varint,5,opt,name=modified,proto3" json:"modified,omitempty"`  // Timestamp of when the package was last modified.
	Binairies []byte `protobuf:"bytes,6,opt,name=Binairies,proto3" json:"Binairies,omitempty"` // Binary data of the package, not saved in the database.
	Mac       string `protobuf:"bytes,7,opt,name=mac,proto3" json:"mac,omitempty"`             // MAC address where the package data is stored.
	TypeName  string `protobuf:"bytes,8,opt,name=typeName,proto3" json:"typeName,omitempty"`   // Type of the object (e.g., service, application).
}

func (x *PackageBundle) Reset() {
	*x = PackageBundle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PackageBundle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PackageBundle) ProtoMessage() {}

func (x *PackageBundle) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PackageBundle.ProtoReflect.Descriptor instead.
func (*PackageBundle) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{0}
}

func (x *PackageBundle) GetPackageDescriptor() *PackageDescriptor {
	if x != nil {
		return x.PackageDescriptor
	}
	return nil
}

func (x *PackageBundle) GetChecksum() string {
	if x != nil {
		return x.Checksum
	}
	return ""
}

func (x *PackageBundle) GetPlaform() string {
	if x != nil {
		return x.Plaform
	}
	return ""
}

func (x *PackageBundle) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *PackageBundle) GetModified() int64 {
	if x != nil {
		return x.Modified
	}
	return 0
}

func (x *PackageBundle) GetBinairies() []byte {
	if x != nil {
		return x.Binairies
	}
	return nil
}

func (x *PackageBundle) GetMac() string {
	if x != nil {
		return x.Mac
	}
	return ""
}

func (x *PackageBundle) GetTypeName() string {
	if x != nil {
		return x.TypeName
	}
	return ""
}

type SetPackageBundleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bundle *PackageBundle `protobuf:"bytes,1,opt,name=bundle,proto3" json:"bundle,omitempty"`
}

func (x *SetPackageBundleRequest) Reset() {
	*x = SetPackageBundleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetPackageBundleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPackageBundleRequest) ProtoMessage() {}

func (x *SetPackageBundleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPackageBundleRequest.ProtoReflect.Descriptor instead.
func (*SetPackageBundleRequest) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{1}
}

func (x *SetPackageBundleRequest) GetBundle() *PackageBundle {
	if x != nil {
		return x.Bundle
	}
	return nil
}

type SetPackageBundleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *SetPackageBundleResponse) Reset() {
	*x = SetPackageBundleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetPackageBundleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPackageBundleResponse) ProtoMessage() {}

func (x *SetPackageBundleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPackageBundleResponse.ProtoReflect.Descriptor instead.
func (*SetPackageBundleResponse) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{2}
}

func (x *SetPackageBundleResponse) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type GetPackageBundleChecksumRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // The unique identifier of the package bundle.
}

func (x *GetPackageBundleChecksumRequest) Reset() {
	*x = GetPackageBundleChecksumRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPackageBundleChecksumRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPackageBundleChecksumRequest) ProtoMessage() {}

func (x *GetPackageBundleChecksumRequest) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPackageBundleChecksumRequest.ProtoReflect.Descriptor instead.
func (*GetPackageBundleChecksumRequest) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{3}
}

func (x *GetPackageBundleChecksumRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetPackageBundleChecksumResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Checksum string `protobuf:"bytes,1,opt,name=checksum,proto3" json:"checksum,omitempty"`
}

func (x *GetPackageBundleChecksumResponse) Reset() {
	*x = GetPackageBundleChecksumResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPackageBundleChecksumResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPackageBundleChecksumResponse) ProtoMessage() {}

func (x *GetPackageBundleChecksumResponse) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPackageBundleChecksumResponse.ProtoReflect.Descriptor instead.
func (*GetPackageBundleChecksumResponse) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{4}
}

func (x *GetPackageBundleChecksumResponse) GetChecksum() string {
	if x != nil {
		return x.Checksum
	}
	return ""
}

// *
// PackageDescriptor defines the properties of a package, including its type,
// publisher, and other metadata.
type PackageDescriptor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                // Unique identifier of the package.
	Name         string      `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                            // Name of the package.
	Type         PackageType `protobuf:"varint,3,opt,name=type,proto3,enum=resource.PackageType" json:"type,omitempty"` // Type of the package (service or application).
	PublisherId  string      `protobuf:"bytes,4,opt,name=publisherId,proto3" json:"publisherId,omitempty"`              // Identifier of the publisher (organization or individual).
	Version      string      `protobuf:"bytes,6,opt,name=version,proto3" json:"version,omitempty"`                      // Version of the package.
	Description  string      `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`              // Description of the package.
	Repositories []string    `protobuf:"bytes,8,rep,name=repositories,proto3" json:"repositories,omitempty"`            // List of repositories containing the package.
	Discoveries  []string    `protobuf:"bytes,9,rep,name=discoveries,proto3" json:"discoveries,omitempty"`              // List of discoveries related to the package.
	Keywords     []string    `protobuf:"bytes,10,rep,name=keywords,proto3" json:"keywords,omitempty"`                   // Keywords describing the package.
	Actions      []string    `protobuf:"bytes,11,rep,name=actions,proto3" json:"actions,omitempty"`                     // Actions required by the package.
	Roles        []*Role     `protobuf:"bytes,12,rep,name=roles,proto3" json:"roles,omitempty"`                         // Roles required for using the package.
	Groups       []*Group    `protobuf:"bytes,13,rep,name=groups,proto3" json:"groups,omitempty"`                       // Groups associated with the package.
	Icon         string      `protobuf:"bytes,14,opt,name=icon,proto3" json:"icon,omitempty"`                           // Icon representing the package.
	Alias        string      `protobuf:"bytes,15,opt,name=alias,proto3" json:"alias,omitempty"`                         // Alias or short name for the package.
	TypeName     string      `protobuf:"bytes,16,opt,name=typeName,proto3" json:"typeName,omitempty"`                   // Type name for object type identification.
}

func (x *PackageDescriptor) Reset() {
	*x = PackageDescriptor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PackageDescriptor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PackageDescriptor) ProtoMessage() {}

func (x *PackageDescriptor) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PackageDescriptor.ProtoReflect.Descriptor instead.
func (*PackageDescriptor) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{5}
}

func (x *PackageDescriptor) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PackageDescriptor) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PackageDescriptor) GetType() PackageType {
	if x != nil {
		return x.Type
	}
	return PackageType_UNKNOW_TYPE
}

func (x *PackageDescriptor) GetPublisherId() string {
	if x != nil {
		return x.PublisherId
	}
	return ""
}

func (x *PackageDescriptor) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *PackageDescriptor) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *PackageDescriptor) GetRepositories() []string {
	if x != nil {
		return x.Repositories
	}
	return nil
}

func (x *PackageDescriptor) GetDiscoveries() []string {
	if x != nil {
		return x.Discoveries
	}
	return nil
}

func (x *PackageDescriptor) GetKeywords() []string {
	if x != nil {
		return x.Keywords
	}
	return nil
}

func (x *PackageDescriptor) GetActions() []string {
	if x != nil {
		return x.Actions
	}
	return nil
}

func (x *PackageDescriptor) GetRoles() []*Role {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *PackageDescriptor) GetGroups() []*Group {
	if x != nil {
		return x.Groups
	}
	return nil
}

func (x *PackageDescriptor) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *PackageDescriptor) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

func (x *PackageDescriptor) GetTypeName() string {
	if x != nil {
		return x.TypeName
	}
	return ""
}

type GetPackageDescriptorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceId   string `protobuf:"bytes,1,opt,name=serviceId,proto3" json:"serviceId,omitempty"`
	PublisherId string `protobuf:"bytes,2,opt,name=publisherId,proto3" json:"publisherId,omitempty"`
}

func (x *GetPackageDescriptorRequest) Reset() {
	*x = GetPackageDescriptorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPackageDescriptorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPackageDescriptorRequest) ProtoMessage() {}

func (x *GetPackageDescriptorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPackageDescriptorRequest.ProtoReflect.Descriptor instead.
func (*GetPackageDescriptorRequest) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{6}
}

func (x *GetPackageDescriptorRequest) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *GetPackageDescriptorRequest) GetPublisherId() string {
	if x != nil {
		return x.PublisherId
	}
	return ""
}

type GetPackageDescriptorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*PackageDescriptor `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"` // List of package descriptors.
}

func (x *GetPackageDescriptorResponse) Reset() {
	*x = GetPackageDescriptorResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPackageDescriptorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPackageDescriptorResponse) ProtoMessage() {}

func (x *GetPackageDescriptorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPackageDescriptorResponse.ProtoReflect.Descriptor instead.
func (*GetPackageDescriptorResponse) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{7}
}

func (x *GetPackageDescriptorResponse) GetResults() []*PackageDescriptor {
	if x != nil {
		return x.Results
	}
	return nil
}

type GetPackagesDescriptorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query   string `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`     // Query for searching descriptors.
	Options string `protobuf:"bytes,2,opt,name=options,proto3" json:"options,omitempty"` // Additional options for the query.
}

func (x *GetPackagesDescriptorRequest) Reset() {
	*x = GetPackagesDescriptorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPackagesDescriptorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPackagesDescriptorRequest) ProtoMessage() {}

func (x *GetPackagesDescriptorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPackagesDescriptorRequest.ProtoReflect.Descriptor instead.
func (*GetPackagesDescriptorRequest) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{8}
}

func (x *GetPackagesDescriptorRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *GetPackagesDescriptorRequest) GetOptions() string {
	if x != nil {
		return x.Options
	}
	return ""
}

type GetPackagesDescriptorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*PackageDescriptor `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"` // List of package descriptors.
}

func (x *GetPackagesDescriptorResponse) Reset() {
	*x = GetPackagesDescriptorResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPackagesDescriptorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPackagesDescriptorResponse) ProtoMessage() {}

func (x *GetPackagesDescriptorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPackagesDescriptorResponse.ProtoReflect.Descriptor instead.
func (*GetPackagesDescriptorResponse) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{9}
}

func (x *GetPackagesDescriptorResponse) GetResults() []*PackageDescriptor {
	if x != nil {
		return x.Results
	}
	return nil
}

type SetPackageDescriptorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PackageDescriptor *PackageDescriptor `protobuf:"bytes,1,opt,name=packageDescriptor,proto3" json:"packageDescriptor,omitempty"`
}

func (x *SetPackageDescriptorRequest) Reset() {
	*x = SetPackageDescriptorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetPackageDescriptorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPackageDescriptorRequest) ProtoMessage() {}

func (x *SetPackageDescriptorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPackageDescriptorRequest.ProtoReflect.Descriptor instead.
func (*SetPackageDescriptorRequest) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{10}
}

func (x *SetPackageDescriptorRequest) GetPackageDescriptor() *PackageDescriptor {
	if x != nil {
		return x.PackageDescriptor
	}
	return nil
}

type SetPackageDescriptorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *SetPackageDescriptorResponse) Reset() {
	*x = SetPackageDescriptorResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetPackageDescriptorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPackageDescriptorResponse) ProtoMessage() {}

func (x *SetPackageDescriptorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPackageDescriptorResponse.ProtoReflect.Descriptor instead.
func (*SetPackageDescriptorResponse) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{11}
}

func (x *SetPackageDescriptorResponse) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type FindPackagesDescriptorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keywords []string `protobuf:"bytes,1,rep,name=keywords,proto3" json:"keywords,omitempty"`
}

func (x *FindPackagesDescriptorRequest) Reset() {
	*x = FindPackagesDescriptorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindPackagesDescriptorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindPackagesDescriptorRequest) ProtoMessage() {}

func (x *FindPackagesDescriptorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindPackagesDescriptorRequest.ProtoReflect.Descriptor instead.
func (*FindPackagesDescriptorRequest) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{12}
}

func (x *FindPackagesDescriptorRequest) GetKeywords() []string {
	if x != nil {
		return x.Keywords
	}
	return nil
}

type FindPackagesDescriptorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*PackageDescriptor `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"` // List of package descriptors matching the keywords.
}

func (x *FindPackagesDescriptorResponse) Reset() {
	*x = FindPackagesDescriptorResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindPackagesDescriptorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindPackagesDescriptorResponse) ProtoMessage() {}

func (x *FindPackagesDescriptorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindPackagesDescriptorResponse.ProtoReflect.Descriptor instead.
func (*FindPackagesDescriptorResponse) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{13}
}

func (x *FindPackagesDescriptorResponse) GetResults() []*PackageDescriptor {
	if x != nil {
		return x.Results
	}
	return nil
}

// *
// Role defines a set of actions that can be performed by an account.
type Role struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                   // Unique identifier of the role.
	Name        string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`               // Name of the role.
	Domain      string   `protobuf:"bytes,3,opt,name=domain,proto3" json:"domain,omitempty"`           // Domain to which the role belongs.
	Description string   `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"` // Description of the role.
	Actions     []string `protobuf:"bytes,5,rep,name=actions,proto3" json:"actions,omitempty"`         // Actions associated with the role.
	// References to other entities.
	Members       []string `protobuf:"bytes,6,rep,name=members,proto3" json:"members,omitempty"`             // Accounts that are members of this role.
	Organizations []string `protobuf:"bytes,7,rep,name=organizations,proto3" json:"organizations,omitempty"` // Organizations associated with this role.
	TypeName      string   `protobuf:"bytes,8,opt,name=typeName,proto3" json:"typeName,omitempty"`           // Type name for object type identification.
}

func (x *Role) Reset() {
	*x = Role{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Role) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Role) ProtoMessage() {}

func (x *Role) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Role.ProtoReflect.Descriptor instead.
func (*Role) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{14}
}

func (x *Role) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Role) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Role) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *Role) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Role) GetActions() []string {
	if x != nil {
		return x.Actions
	}
	return nil
}

func (x *Role) GetMembers() []string {
	if x != nil {
		return x.Members
	}
	return nil
}

func (x *Role) GetOrganizations() []string {
	if x != nil {
		return x.Organizations
	}
	return nil
}

func (x *Role) GetTypeName() string {
	if x != nil {
		return x.TypeName
	}
	return ""
}

type AddRoleActionsRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleId  string   `protobuf:"bytes,1,opt,name=roleId,proto3" json:"roleId,omitempty"`   // The unique identifier of the role.
	Actions []string `protobuf:"bytes,2,rep,name=actions,proto3" json:"actions,omitempty"` // A list of action identifiers to be added to the role.
}

func (x *AddRoleActionsRqst) Reset() {
	*x = AddRoleActionsRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddRoleActionsRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRoleActionsRqst) ProtoMessage() {}

func (x *AddRoleActionsRqst) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRoleActionsRqst.ProtoReflect.Descriptor instead.
func (*AddRoleActionsRqst) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{15}
}

func (x *AddRoleActionsRqst) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

func (x *AddRoleActionsRqst) GetActions() []string {
	if x != nil {
		return x.Actions
	}
	return nil
}

type AddRoleActionsRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"` // The result of the add action request, typically true if successful.
}

func (x *AddRoleActionsRsp) Reset() {
	*x = AddRoleActionsRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddRoleActionsRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRoleActionsRsp) ProtoMessage() {}

func (x *AddRoleActionsRsp) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRoleActionsRsp.ProtoReflect.Descriptor instead.
func (*AddRoleActionsRsp) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{16}
}

func (x *AddRoleActionsRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type RemoveRoleActionRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleId string `protobuf:"bytes,1,opt,name=roleId,proto3" json:"roleId,omitempty"` // The unique identifier of the role.
	Action string `protobuf:"bytes,2,opt,name=action,proto3" json:"action,omitempty"` // The identifier of the action to be removed from the role.
}

func (x *RemoveRoleActionRqst) Reset() {
	*x = RemoveRoleActionRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveRoleActionRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveRoleActionRqst) ProtoMessage() {}

func (x *RemoveRoleActionRqst) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveRoleActionRqst.ProtoReflect.Descriptor instead.
func (*RemoveRoleActionRqst) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{17}
}

func (x *RemoveRoleActionRqst) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

func (x *RemoveRoleActionRqst) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

type RemoveRoleActionRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"` // The result of the remove action request, typically true if successful.
}

func (x *RemoveRoleActionRsp) Reset() {
	*x = RemoveRoleActionRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveRoleActionRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveRoleActionRsp) ProtoMessage() {}

func (x *RemoveRoleActionRsp) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveRoleActionRsp.ProtoReflect.Descriptor instead.
func (*RemoveRoleActionRsp) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{18}
}

func (x *RemoveRoleActionRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type RemoveRolesActionRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action string `protobuf:"bytes,2,opt,name=action,proto3" json:"action,omitempty"` // The identifier of the action to be removed from multiple roles.
}

func (x *RemoveRolesActionRqst) Reset() {
	*x = RemoveRolesActionRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveRolesActionRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveRolesActionRqst) ProtoMessage() {}

func (x *RemoveRolesActionRqst) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveRolesActionRqst.ProtoReflect.Descriptor instead.
func (*RemoveRolesActionRqst) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{19}
}

func (x *RemoveRolesActionRqst) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

type RemoveRolesActionRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"` // The result of the request to remove an action from multiple roles, typically true if successful.
}

func (x *RemoveRolesActionRsp) Reset() {
	*x = RemoveRolesActionRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveRolesActionRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveRolesActionRsp) ProtoMessage() {}

func (x *RemoveRolesActionRsp) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveRolesActionRsp.ProtoReflect.Descriptor instead.
func (*RemoveRolesActionRsp) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{20}
}

func (x *RemoveRolesActionRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// *
// Represents an account with various attributes.
type Account struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                         // Unique identifier of the account.
	Name           string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                     // Name associated with the account.
	Email          string `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`                   // Email of the account holder.
	Password       string `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`             // Encrypted password (only for non-OAuth accounts).
	RefreshToken   string `protobuf:"bytes,5,opt,name=refreshToken,proto3" json:"refreshToken,omitempty"`     // Refresh token for OAuth accounts.
	Domain         string `protobuf:"bytes,6,opt,name=domain,proto3" json:"domain,omitempty"`                 // The domain where the account belongs.
	ProfilePicture string `protobuf:"bytes,7,opt,name=profilePicture,proto3" json:"profilePicture,omitempty"` // URL or identifier for the profile picture.
	FirstName      string `protobuf:"bytes,8,opt,name=firstName,proto3" json:"firstName,omitempty"`           // First name of the account holder.
	LastName       string `protobuf:"bytes,9,opt,name=lastName,proto3" json:"lastName,omitempty"`             // Last name of the account holder.
	Middle         string `protobuf:"bytes,10,opt,name=middle,proto3" json:"middle,omitempty"`                // Middle name of the account holder.
	// References.
	Organizations []string `protobuf:"bytes,11,rep,name=organizations,proto3" json:"organizations,omitempty"` // List of organizations the account is associated with.
	Groups        []string `protobuf:"bytes,12,rep,name=groups,proto3" json:"groups,omitempty"`               // List of groups the account is part of.
	Roles         []string `protobuf:"bytes,13,rep,name=roles,proto3" json:"roles,omitempty"`                 // List of roles assigned to the account.
	TypeName      string   `protobuf:"bytes,14,opt,name=typeName,proto3" json:"typeName,omitempty"`           // Type of the account object, for internal use.
}

func (x *Account) Reset() {
	*x = Account{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Account) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Account) ProtoMessage() {}

func (x *Account) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Account.ProtoReflect.Descriptor instead.
func (*Account) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{21}
}

func (x *Account) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Account) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Account) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *Account) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *Account) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

func (x *Account) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *Account) GetProfilePicture() string {
	if x != nil {
		return x.ProfilePicture
	}
	return ""
}

func (x *Account) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *Account) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *Account) GetMiddle() string {
	if x != nil {
		return x.Middle
	}
	return ""
}

func (x *Account) GetOrganizations() []string {
	if x != nil {
		return x.Organizations
	}
	return nil
}

func (x *Account) GetGroups() []string {
	if x != nil {
		return x.Groups
	}
	return nil
}

func (x *Account) GetRoles() []string {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *Account) GetTypeName() string {
	if x != nil {
		return x.TypeName
	}
	return ""
}

type RegisterAccountRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account         *Account `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`                                        // The account information to be registered.
	ConfirmPassword string   `protobuf:"bytes,2,opt,name=confirm_password,json=confirmPassword,proto3" json:"confirm_password,omitempty"` // Only required for non-OAuth registrations.
}

func (x *RegisterAccountRqst) Reset() {
	*x = RegisterAccountRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterAccountRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterAccountRqst) ProtoMessage() {}

func (x *RegisterAccountRqst) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterAccountRqst.ProtoReflect.Descriptor instead.
func (*RegisterAccountRqst) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{22}
}

func (x *RegisterAccountRqst) GetAccount() *Account {
	if x != nil {
		return x.Account
	}
	return nil
}

func (x *RegisterAccountRqst) GetConfirmPassword() string {
	if x != nil {
		return x.ConfirmPassword
	}
	return ""
}

type RegisterAccountRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"` // The result of the account registration request.
}

func (x *RegisterAccountRsp) Reset() {
	*x = RegisterAccountRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterAccountRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterAccountRsp) ProtoMessage() {}

func (x *RegisterAccountRsp) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterAccountRsp.ProtoReflect.Descriptor instead.
func (*RegisterAccountRsp) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{23}
}

func (x *RegisterAccountRsp) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type AccountExistRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // The unique identifier of the account to check for existence.
}

func (x *AccountExistRqst) Reset() {
	*x = AccountExistRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountExistRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountExistRqst) ProtoMessage() {}

func (x *AccountExistRqst) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountExistRqst.ProtoReflect.Descriptor instead.
func (*AccountExistRqst) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{24}
}

func (x *AccountExistRqst) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type AccountExistRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"` // The result of the existence check, true if account exists.
}

func (x *AccountExistRsp) Reset() {
	*x = AccountExistRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountExistRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountExistRsp) ProtoMessage() {}

func (x *AccountExistRsp) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountExistRsp.ProtoReflect.Descriptor instead.
func (*AccountExistRsp) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{25}
}

func (x *AccountExistRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// *
// Request for a list of accounts based on a query.
type GetAccountsRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query   string `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`     // Query string to filter accounts.
	Options string `protobuf:"bytes,2,opt,name=options,proto3" json:"options,omitempty"` // Additional options for the query.
}

func (x *GetAccountsRqst) Reset() {
	*x = GetAccountsRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccountsRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountsRqst) ProtoMessage() {}

func (x *GetAccountsRqst) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountsRqst.ProtoReflect.Descriptor instead.
func (*GetAccountsRqst) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{26}
}

func (x *GetAccountsRqst) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *GetAccountsRqst) GetOptions() string {
	if x != nil {
		return x.Options
	}
	return ""
}

type GetAccountsRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Accounts []*Account `protobuf:"bytes,1,rep,name=accounts,proto3" json:"accounts,omitempty"` // The list of accounts matching the query.
}

func (x *GetAccountsRsp) Reset() {
	*x = GetAccountsRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccountsRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountsRsp) ProtoMessage() {}

func (x *GetAccountsRsp) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountsRsp.ProtoReflect.Descriptor instead.
func (*GetAccountsRsp) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{27}
}

func (x *GetAccountsRsp) GetAccounts() []*Account {
	if x != nil {
		return x.Accounts
	}
	return nil
}

type GetAccountRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId string `protobuf:"bytes,1,opt,name=accountId,proto3" json:"accountId,omitempty"` // The unique identifier of the account to retrieve.
}

func (x *GetAccountRqst) Reset() {
	*x = GetAccountRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccountRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountRqst) ProtoMessage() {}

func (x *GetAccountRqst) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountRqst.ProtoReflect.Descriptor instead.
func (*GetAccountRqst) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{28}
}

func (x *GetAccountRqst) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

type GetAccountRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account *Account `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"` // The account information corresponding to the requested ID.
}

func (x *GetAccountRsp) Reset() {
	*x = GetAccountRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccountRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountRsp) ProtoMessage() {}

func (x *GetAccountRsp) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountRsp.ProtoReflect.Descriptor instead.
func (*GetAccountRsp) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{29}
}

func (x *GetAccountRsp) GetAccount() *Account {
	if x != nil {
		return x.Account
	}
	return nil
}

type SetAccountRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account *Account `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"` // The account information that needs to be updated or created.
}

func (x *SetAccountRqst) Reset() {
	*x = SetAccountRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetAccountRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetAccountRqst) ProtoMessage() {}

func (x *SetAccountRqst) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetAccountRqst.ProtoReflect.Descriptor instead.
func (*SetAccountRqst) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{30}
}

func (x *SetAccountRqst) GetAccount() *Account {
	if x != nil {
		return x.Account
	}
	return nil
}

type SetAccountRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetAccountRsp) Reset() {
	*x = SetAccountRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetAccountRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetAccountRsp) ProtoMessage() {}

func (x *SetAccountRsp) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetAccountRsp.ProtoReflect.Descriptor instead.
func (*SetAccountRsp) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{31}
}

type SetAccountPasswordRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId   string `protobuf:"bytes,1,opt,name=accountId,proto3" json:"accountId,omitempty"`                        // The unique identifier of the account for password change.
	OldPassword string `protobuf:"bytes,2,opt,name=old_password,json=oldPassword,proto3" json:"old_password,omitempty"` // The current password of the account.
	NewPassword string `protobuf:"bytes,3,opt,name=new_password,json=newPassword,proto3" json:"new_password,omitempty"` // The new password to set for the account.
}

func (x *SetAccountPasswordRqst) Reset() {
	*x = SetAccountPasswordRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetAccountPasswordRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetAccountPasswordRqst) ProtoMessage() {}

func (x *SetAccountPasswordRqst) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetAccountPasswordRqst.ProtoReflect.Descriptor instead.
func (*SetAccountPasswordRqst) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{32}
}

func (x *SetAccountPasswordRqst) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *SetAccountPasswordRqst) GetOldPassword() string {
	if x != nil {
		return x.OldPassword
	}
	return ""
}

func (x *SetAccountPasswordRqst) GetNewPassword() string {
	if x != nil {
		return x.NewPassword
	}
	return ""
}

type SetAccountPasswordRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetAccountPasswordRsp) Reset() {
	*x = SetAccountPasswordRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetAccountPasswordRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetAccountPasswordRsp) ProtoMessage() {}

func (x *SetAccountPasswordRsp) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetAccountPasswordRsp.ProtoReflect.Descriptor instead.
func (*SetAccountPasswordRsp) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{33}
}

type SetEmailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId string `protobuf:"bytes,1,opt,name=accountId,proto3" json:"accountId,omitempty"` // The unique identifier of the account for email update.
	OldEmail  string `protobuf:"bytes,2,opt,name=oldEmail,proto3" json:"oldEmail,omitempty"`   // The current email address of the account.
	NewEmail  string `protobuf:"bytes,3,opt,name=newEmail,proto3" json:"newEmail,omitempty"`   // The new email address to set for the account.
}

func (x *SetEmailRequest) Reset() {
	*x = SetEmailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetEmailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetEmailRequest) ProtoMessage() {}

func (x *SetEmailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetEmailRequest.ProtoReflect.Descriptor instead.
func (*SetEmailRequest) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{34}
}

func (x *SetEmailRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *SetEmailRequest) GetOldEmail() string {
	if x != nil {
		return x.OldEmail
	}
	return ""
}

func (x *SetEmailRequest) GetNewEmail() string {
	if x != nil {
		return x.NewEmail
	}
	return ""
}

type SetEmailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetEmailResponse) Reset() {
	*x = SetEmailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetEmailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetEmailResponse) ProtoMessage() {}

func (x *SetEmailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetEmailResponse.ProtoReflect.Descriptor instead.
func (*SetEmailResponse) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{35}
}

type DeleteAccountRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // The unique identifier of the account to be deleted.
}

func (x *DeleteAccountRqst) Reset() {
	*x = DeleteAccountRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAccountRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAccountRqst) ProtoMessage() {}

func (x *DeleteAccountRqst) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAccountRqst.ProtoReflect.Descriptor instead.
func (*DeleteAccountRqst) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{36}
}

func (x *DeleteAccountRqst) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteAccountRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"` // The result of the delete account request.
}

func (x *DeleteAccountRsp) Reset() {
	*x = DeleteAccountRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAccountRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAccountRsp) ProtoMessage() {}

func (x *DeleteAccountRsp) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAccountRsp.ProtoReflect.Descriptor instead.
func (*DeleteAccountRsp) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{37}
}

func (x *DeleteAccountRsp) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type AddAccountRoleRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId string `protobuf:"bytes,1,opt,name=accountId,proto3" json:"accountId,omitempty"` // The unique identifier of the account to add a role to.
	RoleId    string `protobuf:"bytes,2,opt,name=roleId,proto3" json:"roleId,omitempty"`       // The unique identifier of the role to be added to the account.
}

func (x *AddAccountRoleRqst) Reset() {
	*x = AddAccountRoleRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddAccountRoleRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAccountRoleRqst) ProtoMessage() {}

func (x *AddAccountRoleRqst) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAccountRoleRqst.ProtoReflect.Descriptor instead.
func (*AddAccountRoleRqst) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{38}
}

func (x *AddAccountRoleRqst) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *AddAccountRoleRqst) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

type AddAccountRoleRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"` // The result of the add role request, typically true if successful.
}

func (x *AddAccountRoleRsp) Reset() {
	*x = AddAccountRoleRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddAccountRoleRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAccountRoleRsp) ProtoMessage() {}

func (x *AddAccountRoleRsp) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAccountRoleRsp.ProtoReflect.Descriptor instead.
func (*AddAccountRoleRsp) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{39}
}

func (x *AddAccountRoleRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type RemoveAccountRoleRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId string `protobuf:"bytes,1,opt,name=accountId,proto3" json:"accountId,omitempty"` // The unique identifier of the account to remove a role from.
	RoleId    string `protobuf:"bytes,2,opt,name=roleId,proto3" json:"roleId,omitempty"`       // The unique identifier of the role to be removed from the account.
}

func (x *RemoveAccountRoleRqst) Reset() {
	*x = RemoveAccountRoleRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveAccountRoleRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveAccountRoleRqst) ProtoMessage() {}

func (x *RemoveAccountRoleRqst) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveAccountRoleRqst.ProtoReflect.Descriptor instead.
func (*RemoveAccountRoleRqst) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{40}
}

func (x *RemoveAccountRoleRqst) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *RemoveAccountRoleRqst) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

type RemoveAccountRoleRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"` // The result of the remove role request, typically true if successful.
}

func (x *RemoveAccountRoleRsp) Reset() {
	*x = RemoveAccountRoleRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveAccountRoleRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveAccountRoleRsp) ProtoMessage() {}

func (x *RemoveAccountRoleRsp) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveAccountRoleRsp.ProtoReflect.Descriptor instead.
func (*RemoveAccountRoleRsp) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{41}
}

func (x *RemoveAccountRoleRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type Contact struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                          // Unique identifier of the contact.
	InvitationTime int64  `protobuf:"varint,2,opt,name=invitationTime,proto3" json:"invitationTime,omitempty"` // The timestamp of when the contact was invited.
	Status         string `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`                  // The status of the contact (e.g., pending, accepted).
	// Optional information.
	Ringtone       string `protobuf:"bytes,4,opt,name=ringtone,proto3" json:"ringtone,omitempty"`             // Custom ringtone for the contact.
	ProfilePicture string `protobuf:"bytes,5,opt,name=profilePicture,proto3" json:"profilePicture,omitempty"` // URL or identifier for the contact's profile picture.
}

func (x *Contact) Reset() {
	*x = Contact{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Contact) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Contact) ProtoMessage() {}

func (x *Contact) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Contact.ProtoReflect.Descriptor instead.
func (*Contact) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{42}
}

func (x *Contact) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Contact) GetInvitationTime() int64 {
	if x != nil {
		return x.InvitationTime
	}
	return 0
}

func (x *Contact) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Contact) GetRingtone() string {
	if x != nil {
		return x.Ringtone
	}
	return ""
}

func (x *Contact) GetProfilePicture() string {
	if x != nil {
		return x.ProfilePicture
	}
	return ""
}

type SetAccountContactRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId string   `protobuf:"bytes,1,opt,name=accountId,proto3" json:"accountId,omitempty"` // The unique identifier of the account to set a contact for.
	Contact   *Contact `protobuf:"bytes,2,opt,name=contact,proto3" json:"contact,omitempty"`     // The contact information to be associated with the account.
}

func (x *SetAccountContactRqst) Reset() {
	*x = SetAccountContactRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetAccountContactRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetAccountContactRqst) ProtoMessage() {}

func (x *SetAccountContactRqst) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetAccountContactRqst.ProtoReflect.Descriptor instead.
func (*SetAccountContactRqst) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{43}
}

func (x *SetAccountContactRqst) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *SetAccountContactRqst) GetContact() *Contact {
	if x != nil {
		return x.Contact
	}
	return nil
}

type SetAccountContactRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"` // The result of the set contact request, typically true if successful.
}

func (x *SetAccountContactRsp) Reset() {
	*x = SetAccountContactRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetAccountContactRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetAccountContactRsp) ProtoMessage() {}

func (x *SetAccountContactRsp) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetAccountContactRsp.ProtoReflect.Descriptor instead.
func (*SetAccountContactRsp) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{44}
}

func (x *SetAccountContactRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type CreateRoleRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role *Role `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"` // The role information to be created.
}

func (x *CreateRoleRqst) Reset() {
	*x = CreateRoleRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRoleRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRoleRqst) ProtoMessage() {}

func (x *CreateRoleRqst) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRoleRqst.ProtoReflect.Descriptor instead.
func (*CreateRoleRqst) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{45}
}

func (x *CreateRoleRqst) GetRole() *Role {
	if x != nil {
		return x.Role
	}
	return nil
}

type CreateRoleRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"` // The result of the create role request, typically true if successful.
}

func (x *CreateRoleRsp) Reset() {
	*x = CreateRoleRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRoleRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRoleRsp) ProtoMessage() {}

func (x *CreateRoleRsp) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRoleRsp.ProtoReflect.Descriptor instead.
func (*CreateRoleRsp) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{46}
}

func (x *CreateRoleRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// *
// Request message for updating the values of a specific role.
type UpdateRoleRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleId string `protobuf:"bytes,1,opt,name=roleId,proto3" json:"roleId,omitempty"` // The unique identifier of the role to be updated.
	Values string `protobuf:"bytes,2,opt,name=values,proto3" json:"values,omitempty"` // The new values to update the role with, likely in a serialized format.
}

func (x *UpdateRoleRqst) Reset() {
	*x = UpdateRoleRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRoleRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRoleRqst) ProtoMessage() {}

func (x *UpdateRoleRqst) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRoleRqst.ProtoReflect.Descriptor instead.
func (*UpdateRoleRqst) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{47}
}

func (x *UpdateRoleRqst) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

func (x *UpdateRoleRqst) GetValues() string {
	if x != nil {
		return x.Values
	}
	return ""
}

type UpdateRoleRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"` // The result of the update operation, typically true if successful.
}

func (x *UpdateRoleRsp) Reset() {
	*x = UpdateRoleRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRoleRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRoleRsp) ProtoMessage() {}

func (x *UpdateRoleRsp) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRoleRsp.ProtoReflect.Descriptor instead.
func (*UpdateRoleRsp) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{48}
}

func (x *UpdateRoleRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// *
// Request message for retrieving a list of roles, potentially based on specific criteria.
type GetRolesRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query   string `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`     // A query string to filter the roles, could be based on name, domain, etc.
	Options string `protobuf:"bytes,2,opt,name=options,proto3" json:"options,omitempty"` // Additional options for the request, like pagination or sorting parameters.
}

func (x *GetRolesRqst) Reset() {
	*x = GetRolesRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRolesRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRolesRqst) ProtoMessage() {}

func (x *GetRolesRqst) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRolesRqst.ProtoReflect.Descriptor instead.
func (*GetRolesRqst) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{49}
}

func (x *GetRolesRqst) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *GetRolesRqst) GetOptions() string {
	if x != nil {
		return x.Options
	}
	return ""
}

type GetRolesRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Roles []*Role `protobuf:"bytes,1,rep,name=roles,proto3" json:"roles,omitempty"` // The list of roles that match the query and options.
}

func (x *GetRolesRsp) Reset() {
	*x = GetRolesRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRolesRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRolesRsp) ProtoMessage() {}

func (x *GetRolesRsp) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRolesRsp.ProtoReflect.Descriptor instead.
func (*GetRolesRsp) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{50}
}

func (x *GetRolesRsp) GetRoles() []*Role {
	if x != nil {
		return x.Roles
	}
	return nil
}

// *
// Request message for deleting a specific role.
type DeleteRoleRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleId string `protobuf:"bytes,1,opt,name=roleId,proto3" json:"roleId,omitempty"` // The unique identifier of the role to be deleted.
}

func (x *DeleteRoleRqst) Reset() {
	*x = DeleteRoleRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRoleRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRoleRqst) ProtoMessage() {}

func (x *DeleteRoleRqst) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRoleRqst.ProtoReflect.Descriptor instead.
func (*DeleteRoleRqst) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{51}
}

func (x *DeleteRoleRqst) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

type DeleteRoleRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"` // The result of the delete operation, typically true if successful.
}

func (x *DeleteRoleRsp) Reset() {
	*x = DeleteRoleRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRoleRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRoleRsp) ProtoMessage() {}

func (x *DeleteRoleRsp) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRoleRsp.ProtoReflect.Descriptor instead.
func (*DeleteRoleRsp) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{52}
}

func (x *DeleteRoleRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// * Represents an application with various attributes and metadata.
type Application struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                           // Unique identifier of the application.
	Name         string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                                       // Name of the application.
	Domain       string   `protobuf:"bytes,3,opt,name=domain,proto3" json:"domain,omitempty"`                                   // Domain associated with the application.
	Password     string   `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`                               // Password for the application (if applicable).
	Path         string   `protobuf:"bytes,5,opt,name=path,proto3" json:"path,omitempty"`                                       // Path where the application is located or deployed.
	Version      string   `protobuf:"bytes,6,opt,name=version,proto3" json:"version,omitempty"`                                 // Version of the application.
	Description  string   `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`                         // Description of the application.
	Actions      []string `protobuf:"bytes,8,rep,name=actions,proto3" json:"actions,omitempty"`                                 // List of actions associated with the application.
	Keywords     []string `protobuf:"bytes,9,rep,name=keywords,proto3" json:"keywords,omitempty"`                               // Keywords for categorizing or searching the application.
	Icon         string   `protobuf:"bytes,10,opt,name=icon,proto3" json:"icon,omitempty"`                                      // URL or path to the application's icon.
	Alias        string   `protobuf:"bytes,11,opt,name=alias,proto3" json:"alias,omitempty"`                                    // Alias for the application.
	Publisherid  string   `protobuf:"bytes,12,opt,name=publisherid,proto3" json:"publisherid,omitempty"`                        // Identifier of the publisher of the application.
	CreationDate int64    `protobuf:"varint,13,opt,name=creation_date,json=creationDate,proto3" json:"creation_date,omitempty"` // Timestamp of the application's creation.
	LastDeployed int64    `protobuf:"varint,14,opt,name=last_deployed,json=lastDeployed,proto3" json:"last_deployed,omitempty"` // Timestamp of the last deployment of the application.
	TypeName     string   `protobuf:"bytes,15,opt,name=typeName,proto3" json:"typeName,omitempty"`                              // Type information about the object.
}

func (x *Application) Reset() {
	*x = Application{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Application) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Application) ProtoMessage() {}

func (x *Application) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Application.ProtoReflect.Descriptor instead.
func (*Application) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{53}
}

func (x *Application) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Application) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Application) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *Application) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *Application) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *Application) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Application) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Application) GetActions() []string {
	if x != nil {
		return x.Actions
	}
	return nil
}

func (x *Application) GetKeywords() []string {
	if x != nil {
		return x.Keywords
	}
	return nil
}

func (x *Application) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *Application) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

func (x *Application) GetPublisherid() string {
	if x != nil {
		return x.Publisherid
	}
	return ""
}

func (x *Application) GetCreationDate() int64 {
	if x != nil {
		return x.CreationDate
	}
	return 0
}

func (x *Application) GetLastDeployed() int64 {
	if x != nil {
		return x.LastDeployed
	}
	return 0
}

func (x *Application) GetTypeName() string {
	if x != nil {
		return x.TypeName
	}
	return ""
}

// * Request to create or update an application.
type CreateApplicationRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Application *Application `protobuf:"bytes,1,opt,name=application,proto3" json:"application,omitempty"` // The application to be created or updated.
}

func (x *CreateApplicationRqst) Reset() {
	*x = CreateApplicationRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateApplicationRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateApplicationRqst) ProtoMessage() {}

func (x *CreateApplicationRqst) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateApplicationRqst.ProtoReflect.Descriptor instead.
func (*CreateApplicationRqst) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{54}
}

func (x *CreateApplicationRqst) GetApplication() *Application {
	if x != nil {
		return x.Application
	}
	return nil
}

type CreateApplicationRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateApplicationRsp) Reset() {
	*x = CreateApplicationRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateApplicationRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateApplicationRsp) ProtoMessage() {}

func (x *CreateApplicationRsp) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateApplicationRsp.ProtoReflect.Descriptor instead.
func (*CreateApplicationRsp) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{55}
}

// * Request to update an existing application.
type UpdateApplicationRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicationId string `protobuf:"bytes,1,opt,name=applicationId,proto3" json:"applicationId,omitempty"` // Identifier of the application to update.
	Values        string `protobuf:"bytes,2,opt,name=values,proto3" json:"values,omitempty"`               // Updated values for the application.
}

func (x *UpdateApplicationRqst) Reset() {
	*x = UpdateApplicationRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateApplicationRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateApplicationRqst) ProtoMessage() {}

func (x *UpdateApplicationRqst) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateApplicationRqst.ProtoReflect.Descriptor instead.
func (*UpdateApplicationRqst) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{56}
}

func (x *UpdateApplicationRqst) GetApplicationId() string {
	if x != nil {
		return x.ApplicationId
	}
	return ""
}

func (x *UpdateApplicationRqst) GetValues() string {
	if x != nil {
		return x.Values
	}
	return ""
}

type UpdateApplicationRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"` // Result of the update operation.
}

func (x *UpdateApplicationRsp) Reset() {
	*x = UpdateApplicationRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateApplicationRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateApplicationRsp) ProtoMessage() {}

func (x *UpdateApplicationRsp) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateApplicationRsp.ProtoReflect.Descriptor instead.
func (*UpdateApplicationRsp) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{57}
}

func (x *UpdateApplicationRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// * Request to delete an application.
type DeleteApplicationRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicationId string `protobuf:"bytes,1,opt,name=applicationId,proto3" json:"applicationId,omitempty"` // Identifier of the application to delete.
}

func (x *DeleteApplicationRqst) Reset() {
	*x = DeleteApplicationRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteApplicationRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteApplicationRqst) ProtoMessage() {}

func (x *DeleteApplicationRqst) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteApplicationRqst.ProtoReflect.Descriptor instead.
func (*DeleteApplicationRqst) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{58}
}

func (x *DeleteApplicationRqst) GetApplicationId() string {
	if x != nil {
		return x.ApplicationId
	}
	return ""
}

type DeleteApplicationRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"` // Result of the delete operation.
}

func (x *DeleteApplicationRsp) Reset() {
	*x = DeleteApplicationRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteApplicationRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteApplicationRsp) ProtoMessage() {}

func (x *DeleteApplicationRsp) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteApplicationRsp.ProtoReflect.Descriptor instead.
func (*DeleteApplicationRsp) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{59}
}

func (x *DeleteApplicationRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// * Request to add actions to an application.
type AddApplicationActionsRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicationId string   `protobuf:"bytes,1,opt,name=applicationId,proto3" json:"applicationId,omitempty"` // Identifier of the application.
	Actions       []string `protobuf:"bytes,2,rep,name=actions,proto3" json:"actions,omitempty"`             // Actions to add to the application.
}

func (x *AddApplicationActionsRqst) Reset() {
	*x = AddApplicationActionsRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddApplicationActionsRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddApplicationActionsRqst) ProtoMessage() {}

func (x *AddApplicationActionsRqst) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddApplicationActionsRqst.ProtoReflect.Descriptor instead.
func (*AddApplicationActionsRqst) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{60}
}

func (x *AddApplicationActionsRqst) GetApplicationId() string {
	if x != nil {
		return x.ApplicationId
	}
	return ""
}

func (x *AddApplicationActionsRqst) GetActions() []string {
	if x != nil {
		return x.Actions
	}
	return nil
}

type AddApplicationActionsRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"` // Result of adding actions.
}

func (x *AddApplicationActionsRsp) Reset() {
	*x = AddApplicationActionsRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddApplicationActionsRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddApplicationActionsRsp) ProtoMessage() {}

func (x *AddApplicationActionsRsp) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddApplicationActionsRsp.ProtoReflect.Descriptor instead.
func (*AddApplicationActionsRsp) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{61}
}

func (x *AddApplicationActionsRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// * Request to remove a specific action from an application.
type RemoveApplicationActionRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicationId string `protobuf:"bytes,1,opt,name=applicationId,proto3" json:"applicationId,omitempty"` // Identifier of the application.
	Action        string `protobuf:"bytes,2,opt,name=action,proto3" json:"action,omitempty"`               // Action to remove.
}

func (x *RemoveApplicationActionRqst) Reset() {
	*x = RemoveApplicationActionRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveApplicationActionRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveApplicationActionRqst) ProtoMessage() {}

func (x *RemoveApplicationActionRqst) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveApplicationActionRqst.ProtoReflect.Descriptor instead.
func (*RemoveApplicationActionRqst) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{62}
}

func (x *RemoveApplicationActionRqst) GetApplicationId() string {
	if x != nil {
		return x.ApplicationId
	}
	return ""
}

func (x *RemoveApplicationActionRqst) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

type RemoveApplicationActionRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"` // Result of removing the action.
}

func (x *RemoveApplicationActionRsp) Reset() {
	*x = RemoveApplicationActionRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveApplicationActionRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveApplicationActionRsp) ProtoMessage() {}

func (x *RemoveApplicationActionRsp) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveApplicationActionRsp.ProtoReflect.Descriptor instead.
func (*RemoveApplicationActionRsp) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{63}
}

func (x *RemoveApplicationActionRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// * Request to remove a specific action from all applications.
type RemoveApplicationsActionRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action string `protobuf:"bytes,2,opt,name=action,proto3" json:"action,omitempty"` // Action to be removed.
}

func (x *RemoveApplicationsActionRqst) Reset() {
	*x = RemoveApplicationsActionRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveApplicationsActionRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveApplicationsActionRqst) ProtoMessage() {}

func (x *RemoveApplicationsActionRqst) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveApplicationsActionRqst.ProtoReflect.Descriptor instead.
func (*RemoveApplicationsActionRqst) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{64}
}

func (x *RemoveApplicationsActionRqst) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

type RemoveApplicationsActionRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"` // Result of the removal.
}

func (x *RemoveApplicationsActionRsp) Reset() {
	*x = RemoveApplicationsActionRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveApplicationsActionRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveApplicationsActionRsp) ProtoMessage() {}

func (x *RemoveApplicationsActionRsp) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveApplicationsActionRsp.ProtoReflect.Descriptor instead.
func (*RemoveApplicationsActionRsp) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{65}
}

func (x *RemoveApplicationsActionRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// * Request to retrieve applications based on specific criteria.
type GetApplicationsRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query   string `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`     // Query for filtering applications.
	Options string `protobuf:"bytes,2,opt,name=options,proto3" json:"options,omitempty"` // Additional options for the request.
}

func (x *GetApplicationsRqst) Reset() {
	*x = GetApplicationsRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetApplicationsRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetApplicationsRqst) ProtoMessage() {}

func (x *GetApplicationsRqst) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetApplicationsRqst.ProtoReflect.Descriptor instead.
func (*GetApplicationsRqst) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{66}
}

func (x *GetApplicationsRqst) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *GetApplicationsRqst) GetOptions() string {
	if x != nil {
		return x.Options
	}
	return ""
}

type GetApplicationsRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Applications []*Application `protobuf:"bytes,1,rep,name=applications,proto3" json:"applications,omitempty"` // List of applications matching the query.
}

func (x *GetApplicationsRsp) Reset() {
	*x = GetApplicationsRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetApplicationsRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetApplicationsRsp) ProtoMessage() {}

func (x *GetApplicationsRsp) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetApplicationsRsp.ProtoReflect.Descriptor instead.
func (*GetApplicationsRsp) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{67}
}

func (x *GetApplicationsRsp) GetApplications() []*Application {
	if x != nil {
		return x.Applications
	}
	return nil
}

// * Request to retrieve the version of a specific application.
type GetApplicationVersionRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // Identifier of the application.
}

func (x *GetApplicationVersionRqst) Reset() {
	*x = GetApplicationVersionRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetApplicationVersionRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetApplicationVersionRqst) ProtoMessage() {}

func (x *GetApplicationVersionRqst) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetApplicationVersionRqst.ProtoReflect.Descriptor instead.
func (*GetApplicationVersionRqst) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{68}
}

func (x *GetApplicationVersionRqst) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetApplicationVersionRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"` // Version of the application.
}

func (x *GetApplicationVersionRsp) Reset() {
	*x = GetApplicationVersionRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetApplicationVersionRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetApplicationVersionRsp) ProtoMessage() {}

func (x *GetApplicationVersionRsp) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetApplicationVersionRsp.ProtoReflect.Descriptor instead.
func (*GetApplicationVersionRsp) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{69}
}

func (x *GetApplicationVersionRsp) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

// * Request to retrieve the icon of a specific application.
type GetApplicationIconRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // Identifier of the application.
}

func (x *GetApplicationIconRqst) Reset() {
	*x = GetApplicationIconRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetApplicationIconRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetApplicationIconRqst) ProtoMessage() {}

func (x *GetApplicationIconRqst) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetApplicationIconRqst.ProtoReflect.Descriptor instead.
func (*GetApplicationIconRqst) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{70}
}

func (x *GetApplicationIconRqst) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetApplicationIconRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Icon string `protobuf:"bytes,1,opt,name=icon,proto3" json:"icon,omitempty"` // Icon of the application.
}

func (x *GetApplicationIconRsp) Reset() {
	*x = GetApplicationIconRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetApplicationIconRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetApplicationIconRsp) ProtoMessage() {}

func (x *GetApplicationIconRsp) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetApplicationIconRsp.ProtoReflect.Descriptor instead.
func (*GetApplicationIconRsp) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{71}
}

func (x *GetApplicationIconRsp) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

// * Request to retrieve the alias of a specific application.
type GetApplicationAliasRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // Identifier of the application.
}

func (x *GetApplicationAliasRqst) Reset() {
	*x = GetApplicationAliasRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetApplicationAliasRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetApplicationAliasRqst) ProtoMessage() {}

func (x *GetApplicationAliasRqst) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetApplicationAliasRqst.ProtoReflect.Descriptor instead.
func (*GetApplicationAliasRqst) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{72}
}

func (x *GetApplicationAliasRqst) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetApplicationAliasRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Alias string `protobuf:"bytes,1,opt,name=alias,proto3" json:"alias,omitempty"` // Alias of the application.
}

func (x *GetApplicationAliasRsp) Reset() {
	*x = GetApplicationAliasRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetApplicationAliasRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetApplicationAliasRsp) ProtoMessage() {}

func (x *GetApplicationAliasRsp) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetApplicationAliasRsp.ProtoReflect.Descriptor instead.
func (*GetApplicationAliasRsp) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{73}
}

func (x *GetApplicationAliasRsp) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

// * Represents a group within Globular with various attributes.
type Group struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                       // Unique identifier of the group.
	Name          string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                   // Name of the group, unique on the network.
	Domain        string   `protobuf:"bytes,3,opt,name=domain,proto3" json:"domain,omitempty"`               // Domain associated with the group.
	Description   string   `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`     // Description of the group.
	Members       []string `protobuf:"bytes,5,rep,name=members,proto3" json:"members,omitempty"`             // Members of the group, can be empty.
	Organizations []string `protobuf:"bytes,6,rep,name=organizations,proto3" json:"organizations,omitempty"` // Organizations associated with the group, can be empty.
	TypeName      string   `protobuf:"bytes,7,opt,name=typeName,proto3" json:"typeName,omitempty"`           // Type information about the object.
}

func (x *Group) Reset() {
	*x = Group{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Group) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Group) ProtoMessage() {}

func (x *Group) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Group.ProtoReflect.Descriptor instead.
func (*Group) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{74}
}

func (x *Group) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Group) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Group) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *Group) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Group) GetMembers() []string {
	if x != nil {
		return x.Members
	}
	return nil
}

func (x *Group) GetOrganizations() []string {
	if x != nil {
		return x.Organizations
	}
	return nil
}

func (x *Group) GetTypeName() string {
	if x != nil {
		return x.TypeName
	}
	return ""
}

// * Request to create a new group.
type CreateGroupRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group *Group `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"` // The group details to be registered.
}

func (x *CreateGroupRqst) Reset() {
	*x = CreateGroupRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGroupRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGroupRqst) ProtoMessage() {}

func (x *CreateGroupRqst) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGroupRqst.ProtoReflect.Descriptor instead.
func (*CreateGroupRqst) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{75}
}

func (x *CreateGroupRqst) GetGroup() *Group {
	if x != nil {
		return x.Group
	}
	return nil
}

type CreateGroupRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"` // Result of the create group operation.
}

func (x *CreateGroupRsp) Reset() {
	*x = CreateGroupRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGroupRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGroupRsp) ProtoMessage() {}

func (x *CreateGroupRsp) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGroupRsp.ProtoReflect.Descriptor instead.
func (*CreateGroupRsp) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{76}
}

func (x *CreateGroupRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// * Request to update an existing group.
type UpdateGroupRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId string `protobuf:"bytes,1,opt,name=groupId,proto3" json:"groupId,omitempty"` // Identifier of the group to be updated.
	Values  string `protobuf:"bytes,2,opt,name=values,proto3" json:"values,omitempty"`   // New values for the group's attributes.
}

func (x *UpdateGroupRqst) Reset() {
	*x = UpdateGroupRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateGroupRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGroupRqst) ProtoMessage() {}

func (x *UpdateGroupRqst) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGroupRqst.ProtoReflect.Descriptor instead.
func (*UpdateGroupRqst) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{77}
}

func (x *UpdateGroupRqst) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *UpdateGroupRqst) GetValues() string {
	if x != nil {
		return x.Values
	}
	return ""
}

type UpdateGroupRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"` // Result of the update group operation.
}

func (x *UpdateGroupRsp) Reset() {
	*x = UpdateGroupRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateGroupRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGroupRsp) ProtoMessage() {}

func (x *UpdateGroupRsp) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGroupRsp.ProtoReflect.Descriptor instead.
func (*UpdateGroupRsp) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{78}
}

func (x *UpdateGroupRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// * Request to retrieve a list of groups.
type GetGroupsRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query   string `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`     // Query string to filter groups.
	Options string `protobuf:"bytes,2,opt,name=options,proto3" json:"options,omitempty"` // Additional options for the request.
}

func (x *GetGroupsRqst) Reset() {
	*x = GetGroupsRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupsRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupsRqst) ProtoMessage() {}

func (x *GetGroupsRqst) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupsRqst.ProtoReflect.Descriptor instead.
func (*GetGroupsRqst) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{79}
}

func (x *GetGroupsRqst) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *GetGroupsRqst) GetOptions() string {
	if x != nil {
		return x.Options
	}
	return ""
}

type GetGroupsRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Groups []*Group `protobuf:"bytes,1,rep,name=groups,proto3" json:"groups,omitempty"` // List of groups that match the query.
}

func (x *GetGroupsRsp) Reset() {
	*x = GetGroupsRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupsRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupsRsp) ProtoMessage() {}

func (x *GetGroupsRsp) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupsRsp.ProtoReflect.Descriptor instead.
func (*GetGroupsRsp) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{80}
}

func (x *GetGroupsRsp) GetGroups() []*Group {
	if x != nil {
		return x.Groups
	}
	return nil
}

// * Request to delete a specific group.
type DeleteGroupRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group string `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"` // Identifier of the group to be deleted.
}

func (x *DeleteGroupRqst) Reset() {
	*x = DeleteGroupRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteGroupRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteGroupRqst) ProtoMessage() {}

func (x *DeleteGroupRqst) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteGroupRqst.ProtoReflect.Descriptor instead.
func (*DeleteGroupRqst) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{81}
}

func (x *DeleteGroupRqst) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

type DeleteGroupRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"` // Result of the delete group operation.
}

func (x *DeleteGroupRsp) Reset() {
	*x = DeleteGroupRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteGroupRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteGroupRsp) ProtoMessage() {}

func (x *DeleteGroupRsp) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteGroupRsp.ProtoReflect.Descriptor instead.
func (*DeleteGroupRsp) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{82}
}

func (x *DeleteGroupRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// * Request to add a member account to a group.
type AddGroupMemberAccountRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId   string `protobuf:"bytes,1,opt,name=groupId,proto3" json:"groupId,omitempty"`     // Identifier of the group.
	AccountId string `protobuf:"bytes,2,opt,name=accountId,proto3" json:"accountId,omitempty"` // Account ID of the member to be added.
}

func (x *AddGroupMemberAccountRqst) Reset() {
	*x = AddGroupMemberAccountRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddGroupMemberAccountRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddGroupMemberAccountRqst) ProtoMessage() {}

func (x *AddGroupMemberAccountRqst) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddGroupMemberAccountRqst.ProtoReflect.Descriptor instead.
func (*AddGroupMemberAccountRqst) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{83}
}

func (x *AddGroupMemberAccountRqst) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *AddGroupMemberAccountRqst) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

type AddGroupMemberAccountRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"` // Result of adding the member account.
}

func (x *AddGroupMemberAccountRsp) Reset() {
	*x = AddGroupMemberAccountRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddGroupMemberAccountRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddGroupMemberAccountRsp) ProtoMessage() {}

func (x *AddGroupMemberAccountRsp) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddGroupMemberAccountRsp.ProtoReflect.Descriptor instead.
func (*AddGroupMemberAccountRsp) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{84}
}

func (x *AddGroupMemberAccountRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// * Request to remove a member account from a group.
type RemoveGroupMemberAccountRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId   string `protobuf:"bytes,1,opt,name=groupId,proto3" json:"groupId,omitempty"`     // Identifier of the group.
	AccountId string `protobuf:"bytes,2,opt,name=accountId,proto3" json:"accountId,omitempty"` // Account ID of the member to be removed.
}

func (x *RemoveGroupMemberAccountRqst) Reset() {
	*x = RemoveGroupMemberAccountRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveGroupMemberAccountRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveGroupMemberAccountRqst) ProtoMessage() {}

func (x *RemoveGroupMemberAccountRqst) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveGroupMemberAccountRqst.ProtoReflect.Descriptor instead.
func (*RemoveGroupMemberAccountRqst) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{85}
}

func (x *RemoveGroupMemberAccountRqst) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *RemoveGroupMemberAccountRqst) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

type RemoveGroupMemberAccountRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"` // Result of removing the member account.
}

func (x *RemoveGroupMemberAccountRsp) Reset() {
	*x = RemoveGroupMemberAccountRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveGroupMemberAccountRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveGroupMemberAccountRsp) ProtoMessage() {}

func (x *RemoveGroupMemberAccountRsp) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveGroupMemberAccountRsp.ProtoReflect.Descriptor instead.
func (*RemoveGroupMemberAccountRsp) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{86}
}

func (x *RemoveGroupMemberAccountRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// * Represents an organization with various attributes and associated entities.
type Organization struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                   // Unique identifier of the organization.
	Domain      string `protobuf:"bytes,2,opt,name=domain,proto3" json:"domain,omitempty"`           // Domain associated with the organization.
	Name        string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`               // Unique name of the organization on the network.
	Email       string `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`             // Contact email for the organization.
	Icon        string `protobuf:"bytes,5,opt,name=icon,proto3" json:"icon,omitempty"`               // Icon representing the organization.
	Description string `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"` // Description of the organization.
	// Aggregations
	Accounts     []string `protobuf:"bytes,7,rep,name=accounts,proto3" json:"accounts,omitempty"`          // List of accounts associated with the organization.
	Groups       []string `protobuf:"bytes,8,rep,name=groups,proto3" json:"groups,omitempty"`              // List of groups under the organization.
	Roles        []string `protobuf:"bytes,9,rep,name=roles,proto3" json:"roles,omitempty"`                // List of roles defined within the organization.
	Applications []string `protobuf:"bytes,10,rep,name=applications,proto3" json:"applications,omitempty"` // Applications developed or used by the organization.
	TypeName     string   `protobuf:"bytes,11,opt,name=typeName,proto3" json:"typeName,omitempty"`         // Type information about the object.
}

func (x *Organization) Reset() {
	*x = Organization{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Organization) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Organization) ProtoMessage() {}

func (x *Organization) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Organization.ProtoReflect.Descriptor instead.
func (*Organization) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{87}
}

func (x *Organization) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Organization) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *Organization) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Organization) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *Organization) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *Organization) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Organization) GetAccounts() []string {
	if x != nil {
		return x.Accounts
	}
	return nil
}

func (x *Organization) GetGroups() []string {
	if x != nil {
		return x.Groups
	}
	return nil
}

func (x *Organization) GetRoles() []string {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *Organization) GetApplications() []string {
	if x != nil {
		return x.Applications
	}
	return nil
}

func (x *Organization) GetTypeName() string {
	if x != nil {
		return x.TypeName
	}
	return ""
}

// * Request to create a new organization.
type CreateOrganizationRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Organization *Organization `protobuf:"bytes,1,opt,name=organization,proto3" json:"organization,omitempty"` // The organization details to be registered.
}

func (x *CreateOrganizationRqst) Reset() {
	*x = CreateOrganizationRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrganizationRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrganizationRqst) ProtoMessage() {}

func (x *CreateOrganizationRqst) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrganizationRqst.ProtoReflect.Descriptor instead.
func (*CreateOrganizationRqst) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{88}
}

func (x *CreateOrganizationRqst) GetOrganization() *Organization {
	if x != nil {
		return x.Organization
	}
	return nil
}

type CreateOrganizationRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"` // Result of the create organization operation.
}

func (x *CreateOrganizationRsp) Reset() {
	*x = CreateOrganizationRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrganizationRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrganizationRsp) ProtoMessage() {}

func (x *CreateOrganizationRsp) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrganizationRsp.ProtoReflect.Descriptor instead.
func (*CreateOrganizationRsp) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{89}
}

func (x *CreateOrganizationRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// * Request to update an existing organization.
type UpdateOrganizationRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrganizationId string `protobuf:"bytes,1,opt,name=organizationId,proto3" json:"organizationId,omitempty"` // Identifier of the organization to be updated.
	Values         string `protobuf:"bytes,2,opt,name=values,proto3" json:"values,omitempty"`                 // New values for the organization's attributes.
}

func (x *UpdateOrganizationRqst) Reset() {
	*x = UpdateOrganizationRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOrganizationRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOrganizationRqst) ProtoMessage() {}

func (x *UpdateOrganizationRqst) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOrganizationRqst.ProtoReflect.Descriptor instead.
func (*UpdateOrganizationRqst) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{90}
}

func (x *UpdateOrganizationRqst) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *UpdateOrganizationRqst) GetValues() string {
	if x != nil {
		return x.Values
	}
	return ""
}

type UpdateOrganizationRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"` // Result of the update organization operation.
}

func (x *UpdateOrganizationRsp) Reset() {
	*x = UpdateOrganizationRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOrganizationRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOrganizationRsp) ProtoMessage() {}

func (x *UpdateOrganizationRsp) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOrganizationRsp.ProtoReflect.Descriptor instead.
func (*UpdateOrganizationRsp) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{91}
}

func (x *UpdateOrganizationRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// * Request to retrieve a list of organizations.
type GetOrganizationsRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query   string `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`     // Query string to filter organizations.
	Options string `protobuf:"bytes,2,opt,name=options,proto3" json:"options,omitempty"` // Additional options for the request.
}

func (x *GetOrganizationsRqst) Reset() {
	*x = GetOrganizationsRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrganizationsRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrganizationsRqst) ProtoMessage() {}

func (x *GetOrganizationsRqst) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrganizationsRqst.ProtoReflect.Descriptor instead.
func (*GetOrganizationsRqst) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{92}
}

func (x *GetOrganizationsRqst) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *GetOrganizationsRqst) GetOptions() string {
	if x != nil {
		return x.Options
	}
	return ""
}

type GetOrganizationsRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Organizations []*Organization `protobuf:"bytes,1,rep,name=organizations,proto3" json:"organizations,omitempty"` // List of organizations that match the query.
}

func (x *GetOrganizationsRsp) Reset() {
	*x = GetOrganizationsRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrganizationsRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrganizationsRsp) ProtoMessage() {}

func (x *GetOrganizationsRsp) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrganizationsRsp.ProtoReflect.Descriptor instead.
func (*GetOrganizationsRsp) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{93}
}

func (x *GetOrganizationsRsp) GetOrganizations() []*Organization {
	if x != nil {
		return x.Organizations
	}
	return nil
}

// * Request to add an account to an organization.
type AddOrganizationAccountRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrganizationId string `protobuf:"bytes,1,opt,name=organizationId,proto3" json:"organizationId,omitempty"` // Identifier of the organization.
	AccountId      string `protobuf:"bytes,2,opt,name=accountId,proto3" json:"accountId,omitempty"`           // Account ID to be added to the organization.
}

func (x *AddOrganizationAccountRqst) Reset() {
	*x = AddOrganizationAccountRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddOrganizationAccountRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddOrganizationAccountRqst) ProtoMessage() {}

func (x *AddOrganizationAccountRqst) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddOrganizationAccountRqst.ProtoReflect.Descriptor instead.
func (*AddOrganizationAccountRqst) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{94}
}

func (x *AddOrganizationAccountRqst) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *AddOrganizationAccountRqst) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

type AddOrganizationAccountRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"` // Result of the add account operation.
}

func (x *AddOrganizationAccountRsp) Reset() {
	*x = AddOrganizationAccountRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddOrganizationAccountRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddOrganizationAccountRsp) ProtoMessage() {}

func (x *AddOrganizationAccountRsp) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddOrganizationAccountRsp.ProtoReflect.Descriptor instead.
func (*AddOrganizationAccountRsp) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{95}
}

func (x *AddOrganizationAccountRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// * Request to add a group to an organization.
type AddOrganizationGroupRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrganizationId string `protobuf:"bytes,1,opt,name=organizationId,proto3" json:"organizationId,omitempty"` // Identifier of the organization.
	GroupId        string `protobuf:"bytes,2,opt,name=groupId,proto3" json:"groupId,omitempty"`               // Group ID to be added to the organization.
}

func (x *AddOrganizationGroupRqst) Reset() {
	*x = AddOrganizationGroupRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddOrganizationGroupRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddOrganizationGroupRqst) ProtoMessage() {}

func (x *AddOrganizationGroupRqst) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddOrganizationGroupRqst.ProtoReflect.Descriptor instead.
func (*AddOrganizationGroupRqst) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{96}
}

func (x *AddOrganizationGroupRqst) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *AddOrganizationGroupRqst) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

type AddOrganizationGroupRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"` // Result of the add group operation.
}

func (x *AddOrganizationGroupRsp) Reset() {
	*x = AddOrganizationGroupRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddOrganizationGroupRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddOrganizationGroupRsp) ProtoMessage() {}

func (x *AddOrganizationGroupRsp) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddOrganizationGroupRsp.ProtoReflect.Descriptor instead.
func (*AddOrganizationGroupRsp) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{97}
}

func (x *AddOrganizationGroupRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// * Request to add a role to an organization.
type AddOrganizationRoleRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrganizationId string `protobuf:"bytes,1,opt,name=organizationId,proto3" json:"organizationId,omitempty"` // Identifier of the organization.
	RoleId         string `protobuf:"bytes,2,opt,name=roleId,proto3" json:"roleId,omitempty"`                 // Role ID to be added to the organization.
}

func (x *AddOrganizationRoleRqst) Reset() {
	*x = AddOrganizationRoleRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddOrganizationRoleRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddOrganizationRoleRqst) ProtoMessage() {}

func (x *AddOrganizationRoleRqst) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddOrganizationRoleRqst.ProtoReflect.Descriptor instead.
func (*AddOrganizationRoleRqst) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{98}
}

func (x *AddOrganizationRoleRqst) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *AddOrganizationRoleRqst) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

type AddOrganizationRoleRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"` // Result of the add role operation.
}

func (x *AddOrganizationRoleRsp) Reset() {
	*x = AddOrganizationRoleRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddOrganizationRoleRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddOrganizationRoleRsp) ProtoMessage() {}

func (x *AddOrganizationRoleRsp) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddOrganizationRoleRsp.ProtoReflect.Descriptor instead.
func (*AddOrganizationRoleRsp) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{99}
}

func (x *AddOrganizationRoleRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// * Request to add an application to an organization.
type AddOrganizationApplicationRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrganizationId string `protobuf:"bytes,1,opt,name=organizationId,proto3" json:"organizationId,omitempty"` // Identifier of the organization.
	ApplicationId  string `protobuf:"bytes,2,opt,name=applicationId,proto3" json:"applicationId,omitempty"`   // Application ID to be added to the organization.
}

func (x *AddOrganizationApplicationRqst) Reset() {
	*x = AddOrganizationApplicationRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddOrganizationApplicationRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddOrganizationApplicationRqst) ProtoMessage() {}

func (x *AddOrganizationApplicationRqst) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddOrganizationApplicationRqst.ProtoReflect.Descriptor instead.
func (*AddOrganizationApplicationRqst) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{100}
}

func (x *AddOrganizationApplicationRqst) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *AddOrganizationApplicationRqst) GetApplicationId() string {
	if x != nil {
		return x.ApplicationId
	}
	return ""
}

type AddOrganizationApplicationRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"` // Result of the add application operation.
}

func (x *AddOrganizationApplicationRsp) Reset() {
	*x = AddOrganizationApplicationRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddOrganizationApplicationRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddOrganizationApplicationRsp) ProtoMessage() {}

func (x *AddOrganizationApplicationRsp) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddOrganizationApplicationRsp.ProtoReflect.Descriptor instead.
func (*AddOrganizationApplicationRsp) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{101}
}

func (x *AddOrganizationApplicationRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// * Request to remove a group from an organization.
type RemoveOrganizationGroupRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrganizationId string `protobuf:"bytes,1,opt,name=organizationId,proto3" json:"organizationId,omitempty"` // Identifier of the organization.
	GroupId        string `protobuf:"bytes,2,opt,name=groupId,proto3" json:"groupId,omitempty"`               // Group ID to be removed from the organization.
}

func (x *RemoveOrganizationGroupRqst) Reset() {
	*x = RemoveOrganizationGroupRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveOrganizationGroupRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveOrganizationGroupRqst) ProtoMessage() {}

func (x *RemoveOrganizationGroupRqst) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveOrganizationGroupRqst.ProtoReflect.Descriptor instead.
func (*RemoveOrganizationGroupRqst) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{102}
}

func (x *RemoveOrganizationGroupRqst) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *RemoveOrganizationGroupRqst) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

type RemoveOrganizationGroupRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"` // Result of the remove group operation.
}

func (x *RemoveOrganizationGroupRsp) Reset() {
	*x = RemoveOrganizationGroupRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveOrganizationGroupRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveOrganizationGroupRsp) ProtoMessage() {}

func (x *RemoveOrganizationGroupRsp) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveOrganizationGroupRsp.ProtoReflect.Descriptor instead.
func (*RemoveOrganizationGroupRsp) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{103}
}

func (x *RemoveOrganizationGroupRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// * Request to remove a role from an organization.
type RemoveOrganizationRoleRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrganizationId string `protobuf:"bytes,1,opt,name=organizationId,proto3" json:"organizationId,omitempty"` // Identifier of the organization.
	RoleId         string `protobuf:"bytes,2,opt,name=roleId,proto3" json:"roleId,omitempty"`                 // Role ID to be removed from the organization.
}

func (x *RemoveOrganizationRoleRqst) Reset() {
	*x = RemoveOrganizationRoleRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveOrganizationRoleRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveOrganizationRoleRqst) ProtoMessage() {}

func (x *RemoveOrganizationRoleRqst) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveOrganizationRoleRqst.ProtoReflect.Descriptor instead.
func (*RemoveOrganizationRoleRqst) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{104}
}

func (x *RemoveOrganizationRoleRqst) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *RemoveOrganizationRoleRqst) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

type RemoveOrganizationRoleRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"` // Result of the remove role operation.
}

func (x *RemoveOrganizationRoleRsp) Reset() {
	*x = RemoveOrganizationRoleRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveOrganizationRoleRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveOrganizationRoleRsp) ProtoMessage() {}

func (x *RemoveOrganizationRoleRsp) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveOrganizationRoleRsp.ProtoReflect.Descriptor instead.
func (*RemoveOrganizationRoleRsp) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{105}
}

func (x *RemoveOrganizationRoleRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// * Request to remove an application from an organization.
type RemoveOrganizationApplicationRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrganizationId string `protobuf:"bytes,1,opt,name=organizationId,proto3" json:"organizationId,omitempty"` // Identifier of the organization.
	ApplicationId  string `protobuf:"bytes,2,opt,name=applicationId,proto3" json:"applicationId,omitempty"`   // Application ID to be removed from the organization.
}

func (x *RemoveOrganizationApplicationRqst) Reset() {
	*x = RemoveOrganizationApplicationRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveOrganizationApplicationRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveOrganizationApplicationRqst) ProtoMessage() {}

func (x *RemoveOrganizationApplicationRqst) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveOrganizationApplicationRqst.ProtoReflect.Descriptor instead.
func (*RemoveOrganizationApplicationRqst) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{106}
}

func (x *RemoveOrganizationApplicationRqst) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *RemoveOrganizationApplicationRqst) GetApplicationId() string {
	if x != nil {
		return x.ApplicationId
	}
	return ""
}

type RemoveOrganizationApplicationRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"` // Result of the remove application operation.
}

func (x *RemoveOrganizationApplicationRsp) Reset() {
	*x = RemoveOrganizationApplicationRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveOrganizationApplicationRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveOrganizationApplicationRsp) ProtoMessage() {}

func (x *RemoveOrganizationApplicationRsp) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveOrganizationApplicationRsp.ProtoReflect.Descriptor instead.
func (*RemoveOrganizationApplicationRsp) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{107}
}

func (x *RemoveOrganizationApplicationRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// * Request to remove an account from an organization.
type RemoveOrganizationAccountRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrganizationId string `protobuf:"bytes,1,opt,name=organizationId,proto3" json:"organizationId,omitempty"` // Identifier of the organization.
	AccountId      string `protobuf:"bytes,2,opt,name=accountId,proto3" json:"accountId,omitempty"`           // Account ID to be removed from the organization.
}

func (x *RemoveOrganizationAccountRqst) Reset() {
	*x = RemoveOrganizationAccountRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveOrganizationAccountRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveOrganizationAccountRqst) ProtoMessage() {}

func (x *RemoveOrganizationAccountRqst) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveOrganizationAccountRqst.ProtoReflect.Descriptor instead.
func (*RemoveOrganizationAccountRqst) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{108}
}

func (x *RemoveOrganizationAccountRqst) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *RemoveOrganizationAccountRqst) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

type RemoveOrganizationAccountRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"` // Result of the remove account operation.
}

func (x *RemoveOrganizationAccountRsp) Reset() {
	*x = RemoveOrganizationAccountRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveOrganizationAccountRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveOrganizationAccountRsp) ProtoMessage() {}

func (x *RemoveOrganizationAccountRsp) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveOrganizationAccountRsp.ProtoReflect.Descriptor instead.
func (*RemoveOrganizationAccountRsp) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{109}
}

func (x *RemoveOrganizationAccountRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// * Request to check if an account is a member of an organization.
type IsOrgnanizationMemberRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrganizationId string `protobuf:"bytes,1,opt,name=organizationId,proto3" json:"organizationId,omitempty"` // Identifier of the organization.
	AccountId      string `protobuf:"bytes,2,opt,name=accountId,proto3" json:"accountId,omitempty"`           // Account ID to check for membership.
}

func (x *IsOrgnanizationMemberRqst) Reset() {
	*x = IsOrgnanizationMemberRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[110]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsOrgnanizationMemberRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsOrgnanizationMemberRqst) ProtoMessage() {}

func (x *IsOrgnanizationMemberRqst) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[110]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsOrgnanizationMemberRqst.ProtoReflect.Descriptor instead.
func (*IsOrgnanizationMemberRqst) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{110}
}

func (x *IsOrgnanizationMemberRqst) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *IsOrgnanizationMemberRqst) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

type IsOrgnanizationMemberRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"` // Result indicating membership status.
}

func (x *IsOrgnanizationMemberRsp) Reset() {
	*x = IsOrgnanizationMemberRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[111]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsOrgnanizationMemberRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsOrgnanizationMemberRsp) ProtoMessage() {}

func (x *IsOrgnanizationMemberRsp) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[111]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsOrgnanizationMemberRsp.ProtoReflect.Descriptor instead.
func (*IsOrgnanizationMemberRsp) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{111}
}

func (x *IsOrgnanizationMemberRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// *
// Request to remove an organization from the network.
type DeleteOrganizationRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Organization string `protobuf:"bytes,1,opt,name=organization,proto3" json:"organization,omitempty"` // Identifier of the organization to be deleted.
}

func (x *DeleteOrganizationRqst) Reset() {
	*x = DeleteOrganizationRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[112]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOrganizationRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOrganizationRqst) ProtoMessage() {}

func (x *DeleteOrganizationRqst) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[112]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOrganizationRqst.ProtoReflect.Descriptor instead.
func (*DeleteOrganizationRqst) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{112}
}

func (x *DeleteOrganizationRqst) GetOrganization() string {
	if x != nil {
		return x.Organization
	}
	return ""
}

type DeleteOrganizationRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"` // Result of the deletion operation (true if successful).
}

func (x *DeleteOrganizationRsp) Reset() {
	*x = DeleteOrganizationRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[113]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOrganizationRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOrganizationRsp) ProtoMessage() {}

func (x *DeleteOrganizationRsp) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[113]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOrganizationRsp.ProtoReflect.Descriptor instead.
func (*DeleteOrganizationRsp) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{113}
}

func (x *DeleteOrganizationRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// *
// Definition of a peer in the network.
type Peer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hostname          string            `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname,omitempty"`                                              // Hostname of the peer.
	Domain            string            `protobuf:"bytes,2,opt,name=domain,proto3" json:"domain,omitempty"`                                                  // Domain associated with the peer, must be unique.
	ExternalIpAddress string            `protobuf:"bytes,3,opt,name=external_ip_address,json=externalIpAddress,proto3" json:"external_ip_address,omitempty"` // External IP address of the peer.
	LocalIpAddress    string            `protobuf:"bytes,4,opt,name=local_ip_address,json=localIpAddress,proto3" json:"local_ip_address,omitempty"`          // Local IP address of the peer.
	Mac               string            `protobuf:"bytes,5,opt,name=mac,proto3" json:"mac,omitempty"`                                                        // MAC address of the peer.
	PortHttp          int32             `protobuf:"varint,6,opt,name=portHttp,proto3" json:"portHttp,omitempty"`                                             // HTTP port used by the peer.
	PortHttps         int32             `protobuf:"varint,7,opt,name=portHttps,proto3" json:"portHttps,omitempty"`                                           // HTTPS port used by the peer.
	Protocol          string            `protobuf:"bytes,8,opt,name=protocol,proto3" json:"protocol,omitempty"`                                              // Protocol used (http or https).
	State             PeerApprovalState `protobuf:"varint,9,opt,name=state,proto3,enum=resource.PeerApprovalState" json:"state,omitempty"`                   // Current approval state of the peer.
	Actions           []string          `protobuf:"bytes,10,rep,name=actions,proto3" json:"actions,omitempty"`                                               // Actions that the peer can perform.
	TypeName          string            `protobuf:"bytes,11,opt,name=typeName,proto3" json:"typeName,omitempty"`                                             // Type information of the object.
}

func (x *Peer) Reset() {
	*x = Peer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[114]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Peer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Peer) ProtoMessage() {}

func (x *Peer) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[114]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Peer.ProtoReflect.Descriptor instead.
func (*Peer) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{114}
}

func (x *Peer) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *Peer) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *Peer) GetExternalIpAddress() string {
	if x != nil {
		return x.ExternalIpAddress
	}
	return ""
}

func (x *Peer) GetLocalIpAddress() string {
	if x != nil {
		return x.LocalIpAddress
	}
	return ""
}

func (x *Peer) GetMac() string {
	if x != nil {
		return x.Mac
	}
	return ""
}

func (x *Peer) GetPortHttp() int32 {
	if x != nil {
		return x.PortHttp
	}
	return 0
}

func (x *Peer) GetPortHttps() int32 {
	if x != nil {
		return x.PortHttps
	}
	return 0
}

func (x *Peer) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *Peer) GetState() PeerApprovalState {
	if x != nil {
		return x.State
	}
	return PeerApprovalState_PEER_PENDING
}

func (x *Peer) GetActions() []string {
	if x != nil {
		return x.Actions
	}
	return nil
}

func (x *Peer) GetTypeName() string {
	if x != nil {
		return x.TypeName
	}
	return ""
}

// *
// Request to get the approval state of a peer.
type GetPeerApprovalStateRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mac               string `protobuf:"bytes,1,opt,name=mac,proto3" json:"mac,omitempty"`                                                        // MAC address of the peer.
	RemotePeerAddress string `protobuf:"bytes,2,opt,name=remote_peer_address,json=remotePeerAddress,proto3" json:"remote_peer_address,omitempty"` // Address of the remote peer.
}

func (x *GetPeerApprovalStateRqst) Reset() {
	*x = GetPeerApprovalStateRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[115]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPeerApprovalStateRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPeerApprovalStateRqst) ProtoMessage() {}

func (x *GetPeerApprovalStateRqst) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[115]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPeerApprovalStateRqst.ProtoReflect.Descriptor instead.
func (*GetPeerApprovalStateRqst) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{115}
}

func (x *GetPeerApprovalStateRqst) GetMac() string {
	if x != nil {
		return x.Mac
	}
	return ""
}

func (x *GetPeerApprovalStateRqst) GetRemotePeerAddress() string {
	if x != nil {
		return x.RemotePeerAddress
	}
	return ""
}

type GetPeerApprovalStateRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State PeerApprovalState `protobuf:"varint,1,opt,name=state,proto3,enum=resource.PeerApprovalState" json:"state,omitempty"` // Approval state of the peer.
}

func (x *GetPeerApprovalStateRsp) Reset() {
	*x = GetPeerApprovalStateRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[116]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPeerApprovalStateRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPeerApprovalStateRsp) ProtoMessage() {}

func (x *GetPeerApprovalStateRsp) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[116]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPeerApprovalStateRsp.ProtoReflect.Descriptor instead.
func (*GetPeerApprovalStateRsp) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{116}
}

func (x *GetPeerApprovalStateRsp) GetState() PeerApprovalState {
	if x != nil {
		return x.State
	}
	return PeerApprovalState_PEER_PENDING
}

// *
// Request to get the public key of a peer.
type GetPeerPublicKeyRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mac               string `protobuf:"bytes,1,opt,name=mac,proto3" json:"mac,omitempty"`                                                        // MAC address of the peer.
	RemotePeerAddress string `protobuf:"bytes,2,opt,name=remote_peer_address,json=remotePeerAddress,proto3" json:"remote_peer_address,omitempty"` // Address of the remote peer.
}

func (x *GetPeerPublicKeyRqst) Reset() {
	*x = GetPeerPublicKeyRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[117]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPeerPublicKeyRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPeerPublicKeyRqst) ProtoMessage() {}

func (x *GetPeerPublicKeyRqst) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[117]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPeerPublicKeyRqst.ProtoReflect.Descriptor instead.
func (*GetPeerPublicKeyRqst) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{117}
}

func (x *GetPeerPublicKeyRqst) GetMac() string {
	if x != nil {
		return x.Mac
	}
	return ""
}

func (x *GetPeerPublicKeyRqst) GetRemotePeerAddress() string {
	if x != nil {
		return x.RemotePeerAddress
	}
	return ""
}

type GetPeerPublicKeyRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicKey string `protobuf:"bytes,1,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"` // Public key of the peer.
}

func (x *GetPeerPublicKeyRsp) Reset() {
	*x = GetPeerPublicKeyRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[118]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPeerPublicKeyRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPeerPublicKeyRsp) ProtoMessage() {}

func (x *GetPeerPublicKeyRsp) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[118]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPeerPublicKeyRsp.ProtoReflect.Descriptor instead.
func (*GetPeerPublicKeyRsp) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{118}
}

func (x *GetPeerPublicKeyRsp) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

// *
// Request to register a peer in the network.
type RegisterPeerRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Peer      *Peer  `protobuf:"bytes,1,opt,name=peer,proto3" json:"peer,omitempty"`                            // Peer information.
	PublicKey string `protobuf:"bytes,2,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"` // Public key of the peer.
}

func (x *RegisterPeerRqst) Reset() {
	*x = RegisterPeerRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[119]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterPeerRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterPeerRqst) ProtoMessage() {}

func (x *RegisterPeerRqst) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[119]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterPeerRqst.ProtoReflect.Descriptor instead.
func (*RegisterPeerRqst) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{119}
}

func (x *RegisterPeerRqst) GetPeer() *Peer {
	if x != nil {
		return x.Peer
	}
	return nil
}

func (x *RegisterPeerRqst) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

type RegisterPeerRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Peer      *Peer  `protobuf:"bytes,1,opt,name=peer,proto3" json:"peer,omitempty"`                            // Registered peer information.
	PublicKey string `protobuf:"bytes,2,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"` // Public key of the registered peer.
}

func (x *RegisterPeerRsp) Reset() {
	*x = RegisterPeerRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[120]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterPeerRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterPeerRsp) ProtoMessage() {}

func (x *RegisterPeerRsp) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[120]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterPeerRsp.ProtoReflect.Descriptor instead.
func (*RegisterPeerRsp) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{120}
}

func (x *RegisterPeerRsp) GetPeer() *Peer {
	if x != nil {
		return x.Peer
	}
	return nil
}

func (x *RegisterPeerRsp) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

// *
// Request to update the information of a peer.
type UpdatePeerRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Peer *Peer `protobuf:"bytes,1,opt,name=peer,proto3" json:"peer,omitempty"` // Updated peer information.
}

func (x *UpdatePeerRqst) Reset() {
	*x = UpdatePeerRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[121]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePeerRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePeerRqst) ProtoMessage() {}

func (x *UpdatePeerRqst) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[121]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePeerRqst.ProtoReflect.Descriptor instead.
func (*UpdatePeerRqst) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{121}
}

func (x *UpdatePeerRqst) GetPeer() *Peer {
	if x != nil {
		return x.Peer
	}
	return nil
}

type UpdatePeerRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"` // Result of the update operation (true if successful).
}

func (x *UpdatePeerRsp) Reset() {
	*x = UpdatePeerRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[122]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePeerRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePeerRsp) ProtoMessage() {}

func (x *UpdatePeerRsp) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[122]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePeerRsp.ProtoReflect.Descriptor instead.
func (*UpdatePeerRsp) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{122}
}

func (x *UpdatePeerRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// *
// Return the list of peer (query is use to get specific peer's).
type GetPeersRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query   string `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	Options string `protobuf:"bytes,2,opt,name=options,proto3" json:"options,omitempty"`
}

func (x *GetPeersRqst) Reset() {
	*x = GetPeersRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[123]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPeersRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPeersRqst) ProtoMessage() {}

func (x *GetPeersRqst) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[123]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPeersRqst.ProtoReflect.Descriptor instead.
func (*GetPeersRqst) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{123}
}

func (x *GetPeersRqst) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *GetPeersRqst) GetOptions() string {
	if x != nil {
		return x.Options
	}
	return ""
}

type GetPeersRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Peers []*Peer `protobuf:"bytes,1,rep,name=peers,proto3" json:"peers,omitempty"`
}

func (x *GetPeersRsp) Reset() {
	*x = GetPeersRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[124]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPeersRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPeersRsp) ProtoMessage() {}

func (x *GetPeersRsp) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[124]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPeersRsp.ProtoReflect.Descriptor instead.
func (*GetPeersRsp) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{124}
}

func (x *GetPeersRsp) GetPeers() []*Peer {
	if x != nil {
		return x.Peers
	}
	return nil
}

// *
// Remove a peer from the network.
type DeletePeerRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Peer *Peer `protobuf:"bytes,1,opt,name=peer,proto3" json:"peer,omitempty"`
}

func (x *DeletePeerRqst) Reset() {
	*x = DeletePeerRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[125]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePeerRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePeerRqst) ProtoMessage() {}

func (x *DeletePeerRqst) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[125]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePeerRqst.ProtoReflect.Descriptor instead.
func (*DeletePeerRqst) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{125}
}

func (x *DeletePeerRqst) GetPeer() *Peer {
	if x != nil {
		return x.Peer
	}
	return nil
}

// Response to a delete peer request
type DeletePeerRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"` // Indicates whether the peer was successfully deleted (true if successful).
}

func (x *DeletePeerRsp) Reset() {
	*x = DeletePeerRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[126]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePeerRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePeerRsp) ProtoMessage() {}

func (x *DeletePeerRsp) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[126]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePeerRsp.ProtoReflect.Descriptor instead.
func (*DeletePeerRsp) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{126}
}

func (x *DeletePeerRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// Request to add actions to a peer
type AddPeerActionsRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mac     string   `protobuf:"bytes,1,opt,name=mac,proto3" json:"mac,omitempty"`         // MAC address of the peer.
	Actions []string `protobuf:"bytes,2,rep,name=actions,proto3" json:"actions,omitempty"` // List of actions to be added to the peer.
}

func (x *AddPeerActionsRqst) Reset() {
	*x = AddPeerActionsRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[127]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddPeerActionsRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPeerActionsRqst) ProtoMessage() {}

func (x *AddPeerActionsRqst) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[127]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPeerActionsRqst.ProtoReflect.Descriptor instead.
func (*AddPeerActionsRqst) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{127}
}

func (x *AddPeerActionsRqst) GetMac() string {
	if x != nil {
		return x.Mac
	}
	return ""
}

func (x *AddPeerActionsRqst) GetActions() []string {
	if x != nil {
		return x.Actions
	}
	return nil
}

// Response to the add actions to peer request
type AddPeerActionsRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"` // Indicates whether the actions were successfully added (true if successful).
}

func (x *AddPeerActionsRsp) Reset() {
	*x = AddPeerActionsRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[128]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddPeerActionsRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPeerActionsRsp) ProtoMessage() {}

func (x *AddPeerActionsRsp) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[128]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPeerActionsRsp.ProtoReflect.Descriptor instead.
func (*AddPeerActionsRsp) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{128}
}

func (x *AddPeerActionsRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// Request to remove a specific action from a peer
type RemovePeerActionRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mac    string `protobuf:"bytes,1,opt,name=mac,proto3" json:"mac,omitempty"`       // MAC address of the peer.
	Action string `protobuf:"bytes,2,opt,name=action,proto3" json:"action,omitempty"` // The action to be removed.
}

func (x *RemovePeerActionRqst) Reset() {
	*x = RemovePeerActionRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[129]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemovePeerActionRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemovePeerActionRqst) ProtoMessage() {}

func (x *RemovePeerActionRqst) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[129]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemovePeerActionRqst.ProtoReflect.Descriptor instead.
func (*RemovePeerActionRqst) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{129}
}

func (x *RemovePeerActionRqst) GetMac() string {
	if x != nil {
		return x.Mac
	}
	return ""
}

func (x *RemovePeerActionRqst) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

// Response to the remove action from peer request
type RemovePeerActionRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"` // Indicates whether the action was successfully removed (true if successful).
}

func (x *RemovePeerActionRsp) Reset() {
	*x = RemovePeerActionRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[130]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemovePeerActionRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemovePeerActionRsp) ProtoMessage() {}

func (x *RemovePeerActionRsp) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[130]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemovePeerActionRsp.ProtoReflect.Descriptor instead.
func (*RemovePeerActionRsp) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{130}
}

func (x *RemovePeerActionRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// Request to remove a specific action from all peers
type RemovePeersActionRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action string `protobuf:"bytes,2,opt,name=action,proto3" json:"action,omitempty"` // The action to be removed from all peers.
}

func (x *RemovePeersActionRqst) Reset() {
	*x = RemovePeersActionRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[131]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemovePeersActionRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemovePeersActionRqst) ProtoMessage() {}

func (x *RemovePeersActionRqst) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[131]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemovePeersActionRqst.ProtoReflect.Descriptor instead.
func (*RemovePeersActionRqst) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{131}
}

func (x *RemovePeersActionRqst) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

// Response to the remove action from all peers request
type RemovePeersActionRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"` // Indicates whether the action was successfully removed from all peers (true if successful).
}

func (x *RemovePeersActionRsp) Reset() {
	*x = RemovePeersActionRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[132]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemovePeersActionRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemovePeersActionRsp) ProtoMessage() {}

func (x *RemovePeersActionRsp) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[132]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemovePeersActionRsp.ProtoReflect.Descriptor instead.
func (*RemovePeersActionRsp) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{132}
}

func (x *RemovePeersActionRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// Request to accept a peer
type AcceptPeerRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Peer *Peer `protobuf:"bytes,1,opt,name=peer,proto3" json:"peer,omitempty"` // The peer to be accepted.
}

func (x *AcceptPeerRqst) Reset() {
	*x = AcceptPeerRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[133]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcceptPeerRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptPeerRqst) ProtoMessage() {}

func (x *AcceptPeerRqst) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[133]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptPeerRqst.ProtoReflect.Descriptor instead.
func (*AcceptPeerRqst) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{133}
}

func (x *AcceptPeerRqst) GetPeer() *Peer {
	if x != nil {
		return x.Peer
	}
	return nil
}

// Response to the accept peer request
type AcceptPeerRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"` // Indicates whether the peer was successfully accepted (true if successful).
}

func (x *AcceptPeerRsp) Reset() {
	*x = AcceptPeerRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[134]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcceptPeerRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptPeerRsp) ProtoMessage() {}

func (x *AcceptPeerRsp) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[134]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptPeerRsp.ProtoReflect.Descriptor instead.
func (*AcceptPeerRsp) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{134}
}

func (x *AcceptPeerRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// Request to reject a peer
type RejectPeerRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Peer *Peer `protobuf:"bytes,1,opt,name=peer,proto3" json:"peer,omitempty"` // The peer to be rejected.
}

func (x *RejectPeerRqst) Reset() {
	*x = RejectPeerRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[135]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RejectPeerRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RejectPeerRqst) ProtoMessage() {}

func (x *RejectPeerRqst) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[135]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RejectPeerRqst.ProtoReflect.Descriptor instead.
func (*RejectPeerRqst) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{135}
}

func (x *RejectPeerRqst) GetPeer() *Peer {
	if x != nil {
		return x.Peer
	}
	return nil
}

// Response to the reject peer request
type RejectPeerRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"` // Indicates whether the peer was successfully rejected (true if successful).
}

func (x *RejectPeerRsp) Reset() {
	*x = RejectPeerRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[136]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RejectPeerRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RejectPeerRsp) ProtoMessage() {}

func (x *RejectPeerRsp) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[136]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RejectPeerRsp.ProtoReflect.Descriptor instead.
func (*RejectPeerRsp) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{136}
}

func (x *RejectPeerRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// Structure representing a call
type Call struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid      string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`            // Unique identifier for the call.
	Caller    string `protobuf:"bytes,2,opt,name=caller,proto3" json:"caller,omitempty"`        // Identifier of the call initiator.
	Callee    string `protobuf:"bytes,3,opt,name=callee,proto3" json:"callee,omitempty"`        // Identifier of the call recipient.
	StartTime int64  `protobuf:"varint,4,opt,name=startTime,proto3" json:"startTime,omitempty"` // Timestamp for when the call started.
	EndTime   int64  `protobuf:"varint,5,opt,name=endTime,proto3" json:"endTime,omitempty"`     // Timestamp for when the call ended. A value of 0 indicates the call was not answered.
	TypeName  string `protobuf:"bytes,6,opt,name=typeName,proto3" json:"typeName,omitempty"`    // Type information of the object.
}

func (x *Call) Reset() {
	*x = Call{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[137]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Call) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Call) ProtoMessage() {}

func (x *Call) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[137]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Call.ProtoReflect.Descriptor instead.
func (*Call) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{137}
}

func (x *Call) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *Call) GetCaller() string {
	if x != nil {
		return x.Caller
	}
	return ""
}

func (x *Call) GetCallee() string {
	if x != nil {
		return x.Callee
	}
	return ""
}

func (x *Call) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *Call) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *Call) GetTypeName() string {
	if x != nil {
		return x.TypeName
	}
	return ""
}

// Request to retrieve call history for an account
type GetCallHistoryRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId string `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"` // Identifier of the account.
}

func (x *GetCallHistoryRqst) Reset() {
	*x = GetCallHistoryRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[138]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCallHistoryRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCallHistoryRqst) ProtoMessage() {}

func (x *GetCallHistoryRqst) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[138]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCallHistoryRqst.ProtoReflect.Descriptor instead.
func (*GetCallHistoryRqst) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{138}
}

func (x *GetCallHistoryRqst) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

// Response to the get call history request
type GetCallHistoryRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Calls []*Call `protobuf:"bytes,1,rep,name=calls,proto3" json:"calls,omitempty"` // List of calls associated with the account.
}

func (x *GetCallHistoryRsp) Reset() {
	*x = GetCallHistoryRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[139]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCallHistoryRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCallHistoryRsp) ProtoMessage() {}

func (x *GetCallHistoryRsp) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[139]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCallHistoryRsp.ProtoReflect.Descriptor instead.
func (*GetCallHistoryRsp) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{139}
}

func (x *GetCallHistoryRsp) GetCalls() []*Call {
	if x != nil {
		return x.Calls
	}
	return nil
}

// Request to create or update call information
type SetCallRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Call *Call `protobuf:"bytes,1,opt,name=call,proto3" json:"call,omitempty"` // Call information to be created or updated.
}

func (x *SetCallRqst) Reset() {
	*x = SetCallRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[140]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetCallRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetCallRqst) ProtoMessage() {}

func (x *SetCallRqst) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[140]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetCallRqst.ProtoReflect.Descriptor instead.
func (*SetCallRqst) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{140}
}

func (x *SetCallRqst) GetCall() *Call {
	if x != nil {
		return x.Call
	}
	return nil
}

// Response to the set call request
type SetCallRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetCallRsp) Reset() {
	*x = SetCallRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[141]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetCallRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetCallRsp) ProtoMessage() {}

func (x *SetCallRsp) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[141]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetCallRsp.ProtoReflect.Descriptor instead.
func (*SetCallRsp) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{141}
}

// Request to delete a specific call from an account's call history.
type DeleteCallRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId string `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"` // Identifier of the account related to the call.
	Uuid      string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`                            // Unique identifier of the call to be deleted.
}

func (x *DeleteCallRqst) Reset() {
	*x = DeleteCallRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[142]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCallRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCallRqst) ProtoMessage() {}

func (x *DeleteCallRqst) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[142]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCallRqst.ProtoReflect.Descriptor instead.
func (*DeleteCallRqst) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{142}
}

func (x *DeleteCallRqst) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *DeleteCallRqst) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

// Response for the DeleteCallRqst.
// This message doesn't carry additional data and serves as an acknowledgment.
type DeleteCallRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteCallRsp) Reset() {
	*x = DeleteCallRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[143]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCallRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCallRsp) ProtoMessage() {}

func (x *DeleteCallRsp) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[143]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCallRsp.ProtoReflect.Descriptor instead.
func (*DeleteCallRsp) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{143}
}

// Request to clear call history based on a filter.
type ClearCallsRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId string `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"` // Identifier of the account whose call history is to be cleared.
	Filter    string `protobuf:"bytes,2,opt,name=filter,proto3" json:"filter,omitempty"`                        // Filter criteria to select calls to be cleared.
}

func (x *ClearCallsRqst) Reset() {
	*x = ClearCallsRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[144]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClearCallsRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearCallsRqst) ProtoMessage() {}

func (x *ClearCallsRqst) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[144]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearCallsRqst.ProtoReflect.Descriptor instead.
func (*ClearCallsRqst) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{144}
}

func (x *ClearCallsRqst) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *ClearCallsRqst) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

// Response for the ClearCallsRqst.
// This message also doesn't carry additional data and serves as an acknowledgment.
type ClearCallsRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ClearCallsRsp) Reset() {
	*x = ClearCallsRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[145]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClearCallsRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearCallsRsp) ProtoMessage() {}

func (x *ClearCallsRsp) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[145]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearCallsRsp.ProtoReflect.Descriptor instead.
func (*ClearCallsRsp) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{145}
}

// Structure representing a notification.
type Notification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               string           `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                                                                     // Unique identifier for the notification.
	Date             int64            `protobuf:"varint,2,opt,name=date,proto3" json:"date,omitempty"`                                                                                // Timestamp of the notification.
	Message          string           `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`                                                                           // Notification message content.
	Recipient        string           `protobuf:"bytes,4,opt,name=recipient,proto3" json:"recipient,omitempty"`                                                                       // Identifier of the notification recipient.
	Sender           string           `protobuf:"bytes,5,opt,name=sender,proto3" json:"sender,omitempty"`                                                                             // Identifier of the sender of the notification.
	NotificationType NotificationType `protobuf:"varint,6,opt,name=notification_type,json=notificationType,proto3,enum=resource.NotificationType" json:"notification_type,omitempty"` // Type of the notification.
	Mac              string           `protobuf:"bytes,7,opt,name=mac,proto3" json:"mac,omitempty"`                                                                                   // MAC address where the notification is stored.
	TypeName         string           `protobuf:"bytes,8,opt,name=typeName,proto3" json:"typeName,omitempty"`                                                                         // Type name for object type identification.
}

func (x *Notification) Reset() {
	*x = Notification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[146]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Notification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Notification) ProtoMessage() {}

func (x *Notification) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[146]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Notification.ProtoReflect.Descriptor instead.
func (*Notification) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{146}
}

func (x *Notification) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Notification) GetDate() int64 {
	if x != nil {
		return x.Date
	}
	return 0
}

func (x *Notification) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Notification) GetRecipient() string {
	if x != nil {
		return x.Recipient
	}
	return ""
}

func (x *Notification) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *Notification) GetNotificationType() NotificationType {
	if x != nil {
		return x.NotificationType
	}
	return NotificationType_USER_NOTIFICATION
}

func (x *Notification) GetMac() string {
	if x != nil {
		return x.Mac
	}
	return ""
}

func (x *Notification) GetTypeName() string {
	if x != nil {
		return x.TypeName
	}
	return ""
}

// Request to create a notification.
type CreateNotificationRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Notification *Notification `protobuf:"bytes,1,opt,name=notification,proto3" json:"notification,omitempty"` // The notification to be created.
}

func (x *CreateNotificationRqst) Reset() {
	*x = CreateNotificationRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[147]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateNotificationRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNotificationRqst) ProtoMessage() {}

func (x *CreateNotificationRqst) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[147]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNotificationRqst.ProtoReflect.Descriptor instead.
func (*CreateNotificationRqst) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{147}
}

func (x *CreateNotificationRqst) GetNotification() *Notification {
	if x != nil {
		return x.Notification
	}
	return nil
}

// Response for the CreateNotificationRqst.
type CreateNotificationRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateNotificationRsp) Reset() {
	*x = CreateNotificationRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[148]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateNotificationRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNotificationRsp) ProtoMessage() {}

func (x *CreateNotificationRsp) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[148]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNotificationRsp.ProtoReflect.Descriptor instead.
func (*CreateNotificationRsp) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{148}
}

// Request to retrieve notifications for a recipient.
type GetNotificationsRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Recipient string `protobuf:"bytes,1,opt,name=recipient,proto3" json:"recipient,omitempty"` // Identifier of the recipient whose notifications are to be retrieved.
}

func (x *GetNotificationsRqst) Reset() {
	*x = GetNotificationsRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[149]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNotificationsRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNotificationsRqst) ProtoMessage() {}

func (x *GetNotificationsRqst) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[149]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNotificationsRqst.ProtoReflect.Descriptor instead.
func (*GetNotificationsRqst) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{149}
}

func (x *GetNotificationsRqst) GetRecipient() string {
	if x != nil {
		return x.Recipient
	}
	return ""
}

// Response containing a list of notifications.
type GetNotificationsRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Notifications []*Notification `protobuf:"bytes,1,rep,name=notifications,proto3" json:"notifications,omitempty"` // List of notifications for the recipient.
}

func (x *GetNotificationsRsp) Reset() {
	*x = GetNotificationsRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[150]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNotificationsRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNotificationsRsp) ProtoMessage() {}

func (x *GetNotificationsRsp) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[150]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNotificationsRsp.ProtoReflect.Descriptor instead.
func (*GetNotificationsRsp) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{150}
}

func (x *GetNotificationsRsp) GetNotifications() []*Notification {
	if x != nil {
		return x.Notifications
	}
	return nil
}

// Request to delete a specific notification.
type DeleteNotificationRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`               // Unique identifier of the notification to be deleted.
	Recipient string `protobuf:"bytes,2,opt,name=recipient,proto3" json:"recipient,omitempty"` // Identifier of the recipient related to the notification.
}

func (x *DeleteNotificationRqst) Reset() {
	*x = DeleteNotificationRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[151]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteNotificationRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNotificationRqst) ProtoMessage() {}

func (x *DeleteNotificationRqst) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[151]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNotificationRqst.ProtoReflect.Descriptor instead.
func (*DeleteNotificationRqst) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{151}
}

func (x *DeleteNotificationRqst) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeleteNotificationRqst) GetRecipient() string {
	if x != nil {
		return x.Recipient
	}
	return ""
}

// Response for the DeleteNotificationRqst.
type DeleteNotificationRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteNotificationRsp) Reset() {
	*x = DeleteNotificationRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[152]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteNotificationRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNotificationRsp) ProtoMessage() {}

func (x *DeleteNotificationRsp) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[152]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNotificationRsp.ProtoReflect.Descriptor instead.
func (*DeleteNotificationRsp) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{152}
}

// Request to clear all notifications for a recipient.
type ClearAllNotificationsRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Recipient string `protobuf:"bytes,1,opt,name=recipient,proto3" json:"recipient,omitempty"` // Identifier of the recipient whose notifications are to be cleared.
}

func (x *ClearAllNotificationsRqst) Reset() {
	*x = ClearAllNotificationsRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[153]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClearAllNotificationsRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearAllNotificationsRqst) ProtoMessage() {}

func (x *ClearAllNotificationsRqst) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[153]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearAllNotificationsRqst.ProtoReflect.Descriptor instead.
func (*ClearAllNotificationsRqst) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{153}
}

func (x *ClearAllNotificationsRqst) GetRecipient() string {
	if x != nil {
		return x.Recipient
	}
	return ""
}

// Response for the ClearAllNotificationsRqst.
type ClearAllNotificationsRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ClearAllNotificationsRsp) Reset() {
	*x = ClearAllNotificationsRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[154]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClearAllNotificationsRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearAllNotificationsRsp) ProtoMessage() {}

func (x *ClearAllNotificationsRsp) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[154]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearAllNotificationsRsp.ProtoReflect.Descriptor instead.
func (*ClearAllNotificationsRsp) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{154}
}

// Request to clear notifications of a specific type for a recipient.
type ClearNotificationsByTypeRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Recipient        string           `protobuf:"bytes,1,opt,name=recipient,proto3" json:"recipient,omitempty"`                                                                       // Identifier of the recipient.
	NotificationType NotificationType `protobuf:"varint,2,opt,name=notification_type,json=notificationType,proto3,enum=resource.NotificationType" json:"notification_type,omitempty"` // Type of notifications to be cleared.
}

func (x *ClearNotificationsByTypeRqst) Reset() {
	*x = ClearNotificationsByTypeRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[155]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClearNotificationsByTypeRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearNotificationsByTypeRqst) ProtoMessage() {}

func (x *ClearNotificationsByTypeRqst) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[155]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearNotificationsByTypeRqst.ProtoReflect.Descriptor instead.
func (*ClearNotificationsByTypeRqst) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{155}
}

func (x *ClearNotificationsByTypeRqst) GetRecipient() string {
	if x != nil {
		return x.Recipient
	}
	return ""
}

func (x *ClearNotificationsByTypeRqst) GetNotificationType() NotificationType {
	if x != nil {
		return x.NotificationType
	}
	return NotificationType_USER_NOTIFICATION
}

// Response for the ClearNotificationsByTypeRqst.
type ClearNotificationsByTypeRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ClearNotificationsByTypeRsp) Reset() {
	*x = ClearNotificationsByTypeRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[156]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClearNotificationsByTypeRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearNotificationsByTypeRsp) ProtoMessage() {}

func (x *ClearNotificationsByTypeRsp) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[156]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearNotificationsByTypeRsp.ProtoReflect.Descriptor instead.
func (*ClearNotificationsByTypeRsp) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{156}
}

// Message representing information about a user's session.
type Session struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId     string       `protobuf:"bytes,1,opt,name=accountId,proto3" json:"accountId,omitempty"`                                 // Identifier of the account associated with the session.
	State         SessionState `protobuf:"varint,2,opt,name=state,proto3,enum=resource.SessionState" json:"state,omitempty"`             // Current state of the session (Online, Offline, Away).
	LastStateTime int64        `protobuf:"varint,3,opt,name=last_state_time,json=lastStateTime,proto3" json:"last_state_time,omitempty"` // Timestamp of the last state change.
	ExpireAt      int64        `protobuf:"varint,4,opt,name=expire_at,json=expireAt,proto3" json:"expire_at,omitempty"`                  // Timestamp indicating when the session expires.
	TypeName      string       `protobuf:"bytes,5,opt,name=typeName,proto3" json:"typeName,omitempty"`                                   // Type name for object type identification.
}

func (x *Session) Reset() {
	*x = Session{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[157]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Session) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Session) ProtoMessage() {}

func (x *Session) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[157]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Session.ProtoReflect.Descriptor instead.
func (*Session) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{157}
}

func (x *Session) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *Session) GetState() SessionState {
	if x != nil {
		return x.State
	}
	return SessionState_ONLINE
}

func (x *Session) GetLastStateTime() int64 {
	if x != nil {
		return x.LastStateTime
	}
	return 0
}

func (x *Session) GetExpireAt() int64 {
	if x != nil {
		return x.ExpireAt
	}
	return 0
}

func (x *Session) GetTypeName() string {
	if x != nil {
		return x.TypeName
	}
	return ""
}

// Request to update a session.
type UpdateSessionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Session *Session `protobuf:"bytes,1,opt,name=session,proto3" json:"session,omitempty"` // The session information to be updated.
}

func (x *UpdateSessionRequest) Reset() {
	*x = UpdateSessionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[158]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSessionRequest) ProtoMessage() {}

func (x *UpdateSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[158]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSessionRequest.ProtoReflect.Descriptor instead.
func (*UpdateSessionRequest) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{158}
}

func (x *UpdateSessionRequest) GetSession() *Session {
	if x != nil {
		return x.Session
	}
	return nil
}

// Response for the UpdateSessionRequest.
// This message doesn't carry additional data and serves as an acknowledgment.
type UpdateSessionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateSessionResponse) Reset() {
	*x = UpdateSessionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[159]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSessionResponse) ProtoMessage() {}

func (x *UpdateSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[159]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSessionResponse.ProtoReflect.Descriptor instead.
func (*UpdateSessionResponse) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{159}
}

// Request to remove a session.
type RemoveSessionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId string `protobuf:"bytes,1,opt,name=accountId,proto3" json:"accountId,omitempty"` // Identifier of the account whose session is to be removed.
}

func (x *RemoveSessionRequest) Reset() {
	*x = RemoveSessionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[160]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveSessionRequest) ProtoMessage() {}

func (x *RemoveSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[160]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveSessionRequest.ProtoReflect.Descriptor instead.
func (*RemoveSessionRequest) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{160}
}

func (x *RemoveSessionRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

// Response for the RemoveSessionRequest.
// This message also doesn't carry additional data and serves as an acknowledgment.
type RemoveSessionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RemoveSessionResponse) Reset() {
	*x = RemoveSessionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[161]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveSessionResponse) ProtoMessage() {}

func (x *RemoveSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[161]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveSessionResponse.ProtoReflect.Descriptor instead.
func (*RemoveSessionResponse) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{161}
}

// Request to retrieve sessions based on a query and options.
type GetSessionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query   string `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`     // Query string to filter sessions.
	Options string `protobuf:"bytes,2,opt,name=options,proto3" json:"options,omitempty"` // Additional options to modify the query.
}

func (x *GetSessionsRequest) Reset() {
	*x = GetSessionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[162]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSessionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSessionsRequest) ProtoMessage() {}

func (x *GetSessionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[162]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSessionsRequest.ProtoReflect.Descriptor instead.
func (*GetSessionsRequest) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{162}
}

func (x *GetSessionsRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *GetSessionsRequest) GetOptions() string {
	if x != nil {
		return x.Options
	}
	return ""
}

// Response containing a list of sessions.
type GetSessionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sessions []*Session `protobuf:"bytes,1,rep,name=sessions,proto3" json:"sessions,omitempty"` // List of sessions that match the query.
}

func (x *GetSessionsResponse) Reset() {
	*x = GetSessionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[163]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSessionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSessionsResponse) ProtoMessage() {}

func (x *GetSessionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[163]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSessionsResponse.ProtoReflect.Descriptor instead.
func (*GetSessionsResponse) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{163}
}

func (x *GetSessionsResponse) GetSessions() []*Session {
	if x != nil {
		return x.Sessions
	}
	return nil
}

// Request to get information about a specific session.
type GetSessionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId string `protobuf:"bytes,1,opt,name=accountId,proto3" json:"accountId,omitempty"` // Identifier of the account whose session information is requested.
}

func (x *GetSessionRequest) Reset() {
	*x = GetSessionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[164]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSessionRequest) ProtoMessage() {}

func (x *GetSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[164]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSessionRequest.ProtoReflect.Descriptor instead.
func (*GetSessionRequest) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{164}
}

func (x *GetSessionRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

// Response containing the requested session information.
type GetSessionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Session *Session `protobuf:"bytes,1,opt,name=session,proto3" json:"session,omitempty"` // The requested session information.
}

func (x *GetSessionResponse) Reset() {
	*x = GetSessionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[165]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSessionResponse) ProtoMessage() {}

func (x *GetSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[165]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSessionResponse.ProtoReflect.Descriptor instead.
func (*GetSessionResponse) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{165}
}

func (x *GetSessionResponse) GetSession() *Session {
	if x != nil {
		return x.Session
	}
	return nil
}

// Request to create a reference between two entities.
type CreateReferenceRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceId         string `protobuf:"bytes,1,opt,name=sourceId,proto3" json:"sourceId,omitempty"`                 // Identifier of the source entity.
	SourceCollection string `protobuf:"bytes,2,opt,name=sourceCollection,proto3" json:"sourceCollection,omitempty"` // Collection of the source entity.
	FieldName        string `protobuf:"bytes,3,opt,name=fieldName,proto3" json:"fieldName,omitempty"`               // Field name in the source entity to hold the reference.
	TargetId         string `protobuf:"bytes,4,opt,name=targetId,proto3" json:"targetId,omitempty"`                 // Identifier of the target entity.
	TargetCollection string `protobuf:"bytes,5,opt,name=targetCollection,proto3" json:"targetCollection,omitempty"` // Collection of the target entity.
}

func (x *CreateReferenceRqst) Reset() {
	*x = CreateReferenceRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[166]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateReferenceRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateReferenceRqst) ProtoMessage() {}

func (x *CreateReferenceRqst) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[166]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateReferenceRqst.ProtoReflect.Descriptor instead.
func (*CreateReferenceRqst) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{166}
}

func (x *CreateReferenceRqst) GetSourceId() string {
	if x != nil {
		return x.SourceId
	}
	return ""
}

func (x *CreateReferenceRqst) GetSourceCollection() string {
	if x != nil {
		return x.SourceCollection
	}
	return ""
}

func (x *CreateReferenceRqst) GetFieldName() string {
	if x != nil {
		return x.FieldName
	}
	return ""
}

func (x *CreateReferenceRqst) GetTargetId() string {
	if x != nil {
		return x.TargetId
	}
	return ""
}

func (x *CreateReferenceRqst) GetTargetCollection() string {
	if x != nil {
		return x.TargetCollection
	}
	return ""
}

// Response for the CreateReferenceRqst.
// This message doesn't carry additional data and serves as an acknowledgment.
type CreateReferenceRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateReferenceRsp) Reset() {
	*x = CreateReferenceRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[167]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateReferenceRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateReferenceRsp) ProtoMessage() {}

func (x *CreateReferenceRsp) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[167]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateReferenceRsp.ProtoReflect.Descriptor instead.
func (*CreateReferenceRsp) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{167}
}

// Request to delete a reference between entities.
type DeleteReferenceRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RefId            string `protobuf:"bytes,1,opt,name=refId,proto3" json:"refId,omitempty"`                       // Identifier of the reference to be deleted.
	TargetId         string `protobuf:"bytes,2,opt,name=targetId,proto3" json:"targetId,omitempty"`                 // Identifier of the target entity.
	TargetField      string `protobuf:"bytes,3,opt,name=targetField,proto3" json:"targetField,omitempty"`           // Field name in the target entity of the reference.
	TargetCollection string `protobuf:"bytes,4,opt,name=targetCollection,proto3" json:"targetCollection,omitempty"` // Collection of the target entity.
}

func (x *DeleteReferenceRqst) Reset() {
	*x = DeleteReferenceRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[168]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteReferenceRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteReferenceRqst) ProtoMessage() {}

func (x *DeleteReferenceRqst) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[168]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteReferenceRqst.ProtoReflect.Descriptor instead.
func (*DeleteReferenceRqst) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{168}
}

func (x *DeleteReferenceRqst) GetRefId() string {
	if x != nil {
		return x.RefId
	}
	return ""
}

func (x *DeleteReferenceRqst) GetTargetId() string {
	if x != nil {
		return x.TargetId
	}
	return ""
}

func (x *DeleteReferenceRqst) GetTargetField() string {
	if x != nil {
		return x.TargetField
	}
	return ""
}

func (x *DeleteReferenceRqst) GetTargetCollection() string {
	if x != nil {
		return x.TargetCollection
	}
	return ""
}

// Response for the DeleteReferenceRqst.
// This message doesn't carry additional data and serves as an acknowledgment.
type DeleteReferenceRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteReferenceRsp) Reset() {
	*x = DeleteReferenceRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[169]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteReferenceRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteReferenceRsp) ProtoMessage() {}

func (x *DeleteReferenceRsp) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[169]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteReferenceRsp.ProtoReflect.Descriptor instead.
func (*DeleteReferenceRsp) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{169}
}

var File_resource_proto protoreflect.FileDescriptor

var file_resource_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x8c, 0x02, 0x0a, 0x0d, 0x50,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x49, 0x0a, 0x11,
	0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x6f, 0x72, 0x52, 0x11, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b,
	0x73, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b,
	0x73, 0x75, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x42, 0x69, 0x6e, 0x61, 0x69, 0x72, 0x69, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x09, 0x42, 0x69, 0x6e, 0x61, 0x69, 0x72, 0x69, 0x65, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x61, 0x63, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x61, 0x63, 0x12, 0x1a, 0x0a,
	0x08, 0x74, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x74, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x4a, 0x0a, 0x17, 0x53, 0x65, 0x74,
	0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x06, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e,
	0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x06, 0x62,
	0x75, 0x6e, 0x64, 0x6c, 0x65, 0x22, 0x32, 0x0a, 0x18, 0x53, 0x65, 0x74, 0x50, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x31, 0x0a, 0x1f, 0x47, 0x65, 0x74,
	0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x73, 0x75, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x3e, 0x0a, 0x20,
	0x47, 0x65, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x22, 0xd1, 0x03, 0x0a,
	0x11, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x6f, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e,
	0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x22, 0x0a, 0x0c, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18,
	0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72,
	0x69, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x69,
	0x65, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76,
	0x65, 0x72, 0x69, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64,
	0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0b, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x24, 0x0a, 0x05, 0x72,
	0x6f, 0x6c, 0x65, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65,
	0x73, 0x12, 0x27, 0x0a, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63,
	0x6f, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x14,
	0x0a, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61,
	0x6c, 0x69, 0x61, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x22, 0x5d, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x20, 0x0a,
	0x0b, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x49, 0x64, 0x22,
	0x55, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x35, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x50, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x52, 0x07, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x22, 0x4e, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x50, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x65, 0x73, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x18, 0x0a, 0x07,
	0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x56, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x50, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x65, 0x73, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x6f, 0x72, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x22, 0x68,
	0x0a, 0x1b, 0x53, 0x65, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x49, 0x0a,
	0x11, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x6f, 0x72, 0x52, 0x11, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x22, 0x36, 0x0a, 0x1c, 0x53, 0x65, 0x74, 0x50,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0x3b, 0x0a, 0x1d, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x22, 0x57, 0x0a,
	0x1e, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x35, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x50, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x52, 0x07, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x22, 0xda, 0x01, 0x0a, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a,
	0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x73, 0x12, 0x24, 0x0a, 0x0d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x79, 0x70, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x79, 0x70, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x22, 0x46, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x71, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6c,
	0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x2b, 0x0a, 0x11, 0x41,
	0x64, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x73, 0x70,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x46, 0x0a, 0x14, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x71, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x2d, 0x0a, 0x13, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0x2f, 0x0a, 0x15, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x71, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x2e, 0x0a, 0x14, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0x85, 0x03, 0x0a, 0x07, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73,
	0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x26,
	0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x50,
	0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x6f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18,
	0x0d, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08,
	0x74, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x74, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x6d, 0x0a, 0x13, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x71, 0x73, 0x74, 0x12,
	0x2b, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x29, 0x0a, 0x10,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x50,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x2c, 0x0a, 0x12, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x73, 0x70, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x22, 0x0a, 0x10, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x45, 0x78, 0x69, 0x73, 0x74, 0x52, 0x71, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x29, 0x0a, 0x0f, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x45, 0x78, 0x69, 0x73, 0x74, 0x52, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0x41, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x73, 0x52, 0x71, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x18, 0x0a,
	0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x3f, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x73, 0x70, 0x12, 0x2d, 0x0a, 0x08, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x08,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x22, 0x2e, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x71, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x3c, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x73, 0x70, 0x12, 0x2b, 0x0a, 0x07, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x07, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x3d, 0x0a, 0x0e, 0x53, 0x65, 0x74, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x71, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x07, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x0f, 0x0a, 0x0d, 0x53, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x73, 0x70, 0x22, 0x7c, 0x0a, 0x16, 0x53, 0x65, 0x74, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x71, 0x73, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x21,
	0x0a, 0x0c, 0x6f, 0x6c, 0x64, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x6c, 0x64, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x65, 0x77, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x65, 0x77, 0x50, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x22, 0x17, 0x0a, 0x15, 0x53, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x73, 0x70, 0x22, 0x67, 0x0a,
	0x0f, 0x53, 0x65, 0x74, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x6f, 0x6c, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6f, 0x6c, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x65,
	0x77, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x65,
	0x77, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x12, 0x0a, 0x10, 0x53, 0x65, 0x74, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23, 0x0a, 0x11, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x71, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x2a, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x4a, 0x0a, 0x12, 0x41,
	0x64, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x71, 0x73,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x2b, 0x0a, 0x11, 0x41, 0x64, 0x64, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0x4d, 0x0a, 0x15, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x71, 0x73, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6c,
	0x65, 0x49, 0x64, 0x22, 0x2e, 0x0a, 0x14, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x22, 0x9d, 0x01, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x26, 0x0a, 0x0e, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x1a, 0x0a, 0x08, 0x72, 0x69, 0x6e, 0x67, 0x74, 0x6f, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x72, 0x69, 0x6e, 0x67, 0x74, 0x6f, 0x6e, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x70,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x69, 0x63, 0x74,
	0x75, 0x72, 0x65, 0x22, 0x62, 0x0a, 0x15, 0x53, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x71, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x22, 0x2e, 0x0a, 0x14, 0x53, 0x65, 0x74, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x73, 0x70, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x34, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x71, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x04, 0x72, 0x6f, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x22, 0x27, 0x0a,
	0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x73, 0x70, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x40, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x6f, 0x6c, 0x65, 0x52, 0x71, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x27, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x22, 0x3e, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x71, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x22, 0x33, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x73, 0x70,
	0x12, 0x24, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52,
	0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x22, 0x28, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x6f, 0x6c, 0x65, 0x52, 0x71, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64,
	0x22, 0x27, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x73,
	0x70, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x9d, 0x03, 0x0a, 0x0b, 0x41, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x08, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6b,
	0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x6b,
	0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x61,
	0x6c, 0x69, 0x61, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x6c, 0x69, 0x61,
	0x73, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x69, 0x64,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65,
	0x72, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x6c, 0x61, 0x73, 0x74,
	0x5f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0c, 0x6c, 0x61, 0x73, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x74, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x74, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x50, 0x0a, 0x15, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x71,
	0x73, 0x74, 0x12, 0x37, 0x0a, 0x0b, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x16, 0x0a, 0x14, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x73, 0x70, 0x22, 0x55, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x71, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x2e, 0x0a, 0x14, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x3d, 0x0a, 0x15, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x71, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x2e, 0x0a, 0x14, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x73,
	0x70, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x5b, 0x0a, 0x19, 0x41, 0x64, 0x64,
	0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x71, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x32, 0x0a, 0x18, 0x41, 0x64, 0x64, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x5b, 0x0a, 0x1b, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x71, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x34, 0x0a, 0x1a, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x36, 0x0a,
	0x1c, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x71, 0x73, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x35, 0x0a, 0x1b, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x45, 0x0a, 0x13,
	0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x71, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x22, 0x4f, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x73, 0x70, 0x12, 0x39, 0x0a, 0x0c, 0x61, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x22, 0x2b, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x71, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x34, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x73, 0x70, 0x12, 0x18, 0x0a,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x28, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x41, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x63, 0x6f, 0x6e, 0x52, 0x71, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x2b, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x63, 0x6f, 0x6e, 0x52, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x22, 0x29,
	0x0a, 0x17, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x41, 0x6c, 0x69, 0x61, 0x73, 0x52, 0x71, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x2e, 0x0a, 0x16, 0x47, 0x65, 0x74,
	0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x69, 0x61, 0x73,
	0x52, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x22, 0xc1, 0x01, 0x0a, 0x05, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x38, 0x0a,
	0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x71, 0x73, 0x74,
	0x12, 0x25, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x28, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x22, 0x43, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x52, 0x71, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x28, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0x3f, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x71, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x22, 0x37, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x73,
	0x70, 0x12, 0x27, 0x0a, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x22, 0x27, 0x0a, 0x0f, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x71, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x22, 0x28, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x53, 0x0a,
	0x19, 0x41, 0x64, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x71, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x64, 0x22, 0x32, 0x0a, 0x18, 0x41, 0x64, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x73, 0x70, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x56, 0x0a, 0x1c, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x71, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x35,
	0x0a, 0x1b, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x73, 0x70, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xa0, 0x02, 0x0a, 0x0c, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a,
	0x0a, 0x08, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x08, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1a, 0x0a, 0x08,
	0x74, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x74, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x54, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x71,
	0x73, 0x74, 0x12, 0x3a, 0x0a, 0x0c, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x2e, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x0c, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x2f,
	0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0x58, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x71, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x6f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x2f, 0x0a, 0x15, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x46, 0x0a, 0x14, 0x47, 0x65,
	0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x71,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x22, 0x53, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x73, 0x70, 0x12, 0x3c, 0x0a, 0x0d, 0x6f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x4f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x62, 0x0a, 0x1a, 0x41, 0x64, 0x64, 0x4f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x71, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x33, 0x0a, 0x19, 0x41,
	0x64, 0x64, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0x5c, 0x0a, 0x18, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x71, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0e,
	0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0x31,
	0x0a, 0x17, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x22, 0x59, 0x0a, 0x17, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x71, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0e,
	0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x30, 0x0a, 0x16,
	0x41, 0x64, 0x64, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x6f, 0x6c, 0x65, 0x52, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x6e,
	0x0a, 0x1e, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x71, 0x73, 0x74,
	0x12, 0x26, 0x0a, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x37,
	0x0a, 0x1d, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x73, 0x70, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x5f, 0x0a, 0x1b, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x71, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0x34, 0x0a, 0x1a, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x5c,
	0x0a, 0x1a, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x71, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0e,
	0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x33, 0x0a, 0x19,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x22, 0x71, 0x0a, 0x21, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x71, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x24,
	0x0a, 0x0d, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x22, 0x3a, 0x0a, 0x20, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0x65, 0x0a, 0x1d, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x71, 0x73,
	0x74, 0x12, 0x26, 0x0a, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x36, 0x0a, 0x1c, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0x61, 0x0a, 0x19, 0x49, 0x73, 0x4f, 0x72, 0x67, 0x6e, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x71, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0e,
	0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x64, 0x22, 0x32, 0x0a, 0x18, 0x49, 0x73, 0x4f, 0x72, 0x67, 0x6e, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x73, 0x70, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x3c, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x71, 0x73, 0x74,
	0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x2f, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x73, 0x70, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xe5, 0x02, 0x0a, 0x04, 0x50, 0x65, 0x65, 0x72, 0x12, 0x1a,
	0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x12, 0x2e, 0x0a, 0x13, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x69,
	0x70, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x11, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x69, 0x70, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6c, 0x6f,
	0x63, 0x61, 0x6c, 0x49, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x61, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x61, 0x63, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x6f, 0x72, 0x74, 0x48, 0x74, 0x74, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x70, 0x6f, 0x72, 0x74, 0x48, 0x74, 0x74, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x6f,
	0x72, 0x74, 0x48, 0x74, 0x74, 0x70, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70,
	0x6f, 0x72, 0x74, 0x48, 0x74, 0x74, 0x70, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x31, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x50,
	0x65, 0x65, 0x72, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x5c, 0x0a,
	0x18, 0x47, 0x65, 0x74, 0x50, 0x65, 0x65, 0x72, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x71, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x61, 0x63,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x61, 0x63, 0x12, 0x2e, 0x0a, 0x13, 0x72,
	0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65,
	0x50, 0x65, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x4c, 0x0a, 0x17, 0x47,
	0x65, 0x74, 0x50, 0x65, 0x65, 0x72, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x73, 0x70, 0x12, 0x31, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x2e, 0x50, 0x65, 0x65, 0x72, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x58, 0x0a, 0x14, 0x47, 0x65, 0x74,
	0x50, 0x65, 0x65, 0x72, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x52, 0x71, 0x73,
	0x74, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x61, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6d, 0x61, 0x63, 0x12, 0x2e, 0x0a, 0x13, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x70, 0x65,
	0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x11, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x50, 0x65, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x22, 0x34, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x50, 0x65, 0x65, 0x72, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x52, 0x73, 0x70, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x22, 0x55, 0x0a, 0x10, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x50, 0x65, 0x65, 0x72, 0x52, 0x71, 0x73, 0x74, 0x12, 0x22, 0x0a,
	0x04, 0x70, 0x65, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x52, 0x04, 0x70, 0x65, 0x65,
	0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79,
	0x22, 0x54, 0x0a, 0x0f, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x50, 0x65, 0x65, 0x72,
	0x52, 0x73, 0x70, 0x12, 0x22, 0x0a, 0x04, 0x70, 0x65, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x50, 0x65, 0x65,
	0x72, 0x52, 0x04, 0x70, 0x65, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x22, 0x34, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x50, 0x65, 0x65, 0x72, 0x52, 0x71, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x04, 0x70, 0x65, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x52, 0x04, 0x70, 0x65, 0x65, 0x72, 0x22, 0x27, 0x0a, 0x0d,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x65, 0x65, 0x72, 0x52, 0x73, 0x70, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x3e, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x50, 0x65, 0x65, 0x72,
	0x73, 0x52, 0x71, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x33, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x50, 0x65, 0x65, 0x72,
	0x73, 0x52, 0x73, 0x70, 0x12, 0x24, 0x0a, 0x05, 0x70, 0x65, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x50,
	0x65, 0x65, 0x72, 0x52, 0x05, 0x70, 0x65, 0x65, 0x72, 0x73, 0x22, 0x34, 0x0a, 0x0e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x50, 0x65, 0x65, 0x72, 0x52, 0x71, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x04,
	0x70, 0x65, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x52, 0x04, 0x70, 0x65, 0x65, 0x72,
	0x22, 0x27, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x65, 0x65, 0x72, 0x52, 0x73,
	0x70, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x40, 0x0a, 0x12, 0x41, 0x64, 0x64,
	0x50, 0x65, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x71, 0x73, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x61, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x61,
	0x63, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x2b, 0x0a, 0x11, 0x41,
	0x64, 0x64, 0x50, 0x65, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x73, 0x70,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x40, 0x0a, 0x14, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x50, 0x65, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x71, 0x73, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x61, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x61, 0x63, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x2d, 0x0a, 0x13, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x50, 0x65, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x73,
	0x70, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x2f, 0x0a, 0x15, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x50, 0x65, 0x65, 0x72, 0x73, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x71,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x2e, 0x0a, 0x14, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x50, 0x65, 0x65, 0x72, 0x73, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x34, 0x0a, 0x0e, 0x41, 0x63,
	0x63, 0x65, 0x70, 0x74, 0x50, 0x65, 0x65, 0x72, 0x52, 0x71, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x04,
	0x70, 0x65, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x52, 0x04, 0x70, 0x65, 0x65, 0x72,
	0x22, 0x27, 0x0a, 0x0d, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x50, 0x65, 0x65, 0x72, 0x52, 0x73,
	0x70, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x34, 0x0a, 0x0e, 0x52, 0x65, 0x6a,
	0x65, 0x63, 0x74, 0x50, 0x65, 0x65, 0x72, 0x52, 0x71, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x04, 0x70,
	0x65, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x52, 0x04, 0x70, 0x65, 0x65, 0x72, 0x22,
	0x27, 0x0a, 0x0d, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x50, 0x65, 0x65, 0x72, 0x52, 0x73, 0x70,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x9e, 0x01, 0x0a, 0x04, 0x43, 0x61, 0x6c,
	0x6c, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x16, 0x0a,
	0x06, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63,
	0x61, 0x6c, 0x6c, 0x65, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x74, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x74, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x33, 0x0a, 0x12, 0x47, 0x65, 0x74,
	0x43, 0x61, 0x6c, 0x6c, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x71, 0x73, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x39,
	0x0a, 0x11, 0x47, 0x65, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x52, 0x73, 0x70, 0x12, 0x24, 0x0a, 0x05, 0x63, 0x61, 0x6c, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x43, 0x61,
	0x6c, 0x6c, 0x52, 0x05, 0x63, 0x61, 0x6c, 0x6c, 0x73, 0x22, 0x31, 0x0a, 0x0b, 0x53, 0x65, 0x74,
	0x43, 0x61, 0x6c, 0x6c, 0x52, 0x71, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x04, 0x63, 0x61, 0x6c, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x04, 0x63, 0x61, 0x6c, 0x6c, 0x22, 0x0c, 0x0a, 0x0a,
	0x53, 0x65, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x73, 0x70, 0x22, 0x43, 0x0a, 0x0e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x71, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x75,
	0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x22,
	0x0f, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x73, 0x70,
	0x22, 0x47, 0x0a, 0x0e, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x43, 0x61, 0x6c, 0x6c, 0x73, 0x52, 0x71,
	0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x0f, 0x0a, 0x0d, 0x43, 0x6c, 0x65,
	0x61, 0x72, 0x43, 0x61, 0x6c, 0x6c, 0x73, 0x52, 0x73, 0x70, 0x22, 0xf9, 0x01, 0x0a, 0x0c, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x63,
	0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65,
	0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12,
	0x47, 0x0a, 0x11, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x10, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x61, 0x63, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x61, 0x63, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x79,
	0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x79,
	0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x54, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x71, 0x73, 0x74,
	0x12, 0x3a, 0x0a, 0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x17, 0x0a, 0x15,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x73, 0x70, 0x22, 0x34, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x71, 0x73, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x22, 0x53, 0x0a, 0x13, 0x47,
	0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x73, 0x70, 0x12, 0x3c, 0x0a, 0x0d, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0d, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x22, 0x46, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x71, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65,
	0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72,
	0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x22, 0x17, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x73,
	0x70, 0x22, 0x39, 0x0a, 0x19, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x41, 0x6c, 0x6c, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x71, 0x73, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x22, 0x1a, 0x0a, 0x18,
	0x43, 0x6c, 0x65, 0x61, 0x72, 0x41, 0x6c, 0x6c, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x73, 0x70, 0x22, 0x85, 0x01, 0x0a, 0x1c, 0x43, 0x6c, 0x65,
	0x61, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42,
	0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x71, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x63,
	0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65,
	0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x47, 0x0a, 0x11, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x10,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x22, 0x1d, 0x0a, 0x1b, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x73, 0x70, 0x22,
	0xb6, 0x01, 0x0a, 0x07, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x74, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x74, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x43, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x2b, 0x0a, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x17, 0x0a,
	0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x34, 0x0a, 0x14, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x17, 0x0a, 0x15,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x44, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x44, 0x0a, 0x13, 0x47,
	0x65, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2d, 0x0a, 0x08, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x22, 0x31, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x64, 0x22, 0x41, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x07, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x07,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xc3, 0x01, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x71, 0x73, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49,
	0x64, 0x12, 0x2a, 0x0a, 0x10, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x14, 0x0a,
	0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x52, 0x73, 0x70, 0x22, 0x95, 0x01, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x71, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x72,
	0x65, 0x66, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x65, 0x66, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x12, 0x20, 0x0a,
	0x0b, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12,
	0x2a, 0x0a, 0x10, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x14, 0x0a, 0x12, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x73,
	0x70, 0x2a, 0x46, 0x0a, 0x0b, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x10,
	0x00, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x41, 0x50, 0x50, 0x4c, 0x49, 0x43, 0x41, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x02, 0x2a, 0x4a, 0x0a, 0x11, 0x50, 0x65, 0x65,
	0x72, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x10,
	0x0a, 0x0c, 0x50, 0x45, 0x45, 0x52, 0x5f, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x00,
	0x12, 0x10, 0x0a, 0x0c, 0x50, 0x45, 0x45, 0x52, 0x5f, 0x41, 0x43, 0x43, 0x45, 0x54, 0x45, 0x50,
	0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x50, 0x45, 0x45, 0x52, 0x5f, 0x52, 0x45, 0x4a, 0x45, 0x43,
	0x54, 0x45, 0x44, 0x10, 0x02, 0x2a, 0x60, 0x0a, 0x10, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x55, 0x53, 0x45,
	0x52, 0x5f, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x00,
	0x12, 0x1c, 0x0a, 0x18, 0x41, 0x50, 0x50, 0x4c, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x4e, 0x4f, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x01, 0x12, 0x17,
	0x0a, 0x13, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4d, 0x5f, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x49, 0x43,
	0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x02, 0x2a, 0x31, 0x0a, 0x0c, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x4f, 0x4e, 0x4c, 0x49, 0x4e,
	0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x4f, 0x46, 0x46, 0x4c, 0x49, 0x4e, 0x45, 0x10, 0x01,
	0x12, 0x08, 0x0a, 0x04, 0x41, 0x57, 0x41, 0x59, 0x10, 0x02, 0x32, 0xce, 0x33, 0x0a, 0x0f, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4e,
	0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x12, 0x1d, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x71, 0x73, 0x74,
	0x1a, 0x1c, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x73, 0x70, 0x12, 0x4e,
	0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x12, 0x1d, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x71, 0x73, 0x74,
	0x1a, 0x1c, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x73, 0x70, 0x12, 0x57,
	0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x71, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x73, 0x70, 0x12, 0x57, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x2e,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x71, 0x73, 0x74, 0x1a,
	0x1f, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x73, 0x70,
	0x12, 0x53, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1e, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e,
	0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x71, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e,
	0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x73, 0x70, 0x30, 0x01, 0x12, 0x57, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x2e, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x71, 0x73, 0x74, 0x1a, 0x1f, 0x2e,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x73, 0x70, 0x12, 0x63,
	0x0a, 0x16, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x24, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x71, 0x73, 0x74, 0x1a, 0x23,
	0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x73, 0x70, 0x12, 0x5d, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x22, 0x2e, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x71, 0x73, 0x74, 0x1a,
	0x21, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x4f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x73, 0x70, 0x12, 0x5a, 0x0a, 0x13, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x21, 0x2e, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x71, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x73, 0x70, 0x12, 0x6f,
	0x0a, 0x1a, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x2e, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x71, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x2e, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x73, 0x70, 0x12,
	0x6c, 0x0a, 0x19, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x27, 0x2e, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x71, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x73, 0x70, 0x12, 0x66, 0x0a,
	0x17, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x25, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x71, 0x73, 0x74, 0x1a,
	0x24, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x73, 0x70, 0x12, 0x63, 0x0a, 0x16, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x12,
	0x24, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x6f, 0x6c,
	0x65, 0x52, 0x71, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x73, 0x70, 0x12, 0x78, 0x0a, 0x1d, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x2e, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x71, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x73, 0x70, 0x12, 0x42, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x12, 0x19, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x71, 0x73, 0x74, 0x1a, 0x18,
	0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x73, 0x70, 0x12, 0x42, 0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x19, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x71,
	0x73, 0x74, 0x1a, 0x18, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x73, 0x70, 0x12, 0x3e, 0x0a, 0x09,
	0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x17, 0x2e, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x71,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x47, 0x65,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x73, 0x70, 0x30, 0x01, 0x12, 0x42, 0x0a, 0x0b,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x19, 0x2e, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x71, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x73, 0x70,
	0x12, 0x60, 0x0a, 0x15, 0x41, 0x64, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x2e, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x71, 0x73, 0x74, 0x1a, 0x22,
	0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x73, 0x70, 0x12, 0x69, 0x0a, 0x18, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26,
	0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x71, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x73, 0x70, 0x12, 0x4e, 0x0a,
	0x0f, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x1d, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x71, 0x73, 0x74, 0x1a,
	0x1c, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x73, 0x70, 0x12, 0x48, 0x0a,
	0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b,
	0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x71, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x73, 0x70, 0x12, 0x3f, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x71, 0x73, 0x74, 0x1a,
	0x17, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x73, 0x70, 0x12, 0x3f, 0x0a, 0x0a, 0x53, 0x65, 0x74, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x2e, 0x53, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x71, 0x73, 0x74,
	0x1a, 0x17, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x74, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x73, 0x70, 0x12, 0x57, 0x0a, 0x12, 0x53, 0x65, 0x74,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12,
	0x20, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x74, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x71, 0x73,
	0x74, 0x1a, 0x1f, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x74,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52,
	0x73, 0x70, 0x12, 0x44, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x73, 0x12, 0x19, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x71, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x73, 0x52, 0x73, 0x70, 0x30, 0x01, 0x12, 0x4b, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x1c, 0x2e, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x6f, 0x6c, 0x65, 0x52, 0x71, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x6f,
	0x6c, 0x65, 0x52, 0x73, 0x70, 0x12, 0x54, 0x0a, 0x11, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x1f, 0x2e, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x71, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x73, 0x70, 0x12, 0x54, 0x0a, 0x11, 0x53,
	0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74,
	0x12, 0x1f, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x74, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x71, 0x73,
	0x74, 0x1a, 0x1e, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x74,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x73,
	0x70, 0x12, 0x41, 0x0a, 0x08, 0x53, 0x65, 0x74, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x19, 0x2e,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x74, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x74, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x60, 0x0a, 0x15, 0x49, 0x73, 0x4f, 0x72, 0x67, 0x6e, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x23, 0x2e,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x49, 0x73, 0x4f, 0x72, 0x67, 0x6e, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x71,
	0x73, 0x74, 0x1a, 0x22, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x49, 0x73,
	0x4f, 0x72, 0x67, 0x6e, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x52, 0x73, 0x70, 0x12, 0x3f, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x6f, 0x6c, 0x65, 0x12, 0x18, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x71, 0x73, 0x74, 0x1a, 0x17,
	0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x6f, 0x6c, 0x65, 0x52, 0x73, 0x70, 0x12, 0x3f, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x18, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x71, 0x73, 0x74, 0x1a,
	0x17, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x73, 0x70, 0x12, 0x3b, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x52,
	0x6f, 0x6c, 0x65, 0x73, 0x12, 0x16, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e,
	0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x71, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x73,
	0x52, 0x73, 0x70, 0x30, 0x01, 0x12, 0x3f, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x6f, 0x6c, 0x65, 0x12, 0x18, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x71, 0x73, 0x74, 0x1a, 0x17, 0x2e,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x6f, 0x6c, 0x65, 0x52, 0x73, 0x70, 0x12, 0x4b, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x52, 0x6f, 0x6c,
	0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1c, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x71, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x2e, 0x41, 0x64, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x73, 0x70, 0x12, 0x51, 0x0a, 0x10, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x6f, 0x6c,
	0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x71, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x73, 0x70, 0x12, 0x54, 0x0a, 0x11, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x52, 0x6f, 0x6c, 0x65, 0x73, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x2e, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x6f, 0x6c,
	0x65, 0x73, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x71, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x6f,
	0x6c, 0x65, 0x73, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x73, 0x70, 0x12, 0x54, 0x0a, 0x11,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1f, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x71,
	0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x73, 0x70, 0x12, 0x54, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x71, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x73, 0x70, 0x12, 0x50, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x41,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1d, 0x2e, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x71, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x73, 0x70, 0x30, 0x01, 0x12, 0x54, 0x0a, 0x11, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1f, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x71, 0x73, 0x74,
	0x1a, 0x1e, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x73, 0x70,
	0x12, 0x60, 0x0a, 0x15, 0x41, 0x64, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x23, 0x2e, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x71, 0x73, 0x74, 0x1a, 0x22,
	0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x73, 0x70, 0x12, 0x66, 0x0a, 0x17, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x2e,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x71, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x73, 0x70, 0x12, 0x69, 0x0a, 0x18, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x71, 0x73, 0x74, 0x1a, 0x25,
	0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x73, 0x70, 0x12, 0x60, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x23,
	0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x71, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x47,
	0x65, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x73, 0x70, 0x12, 0x5a, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x41, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x21,
	0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x52, 0x71, 0x73,
	0x74, 0x1a, 0x20, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74,
	0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x69, 0x61, 0x73,
	0x52, 0x73, 0x70, 0x12, 0x57, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x20, 0x2e, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x63, 0x6f, 0x6e, 0x52, 0x71, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x63, 0x6f, 0x6e, 0x52, 0x73, 0x70, 0x12, 0x45, 0x0a, 0x0c,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x50, 0x65, 0x65, 0x72, 0x12, 0x1a, 0x2e, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x50, 0x65, 0x65, 0x72, 0x52, 0x71, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x50, 0x65, 0x65, 0x72,
	0x52, 0x73, 0x70, 0x12, 0x3b, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x50, 0x65, 0x65, 0x72, 0x73, 0x12,
	0x16, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x65,
	0x65, 0x72, 0x73, 0x52, 0x71, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x65, 0x65, 0x72, 0x73, 0x52, 0x73, 0x70, 0x30, 0x01,
	0x12, 0x5d, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x50, 0x65, 0x65, 0x72, 0x41, 0x70, 0x70, 0x72, 0x6f,
	0x76, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x22, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x65, 0x65, 0x72, 0x41, 0x70, 0x70, 0x72, 0x6f,
	0x76, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x71, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x65, 0x65, 0x72, 0x41,
	0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x73, 0x70, 0x12,
	0x3f, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x65, 0x65, 0x72, 0x12, 0x18, 0x2e,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50,
	0x65, 0x65, 0x72, 0x52, 0x71, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x65, 0x65, 0x72, 0x52, 0x73, 0x70,
	0x12, 0x3f, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x65, 0x65, 0x72, 0x12, 0x18,
	0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x50, 0x65, 0x65, 0x72, 0x52, 0x71, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x65, 0x65, 0x72, 0x52, 0x73,
	0x70, 0x12, 0x4b, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x50, 0x65, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x1c, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x41,
	0x64, 0x64, 0x50, 0x65, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x71, 0x73,
	0x74, 0x1a, 0x1b, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x41, 0x64, 0x64,
	0x50, 0x65, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x73, 0x70, 0x12, 0x51,
	0x0a, 0x10, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x65, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1e, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x50, 0x65, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x71,
	0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x50, 0x65, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x73,
	0x70, 0x12, 0x54, 0x0a, 0x11, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x65, 0x65, 0x72, 0x73,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x65, 0x65, 0x72, 0x73, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x71, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x65, 0x65, 0x72, 0x73, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x73, 0x70, 0x12, 0x3f, 0x0a, 0x0a, 0x41, 0x63, 0x63, 0x65, 0x70,
	0x74, 0x50, 0x65, 0x65, 0x72, 0x12, 0x18, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x2e, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x50, 0x65, 0x65, 0x72, 0x52, 0x71, 0x73, 0x74, 0x1a,
	0x17, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x70,
	0x74, 0x50, 0x65, 0x65, 0x72, 0x52, 0x73, 0x70, 0x12, 0x3f, 0x0a, 0x0a, 0x52, 0x65, 0x6a, 0x65,
	0x63, 0x74, 0x50, 0x65, 0x65, 0x72, 0x12, 0x18, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x2e, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x50, 0x65, 0x65, 0x72, 0x52, 0x71, 0x73, 0x74,
	0x1a, 0x17, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x6a, 0x65,
	0x63, 0x74, 0x50, 0x65, 0x65, 0x72, 0x52, 0x73, 0x70, 0x12, 0x51, 0x0a, 0x10, 0x47, 0x65, 0x74,
	0x50, 0x65, 0x65, 0x72, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x1e, 0x2e,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x65, 0x65, 0x72,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x52, 0x71, 0x73, 0x74, 0x1a, 0x1d, 0x2e,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x65, 0x65, 0x72,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x52, 0x73, 0x70, 0x12, 0x57, 0x0a, 0x12,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x20, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x71, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x73, 0x70, 0x12, 0x53, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1e, 0x2e, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x71, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x73, 0x70, 0x30, 0x01, 0x12, 0x57, 0x0a, 0x12, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x20, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x71,
	0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x73, 0x70, 0x12, 0x60, 0x0a, 0x15, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x41, 0x6c, 0x6c, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x23, 0x2e, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x41, 0x6c, 0x6c,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x71, 0x73,
	0x74, 0x1a, 0x22, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x43, 0x6c, 0x65,
	0x61, 0x72, 0x41, 0x6c, 0x6c, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x73, 0x70, 0x12, 0x69, 0x0a, 0x18, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x26, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x43, 0x6c, 0x65,
	0x61, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42,
	0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x71, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x2e, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x73, 0x70,
	0x12, 0x61, 0x0a, 0x0c, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73,
	0x12, 0x27, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x64,
	0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65,
	0x73, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x65, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x12, 0x25, 0x2e, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x26, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x47, 0x65,
	0x74, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6a, 0x0a, 0x15, 0x47, 0x65,
	0x74, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x6f, 0x72, 0x12, 0x26, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x47,
	0x65, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x73, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x12, 0x65, 0x0a, 0x14, 0x53, 0x65, 0x74, 0x50, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x12, 0x25,
	0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x74, 0x50, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x2e, 0x53, 0x65, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a,
	0x10, 0x53, 0x65, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x42, 0x75, 0x6e, 0x64, 0x6c,
	0x65, 0x12, 0x21, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x74,
	0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e,
	0x53, 0x65, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x71, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x50,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x73, 0x75, 0x6d, 0x12, 0x29, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e,
	0x47, 0x65, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2a, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x73, 0x75, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x0d, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x2e, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a,
	0x0b, 0x47, 0x65, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1c, 0x2e, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x0d, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x2e, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x0a, 0x47,
	0x65, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x2e, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x1c, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x52, 0x71, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e,
	0x47, 0x65, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x73,
	0x70, 0x12, 0x36, 0x0a, 0x07, 0x53, 0x65, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x15, 0x2e, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x52,
	0x71, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x53,
	0x65, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x73, 0x70, 0x12, 0x3f, 0x0a, 0x0a, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x18, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x71, 0x73,
	0x74, 0x1a, 0x17, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x73, 0x70, 0x12, 0x3f, 0x0a, 0x0a, 0x43, 0x6c,
	0x65, 0x61, 0x72, 0x43, 0x61, 0x6c, 0x6c, 0x73, 0x12, 0x18, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x2e, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x43, 0x61, 0x6c, 0x6c, 0x73, 0x52, 0x71,
	0x73, 0x74, 0x1a, 0x17, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x43, 0x6c,
	0x65, 0x61, 0x72, 0x43, 0x61, 0x6c, 0x6c, 0x73, 0x52, 0x73, 0x70, 0x42, 0x3b, 0x5a, 0x39, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x6c, 0x6f, 0x62, 0x75, 0x6c,
	0x61, 0x72, 0x69, 0x6f, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x67, 0x6f,
	0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2f, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_resource_proto_rawDescOnce sync.Once
	file_resource_proto_rawDescData = file_resource_proto_rawDesc
)

func file_resource_proto_rawDescGZIP() []byte {
	file_resource_proto_rawDescOnce.Do(func() {
		file_resource_proto_rawDescData = protoimpl.X.CompressGZIP(file_resource_proto_rawDescData)
	})
	return file_resource_proto_rawDescData
}

var file_resource_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_resource_proto_msgTypes = make([]protoimpl.MessageInfo, 170)
var file_resource_proto_goTypes = []any{
	(PackageType)(0),                          // 0: resource.PackageType
	(PeerApprovalState)(0),                    // 1: resource.PeerApprovalState
	(NotificationType)(0),                     // 2: resource.NotificationType
	(SessionState)(0),                         // 3: resource.SessionState
	(*PackageBundle)(nil),                     // 4: resource.PackageBundle
	(*SetPackageBundleRequest)(nil),           // 5: resource.SetPackageBundleRequest
	(*SetPackageBundleResponse)(nil),          // 6: resource.SetPackageBundleResponse
	(*GetPackageBundleChecksumRequest)(nil),   // 7: resource.GetPackageBundleChecksumRequest
	(*GetPackageBundleChecksumResponse)(nil),  // 8: resource.GetPackageBundleChecksumResponse
	(*PackageDescriptor)(nil),                 // 9: resource.PackageDescriptor
	(*GetPackageDescriptorRequest)(nil),       // 10: resource.GetPackageDescriptorRequest
	(*GetPackageDescriptorResponse)(nil),      // 11: resource.GetPackageDescriptorResponse
	(*GetPackagesDescriptorRequest)(nil),      // 12: resource.GetPackagesDescriptorRequest
	(*GetPackagesDescriptorResponse)(nil),     // 13: resource.GetPackagesDescriptorResponse
	(*SetPackageDescriptorRequest)(nil),       // 14: resource.SetPackageDescriptorRequest
	(*SetPackageDescriptorResponse)(nil),      // 15: resource.SetPackageDescriptorResponse
	(*FindPackagesDescriptorRequest)(nil),     // 16: resource.FindPackagesDescriptorRequest
	(*FindPackagesDescriptorResponse)(nil),    // 17: resource.FindPackagesDescriptorResponse
	(*Role)(nil),                              // 18: resource.Role
	(*AddRoleActionsRqst)(nil),                // 19: resource.AddRoleActionsRqst
	(*AddRoleActionsRsp)(nil),                 // 20: resource.AddRoleActionsRsp
	(*RemoveRoleActionRqst)(nil),              // 21: resource.RemoveRoleActionRqst
	(*RemoveRoleActionRsp)(nil),               // 22: resource.RemoveRoleActionRsp
	(*RemoveRolesActionRqst)(nil),             // 23: resource.RemoveRolesActionRqst
	(*RemoveRolesActionRsp)(nil),              // 24: resource.RemoveRolesActionRsp
	(*Account)(nil),                           // 25: resource.Account
	(*RegisterAccountRqst)(nil),               // 26: resource.RegisterAccountRqst
	(*RegisterAccountRsp)(nil),                // 27: resource.RegisterAccountRsp
	(*AccountExistRqst)(nil),                  // 28: resource.AccountExistRqst
	(*AccountExistRsp)(nil),                   // 29: resource.AccountExistRsp
	(*GetAccountsRqst)(nil),                   // 30: resource.GetAccountsRqst
	(*GetAccountsRsp)(nil),                    // 31: resource.GetAccountsRsp
	(*GetAccountRqst)(nil),                    // 32: resource.GetAccountRqst
	(*GetAccountRsp)(nil),                     // 33: resource.GetAccountRsp
	(*SetAccountRqst)(nil),                    // 34: resource.SetAccountRqst
	(*SetAccountRsp)(nil),                     // 35: resource.SetAccountRsp
	(*SetAccountPasswordRqst)(nil),            // 36: resource.SetAccountPasswordRqst
	(*SetAccountPasswordRsp)(nil),             // 37: resource.SetAccountPasswordRsp
	(*SetEmailRequest)(nil),                   // 38: resource.SetEmailRequest
	(*SetEmailResponse)(nil),                  // 39: resource.SetEmailResponse
	(*DeleteAccountRqst)(nil),                 // 40: resource.DeleteAccountRqst
	(*DeleteAccountRsp)(nil),                  // 41: resource.DeleteAccountRsp
	(*AddAccountRoleRqst)(nil),                // 42: resource.AddAccountRoleRqst
	(*AddAccountRoleRsp)(nil),                 // 43: resource.AddAccountRoleRsp
	(*RemoveAccountRoleRqst)(nil),             // 44: resource.RemoveAccountRoleRqst
	(*RemoveAccountRoleRsp)(nil),              // 45: resource.RemoveAccountRoleRsp
	(*Contact)(nil),                           // 46: resource.Contact
	(*SetAccountContactRqst)(nil),             // 47: resource.SetAccountContactRqst
	(*SetAccountContactRsp)(nil),              // 48: resource.SetAccountContactRsp
	(*CreateRoleRqst)(nil),                    // 49: resource.CreateRoleRqst
	(*CreateRoleRsp)(nil),                     // 50: resource.CreateRoleRsp
	(*UpdateRoleRqst)(nil),                    // 51: resource.UpdateRoleRqst
	(*UpdateRoleRsp)(nil),                     // 52: resource.UpdateRoleRsp
	(*GetRolesRqst)(nil),                      // 53: resource.GetRolesRqst
	(*GetRolesRsp)(nil),                       // 54: resource.GetRolesRsp
	(*DeleteRoleRqst)(nil),                    // 55: resource.DeleteRoleRqst
	(*DeleteRoleRsp)(nil),                     // 56: resource.DeleteRoleRsp
	(*Application)(nil),                       // 57: resource.Application
	(*CreateApplicationRqst)(nil),             // 58: resource.CreateApplicationRqst
	(*CreateApplicationRsp)(nil),              // 59: resource.CreateApplicationRsp
	(*UpdateApplicationRqst)(nil),             // 60: resource.UpdateApplicationRqst
	(*UpdateApplicationRsp)(nil),              // 61: resource.UpdateApplicationRsp
	(*DeleteApplicationRqst)(nil),             // 62: resource.DeleteApplicationRqst
	(*DeleteApplicationRsp)(nil),              // 63: resource.DeleteApplicationRsp
	(*AddApplicationActionsRqst)(nil),         // 64: resource.AddApplicationActionsRqst
	(*AddApplicationActionsRsp)(nil),          // 65: resource.AddApplicationActionsRsp
	(*RemoveApplicationActionRqst)(nil),       // 66: resource.RemoveApplicationActionRqst
	(*RemoveApplicationActionRsp)(nil),        // 67: resource.RemoveApplicationActionRsp
	(*RemoveApplicationsActionRqst)(nil),      // 68: resource.RemoveApplicationsActionRqst
	(*RemoveApplicationsActionRsp)(nil),       // 69: resource.RemoveApplicationsActionRsp
	(*GetApplicationsRqst)(nil),               // 70: resource.GetApplicationsRqst
	(*GetApplicationsRsp)(nil),                // 71: resource.GetApplicationsRsp
	(*GetApplicationVersionRqst)(nil),         // 72: resource.GetApplicationVersionRqst
	(*GetApplicationVersionRsp)(nil),          // 73: resource.GetApplicationVersionRsp
	(*GetApplicationIconRqst)(nil),            // 74: resource.GetApplicationIconRqst
	(*GetApplicationIconRsp)(nil),             // 75: resource.GetApplicationIconRsp
	(*GetApplicationAliasRqst)(nil),           // 76: resource.GetApplicationAliasRqst
	(*GetApplicationAliasRsp)(nil),            // 77: resource.GetApplicationAliasRsp
	(*Group)(nil),                             // 78: resource.Group
	(*CreateGroupRqst)(nil),                   // 79: resource.CreateGroupRqst
	(*CreateGroupRsp)(nil),                    // 80: resource.CreateGroupRsp
	(*UpdateGroupRqst)(nil),                   // 81: resource.UpdateGroupRqst
	(*UpdateGroupRsp)(nil),                    // 82: resource.UpdateGroupRsp
	(*GetGroupsRqst)(nil),                     // 83: resource.GetGroupsRqst
	(*GetGroupsRsp)(nil),                      // 84: resource.GetGroupsRsp
	(*DeleteGroupRqst)(nil),                   // 85: resource.DeleteGroupRqst
	(*DeleteGroupRsp)(nil),                    // 86: resource.DeleteGroupRsp
	(*AddGroupMemberAccountRqst)(nil),         // 87: resource.AddGroupMemberAccountRqst
	(*AddGroupMemberAccountRsp)(nil),          // 88: resource.AddGroupMemberAccountRsp
	(*RemoveGroupMemberAccountRqst)(nil),      // 89: resource.RemoveGroupMemberAccountRqst
	(*RemoveGroupMemberAccountRsp)(nil),       // 90: resource.RemoveGroupMemberAccountRsp
	(*Organization)(nil),                      // 91: resource.Organization
	(*CreateOrganizationRqst)(nil),            // 92: resource.CreateOrganizationRqst
	(*CreateOrganizationRsp)(nil),             // 93: resource.CreateOrganizationRsp
	(*UpdateOrganizationRqst)(nil),            // 94: resource.UpdateOrganizationRqst
	(*UpdateOrganizationRsp)(nil),             // 95: resource.UpdateOrganizationRsp
	(*GetOrganizationsRqst)(nil),              // 96: resource.GetOrganizationsRqst
	(*GetOrganizationsRsp)(nil),               // 97: resource.GetOrganizationsRsp
	(*AddOrganizationAccountRqst)(nil),        // 98: resource.AddOrganizationAccountRqst
	(*AddOrganizationAccountRsp)(nil),         // 99: resource.AddOrganizationAccountRsp
	(*AddOrganizationGroupRqst)(nil),          // 100: resource.AddOrganizationGroupRqst
	(*AddOrganizationGroupRsp)(nil),           // 101: resource.AddOrganizationGroupRsp
	(*AddOrganizationRoleRqst)(nil),           // 102: resource.AddOrganizationRoleRqst
	(*AddOrganizationRoleRsp)(nil),            // 103: resource.AddOrganizationRoleRsp
	(*AddOrganizationApplicationRqst)(nil),    // 104: resource.AddOrganizationApplicationRqst
	(*AddOrganizationApplicationRsp)(nil),     // 105: resource.AddOrganizationApplicationRsp
	(*RemoveOrganizationGroupRqst)(nil),       // 106: resource.RemoveOrganizationGroupRqst
	(*RemoveOrganizationGroupRsp)(nil),        // 107: resource.RemoveOrganizationGroupRsp
	(*RemoveOrganizationRoleRqst)(nil),        // 108: resource.RemoveOrganizationRoleRqst
	(*RemoveOrganizationRoleRsp)(nil),         // 109: resource.RemoveOrganizationRoleRsp
	(*RemoveOrganizationApplicationRqst)(nil), // 110: resource.RemoveOrganizationApplicationRqst
	(*RemoveOrganizationApplicationRsp)(nil),  // 111: resource.RemoveOrganizationApplicationRsp
	(*RemoveOrganizationAccountRqst)(nil),     // 112: resource.RemoveOrganizationAccountRqst
	(*RemoveOrganizationAccountRsp)(nil),      // 113: resource.RemoveOrganizationAccountRsp
	(*IsOrgnanizationMemberRqst)(nil),         // 114: resource.IsOrgnanizationMemberRqst
	(*IsOrgnanizationMemberRsp)(nil),          // 115: resource.IsOrgnanizationMemberRsp
	(*DeleteOrganizationRqst)(nil),            // 116: resource.DeleteOrganizationRqst
	(*DeleteOrganizationRsp)(nil),             // 117: resource.DeleteOrganizationRsp
	(*Peer)(nil),                              // 118: resource.Peer
	(*GetPeerApprovalStateRqst)(nil),          // 119: resource.GetPeerApprovalStateRqst
	(*GetPeerApprovalStateRsp)(nil),           // 120: resource.GetPeerApprovalStateRsp
	(*GetPeerPublicKeyRqst)(nil),              // 121: resource.GetPeerPublicKeyRqst
	(*GetPeerPublicKeyRsp)(nil),               // 122: resource.GetPeerPublicKeyRsp
	(*RegisterPeerRqst)(nil),                  // 123: resource.RegisterPeerRqst
	(*RegisterPeerRsp)(nil),                   // 124: resource.RegisterPeerRsp
	(*UpdatePeerRqst)(nil),                    // 125: resource.UpdatePeerRqst
	(*UpdatePeerRsp)(nil),                     // 126: resource.UpdatePeerRsp
	(*GetPeersRqst)(nil),                      // 127: resource.GetPeersRqst
	(*GetPeersRsp)(nil),                       // 128: resource.GetPeersRsp
	(*DeletePeerRqst)(nil),                    // 129: resource.DeletePeerRqst
	(*DeletePeerRsp)(nil),                     // 130: resource.DeletePeerRsp
	(*AddPeerActionsRqst)(nil),                // 131: resource.AddPeerActionsRqst
	(*AddPeerActionsRsp)(nil),                 // 132: resource.AddPeerActionsRsp
	(*RemovePeerActionRqst)(nil),              // 133: resource.RemovePeerActionRqst
	(*RemovePeerActionRsp)(nil),               // 134: resource.RemovePeerActionRsp
	(*RemovePeersActionRqst)(nil),             // 135: resource.RemovePeersActionRqst
	(*RemovePeersActionRsp)(nil),              // 136: resource.RemovePeersActionRsp
	(*AcceptPeerRqst)(nil),                    // 137: resource.AcceptPeerRqst
	(*AcceptPeerRsp)(nil),                     // 138: resource.AcceptPeerRsp
	(*RejectPeerRqst)(nil),                    // 139: resource.RejectPeerRqst
	(*RejectPeerRsp)(nil),                     // 140: resource.RejectPeerRsp
	(*Call)(nil),                              // 141: resource.Call
	(*GetCallHistoryRqst)(nil),                // 142: resource.GetCallHistoryRqst
	(*GetCallHistoryRsp)(nil),                 // 143: resource.GetCallHistoryRsp
	(*SetCallRqst)(nil),                       // 144: resource.SetCallRqst
	(*SetCallRsp)(nil),                        // 145: resource.SetCallRsp
	(*DeleteCallRqst)(nil),                    // 146: resource.DeleteCallRqst
	(*DeleteCallRsp)(nil),                     // 147: resource.DeleteCallRsp
	(*ClearCallsRqst)(nil),                    // 148: resource.ClearCallsRqst
	(*ClearCallsRsp)(nil),                     // 149: resource.ClearCallsRsp
	(*Notification)(nil),                      // 150: resource.Notification
	(*CreateNotificationRqst)(nil),            // 151: resource.CreateNotificationRqst
	(*CreateNotificationRsp)(nil),             // 152: resource.CreateNotificationRsp
	(*GetNotificationsRqst)(nil),              // 153: resource.GetNotificationsRqst
	(*GetNotificationsRsp)(nil),               // 154: resource.GetNotificationsRsp
	(*DeleteNotificationRqst)(nil),            // 155: resource.DeleteNotificationRqst
	(*DeleteNotificationRsp)(nil),             // 156: resource.DeleteNotificationRsp
	(*ClearAllNotificationsRqst)(nil),         // 157: resource.ClearAllNotificationsRqst
	(*ClearAllNotificationsRsp)(nil),          // 158: resource.ClearAllNotificationsRsp
	(*ClearNotificationsByTypeRqst)(nil),      // 159: resource.ClearNotificationsByTypeRqst
	(*ClearNotificationsByTypeRsp)(nil),       // 160: resource.ClearNotificationsByTypeRsp
	(*Session)(nil),                           // 161: resource.Session
	(*UpdateSessionRequest)(nil),              // 162: resource.UpdateSessionRequest
	(*UpdateSessionResponse)(nil),             // 163: resource.UpdateSessionResponse
	(*RemoveSessionRequest)(nil),              // 164: resource.RemoveSessionRequest
	(*RemoveSessionResponse)(nil),             // 165: resource.RemoveSessionResponse
	(*GetSessionsRequest)(nil),                // 166: resource.GetSessionsRequest
	(*GetSessionsResponse)(nil),               // 167: resource.GetSessionsResponse
	(*GetSessionRequest)(nil),                 // 168: resource.GetSessionRequest
	(*GetSessionResponse)(nil),                // 169: resource.GetSessionResponse
	(*CreateReferenceRqst)(nil),               // 170: resource.CreateReferenceRqst
	(*CreateReferenceRsp)(nil),                // 171: resource.CreateReferenceRsp
	(*DeleteReferenceRqst)(nil),               // 172: resource.DeleteReferenceRqst
	(*DeleteReferenceRsp)(nil),                // 173: resource.DeleteReferenceRsp
}
var file_resource_proto_depIdxs = []int32{
	9,   // 0: resource.PackageBundle.packageDescriptor:type_name -> resource.PackageDescriptor
	4,   // 1: resource.SetPackageBundleRequest.bundle:type_name -> resource.PackageBundle
	0,   // 2: resource.PackageDescriptor.type:type_name -> resource.PackageType
	18,  // 3: resource.PackageDescriptor.roles:type_name -> resource.Role
	78,  // 4: resource.PackageDescriptor.groups:type_name -> resource.Group
	9,   // 5: resource.GetPackageDescriptorResponse.results:type_name -> resource.PackageDescriptor
	9,   // 6: resource.GetPackagesDescriptorResponse.results:type_name -> resource.PackageDescriptor
	9,   // 7: resource.SetPackageDescriptorRequest.packageDescriptor:type_name -> resource.PackageDescriptor
	9,   // 8: resource.FindPackagesDescriptorResponse.results:type_name -> resource.PackageDescriptor
	25,  // 9: resource.RegisterAccountRqst.account:type_name -> resource.Account
	25,  // 10: resource.GetAccountsRsp.accounts:type_name -> resource.Account
	25,  // 11: resource.GetAccountRsp.account:type_name -> resource.Account
	25,  // 12: resource.SetAccountRqst.account:type_name -> resource.Account
	46,  // 13: resource.SetAccountContactRqst.contact:type_name -> resource.Contact
	18,  // 14: resource.CreateRoleRqst.role:type_name -> resource.Role
	18,  // 15: resource.GetRolesRsp.roles:type_name -> resource.Role
	57,  // 16: resource.CreateApplicationRqst.application:type_name -> resource.Application
	57,  // 17: resource.GetApplicationsRsp.applications:type_name -> resource.Application
	78,  // 18: resource.CreateGroupRqst.group:type_name -> resource.Group
	78,  // 19: resource.GetGroupsRsp.groups:type_name -> resource.Group
	91,  // 20: resource.CreateOrganizationRqst.organization:type_name -> resource.Organization
	91,  // 21: resource.GetOrganizationsRsp.organizations:type_name -> resource.Organization
	1,   // 22: resource.Peer.state:type_name -> resource.PeerApprovalState
	1,   // 23: resource.GetPeerApprovalStateRsp.state:type_name -> resource.PeerApprovalState
	118, // 24: resource.RegisterPeerRqst.peer:type_name -> resource.Peer
	118, // 25: resource.RegisterPeerRsp.peer:type_name -> resource.Peer
	118, // 26: resource.UpdatePeerRqst.peer:type_name -> resource.Peer
	118, // 27: resource.GetPeersRsp.peers:type_name -> resource.Peer
	118, // 28: resource.DeletePeerRqst.peer:type_name -> resource.Peer
	118, // 29: resource.AcceptPeerRqst.peer:type_name -> resource.Peer
	118, // 30: resource.RejectPeerRqst.peer:type_name -> resource.Peer
	141, // 31: resource.GetCallHistoryRsp.calls:type_name -> resource.Call
	141, // 32: resource.SetCallRqst.call:type_name -> resource.Call
	2,   // 33: resource.Notification.notification_type:type_name -> resource.NotificationType
	150, // 34: resource.CreateNotificationRqst.notification:type_name -> resource.Notification
	150, // 35: resource.GetNotificationsRsp.notifications:type_name -> resource.Notification
	2,   // 36: resource.ClearNotificationsByTypeRqst.notification_type:type_name -> resource.NotificationType
	3,   // 37: resource.Session.state:type_name -> resource.SessionState
	161, // 38: resource.UpdateSessionRequest.session:type_name -> resource.Session
	161, // 39: resource.GetSessionsResponse.sessions:type_name -> resource.Session
	161, // 40: resource.GetSessionResponse.session:type_name -> resource.Session
	170, // 41: resource.ResourceService.CreateReference:input_type -> resource.CreateReferenceRqst
	172, // 42: resource.ResourceService.DeleteReference:input_type -> resource.DeleteReferenceRqst
	92,  // 43: resource.ResourceService.CreateOrganization:input_type -> resource.CreateOrganizationRqst
	94,  // 44: resource.ResourceService.UpdateOrganization:input_type -> resource.UpdateOrganizationRqst
	96,  // 45: resource.ResourceService.GetOrganizations:input_type -> resource.GetOrganizationsRqst
	116, // 46: resource.ResourceService.DeleteOrganization:input_type -> resource.DeleteOrganizationRqst
	98,  // 47: resource.ResourceService.AddOrganizationAccount:input_type -> resource.AddOrganizationAccountRqst
	100, // 48: resource.ResourceService.AddOrganizationGroup:input_type -> resource.AddOrganizationGroupRqst
	102, // 49: resource.ResourceService.AddOrganizationRole:input_type -> resource.AddOrganizationRoleRqst
	104, // 50: resource.ResourceService.AddOrganizationApplication:input_type -> resource.AddOrganizationApplicationRqst
	112, // 51: resource.ResourceService.RemoveOrganizationAccount:input_type -> resource.RemoveOrganizationAccountRqst
	106, // 52: resource.ResourceService.RemoveOrganizationGroup:input_type -> resource.RemoveOrganizationGroupRqst
	108, // 53: resource.ResourceService.RemoveOrganizationRole:input_type -> resource.RemoveOrganizationRoleRqst
	110, // 54: resource.ResourceService.RemoveOrganizationApplication:input_type -> resource.RemoveOrganizationApplicationRqst
	79,  // 55: resource.ResourceService.CreateGroup:input_type -> resource.CreateGroupRqst
	81,  // 56: resource.ResourceService.UpdateGroup:input_type -> resource.UpdateGroupRqst
	83,  // 57: resource.ResourceService.GetGroups:input_type -> resource.GetGroupsRqst
	85,  // 58: resource.ResourceService.DeleteGroup:input_type -> resource.DeleteGroupRqst
	87,  // 59: resource.ResourceService.AddGroupMemberAccount:input_type -> resource.AddGroupMemberAccountRqst
	89,  // 60: resource.ResourceService.RemoveGroupMemberAccount:input_type -> resource.RemoveGroupMemberAccountRqst
	26,  // 61: resource.ResourceService.RegisterAccount:input_type -> resource.RegisterAccountRqst
	40,  // 62: resource.ResourceService.DeleteAccount:input_type -> resource.DeleteAccountRqst
	32,  // 63: resource.ResourceService.GetAccount:input_type -> resource.GetAccountRqst
	34,  // 64: resource.ResourceService.SetAccount:input_type -> resource.SetAccountRqst
	36,  // 65: resource.ResourceService.SetAccountPassword:input_type -> resource.SetAccountPasswordRqst
	30,  // 66: resource.ResourceService.GetAccounts:input_type -> resource.GetAccountsRqst
	42,  // 67: resource.ResourceService.AddAccountRole:input_type -> resource.AddAccountRoleRqst
	44,  // 68: resource.ResourceService.RemoveAccountRole:input_type -> resource.RemoveAccountRoleRqst
	47,  // 69: resource.ResourceService.SetAccountContact:input_type -> resource.SetAccountContactRqst
	38,  // 70: resource.ResourceService.SetEmail:input_type -> resource.SetEmailRequest
	114, // 71: resource.ResourceService.IsOrgnanizationMember:input_type -> resource.IsOrgnanizationMemberRqst
	49,  // 72: resource.ResourceService.CreateRole:input_type -> resource.CreateRoleRqst
	51,  // 73: resource.ResourceService.UpdateRole:input_type -> resource.UpdateRoleRqst
	53,  // 74: resource.ResourceService.GetRoles:input_type -> resource.GetRolesRqst
	55,  // 75: resource.ResourceService.DeleteRole:input_type -> resource.DeleteRoleRqst
	19,  // 76: resource.ResourceService.AddRoleActions:input_type -> resource.AddRoleActionsRqst
	21,  // 77: resource.ResourceService.RemoveRoleAction:input_type -> resource.RemoveRoleActionRqst
	23,  // 78: resource.ResourceService.RemoveRolesAction:input_type -> resource.RemoveRolesActionRqst
	58,  // 79: resource.ResourceService.CreateApplication:input_type -> resource.CreateApplicationRqst
	60,  // 80: resource.ResourceService.UpdateApplication:input_type -> resource.UpdateApplicationRqst
	70,  // 81: resource.ResourceService.GetApplications:input_type -> resource.GetApplicationsRqst
	62,  // 82: resource.ResourceService.DeleteApplication:input_type -> resource.DeleteApplicationRqst
	64,  // 83: resource.ResourceService.AddApplicationActions:input_type -> resource.AddApplicationActionsRqst
	66,  // 84: resource.ResourceService.RemoveApplicationAction:input_type -> resource.RemoveApplicationActionRqst
	68,  // 85: resource.ResourceService.RemoveApplicationsAction:input_type -> resource.RemoveApplicationsActionRqst
	72,  // 86: resource.ResourceService.GetApplicationVersion:input_type -> resource.GetApplicationVersionRqst
	76,  // 87: resource.ResourceService.GetApplicationAlias:input_type -> resource.GetApplicationAliasRqst
	74,  // 88: resource.ResourceService.GetApplicationIcon:input_type -> resource.GetApplicationIconRqst
	123, // 89: resource.ResourceService.RegisterPeer:input_type -> resource.RegisterPeerRqst
	127, // 90: resource.ResourceService.GetPeers:input_type -> resource.GetPeersRqst
	119, // 91: resource.ResourceService.GetPeerApprovalState:input_type -> resource.GetPeerApprovalStateRqst
	129, // 92: resource.ResourceService.DeletePeer:input_type -> resource.DeletePeerRqst
	125, // 93: resource.ResourceService.UpdatePeer:input_type -> resource.UpdatePeerRqst
	131, // 94: resource.ResourceService.AddPeerActions:input_type -> resource.AddPeerActionsRqst
	133, // 95: resource.ResourceService.RemovePeerAction:input_type -> resource.RemovePeerActionRqst
	135, // 96: resource.ResourceService.RemovePeersAction:input_type -> resource.RemovePeersActionRqst
	137, // 97: resource.ResourceService.AcceptPeer:input_type -> resource.AcceptPeerRqst
	139, // 98: resource.ResourceService.RejectPeer:input_type -> resource.RejectPeerRqst
	121, // 99: resource.ResourceService.GetPeerPublicKey:input_type -> resource.GetPeerPublicKeyRqst
	151, // 100: resource.ResourceService.CreateNotification:input_type -> resource.CreateNotificationRqst
	153, // 101: resource.ResourceService.GetNotifications:input_type -> resource.GetNotificationsRqst
	155, // 102: resource.ResourceService.DeleteNotification:input_type -> resource.DeleteNotificationRqst
	157, // 103: resource.ResourceService.ClearAllNotifications:input_type -> resource.ClearAllNotificationsRqst
	159, // 104: resource.ResourceService.ClearNotificationsByType:input_type -> resource.ClearNotificationsByTypeRqst
	16,  // 105: resource.ResourceService.FindPackages:input_type -> resource.FindPackagesDescriptorRequest
	10,  // 106: resource.ResourceService.GetPackageDescriptor:input_type -> resource.GetPackageDescriptorRequest
	12,  // 107: resource.ResourceService.GetPackagesDescriptor:input_type -> resource.GetPackagesDescriptorRequest
	14,  // 108: resource.ResourceService.SetPackageDescriptor:input_type -> resource.SetPackageDescriptorRequest
	5,   // 109: resource.ResourceService.SetPackageBundle:input_type -> resource.SetPackageBundleRequest
	7,   // 110: resource.ResourceService.GetPackageBundleChecksum:input_type -> resource.GetPackageBundleChecksumRequest
	162, // 111: resource.ResourceService.UpdateSession:input_type -> resource.UpdateSessionRequest
	166, // 112: resource.ResourceService.GetSessions:input_type -> resource.GetSessionsRequest
	164, // 113: resource.ResourceService.RemoveSession:input_type -> resource.RemoveSessionRequest
	168, // 114: resource.ResourceService.GetSession:input_type -> resource.GetSessionRequest
	142, // 115: resource.ResourceService.GetCallHistory:input_type -> resource.GetCallHistoryRqst
	144, // 116: resource.ResourceService.SetCall:input_type -> resource.SetCallRqst
	146, // 117: resource.ResourceService.DeleteCall:input_type -> resource.DeleteCallRqst
	148, // 118: resource.ResourceService.ClearCalls:input_type -> resource.ClearCallsRqst
	171, // 119: resource.ResourceService.CreateReference:output_type -> resource.CreateReferenceRsp
	173, // 120: resource.ResourceService.DeleteReference:output_type -> resource.DeleteReferenceRsp
	93,  // 121: resource.ResourceService.CreateOrganization:output_type -> resource.CreateOrganizationRsp
	95,  // 122: resource.ResourceService.UpdateOrganization:output_type -> resource.UpdateOrganizationRsp
	97,  // 123: resource.ResourceService.GetOrganizations:output_type -> resource.GetOrganizationsRsp
	117, // 124: resource.ResourceService.DeleteOrganization:output_type -> resource.DeleteOrganizationRsp
	99,  // 125: resource.ResourceService.AddOrganizationAccount:output_type -> resource.AddOrganizationAccountRsp
	101, // 126: resource.ResourceService.AddOrganizationGroup:output_type -> resource.AddOrganizationGroupRsp
	103, // 127: resource.ResourceService.AddOrganizationRole:output_type -> resource.AddOrganizationRoleRsp
	105, // 128: resource.ResourceService.AddOrganizationApplication:output_type -> resource.AddOrganizationApplicationRsp
	113, // 129: resource.ResourceService.RemoveOrganizationAccount:output_type -> resource.RemoveOrganizationAccountRsp
	107, // 130: resource.ResourceService.RemoveOrganizationGroup:output_type -> resource.RemoveOrganizationGroupRsp
	109, // 131: resource.ResourceService.RemoveOrganizationRole:output_type -> resource.RemoveOrganizationRoleRsp
	111, // 132: resource.ResourceService.RemoveOrganizationApplication:output_type -> resource.RemoveOrganizationApplicationRsp
	80,  // 133: resource.ResourceService.CreateGroup:output_type -> resource.CreateGroupRsp
	82,  // 134: resource.ResourceService.UpdateGroup:output_type -> resource.UpdateGroupRsp
	84,  // 135: resource.ResourceService.GetGroups:output_type -> resource.GetGroupsRsp
	86,  // 136: resource.ResourceService.DeleteGroup:output_type -> resource.DeleteGroupRsp
	88,  // 137: resource.ResourceService.AddGroupMemberAccount:output_type -> resource.AddGroupMemberAccountRsp
	90,  // 138: resource.ResourceService.RemoveGroupMemberAccount:output_type -> resource.RemoveGroupMemberAccountRsp
	27,  // 139: resource.ResourceService.RegisterAccount:output_type -> resource.RegisterAccountRsp
	41,  // 140: resource.ResourceService.DeleteAccount:output_type -> resource.DeleteAccountRsp
	33,  // 141: resource.ResourceService.GetAccount:output_type -> resource.GetAccountRsp
	35,  // 142: resource.ResourceService.SetAccount:output_type -> resource.SetAccountRsp
	37,  // 143: resource.ResourceService.SetAccountPassword:output_type -> resource.SetAccountPasswordRsp
	31,  // 144: resource.ResourceService.GetAccounts:output_type -> resource.GetAccountsRsp
	43,  // 145: resource.ResourceService.AddAccountRole:output_type -> resource.AddAccountRoleRsp
	45,  // 146: resource.ResourceService.RemoveAccountRole:output_type -> resource.RemoveAccountRoleRsp
	48,  // 147: resource.ResourceService.SetAccountContact:output_type -> resource.SetAccountContactRsp
	39,  // 148: resource.ResourceService.SetEmail:output_type -> resource.SetEmailResponse
	115, // 149: resource.ResourceService.IsOrgnanizationMember:output_type -> resource.IsOrgnanizationMemberRsp
	50,  // 150: resource.ResourceService.CreateRole:output_type -> resource.CreateRoleRsp
	52,  // 151: resource.ResourceService.UpdateRole:output_type -> resource.UpdateRoleRsp
	54,  // 152: resource.ResourceService.GetRoles:output_type -> resource.GetRolesRsp
	56,  // 153: resource.ResourceService.DeleteRole:output_type -> resource.DeleteRoleRsp
	20,  // 154: resource.ResourceService.AddRoleActions:output_type -> resource.AddRoleActionsRsp
	22,  // 155: resource.ResourceService.RemoveRoleAction:output_type -> resource.RemoveRoleActionRsp
	24,  // 156: resource.ResourceService.RemoveRolesAction:output_type -> resource.RemoveRolesActionRsp
	59,  // 157: resource.ResourceService.CreateApplication:output_type -> resource.CreateApplicationRsp
	61,  // 158: resource.ResourceService.UpdateApplication:output_type -> resource.UpdateApplicationRsp
	71,  // 159: resource.ResourceService.GetApplications:output_type -> resource.GetApplicationsRsp
	63,  // 160: resource.ResourceService.DeleteApplication:output_type -> resource.DeleteApplicationRsp
	65,  // 161: resource.ResourceService.AddApplicationActions:output_type -> resource.AddApplicationActionsRsp
	67,  // 162: resource.ResourceService.RemoveApplicationAction:output_type -> resource.RemoveApplicationActionRsp
	69,  // 163: resource.ResourceService.RemoveApplicationsAction:output_type -> resource.RemoveApplicationsActionRsp
	73,  // 164: resource.ResourceService.GetApplicationVersion:output_type -> resource.GetApplicationVersionRsp
	77,  // 165: resource.ResourceService.GetApplicationAlias:output_type -> resource.GetApplicationAliasRsp
	75,  // 166: resource.ResourceService.GetApplicationIcon:output_type -> resource.GetApplicationIconRsp
	124, // 167: resource.ResourceService.RegisterPeer:output_type -> resource.RegisterPeerRsp
	128, // 168: resource.ResourceService.GetPeers:output_type -> resource.GetPeersRsp
	120, // 169: resource.ResourceService.GetPeerApprovalState:output_type -> resource.GetPeerApprovalStateRsp
	130, // 170: resource.ResourceService.DeletePeer:output_type -> resource.DeletePeerRsp
	126, // 171: resource.ResourceService.UpdatePeer:output_type -> resource.UpdatePeerRsp
	132, // 172: resource.ResourceService.AddPeerActions:output_type -> resource.AddPeerActionsRsp
	134, // 173: resource.ResourceService.RemovePeerAction:output_type -> resource.RemovePeerActionRsp
	136, // 174: resource.ResourceService.RemovePeersAction:output_type -> resource.RemovePeersActionRsp
	138, // 175: resource.ResourceService.AcceptPeer:output_type -> resource.AcceptPeerRsp
	140, // 176: resource.ResourceService.RejectPeer:output_type -> resource.RejectPeerRsp
	122, // 177: resource.ResourceService.GetPeerPublicKey:output_type -> resource.GetPeerPublicKeyRsp
	152, // 178: resource.ResourceService.CreateNotification:output_type -> resource.CreateNotificationRsp
	154, // 179: resource.ResourceService.GetNotifications:output_type -> resource.GetNotificationsRsp
	156, // 180: resource.ResourceService.DeleteNotification:output_type -> resource.DeleteNotificationRsp
	158, // 181: resource.ResourceService.ClearAllNotifications:output_type -> resource.ClearAllNotificationsRsp
	160, // 182: resource.ResourceService.ClearNotificationsByType:output_type -> resource.ClearNotificationsByTypeRsp
	17,  // 183: resource.ResourceService.FindPackages:output_type -> resource.FindPackagesDescriptorResponse
	11,  // 184: resource.ResourceService.GetPackageDescriptor:output_type -> resource.GetPackageDescriptorResponse
	13,  // 185: resource.ResourceService.GetPackagesDescriptor:output_type -> resource.GetPackagesDescriptorResponse
	15,  // 186: resource.ResourceService.SetPackageDescriptor:output_type -> resource.SetPackageDescriptorResponse
	6,   // 187: resource.ResourceService.SetPackageBundle:output_type -> resource.SetPackageBundleResponse
	8,   // 188: resource.ResourceService.GetPackageBundleChecksum:output_type -> resource.GetPackageBundleChecksumResponse
	163, // 189: resource.ResourceService.UpdateSession:output_type -> resource.UpdateSessionResponse
	167, // 190: resource.ResourceService.GetSessions:output_type -> resource.GetSessionsResponse
	165, // 191: resource.ResourceService.RemoveSession:output_type -> resource.RemoveSessionResponse
	169, // 192: resource.ResourceService.GetSession:output_type -> resource.GetSessionResponse
	143, // 193: resource.ResourceService.GetCallHistory:output_type -> resource.GetCallHistoryRsp
	145, // 194: resource.ResourceService.SetCall:output_type -> resource.SetCallRsp
	147, // 195: resource.ResourceService.DeleteCall:output_type -> resource.DeleteCallRsp
	149, // 196: resource.ResourceService.ClearCalls:output_type -> resource.ClearCallsRsp
	119, // [119:197] is the sub-list for method output_type
	41,  // [41:119] is the sub-list for method input_type
	41,  // [41:41] is the sub-list for extension type_name
	41,  // [41:41] is the sub-list for extension extendee
	0,   // [0:41] is the sub-list for field type_name
}

func init() { file_resource_proto_init() }
func file_resource_proto_init() {
	if File_resource_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_resource_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*PackageBundle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*SetPackageBundleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*SetPackageBundleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*GetPackageBundleChecksumRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*GetPackageBundleChecksumResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*PackageDescriptor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*GetPackageDescriptorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*GetPackageDescriptorResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*GetPackagesDescriptorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*GetPackagesDescriptorResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*SetPackageDescriptorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*SetPackageDescriptorResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*FindPackagesDescriptorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*FindPackagesDescriptorResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*Role); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*AddRoleActionsRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*AddRoleActionsRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*RemoveRoleActionRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*RemoveRoleActionRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*RemoveRolesActionRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*RemoveRolesActionRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*Account); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*RegisterAccountRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*RegisterAccountRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*AccountExistRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*AccountExistRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[26].Exporter = func(v any, i int) any {
			switch v := v.(*GetAccountsRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[27].Exporter = func(v any, i int) any {
			switch v := v.(*GetAccountsRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[28].Exporter = func(v any, i int) any {
			switch v := v.(*GetAccountRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[29].Exporter = func(v any, i int) any {
			switch v := v.(*GetAccountRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[30].Exporter = func(v any, i int) any {
			switch v := v.(*SetAccountRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[31].Exporter = func(v any, i int) any {
			switch v := v.(*SetAccountRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[32].Exporter = func(v any, i int) any {
			switch v := v.(*SetAccountPasswordRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[33].Exporter = func(v any, i int) any {
			switch v := v.(*SetAccountPasswordRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[34].Exporter = func(v any, i int) any {
			switch v := v.(*SetEmailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[35].Exporter = func(v any, i int) any {
			switch v := v.(*SetEmailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[36].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteAccountRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[37].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteAccountRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[38].Exporter = func(v any, i int) any {
			switch v := v.(*AddAccountRoleRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[39].Exporter = func(v any, i int) any {
			switch v := v.(*AddAccountRoleRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[40].Exporter = func(v any, i int) any {
			switch v := v.(*RemoveAccountRoleRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[41].Exporter = func(v any, i int) any {
			switch v := v.(*RemoveAccountRoleRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[42].Exporter = func(v any, i int) any {
			switch v := v.(*Contact); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[43].Exporter = func(v any, i int) any {
			switch v := v.(*SetAccountContactRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[44].Exporter = func(v any, i int) any {
			switch v := v.(*SetAccountContactRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[45].Exporter = func(v any, i int) any {
			switch v := v.(*CreateRoleRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[46].Exporter = func(v any, i int) any {
			switch v := v.(*CreateRoleRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[47].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateRoleRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[48].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateRoleRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[49].Exporter = func(v any, i int) any {
			switch v := v.(*GetRolesRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[50].Exporter = func(v any, i int) any {
			switch v := v.(*GetRolesRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[51].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteRoleRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[52].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteRoleRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[53].Exporter = func(v any, i int) any {
			switch v := v.(*Application); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[54].Exporter = func(v any, i int) any {
			switch v := v.(*CreateApplicationRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[55].Exporter = func(v any, i int) any {
			switch v := v.(*CreateApplicationRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[56].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateApplicationRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[57].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateApplicationRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[58].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteApplicationRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[59].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteApplicationRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[60].Exporter = func(v any, i int) any {
			switch v := v.(*AddApplicationActionsRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[61].Exporter = func(v any, i int) any {
			switch v := v.(*AddApplicationActionsRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[62].Exporter = func(v any, i int) any {
			switch v := v.(*RemoveApplicationActionRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[63].Exporter = func(v any, i int) any {
			switch v := v.(*RemoveApplicationActionRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[64].Exporter = func(v any, i int) any {
			switch v := v.(*RemoveApplicationsActionRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[65].Exporter = func(v any, i int) any {
			switch v := v.(*RemoveApplicationsActionRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[66].Exporter = func(v any, i int) any {
			switch v := v.(*GetApplicationsRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[67].Exporter = func(v any, i int) any {
			switch v := v.(*GetApplicationsRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[68].Exporter = func(v any, i int) any {
			switch v := v.(*GetApplicationVersionRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[69].Exporter = func(v any, i int) any {
			switch v := v.(*GetApplicationVersionRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[70].Exporter = func(v any, i int) any {
			switch v := v.(*GetApplicationIconRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[71].Exporter = func(v any, i int) any {
			switch v := v.(*GetApplicationIconRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[72].Exporter = func(v any, i int) any {
			switch v := v.(*GetApplicationAliasRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[73].Exporter = func(v any, i int) any {
			switch v := v.(*GetApplicationAliasRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[74].Exporter = func(v any, i int) any {
			switch v := v.(*Group); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[75].Exporter = func(v any, i int) any {
			switch v := v.(*CreateGroupRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[76].Exporter = func(v any, i int) any {
			switch v := v.(*CreateGroupRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[77].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateGroupRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[78].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateGroupRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[79].Exporter = func(v any, i int) any {
			switch v := v.(*GetGroupsRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[80].Exporter = func(v any, i int) any {
			switch v := v.(*GetGroupsRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[81].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteGroupRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[82].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteGroupRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[83].Exporter = func(v any, i int) any {
			switch v := v.(*AddGroupMemberAccountRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[84].Exporter = func(v any, i int) any {
			switch v := v.(*AddGroupMemberAccountRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[85].Exporter = func(v any, i int) any {
			switch v := v.(*RemoveGroupMemberAccountRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[86].Exporter = func(v any, i int) any {
			switch v := v.(*RemoveGroupMemberAccountRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[87].Exporter = func(v any, i int) any {
			switch v := v.(*Organization); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[88].Exporter = func(v any, i int) any {
			switch v := v.(*CreateOrganizationRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[89].Exporter = func(v any, i int) any {
			switch v := v.(*CreateOrganizationRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[90].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateOrganizationRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[91].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateOrganizationRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[92].Exporter = func(v any, i int) any {
			switch v := v.(*GetOrganizationsRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[93].Exporter = func(v any, i int) any {
			switch v := v.(*GetOrganizationsRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[94].Exporter = func(v any, i int) any {
			switch v := v.(*AddOrganizationAccountRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[95].Exporter = func(v any, i int) any {
			switch v := v.(*AddOrganizationAccountRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[96].Exporter = func(v any, i int) any {
			switch v := v.(*AddOrganizationGroupRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[97].Exporter = func(v any, i int) any {
			switch v := v.(*AddOrganizationGroupRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[98].Exporter = func(v any, i int) any {
			switch v := v.(*AddOrganizationRoleRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[99].Exporter = func(v any, i int) any {
			switch v := v.(*AddOrganizationRoleRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[100].Exporter = func(v any, i int) any {
			switch v := v.(*AddOrganizationApplicationRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[101].Exporter = func(v any, i int) any {
			switch v := v.(*AddOrganizationApplicationRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[102].Exporter = func(v any, i int) any {
			switch v := v.(*RemoveOrganizationGroupRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[103].Exporter = func(v any, i int) any {
			switch v := v.(*RemoveOrganizationGroupRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[104].Exporter = func(v any, i int) any {
			switch v := v.(*RemoveOrganizationRoleRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[105].Exporter = func(v any, i int) any {
			switch v := v.(*RemoveOrganizationRoleRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[106].Exporter = func(v any, i int) any {
			switch v := v.(*RemoveOrganizationApplicationRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[107].Exporter = func(v any, i int) any {
			switch v := v.(*RemoveOrganizationApplicationRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[108].Exporter = func(v any, i int) any {
			switch v := v.(*RemoveOrganizationAccountRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[109].Exporter = func(v any, i int) any {
			switch v := v.(*RemoveOrganizationAccountRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[110].Exporter = func(v any, i int) any {
			switch v := v.(*IsOrgnanizationMemberRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[111].Exporter = func(v any, i int) any {
			switch v := v.(*IsOrgnanizationMemberRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[112].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteOrganizationRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[113].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteOrganizationRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[114].Exporter = func(v any, i int) any {
			switch v := v.(*Peer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[115].Exporter = func(v any, i int) any {
			switch v := v.(*GetPeerApprovalStateRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[116].Exporter = func(v any, i int) any {
			switch v := v.(*GetPeerApprovalStateRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[117].Exporter = func(v any, i int) any {
			switch v := v.(*GetPeerPublicKeyRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[118].Exporter = func(v any, i int) any {
			switch v := v.(*GetPeerPublicKeyRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[119].Exporter = func(v any, i int) any {
			switch v := v.(*RegisterPeerRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[120].Exporter = func(v any, i int) any {
			switch v := v.(*RegisterPeerRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[121].Exporter = func(v any, i int) any {
			switch v := v.(*UpdatePeerRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[122].Exporter = func(v any, i int) any {
			switch v := v.(*UpdatePeerRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[123].Exporter = func(v any, i int) any {
			switch v := v.(*GetPeersRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[124].Exporter = func(v any, i int) any {
			switch v := v.(*GetPeersRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[125].Exporter = func(v any, i int) any {
			switch v := v.(*DeletePeerRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[126].Exporter = func(v any, i int) any {
			switch v := v.(*DeletePeerRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[127].Exporter = func(v any, i int) any {
			switch v := v.(*AddPeerActionsRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[128].Exporter = func(v any, i int) any {
			switch v := v.(*AddPeerActionsRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[129].Exporter = func(v any, i int) any {
			switch v := v.(*RemovePeerActionRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[130].Exporter = func(v any, i int) any {
			switch v := v.(*RemovePeerActionRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[131].Exporter = func(v any, i int) any {
			switch v := v.(*RemovePeersActionRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[132].Exporter = func(v any, i int) any {
			switch v := v.(*RemovePeersActionRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[133].Exporter = func(v any, i int) any {
			switch v := v.(*AcceptPeerRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[134].Exporter = func(v any, i int) any {
			switch v := v.(*AcceptPeerRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[135].Exporter = func(v any, i int) any {
			switch v := v.(*RejectPeerRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[136].Exporter = func(v any, i int) any {
			switch v := v.(*RejectPeerRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[137].Exporter = func(v any, i int) any {
			switch v := v.(*Call); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[138].Exporter = func(v any, i int) any {
			switch v := v.(*GetCallHistoryRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[139].Exporter = func(v any, i int) any {
			switch v := v.(*GetCallHistoryRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[140].Exporter = func(v any, i int) any {
			switch v := v.(*SetCallRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[141].Exporter = func(v any, i int) any {
			switch v := v.(*SetCallRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[142].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteCallRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[143].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteCallRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[144].Exporter = func(v any, i int) any {
			switch v := v.(*ClearCallsRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[145].Exporter = func(v any, i int) any {
			switch v := v.(*ClearCallsRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[146].Exporter = func(v any, i int) any {
			switch v := v.(*Notification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[147].Exporter = func(v any, i int) any {
			switch v := v.(*CreateNotificationRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[148].Exporter = func(v any, i int) any {
			switch v := v.(*CreateNotificationRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[149].Exporter = func(v any, i int) any {
			switch v := v.(*GetNotificationsRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[150].Exporter = func(v any, i int) any {
			switch v := v.(*GetNotificationsRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[151].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteNotificationRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[152].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteNotificationRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[153].Exporter = func(v any, i int) any {
			switch v := v.(*ClearAllNotificationsRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[154].Exporter = func(v any, i int) any {
			switch v := v.(*ClearAllNotificationsRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[155].Exporter = func(v any, i int) any {
			switch v := v.(*ClearNotificationsByTypeRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[156].Exporter = func(v any, i int) any {
			switch v := v.(*ClearNotificationsByTypeRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[157].Exporter = func(v any, i int) any {
			switch v := v.(*Session); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[158].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateSessionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[159].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateSessionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[160].Exporter = func(v any, i int) any {
			switch v := v.(*RemoveSessionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[161].Exporter = func(v any, i int) any {
			switch v := v.(*RemoveSessionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[162].Exporter = func(v any, i int) any {
			switch v := v.(*GetSessionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[163].Exporter = func(v any, i int) any {
			switch v := v.(*GetSessionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[164].Exporter = func(v any, i int) any {
			switch v := v.(*GetSessionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[165].Exporter = func(v any, i int) any {
			switch v := v.(*GetSessionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[166].Exporter = func(v any, i int) any {
			switch v := v.(*CreateReferenceRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[167].Exporter = func(v any, i int) any {
			switch v := v.(*CreateReferenceRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[168].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteReferenceRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[169].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteReferenceRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_resource_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   170,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_resource_proto_goTypes,
		DependencyIndexes: file_resource_proto_depIdxs,
		EnumInfos:         file_resource_proto_enumTypes,
		MessageInfos:      file_resource_proto_msgTypes,
	}.Build()
	File_resource_proto = out.File
	file_resource_proto_rawDesc = nil
	file_resource_proto_goTypes = nil
	file_resource_proto_depIdxs = nil
}
