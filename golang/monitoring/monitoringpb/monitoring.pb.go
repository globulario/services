// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v3.21.12
// source: monitoring.proto

package monitoringpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// StoreType defines the type of time series database.
type StoreType int32

const (
	StoreType_PROMETHEUS StoreType = 0 // Represents a Prometheus time series database.
)

// Enum value maps for StoreType.
var (
	StoreType_name = map[int32]string{
		0: "PROMETHEUS",
	}
	StoreType_value = map[string]int32{
		"PROMETHEUS": 0,
	}
)

func (x StoreType) Enum() *StoreType {
	p := new(StoreType)
	*p = x
	return p
}

func (x StoreType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StoreType) Descriptor() protoreflect.EnumDescriptor {
	return file_monitoring_proto_enumTypes[0].Descriptor()
}

func (StoreType) Type() protoreflect.EnumType {
	return &file_monitoring_proto_enumTypes[0]
}

func (x StoreType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StoreType.Descriptor instead.
func (StoreType) EnumDescriptor() ([]byte, []int) {
	return file_monitoring_proto_rawDescGZIP(), []int{0}
}

// Connection contains the details required for connecting to a time series server.
type Connection struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                  // Unique identifier for the connection.
	Host          string                 `protobuf:"bytes,2,opt,name=host,proto3" json:"host,omitempty"`                              // Host address of the time series server.
	Store         StoreType              `protobuf:"varint,3,opt,name=store,proto3,enum=monitoring.StoreType" json:"store,omitempty"` // Type of time series store.
	Port          int32                  `protobuf:"varint,4,opt,name=port,proto3" json:"port,omitempty"`                             // Port number for the server.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Connection) Reset() {
	*x = Connection{}
	mi := &file_monitoring_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Connection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Connection) ProtoMessage() {}

func (x *Connection) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Connection.ProtoReflect.Descriptor instead.
func (*Connection) Descriptor() ([]byte, []int) {
	return file_monitoring_proto_rawDescGZIP(), []int{0}
}

func (x *Connection) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Connection) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *Connection) GetStore() StoreType {
	if x != nil {
		return x.Store
	}
	return StoreType_PROMETHEUS
}

func (x *Connection) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

// CreateConnectionRqst is the request format for establishing a new connection.
type CreateConnectionRqst struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Connection    *Connection            `protobuf:"bytes,1,opt,name=connection,proto3" json:"connection,omitempty"` // Connection details to be established.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateConnectionRqst) Reset() {
	*x = CreateConnectionRqst{}
	mi := &file_monitoring_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateConnectionRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateConnectionRqst) ProtoMessage() {}

func (x *CreateConnectionRqst) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateConnectionRqst.ProtoReflect.Descriptor instead.
func (*CreateConnectionRqst) Descriptor() ([]byte, []int) {
	return file_monitoring_proto_rawDescGZIP(), []int{1}
}

func (x *CreateConnectionRqst) GetConnection() *Connection {
	if x != nil {
		return x.Connection
	}
	return nil
}

// CreateConnectionRsp is the response format for a create connection request.
type CreateConnectionRsp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        bool                   `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"` // Indicates success or failure of the operation.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateConnectionRsp) Reset() {
	*x = CreateConnectionRsp{}
	mi := &file_monitoring_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateConnectionRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateConnectionRsp) ProtoMessage() {}

func (x *CreateConnectionRsp) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateConnectionRsp.ProtoReflect.Descriptor instead.
func (*CreateConnectionRsp) Descriptor() ([]byte, []int) {
	return file_monitoring_proto_rawDescGZIP(), []int{2}
}

func (x *CreateConnectionRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// DeleteConnectionRqst is the request format for deleting an existing connection.
type DeleteConnectionRqst struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // Identifier of the connection to be deleted.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteConnectionRqst) Reset() {
	*x = DeleteConnectionRqst{}
	mi := &file_monitoring_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteConnectionRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteConnectionRqst) ProtoMessage() {}

func (x *DeleteConnectionRqst) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteConnectionRqst.ProtoReflect.Descriptor instead.
func (*DeleteConnectionRqst) Descriptor() ([]byte, []int) {
	return file_monitoring_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteConnectionRqst) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// DeleteConnectionRsp is the response format for a delete connection request.
type DeleteConnectionRsp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        bool                   `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"` // Indicates success or failure of the operation.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteConnectionRsp) Reset() {
	*x = DeleteConnectionRsp{}
	mi := &file_monitoring_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteConnectionRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteConnectionRsp) ProtoMessage() {}

func (x *DeleteConnectionRsp) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteConnectionRsp.ProtoReflect.Descriptor instead.
func (*DeleteConnectionRsp) Descriptor() ([]byte, []int) {
	return file_monitoring_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteConnectionRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// AlertsRequest is the request format for retrieving alerts.
type AlertsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ConnectionId  string                 `protobuf:"bytes,1,opt,name=connectionId,proto3" json:"connectionId,omitempty"` // Identifier of the connection to query alerts.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AlertsRequest) Reset() {
	*x = AlertsRequest{}
	mi := &file_monitoring_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AlertsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertsRequest) ProtoMessage() {}

func (x *AlertsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertsRequest.ProtoReflect.Descriptor instead.
func (*AlertsRequest) Descriptor() ([]byte, []int) {
	return file_monitoring_proto_rawDescGZIP(), []int{5}
}

func (x *AlertsRequest) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

// AlertsResponse is the response format containing the alerts data.
type AlertsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Results       string                 `protobuf:"bytes,1,opt,name=results,proto3" json:"results,omitempty"` // Results containing the alerts information.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AlertsResponse) Reset() {
	*x = AlertsResponse{}
	mi := &file_monitoring_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AlertsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertsResponse) ProtoMessage() {}

func (x *AlertsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertsResponse.ProtoReflect.Descriptor instead.
func (*AlertsResponse) Descriptor() ([]byte, []int) {
	return file_monitoring_proto_rawDescGZIP(), []int{6}
}

func (x *AlertsResponse) GetResults() string {
	if x != nil {
		return x.Results
	}
	return ""
}

// AlertManagersRequest is the request format for retrieving alert managers.
type AlertManagersRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ConnectionId  string                 `protobuf:"bytes,1,opt,name=connectionId,proto3" json:"connectionId,omitempty"` // Identifier of the connection to query alert managers.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AlertManagersRequest) Reset() {
	*x = AlertManagersRequest{}
	mi := &file_monitoring_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AlertManagersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertManagersRequest) ProtoMessage() {}

func (x *AlertManagersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertManagersRequest.ProtoReflect.Descriptor instead.
func (*AlertManagersRequest) Descriptor() ([]byte, []int) {
	return file_monitoring_proto_rawDescGZIP(), []int{7}
}

func (x *AlertManagersRequest) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

// AlertManagersResponse is the response format containing alert managers data.
type AlertManagersResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Results       string                 `protobuf:"bytes,1,opt,name=results,proto3" json:"results,omitempty"` // Results containing the alert managers information.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AlertManagersResponse) Reset() {
	*x = AlertManagersResponse{}
	mi := &file_monitoring_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AlertManagersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertManagersResponse) ProtoMessage() {}

func (x *AlertManagersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertManagersResponse.ProtoReflect.Descriptor instead.
func (*AlertManagersResponse) Descriptor() ([]byte, []int) {
	return file_monitoring_proto_rawDescGZIP(), []int{8}
}

func (x *AlertManagersResponse) GetResults() string {
	if x != nil {
		return x.Results
	}
	return ""
}

// CleanTombstonesRequest is the request format for cleaning tombstones in the database.
type CleanTombstonesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ConnectionId  string                 `protobuf:"bytes,1,opt,name=connectionId,proto3" json:"connectionId,omitempty"` // Identifier of the connection for the operation.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CleanTombstonesRequest) Reset() {
	*x = CleanTombstonesRequest{}
	mi := &file_monitoring_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CleanTombstonesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CleanTombstonesRequest) ProtoMessage() {}

func (x *CleanTombstonesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CleanTombstonesRequest.ProtoReflect.Descriptor instead.
func (*CleanTombstonesRequest) Descriptor() ([]byte, []int) {
	return file_monitoring_proto_rawDescGZIP(), []int{9}
}

func (x *CleanTombstonesRequest) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

// CleanTombstonesResponse is the response format for a clean tombstones request.
type CleanTombstonesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        bool                   `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"` // Indicates success or failure of the operation.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CleanTombstonesResponse) Reset() {
	*x = CleanTombstonesResponse{}
	mi := &file_monitoring_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CleanTombstonesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CleanTombstonesResponse) ProtoMessage() {}

func (x *CleanTombstonesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CleanTombstonesResponse.ProtoReflect.Descriptor instead.
func (*CleanTombstonesResponse) Descriptor() ([]byte, []int) {
	return file_monitoring_proto_rawDescGZIP(), []int{10}
}

func (x *CleanTombstonesResponse) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// ConfigRequest is the request format for retrieving configuration details.
type ConfigRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ConnectionId  string                 `protobuf:"bytes,1,opt,name=connectionId,proto3" json:"connectionId,omitempty"` // Identifier of the connection to retrieve configuration.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfigRequest) Reset() {
	*x = ConfigRequest{}
	mi := &file_monitoring_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigRequest) ProtoMessage() {}

func (x *ConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigRequest.ProtoReflect.Descriptor instead.
func (*ConfigRequest) Descriptor() ([]byte, []int) {
	return file_monitoring_proto_rawDescGZIP(), []int{11}
}

func (x *ConfigRequest) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

// ConfigResponse is the response format containing configuration details.
type ConfigResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Results       string                 `protobuf:"bytes,1,opt,name=results,proto3" json:"results,omitempty"` // Results containing the configuration information.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfigResponse) Reset() {
	*x = ConfigResponse{}
	mi := &file_monitoring_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigResponse) ProtoMessage() {}

func (x *ConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigResponse.ProtoReflect.Descriptor instead.
func (*ConfigResponse) Descriptor() ([]byte, []int) {
	return file_monitoring_proto_rawDescGZIP(), []int{12}
}

func (x *ConfigResponse) GetResults() string {
	if x != nil {
		return x.Results
	}
	return ""
}

// DeleteSeriesRequest is the request for deleting a series of data points.
type DeleteSeriesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ConnectionId  string                 `protobuf:"bytes,1,opt,name=connectionId,proto3" json:"connectionId,omitempty"` // Identifier of the connection.
	Matches       []string               `protobuf:"bytes,2,rep,name=matches,proto3" json:"matches,omitempty"`           // Series matchers to specify which series should be deleted.
	StartTime     float64                `protobuf:"fixed64,3,opt,name=startTime,proto3" json:"startTime,omitempty"`     // Start time for the range of data to delete.
	EndTime       float64                `protobuf:"fixed64,4,opt,name=endTime,proto3" json:"endTime,omitempty"`         // End time for the range of data to delete.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteSeriesRequest) Reset() {
	*x = DeleteSeriesRequest{}
	mi := &file_monitoring_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteSeriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSeriesRequest) ProtoMessage() {}

func (x *DeleteSeriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSeriesRequest.ProtoReflect.Descriptor instead.
func (*DeleteSeriesRequest) Descriptor() ([]byte, []int) {
	return file_monitoring_proto_rawDescGZIP(), []int{13}
}

func (x *DeleteSeriesRequest) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

func (x *DeleteSeriesRequest) GetMatches() []string {
	if x != nil {
		return x.Matches
	}
	return nil
}

func (x *DeleteSeriesRequest) GetStartTime() float64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *DeleteSeriesRequest) GetEndTime() float64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

// DeleteSeriesResponse is the response for a delete series request.
type DeleteSeriesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        bool                   `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"` // Indicates success or failure of the operation.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteSeriesResponse) Reset() {
	*x = DeleteSeriesResponse{}
	mi := &file_monitoring_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteSeriesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSeriesResponse) ProtoMessage() {}

func (x *DeleteSeriesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSeriesResponse.ProtoReflect.Descriptor instead.
func (*DeleteSeriesResponse) Descriptor() ([]byte, []int) {
	return file_monitoring_proto_rawDescGZIP(), []int{14}
}

func (x *DeleteSeriesResponse) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// FlagsRequest is the request for retrieving server flags.
type FlagsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ConnectionId  string                 `protobuf:"bytes,1,opt,name=connectionId,proto3" json:"connectionId,omitempty"` // Identifier of the connection.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FlagsRequest) Reset() {
	*x = FlagsRequest{}
	mi := &file_monitoring_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FlagsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlagsRequest) ProtoMessage() {}

func (x *FlagsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlagsRequest.ProtoReflect.Descriptor instead.
func (*FlagsRequest) Descriptor() ([]byte, []int) {
	return file_monitoring_proto_rawDescGZIP(), []int{15}
}

func (x *FlagsRequest) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

// FlagsResponse is the response containing the server flags.
type FlagsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Results       string                 `protobuf:"bytes,1,opt,name=results,proto3" json:"results,omitempty"` // Results containing server flags information.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FlagsResponse) Reset() {
	*x = FlagsResponse{}
	mi := &file_monitoring_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FlagsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlagsResponse) ProtoMessage() {}

func (x *FlagsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlagsResponse.ProtoReflect.Descriptor instead.
func (*FlagsResponse) Descriptor() ([]byte, []int) {
	return file_monitoring_proto_rawDescGZIP(), []int{16}
}

func (x *FlagsResponse) GetResults() string {
	if x != nil {
		return x.Results
	}
	return ""
}

// LabelNamesRequest is the request for retrieving label names.
type LabelNamesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ConnectionId  string                 `protobuf:"bytes,1,opt,name=connectionId,proto3" json:"connectionId,omitempty"` // Identifier of the connection.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LabelNamesRequest) Reset() {
	*x = LabelNamesRequest{}
	mi := &file_monitoring_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LabelNamesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LabelNamesRequest) ProtoMessage() {}

func (x *LabelNamesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LabelNamesRequest.ProtoReflect.Descriptor instead.
func (*LabelNamesRequest) Descriptor() ([]byte, []int) {
	return file_monitoring_proto_rawDescGZIP(), []int{17}
}

func (x *LabelNamesRequest) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

// LabelNamesResponse is the response containing the label names.
type LabelNamesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Labels        []string               `protobuf:"bytes,1,rep,name=labels,proto3" json:"labels,omitempty"`     // List of label names.
	Warnings      string                 `protobuf:"bytes,2,opt,name=warnings,proto3" json:"warnings,omitempty"` // Warnings, if any, during the operation.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LabelNamesResponse) Reset() {
	*x = LabelNamesResponse{}
	mi := &file_monitoring_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LabelNamesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LabelNamesResponse) ProtoMessage() {}

func (x *LabelNamesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LabelNamesResponse.ProtoReflect.Descriptor instead.
func (*LabelNamesResponse) Descriptor() ([]byte, []int) {
	return file_monitoring_proto_rawDescGZIP(), []int{18}
}

func (x *LabelNamesResponse) GetLabels() []string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *LabelNamesResponse) GetWarnings() string {
	if x != nil {
		return x.Warnings
	}
	return ""
}

// LabelValuesRequest is the request for retrieving label values.
type LabelValuesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ConnectionId  string                 `protobuf:"bytes,1,opt,name=connectionId,proto3" json:"connectionId,omitempty"` // Identifier of the connection.
	Label         string                 `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`               // Specific label for which values are requested.
	Values        []string               `protobuf:"bytes,3,rep,name=values,proto3" json:"values,omitempty"`             // Specific values to filter.
	StartTime     int64                  `protobuf:"varint,4,opt,name=startTime,proto3" json:"startTime,omitempty"`      // Start time for filtering the values.
	EndTime       int64                  `protobuf:"varint,5,opt,name=endTime,proto3" json:"endTime,omitempty"`          // End time for filtering the values.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LabelValuesRequest) Reset() {
	*x = LabelValuesRequest{}
	mi := &file_monitoring_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LabelValuesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LabelValuesRequest) ProtoMessage() {}

func (x *LabelValuesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LabelValuesRequest.ProtoReflect.Descriptor instead.
func (*LabelValuesRequest) Descriptor() ([]byte, []int) {
	return file_monitoring_proto_rawDescGZIP(), []int{19}
}

func (x *LabelValuesRequest) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

func (x *LabelValuesRequest) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *LabelValuesRequest) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *LabelValuesRequest) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *LabelValuesRequest) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

// LabelValuesResponse is the response containing label values.
type LabelValuesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LabelValues   string                 `protobuf:"bytes,1,opt,name=labelValues,proto3" json:"labelValues,omitempty"` // String representation of label values.
	Warnings      string                 `protobuf:"bytes,2,opt,name=warnings,proto3" json:"warnings,omitempty"`       // Warnings, if any, during the operation.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LabelValuesResponse) Reset() {
	*x = LabelValuesResponse{}
	mi := &file_monitoring_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LabelValuesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LabelValuesResponse) ProtoMessage() {}

func (x *LabelValuesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LabelValuesResponse.ProtoReflect.Descriptor instead.
func (*LabelValuesResponse) Descriptor() ([]byte, []int) {
	return file_monitoring_proto_rawDescGZIP(), []int{20}
}

func (x *LabelValuesResponse) GetLabelValues() string {
	if x != nil {
		return x.LabelValues
	}
	return ""
}

func (x *LabelValuesResponse) GetWarnings() string {
	if x != nil {
		return x.Warnings
	}
	return ""
}

// QueryRequest is the request for executing an instant query.
type QueryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ConnectionId  string                 `protobuf:"bytes,1,opt,name=connectionId,proto3" json:"connectionId,omitempty"` // Identifier of the connection.
	Query         string                 `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`               // Query expression.
	Ts            float64                `protobuf:"fixed64,3,opt,name=ts,proto3" json:"ts,omitempty"`                   // Unix timestamp for the instant query.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryRequest) Reset() {
	*x = QueryRequest{}
	mi := &file_monitoring_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRequest) ProtoMessage() {}

func (x *QueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRequest.ProtoReflect.Descriptor instead.
func (*QueryRequest) Descriptor() ([]byte, []int) {
	return file_monitoring_proto_rawDescGZIP(), []int{21}
}

func (x *QueryRequest) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

func (x *QueryRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *QueryRequest) GetTs() float64 {
	if x != nil {
		return x.Ts
	}
	return 0
}

// QueryResponse is the response containing the result of the query.
type QueryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         string                 `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`       // Result of the query.
	Warnings      string                 `protobuf:"bytes,2,opt,name=warnings,proto3" json:"warnings,omitempty"` // Warnings, if any, during the query execution.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryResponse) Reset() {
	*x = QueryResponse{}
	mi := &file_monitoring_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryResponse) ProtoMessage() {}

func (x *QueryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryResponse.ProtoReflect.Descriptor instead.
func (*QueryResponse) Descriptor() ([]byte, []int) {
	return file_monitoring_proto_rawDescGZIP(), []int{22}
}

func (x *QueryResponse) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *QueryResponse) GetWarnings() string {
	if x != nil {
		return x.Warnings
	}
	return ""
}

// QueryRangeRequest is the request for executing a range query.
type QueryRangeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ConnectionId  string                 `protobuf:"bytes,1,opt,name=connectionId,proto3" json:"connectionId,omitempty"` // Identifier of the connection.
	Query         string                 `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`               // Query expression.
	StartTime     float64                `protobuf:"fixed64,3,opt,name=startTime,proto3" json:"startTime,omitempty"`     // Start time for the range query.
	EndTime       float64                `protobuf:"fixed64,4,opt,name=endTime,proto3" json:"endTime,omitempty"`         // End time for the range query.
	Step          float64                `protobuf:"fixed64,5,opt,name=step,proto3" json:"step,omitempty"`               // Step duration in seconds.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryRangeRequest) Reset() {
	*x = QueryRangeRequest{}
	mi := &file_monitoring_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryRangeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRangeRequest) ProtoMessage() {}

func (x *QueryRangeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRangeRequest.ProtoReflect.Descriptor instead.
func (*QueryRangeRequest) Descriptor() ([]byte, []int) {
	return file_monitoring_proto_rawDescGZIP(), []int{23}
}

func (x *QueryRangeRequest) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

func (x *QueryRangeRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *QueryRangeRequest) GetStartTime() float64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *QueryRangeRequest) GetEndTime() float64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *QueryRangeRequest) GetStep() float64 {
	if x != nil {
		return x.Step
	}
	return 0
}

// QueryRangeResponse is the response containing the results of the range query.
type QueryRangeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         string                 `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`       // Result of the range query.
	Warnings      string                 `protobuf:"bytes,2,opt,name=warnings,proto3" json:"warnings,omitempty"` // Warnings, if any, during the query execution.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryRangeResponse) Reset() {
	*x = QueryRangeResponse{}
	mi := &file_monitoring_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryRangeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRangeResponse) ProtoMessage() {}

func (x *QueryRangeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRangeResponse.ProtoReflect.Descriptor instead.
func (*QueryRangeResponse) Descriptor() ([]byte, []int) {
	return file_monitoring_proto_rawDescGZIP(), []int{24}
}

func (x *QueryRangeResponse) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *QueryRangeResponse) GetWarnings() string {
	if x != nil {
		return x.Warnings
	}
	return ""
}

// SeriesRequest is used to request a series of data points.
type SeriesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ConnectionId  string                 `protobuf:"bytes,1,opt,name=connectionId,proto3" json:"connectionId,omitempty"` // Identifier of the connection.
	Matches       []string               `protobuf:"bytes,2,rep,name=matches,proto3" json:"matches,omitempty"`           // Series matchers to specify which series to retrieve.
	StartTime     float64                `protobuf:"fixed64,3,opt,name=startTime,proto3" json:"startTime,omitempty"`     // Start time for the series range.
	EndTime       float64                `protobuf:"fixed64,4,opt,name=endTime,proto3" json:"endTime,omitempty"`         // End time for the series range.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SeriesRequest) Reset() {
	*x = SeriesRequest{}
	mi := &file_monitoring_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SeriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeriesRequest) ProtoMessage() {}

func (x *SeriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeriesRequest.ProtoReflect.Descriptor instead.
func (*SeriesRequest) Descriptor() ([]byte, []int) {
	return file_monitoring_proto_rawDescGZIP(), []int{25}
}

func (x *SeriesRequest) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

func (x *SeriesRequest) GetMatches() []string {
	if x != nil {
		return x.Matches
	}
	return nil
}

func (x *SeriesRequest) GetStartTime() float64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *SeriesRequest) GetEndTime() float64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

// SeriesResponse returns the series data.
type SeriesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LabelSet      string                 `protobuf:"bytes,1,opt,name=LabelSet,proto3" json:"LabelSet,omitempty"` // The set of labels for the returned series.
	Warnings      string                 `protobuf:"bytes,2,opt,name=warnings,proto3" json:"warnings,omitempty"` // Warnings, if any, encountered during the request.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SeriesResponse) Reset() {
	*x = SeriesResponse{}
	mi := &file_monitoring_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SeriesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeriesResponse) ProtoMessage() {}

func (x *SeriesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeriesResponse.ProtoReflect.Descriptor instead.
func (*SeriesResponse) Descriptor() ([]byte, []int) {
	return file_monitoring_proto_rawDescGZIP(), []int{26}
}

func (x *SeriesResponse) GetLabelSet() string {
	if x != nil {
		return x.LabelSet
	}
	return ""
}

func (x *SeriesResponse) GetWarnings() string {
	if x != nil {
		return x.Warnings
	}
	return ""
}

// SnapshotRequest is the request to create a snapshot of the current data.
type SnapshotRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ConnectionId  string                 `protobuf:"bytes,1,opt,name=connectionId,proto3" json:"connectionId,omitempty"` // Identifier of the connection.
	SkipHead      bool                   `protobuf:"varint,2,opt,name=skipHead,proto3" json:"skipHead,omitempty"`        // Whether to skip the head block in the snapshot.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SnapshotRequest) Reset() {
	*x = SnapshotRequest{}
	mi := &file_monitoring_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SnapshotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnapshotRequest) ProtoMessage() {}

func (x *SnapshotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnapshotRequest.ProtoReflect.Descriptor instead.
func (*SnapshotRequest) Descriptor() ([]byte, []int) {
	return file_monitoring_proto_rawDescGZIP(), []int{27}
}

func (x *SnapshotRequest) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

func (x *SnapshotRequest) GetSkipHead() bool {
	if x != nil {
		return x.SkipHead
	}
	return false
}

// SnapshotResponse is the response containing the snapshot result.
type SnapshotResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        string                 `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"` // Result or location of the snapshot.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SnapshotResponse) Reset() {
	*x = SnapshotResponse{}
	mi := &file_monitoring_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SnapshotResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnapshotResponse) ProtoMessage() {}

func (x *SnapshotResponse) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnapshotResponse.ProtoReflect.Descriptor instead.
func (*SnapshotResponse) Descriptor() ([]byte, []int) {
	return file_monitoring_proto_rawDescGZIP(), []int{28}
}

func (x *SnapshotResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

// RulesRequest is the request for retrieving alerting and recording rules.
type RulesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ConnectionId  string                 `protobuf:"bytes,1,opt,name=connectionId,proto3" json:"connectionId,omitempty"` // Identifier of the connection.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RulesRequest) Reset() {
	*x = RulesRequest{}
	mi := &file_monitoring_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RulesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RulesRequest) ProtoMessage() {}

func (x *RulesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RulesRequest.ProtoReflect.Descriptor instead.
func (*RulesRequest) Descriptor() ([]byte, []int) {
	return file_monitoring_proto_rawDescGZIP(), []int{29}
}

func (x *RulesRequest) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

// RulesResponse returns the set of rules.
type RulesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        string                 `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"` // Result containing the rules.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RulesResponse) Reset() {
	*x = RulesResponse{}
	mi := &file_monitoring_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RulesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RulesResponse) ProtoMessage() {}

func (x *RulesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RulesResponse.ProtoReflect.Descriptor instead.
func (*RulesResponse) Descriptor() ([]byte, []int) {
	return file_monitoring_proto_rawDescGZIP(), []int{30}
}

func (x *RulesResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

// TargetsRequest is used to request information about scrape targets.
type TargetsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ConnectionId  string                 `protobuf:"bytes,1,opt,name=connectionId,proto3" json:"connectionId,omitempty"` // Identifier of the connection.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TargetsRequest) Reset() {
	*x = TargetsRequest{}
	mi := &file_monitoring_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TargetsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TargetsRequest) ProtoMessage() {}

func (x *TargetsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TargetsRequest.ProtoReflect.Descriptor instead.
func (*TargetsRequest) Descriptor() ([]byte, []int) {
	return file_monitoring_proto_rawDescGZIP(), []int{31}
}

func (x *TargetsRequest) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

// TargetsResponse returns information about the scrape targets.
type TargetsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        string                 `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"` // Result containing information about targets.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TargetsResponse) Reset() {
	*x = TargetsResponse{}
	mi := &file_monitoring_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TargetsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TargetsResponse) ProtoMessage() {}

func (x *TargetsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TargetsResponse.ProtoReflect.Descriptor instead.
func (*TargetsResponse) Descriptor() ([]byte, []int) {
	return file_monitoring_proto_rawDescGZIP(), []int{32}
}

func (x *TargetsResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

// TargetsMetadataRequest is the request for metadata about specific targets.
type TargetsMetadataRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ConnectionId  string                 `protobuf:"bytes,1,opt,name=connectionId,proto3" json:"connectionId,omitempty"` // Identifier of the connection.
	MatchTarget   string                 `protobuf:"bytes,2,opt,name=matchTarget,proto3" json:"matchTarget,omitempty"`   // Specific target to match for metadata.
	Metric        string                 `protobuf:"bytes,3,opt,name=metric,proto3" json:"metric,omitempty"`             // Specific metric to retrieve metadata for.
	Limit         string                 `protobuf:"bytes,4,opt,name=limit,proto3" json:"limit,omitempty"`               // Limit for the number of metadata entries returned.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TargetsMetadataRequest) Reset() {
	*x = TargetsMetadataRequest{}
	mi := &file_monitoring_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TargetsMetadataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TargetsMetadataRequest) ProtoMessage() {}

func (x *TargetsMetadataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TargetsMetadataRequest.ProtoReflect.Descriptor instead.
func (*TargetsMetadataRequest) Descriptor() ([]byte, []int) {
	return file_monitoring_proto_rawDescGZIP(), []int{33}
}

func (x *TargetsMetadataRequest) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

func (x *TargetsMetadataRequest) GetMatchTarget() string {
	if x != nil {
		return x.MatchTarget
	}
	return ""
}

func (x *TargetsMetadataRequest) GetMetric() string {
	if x != nil {
		return x.Metric
	}
	return ""
}

func (x *TargetsMetadataRequest) GetLimit() string {
	if x != nil {
		return x.Limit
	}
	return ""
}

// TargetsMetadataResponse returns metadata about the specified targets.
type TargetsMetadataResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        string                 `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"` // A JSON array containing metric metadata.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TargetsMetadataResponse) Reset() {
	*x = TargetsMetadataResponse{}
	mi := &file_monitoring_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TargetsMetadataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TargetsMetadataResponse) ProtoMessage() {}

func (x *TargetsMetadataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TargetsMetadataResponse.ProtoReflect.Descriptor instead.
func (*TargetsMetadataResponse) Descriptor() ([]byte, []int) {
	return file_monitoring_proto_rawDescGZIP(), []int{34}
}

func (x *TargetsMetadataResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

// StopRequest is the request to stop the service or operation.
type StopRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopRequest) Reset() {
	*x = StopRequest{}
	mi := &file_monitoring_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopRequest) ProtoMessage() {}

func (x *StopRequest) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopRequest.ProtoReflect.Descriptor instead.
func (*StopRequest) Descriptor() ([]byte, []int) {
	return file_monitoring_proto_rawDescGZIP(), []int{35}
}

// StopResponse is the response after a stop request.
type StopResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopResponse) Reset() {
	*x = StopResponse{}
	mi := &file_monitoring_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopResponse) ProtoMessage() {}

func (x *StopResponse) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopResponse.ProtoReflect.Descriptor instead.
func (*StopResponse) Descriptor() ([]byte, []int) {
	return file_monitoring_proto_rawDescGZIP(), []int{36}
}

var File_monitoring_proto protoreflect.FileDescriptor

const file_monitoring_proto_rawDesc = "" +
	"\n" +
	"\x10monitoring.proto\x12\n" +
	"monitoring\"q\n" +
	"\n" +
	"Connection\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04host\x18\x02 \x01(\tR\x04host\x12+\n" +
	"\x05store\x18\x03 \x01(\x0e2\x15.monitoring.StoreTypeR\x05store\x12\x12\n" +
	"\x04port\x18\x04 \x01(\x05R\x04port\"N\n" +
	"\x14CreateConnectionRqst\x126\n" +
	"\n" +
	"connection\x18\x01 \x01(\v2\x16.monitoring.ConnectionR\n" +
	"connection\"-\n" +
	"\x13CreateConnectionRsp\x12\x16\n" +
	"\x06result\x18\x01 \x01(\bR\x06result\"&\n" +
	"\x14DeleteConnectionRqst\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"-\n" +
	"\x13DeleteConnectionRsp\x12\x16\n" +
	"\x06result\x18\x01 \x01(\bR\x06result\"3\n" +
	"\rAlertsRequest\x12\"\n" +
	"\fconnectionId\x18\x01 \x01(\tR\fconnectionId\"*\n" +
	"\x0eAlertsResponse\x12\x18\n" +
	"\aresults\x18\x01 \x01(\tR\aresults\":\n" +
	"\x14AlertManagersRequest\x12\"\n" +
	"\fconnectionId\x18\x01 \x01(\tR\fconnectionId\"1\n" +
	"\x15AlertManagersResponse\x12\x18\n" +
	"\aresults\x18\x01 \x01(\tR\aresults\"<\n" +
	"\x16CleanTombstonesRequest\x12\"\n" +
	"\fconnectionId\x18\x01 \x01(\tR\fconnectionId\"1\n" +
	"\x17CleanTombstonesResponse\x12\x16\n" +
	"\x06result\x18\x01 \x01(\bR\x06result\"3\n" +
	"\rConfigRequest\x12\"\n" +
	"\fconnectionId\x18\x01 \x01(\tR\fconnectionId\"*\n" +
	"\x0eConfigResponse\x12\x18\n" +
	"\aresults\x18\x01 \x01(\tR\aresults\"\x8b\x01\n" +
	"\x13DeleteSeriesRequest\x12\"\n" +
	"\fconnectionId\x18\x01 \x01(\tR\fconnectionId\x12\x18\n" +
	"\amatches\x18\x02 \x03(\tR\amatches\x12\x1c\n" +
	"\tstartTime\x18\x03 \x01(\x01R\tstartTime\x12\x18\n" +
	"\aendTime\x18\x04 \x01(\x01R\aendTime\".\n" +
	"\x14DeleteSeriesResponse\x12\x16\n" +
	"\x06result\x18\x01 \x01(\bR\x06result\"2\n" +
	"\fFlagsRequest\x12\"\n" +
	"\fconnectionId\x18\x01 \x01(\tR\fconnectionId\")\n" +
	"\rFlagsResponse\x12\x18\n" +
	"\aresults\x18\x01 \x01(\tR\aresults\"7\n" +
	"\x11LabelNamesRequest\x12\"\n" +
	"\fconnectionId\x18\x01 \x01(\tR\fconnectionId\"H\n" +
	"\x12LabelNamesResponse\x12\x16\n" +
	"\x06labels\x18\x01 \x03(\tR\x06labels\x12\x1a\n" +
	"\bwarnings\x18\x02 \x01(\tR\bwarnings\"\x9e\x01\n" +
	"\x12LabelValuesRequest\x12\"\n" +
	"\fconnectionId\x18\x01 \x01(\tR\fconnectionId\x12\x14\n" +
	"\x05label\x18\x02 \x01(\tR\x05label\x12\x16\n" +
	"\x06values\x18\x03 \x03(\tR\x06values\x12\x1c\n" +
	"\tstartTime\x18\x04 \x01(\x03R\tstartTime\x12\x18\n" +
	"\aendTime\x18\x05 \x01(\x03R\aendTime\"S\n" +
	"\x13LabelValuesResponse\x12 \n" +
	"\vlabelValues\x18\x01 \x01(\tR\vlabelValues\x12\x1a\n" +
	"\bwarnings\x18\x02 \x01(\tR\bwarnings\"X\n" +
	"\fQueryRequest\x12\"\n" +
	"\fconnectionId\x18\x01 \x01(\tR\fconnectionId\x12\x14\n" +
	"\x05query\x18\x02 \x01(\tR\x05query\x12\x0e\n" +
	"\x02ts\x18\x03 \x01(\x01R\x02ts\"A\n" +
	"\rQueryResponse\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x1a\n" +
	"\bwarnings\x18\x02 \x01(\tR\bwarnings\"\x99\x01\n" +
	"\x11QueryRangeRequest\x12\"\n" +
	"\fconnectionId\x18\x01 \x01(\tR\fconnectionId\x12\x14\n" +
	"\x05query\x18\x02 \x01(\tR\x05query\x12\x1c\n" +
	"\tstartTime\x18\x03 \x01(\x01R\tstartTime\x12\x18\n" +
	"\aendTime\x18\x04 \x01(\x01R\aendTime\x12\x12\n" +
	"\x04step\x18\x05 \x01(\x01R\x04step\"F\n" +
	"\x12QueryRangeResponse\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x1a\n" +
	"\bwarnings\x18\x02 \x01(\tR\bwarnings\"\x85\x01\n" +
	"\rSeriesRequest\x12\"\n" +
	"\fconnectionId\x18\x01 \x01(\tR\fconnectionId\x12\x18\n" +
	"\amatches\x18\x02 \x03(\tR\amatches\x12\x1c\n" +
	"\tstartTime\x18\x03 \x01(\x01R\tstartTime\x12\x18\n" +
	"\aendTime\x18\x04 \x01(\x01R\aendTime\"H\n" +
	"\x0eSeriesResponse\x12\x1a\n" +
	"\bLabelSet\x18\x01 \x01(\tR\bLabelSet\x12\x1a\n" +
	"\bwarnings\x18\x02 \x01(\tR\bwarnings\"Q\n" +
	"\x0fSnapshotRequest\x12\"\n" +
	"\fconnectionId\x18\x01 \x01(\tR\fconnectionId\x12\x1a\n" +
	"\bskipHead\x18\x02 \x01(\bR\bskipHead\"*\n" +
	"\x10SnapshotResponse\x12\x16\n" +
	"\x06result\x18\x01 \x01(\tR\x06result\"2\n" +
	"\fRulesRequest\x12\"\n" +
	"\fconnectionId\x18\x01 \x01(\tR\fconnectionId\"'\n" +
	"\rRulesResponse\x12\x16\n" +
	"\x06result\x18\x01 \x01(\tR\x06result\"4\n" +
	"\x0eTargetsRequest\x12\"\n" +
	"\fconnectionId\x18\x01 \x01(\tR\fconnectionId\")\n" +
	"\x0fTargetsResponse\x12\x16\n" +
	"\x06result\x18\x01 \x01(\tR\x06result\"\x8c\x01\n" +
	"\x16TargetsMetadataRequest\x12\"\n" +
	"\fconnectionId\x18\x01 \x01(\tR\fconnectionId\x12 \n" +
	"\vmatchTarget\x18\x02 \x01(\tR\vmatchTarget\x12\x16\n" +
	"\x06metric\x18\x03 \x01(\tR\x06metric\x12\x14\n" +
	"\x05limit\x18\x04 \x01(\tR\x05limit\"1\n" +
	"\x17TargetsMetadataResponse\x12\x16\n" +
	"\x06result\x18\x01 \x01(\tR\x06result\"\r\n" +
	"\vStopRequest\"\x0e\n" +
	"\fStopResponse*\x1b\n" +
	"\tStoreType\x12\x0e\n" +
	"\n" +
	"PROMETHEUS\x10\x002\xd1\n" +
	"\n" +
	"\x11MonitoringService\x129\n" +
	"\x04Stop\x12\x17.monitoring.StopRequest\x1a\x18.monitoring.StopResponse\x12U\n" +
	"\x10CreateConnection\x12 .monitoring.CreateConnectionRqst\x1a\x1f.monitoring.CreateConnectionRsp\x12U\n" +
	"\x10DeleteConnection\x12 .monitoring.DeleteConnectionRqst\x1a\x1f.monitoring.DeleteConnectionRsp\x12?\n" +
	"\x06Alerts\x12\x19.monitoring.AlertsRequest\x1a\x1a.monitoring.AlertsResponse\x12T\n" +
	"\rAlertManagers\x12 .monitoring.AlertManagersRequest\x1a!.monitoring.AlertManagersResponse\x12Z\n" +
	"\x0fCleanTombstones\x12\".monitoring.CleanTombstonesRequest\x1a#.monitoring.CleanTombstonesResponse\x12?\n" +
	"\x06Config\x12\x19.monitoring.ConfigRequest\x1a\x1a.monitoring.ConfigResponse\x12Q\n" +
	"\fDeleteSeries\x12\x1f.monitoring.DeleteSeriesRequest\x1a .monitoring.DeleteSeriesResponse\x12<\n" +
	"\x05Flags\x12\x18.monitoring.FlagsRequest\x1a\x19.monitoring.FlagsResponse\x12K\n" +
	"\n" +
	"LabelNames\x12\x1d.monitoring.LabelNamesRequest\x1a\x1e.monitoring.LabelNamesResponse\x12N\n" +
	"\vLabelValues\x12\x1e.monitoring.LabelValuesRequest\x1a\x1f.monitoring.LabelValuesResponse\x12<\n" +
	"\x05Query\x12\x18.monitoring.QueryRequest\x1a\x19.monitoring.QueryResponse\x12M\n" +
	"\n" +
	"QueryRange\x12\x1d.monitoring.QueryRangeRequest\x1a\x1e.monitoring.QueryRangeResponse0\x01\x12?\n" +
	"\x06Series\x12\x19.monitoring.SeriesRequest\x1a\x1a.monitoring.SeriesResponse\x12E\n" +
	"\bSnapshot\x12\x1b.monitoring.SnapshotRequest\x1a\x1c.monitoring.SnapshotResponse\x12<\n" +
	"\x05Rules\x12\x18.monitoring.RulesRequest\x1a\x19.monitoring.RulesResponse\x12B\n" +
	"\aTargets\x12\x1a.monitoring.TargetsRequest\x1a\x1b.monitoring.TargetsResponse\x12Z\n" +
	"\x0fTargetsMetadata\x12\".monitoring.TargetsMetadataRequest\x1a#.monitoring.TargetsMetadataResponseB?Z=github.com/globulario/services/golang/monitoring/monitoringpbb\x06proto3"

var (
	file_monitoring_proto_rawDescOnce sync.Once
	file_monitoring_proto_rawDescData []byte
)

func file_monitoring_proto_rawDescGZIP() []byte {
	file_monitoring_proto_rawDescOnce.Do(func() {
		file_monitoring_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_monitoring_proto_rawDesc), len(file_monitoring_proto_rawDesc)))
	})
	return file_monitoring_proto_rawDescData
}

var file_monitoring_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_monitoring_proto_msgTypes = make([]protoimpl.MessageInfo, 37)
var file_monitoring_proto_goTypes = []any{
	(StoreType)(0),                  // 0: monitoring.StoreType
	(*Connection)(nil),              // 1: monitoring.Connection
	(*CreateConnectionRqst)(nil),    // 2: monitoring.CreateConnectionRqst
	(*CreateConnectionRsp)(nil),     // 3: monitoring.CreateConnectionRsp
	(*DeleteConnectionRqst)(nil),    // 4: monitoring.DeleteConnectionRqst
	(*DeleteConnectionRsp)(nil),     // 5: monitoring.DeleteConnectionRsp
	(*AlertsRequest)(nil),           // 6: monitoring.AlertsRequest
	(*AlertsResponse)(nil),          // 7: monitoring.AlertsResponse
	(*AlertManagersRequest)(nil),    // 8: monitoring.AlertManagersRequest
	(*AlertManagersResponse)(nil),   // 9: monitoring.AlertManagersResponse
	(*CleanTombstonesRequest)(nil),  // 10: monitoring.CleanTombstonesRequest
	(*CleanTombstonesResponse)(nil), // 11: monitoring.CleanTombstonesResponse
	(*ConfigRequest)(nil),           // 12: monitoring.ConfigRequest
	(*ConfigResponse)(nil),          // 13: monitoring.ConfigResponse
	(*DeleteSeriesRequest)(nil),     // 14: monitoring.DeleteSeriesRequest
	(*DeleteSeriesResponse)(nil),    // 15: monitoring.DeleteSeriesResponse
	(*FlagsRequest)(nil),            // 16: monitoring.FlagsRequest
	(*FlagsResponse)(nil),           // 17: monitoring.FlagsResponse
	(*LabelNamesRequest)(nil),       // 18: monitoring.LabelNamesRequest
	(*LabelNamesResponse)(nil),      // 19: monitoring.LabelNamesResponse
	(*LabelValuesRequest)(nil),      // 20: monitoring.LabelValuesRequest
	(*LabelValuesResponse)(nil),     // 21: monitoring.LabelValuesResponse
	(*QueryRequest)(nil),            // 22: monitoring.QueryRequest
	(*QueryResponse)(nil),           // 23: monitoring.QueryResponse
	(*QueryRangeRequest)(nil),       // 24: monitoring.QueryRangeRequest
	(*QueryRangeResponse)(nil),      // 25: monitoring.QueryRangeResponse
	(*SeriesRequest)(nil),           // 26: monitoring.SeriesRequest
	(*SeriesResponse)(nil),          // 27: monitoring.SeriesResponse
	(*SnapshotRequest)(nil),         // 28: monitoring.SnapshotRequest
	(*SnapshotResponse)(nil),        // 29: monitoring.SnapshotResponse
	(*RulesRequest)(nil),            // 30: monitoring.RulesRequest
	(*RulesResponse)(nil),           // 31: monitoring.RulesResponse
	(*TargetsRequest)(nil),          // 32: monitoring.TargetsRequest
	(*TargetsResponse)(nil),         // 33: monitoring.TargetsResponse
	(*TargetsMetadataRequest)(nil),  // 34: monitoring.TargetsMetadataRequest
	(*TargetsMetadataResponse)(nil), // 35: monitoring.TargetsMetadataResponse
	(*StopRequest)(nil),             // 36: monitoring.StopRequest
	(*StopResponse)(nil),            // 37: monitoring.StopResponse
}
var file_monitoring_proto_depIdxs = []int32{
	0,  // 0: monitoring.Connection.store:type_name -> monitoring.StoreType
	1,  // 1: monitoring.CreateConnectionRqst.connection:type_name -> monitoring.Connection
	36, // 2: monitoring.MonitoringService.Stop:input_type -> monitoring.StopRequest
	2,  // 3: monitoring.MonitoringService.CreateConnection:input_type -> monitoring.CreateConnectionRqst
	4,  // 4: monitoring.MonitoringService.DeleteConnection:input_type -> monitoring.DeleteConnectionRqst
	6,  // 5: monitoring.MonitoringService.Alerts:input_type -> monitoring.AlertsRequest
	8,  // 6: monitoring.MonitoringService.AlertManagers:input_type -> monitoring.AlertManagersRequest
	10, // 7: monitoring.MonitoringService.CleanTombstones:input_type -> monitoring.CleanTombstonesRequest
	12, // 8: monitoring.MonitoringService.Config:input_type -> monitoring.ConfigRequest
	14, // 9: monitoring.MonitoringService.DeleteSeries:input_type -> monitoring.DeleteSeriesRequest
	16, // 10: monitoring.MonitoringService.Flags:input_type -> monitoring.FlagsRequest
	18, // 11: monitoring.MonitoringService.LabelNames:input_type -> monitoring.LabelNamesRequest
	20, // 12: monitoring.MonitoringService.LabelValues:input_type -> monitoring.LabelValuesRequest
	22, // 13: monitoring.MonitoringService.Query:input_type -> monitoring.QueryRequest
	24, // 14: monitoring.MonitoringService.QueryRange:input_type -> monitoring.QueryRangeRequest
	26, // 15: monitoring.MonitoringService.Series:input_type -> monitoring.SeriesRequest
	28, // 16: monitoring.MonitoringService.Snapshot:input_type -> monitoring.SnapshotRequest
	30, // 17: monitoring.MonitoringService.Rules:input_type -> monitoring.RulesRequest
	32, // 18: monitoring.MonitoringService.Targets:input_type -> monitoring.TargetsRequest
	34, // 19: monitoring.MonitoringService.TargetsMetadata:input_type -> monitoring.TargetsMetadataRequest
	37, // 20: monitoring.MonitoringService.Stop:output_type -> monitoring.StopResponse
	3,  // 21: monitoring.MonitoringService.CreateConnection:output_type -> monitoring.CreateConnectionRsp
	5,  // 22: monitoring.MonitoringService.DeleteConnection:output_type -> monitoring.DeleteConnectionRsp
	7,  // 23: monitoring.MonitoringService.Alerts:output_type -> monitoring.AlertsResponse
	9,  // 24: monitoring.MonitoringService.AlertManagers:output_type -> monitoring.AlertManagersResponse
	11, // 25: monitoring.MonitoringService.CleanTombstones:output_type -> monitoring.CleanTombstonesResponse
	13, // 26: monitoring.MonitoringService.Config:output_type -> monitoring.ConfigResponse
	15, // 27: monitoring.MonitoringService.DeleteSeries:output_type -> monitoring.DeleteSeriesResponse
	17, // 28: monitoring.MonitoringService.Flags:output_type -> monitoring.FlagsResponse
	19, // 29: monitoring.MonitoringService.LabelNames:output_type -> monitoring.LabelNamesResponse
	21, // 30: monitoring.MonitoringService.LabelValues:output_type -> monitoring.LabelValuesResponse
	23, // 31: monitoring.MonitoringService.Query:output_type -> monitoring.QueryResponse
	25, // 32: monitoring.MonitoringService.QueryRange:output_type -> monitoring.QueryRangeResponse
	27, // 33: monitoring.MonitoringService.Series:output_type -> monitoring.SeriesResponse
	29, // 34: monitoring.MonitoringService.Snapshot:output_type -> monitoring.SnapshotResponse
	31, // 35: monitoring.MonitoringService.Rules:output_type -> monitoring.RulesResponse
	33, // 36: monitoring.MonitoringService.Targets:output_type -> monitoring.TargetsResponse
	35, // 37: monitoring.MonitoringService.TargetsMetadata:output_type -> monitoring.TargetsMetadataResponse
	20, // [20:38] is the sub-list for method output_type
	2,  // [2:20] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_monitoring_proto_init() }
func file_monitoring_proto_init() {
	if File_monitoring_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_monitoring_proto_rawDesc), len(file_monitoring_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   37,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_monitoring_proto_goTypes,
		DependencyIndexes: file_monitoring_proto_depIdxs,
		EnumInfos:         file_monitoring_proto_enumTypes,
		MessageInfos:      file_monitoring_proto_msgTypes,
	}.Build()
	File_monitoring_proto = out.File
	file_monitoring_proto_goTypes = nil
	file_monitoring_proto_depIdxs = nil
}
