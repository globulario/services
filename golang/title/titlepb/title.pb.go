// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v3.21.12
// source: title.proto

package titlepb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Represents a person with a role in the entertainment industry.
type Person struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	ID       string                 `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`             // Unique identifier for the person.
	URL      string                 `protobuf:"bytes,2,opt,name=URL,proto3" json:"URL,omitempty"`           // URL to the person's profile or information page.
	FullName string                 `protobuf:"bytes,3,opt,name=FullName,proto3" json:"FullName,omitempty"` // Full name of the person.
	Aliases  []string               `protobuf:"bytes,4,rep,name=Aliases,proto3" json:"Aliases,omitempty"`   // List of known aliases or stage names.
	// Optional information about the person
	Picture      string `protobuf:"bytes,5,opt,name=Picture,proto3" json:"Picture,omitempty"`           // URL to the profile picture.
	Biography    string `protobuf:"bytes,6,opt,name=Biography,proto3" json:"Biography,omitempty"`       // Short biography or description of the person.
	CareerStatus string `protobuf:"bytes,7,opt,name=CareerStatus,proto3" json:"CareerStatus,omitempty"` // Current career status (e.g., active, inactive).
	Gender       string `protobuf:"bytes,8,opt,name=Gender,proto3" json:"Gender,omitempty"`             // Gender of the person.
	BirthPlace   string `protobuf:"bytes,9,opt,name=BirthPlace,proto3" json:"BirthPlace,omitempty"`     // Place of birth.
	BirthDate    string `protobuf:"bytes,10,opt,name=BirthDate,proto3" json:"BirthDate,omitempty"`      // Date of birth in a string format.
	// Related to their role in titles
	Directing []string `protobuf:"bytes,11,rep,name=Directing,proto3" json:"Directing,omitempty"` // Titles directed by the person.
	Writing   []string `protobuf:"bytes,12,rep,name=Writing,proto3" json:"Writing,omitempty"`     // Titles written by the person.
	Acting    []string `protobuf:"bytes,13,rep,name=Acting,proto3" json:"Acting,omitempty"`       // Titles where the person acted.
	// Related to video appearances
	Casting       []string `protobuf:"bytes,14,rep,name=Casting,proto3" json:"Casting,omitempty"` // Videos where the person appears.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Person) Reset() {
	*x = Person{}
	mi := &file_title_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Person) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Person) ProtoMessage() {}

func (x *Person) ProtoReflect() protoreflect.Message {
	mi := &file_title_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Person.ProtoReflect.Descriptor instead.
func (*Person) Descriptor() ([]byte, []int) {
	return file_title_proto_rawDescGZIP(), []int{0}
}

func (x *Person) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Person) GetURL() string {
	if x != nil {
		return x.URL
	}
	return ""
}

func (x *Person) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

func (x *Person) GetAliases() []string {
	if x != nil {
		return x.Aliases
	}
	return nil
}

func (x *Person) GetPicture() string {
	if x != nil {
		return x.Picture
	}
	return ""
}

func (x *Person) GetBiography() string {
	if x != nil {
		return x.Biography
	}
	return ""
}

func (x *Person) GetCareerStatus() string {
	if x != nil {
		return x.CareerStatus
	}
	return ""
}

func (x *Person) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *Person) GetBirthPlace() string {
	if x != nil {
		return x.BirthPlace
	}
	return ""
}

func (x *Person) GetBirthDate() string {
	if x != nil {
		return x.BirthDate
	}
	return ""
}

func (x *Person) GetDirecting() []string {
	if x != nil {
		return x.Directing
	}
	return nil
}

func (x *Person) GetWriting() []string {
	if x != nil {
		return x.Writing
	}
	return nil
}

func (x *Person) GetActing() []string {
	if x != nil {
		return x.Acting
	}
	return nil
}

func (x *Person) GetCasting() []string {
	if x != nil {
		return x.Casting
	}
	return nil
}

// Represents a poster linked to a media title.
type Poster struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ID            string                 `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`                 // Unique identifier for the poster.
	TitleId       string                 `protobuf:"bytes,2,opt,name=titleId,proto3" json:"titleId,omitempty"`       // ID of the linked title (video/audio).
	URL           string                 `protobuf:"bytes,3,opt,name=URL,proto3" json:"URL,omitempty"`               // URL of the video preview or video itself.
	ContentUrl    string                 `protobuf:"bytes,4,opt,name=ContentUrl,proto3" json:"ContentUrl,omitempty"` // URL of the poster image.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Poster) Reset() {
	*x = Poster{}
	mi := &file_title_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Poster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Poster) ProtoMessage() {}

func (x *Poster) ProtoReflect() protoreflect.Message {
	mi := &file_title_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Poster.ProtoReflect.Descriptor instead.
func (*Poster) Descriptor() ([]byte, []int) {
	return file_title_proto_rawDescGZIP(), []int{1}
}

func (x *Poster) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Poster) GetTitleId() string {
	if x != nil {
		return x.TitleId
	}
	return ""
}

func (x *Poster) GetURL() string {
	if x != nil {
		return x.URL
	}
	return ""
}

func (x *Poster) GetContentUrl() string {
	if x != nil {
		return x.ContentUrl
	}
	return ""
}

// Represents a preview of a media title.
type Preview struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ID            string                 `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	TitleId       string                 `protobuf:"bytes,2,opt,name=titleId,proto3" json:"titleId,omitempty"`       // Can also be linked to a video.
	URL           string                 `protobuf:"bytes,3,opt,name=URL,proto3" json:"URL,omitempty"`               // URL of the preview content.
	ContentUrl    string                 `protobuf:"bytes,4,opt,name=ContentUrl,proto3" json:"ContentUrl,omitempty"` // URL of the preview image or video.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Preview) Reset() {
	*x = Preview{}
	mi := &file_title_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Preview) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Preview) ProtoMessage() {}

func (x *Preview) ProtoReflect() protoreflect.Message {
	mi := &file_title_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Preview.ProtoReflect.Descriptor instead.
func (*Preview) Descriptor() ([]byte, []int) {
	return file_title_proto_rawDescGZIP(), []int{2}
}

func (x *Preview) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Preview) GetTitleId() string {
	if x != nil {
		return x.TitleId
	}
	return ""
}

func (x *Preview) GetURL() string {
	if x != nil {
		return x.URL
	}
	return ""
}

func (x *Preview) GetContentUrl() string {
	if x != nil {
		return x.ContentUrl
	}
	return ""
}

// Represents a publisher of media content.
type Publisher struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ID            string                 `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`     // Unique identifier for the publisher.
	URL           string                 `protobuf:"bytes,2,opt,name=URL,proto3" json:"URL,omitempty"`   // URL of the publisher's website or profile.
	Name          string                 `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"` // Name of the publisher.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Publisher) Reset() {
	*x = Publisher{}
	mi := &file_title_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Publisher) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Publisher) ProtoMessage() {}

func (x *Publisher) ProtoReflect() protoreflect.Message {
	mi := &file_title_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Publisher.ProtoReflect.Descriptor instead.
func (*Publisher) Descriptor() ([]byte, []int) {
	return file_title_proto_rawDescGZIP(), []int{3}
}

func (x *Publisher) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Publisher) GetURL() string {
	if x != nil {
		return x.URL
	}
	return ""
}

func (x *Publisher) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// Represents a video and its metadata.
type Video struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ID            string                 `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	URL           string                 `protobuf:"bytes,2,opt,name=URL,proto3" json:"URL,omitempty"`                 // Original URL of the video.
	Title         string                 `protobuf:"bytes,3,opt,name=Title,proto3" json:"Title,omitempty"`             // Title of the video.
	Description   string                 `protobuf:"bytes,4,opt,name=Description,proto3" json:"Description,omitempty"` // Short description.
	PublisherID   *Publisher             `protobuf:"bytes,5,opt,name=PublisherID,proto3" json:"PublisherID,omitempty"` // Publisher information.
	Count         int64                  `protobuf:"varint,6,opt,name=Count,proto3" json:"Count,omitempty"`            // View count.
	Rating        float32                `protobuf:"fixed32,7,opt,name=Rating,proto3" json:"Rating,omitempty"`         // Average rating score.
	Likes         int64                  `protobuf:"varint,8,opt,name=Likes,proto3" json:"Likes,omitempty"`            // Number of likes.
	Date          string                 `protobuf:"bytes,9,opt,name=Date,proto3" json:"Date,omitempty"`               // Publish date.
	Genres        []string               `protobuf:"bytes,10,rep,name=Genres,proto3" json:"Genres,omitempty"`          // Genres or categories of the video.
	Tags          []string               `protobuf:"bytes,11,rep,name=Tags,proto3" json:"Tags,omitempty"`              // Tags or keywords associated with the video.
	Casting       []*Person              `protobuf:"bytes,12,rep,name=Casting,proto3" json:"Casting,omitempty"`        // List of people appearing in the video.
	Poster        *Poster                `protobuf:"bytes,13,opt,name=poster,proto3" json:"poster,omitempty"`          // Associated poster.
	Preview       *Preview               `protobuf:"bytes,14,opt,name=preview,proto3" json:"preview,omitempty"`        // Associated preview.
	Duration      int32                  `protobuf:"varint,15,opt,name=Duration,proto3" json:"Duration,omitempty"`     // Duration in seconds.
	UUID          string                 `protobuf:"bytes,16,opt,name=UUID,proto3" json:"UUID,omitempty"`              // Unique identifier.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Video) Reset() {
	*x = Video{}
	mi := &file_title_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Video) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Video) ProtoMessage() {}

func (x *Video) ProtoReflect() protoreflect.Message {
	mi := &file_title_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Video.ProtoReflect.Descriptor instead.
func (*Video) Descriptor() ([]byte, []int) {
	return file_title_proto_rawDescGZIP(), []int{4}
}

func (x *Video) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Video) GetURL() string {
	if x != nil {
		return x.URL
	}
	return ""
}

func (x *Video) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Video) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Video) GetPublisherID() *Publisher {
	if x != nil {
		return x.PublisherID
	}
	return nil
}

func (x *Video) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *Video) GetRating() float32 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *Video) GetLikes() int64 {
	if x != nil {
		return x.Likes
	}
	return 0
}

func (x *Video) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *Video) GetGenres() []string {
	if x != nil {
		return x.Genres
	}
	return nil
}

func (x *Video) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *Video) GetCasting() []*Person {
	if x != nil {
		return x.Casting
	}
	return nil
}

func (x *Video) GetPoster() *Poster {
	if x != nil {
		return x.Poster
	}
	return nil
}

func (x *Video) GetPreview() *Preview {
	if x != nil {
		return x.Preview
	}
	return nil
}

func (x *Video) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *Video) GetUUID() string {
	if x != nil {
		return x.UUID
	}
	return ""
}

// A collection of videos.
type Videos struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Videos        []*Video               `protobuf:"bytes,1,rep,name=videos,proto3" json:"videos,omitempty"` // List of videos.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Videos) Reset() {
	*x = Videos{}
	mi := &file_title_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Videos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Videos) ProtoMessage() {}

func (x *Videos) ProtoReflect() protoreflect.Message {
	mi := &file_title_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Videos.ProtoReflect.Descriptor instead.
func (*Videos) Descriptor() ([]byte, []int) {
	return file_title_proto_rawDescGZIP(), []int{5}
}

func (x *Videos) GetVideos() []*Video {
	if x != nil {
		return x.Videos
	}
	return nil
}

// Request to create a new video entry.
type CreateVideoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Video         *Video                 `protobuf:"bytes,1,opt,name=video,proto3" json:"video,omitempty"`         // Video data to be created.
	IndexPath     string                 `protobuf:"bytes,2,opt,name=indexPath,proto3" json:"indexPath,omitempty"` // Path where the video data will be stored.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateVideoRequest) Reset() {
	*x = CreateVideoRequest{}
	mi := &file_title_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateVideoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVideoRequest) ProtoMessage() {}

func (x *CreateVideoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_title_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVideoRequest.ProtoReflect.Descriptor instead.
func (*CreateVideoRequest) Descriptor() ([]byte, []int) {
	return file_title_proto_rawDescGZIP(), []int{6}
}

func (x *CreateVideoRequest) GetVideo() *Video {
	if x != nil {
		return x.Video
	}
	return nil
}

func (x *CreateVideoRequest) GetIndexPath() string {
	if x != nil {
		return x.IndexPath
	}
	return ""
}

type CreateVideoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateVideoResponse) Reset() {
	*x = CreateVideoResponse{}
	mi := &file_title_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateVideoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVideoResponse) ProtoMessage() {}

func (x *CreateVideoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_title_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVideoResponse.ProtoReflect.Descriptor instead.
func (*CreateVideoResponse) Descriptor() ([]byte, []int) {
	return file_title_proto_rawDescGZIP(), []int{7}
}

// Request to retrieve a video by its ID.
type GetVideoByIdRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	VideoId       string                 `protobuf:"bytes,1,opt,name=videoId,proto3" json:"videoId,omitempty"`     // ID of the video to retrieve.
	IndexPath     string                 `protobuf:"bytes,2,opt,name=indexPath,proto3" json:"indexPath,omitempty"` // Path where the video data is stored.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetVideoByIdRequest) Reset() {
	*x = GetVideoByIdRequest{}
	mi := &file_title_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVideoByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVideoByIdRequest) ProtoMessage() {}

func (x *GetVideoByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_title_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVideoByIdRequest.ProtoReflect.Descriptor instead.
func (*GetVideoByIdRequest) Descriptor() ([]byte, []int) {
	return file_title_proto_rawDescGZIP(), []int{8}
}

func (x *GetVideoByIdRequest) GetVideoId() string {
	if x != nil {
		return x.VideoId
	}
	return ""
}

func (x *GetVideoByIdRequest) GetIndexPath() string {
	if x != nil {
		return x.IndexPath
	}
	return ""
}

type GetVideoByIdResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Video         *Video                 `protobuf:"bytes,1,opt,name=video,proto3" json:"video,omitempty"`           // Retrieved video data.
	FilesPaths    []string               `protobuf:"bytes,3,rep,name=filesPaths,proto3" json:"filesPaths,omitempty"` // Paths to associated files or resources.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetVideoByIdResponse) Reset() {
	*x = GetVideoByIdResponse{}
	mi := &file_title_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVideoByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVideoByIdResponse) ProtoMessage() {}

func (x *GetVideoByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_title_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVideoByIdResponse.ProtoReflect.Descriptor instead.
func (*GetVideoByIdResponse) Descriptor() ([]byte, []int) {
	return file_title_proto_rawDescGZIP(), []int{9}
}

func (x *GetVideoByIdResponse) GetVideo() *Video {
	if x != nil {
		return x.Video
	}
	return nil
}

func (x *GetVideoByIdResponse) GetFilesPaths() []string {
	if x != nil {
		return x.FilesPaths
	}
	return nil
}

// Request to delete a video from the database.
type DeleteVideoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	VideoId       string                 `protobuf:"bytes,1,opt,name=videoId,proto3" json:"videoId,omitempty"`     // ID of the video to be deleted.
	IndexPath     string                 `protobuf:"bytes,2,opt,name=indexPath,proto3" json:"indexPath,omitempty"` // Path where the video data is stored.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteVideoRequest) Reset() {
	*x = DeleteVideoRequest{}
	mi := &file_title_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteVideoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteVideoRequest) ProtoMessage() {}

func (x *DeleteVideoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_title_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteVideoRequest.ProtoReflect.Descriptor instead.
func (*DeleteVideoRequest) Descriptor() ([]byte, []int) {
	return file_title_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteVideoRequest) GetVideoId() string {
	if x != nil {
		return x.VideoId
	}
	return ""
}

func (x *DeleteVideoRequest) GetIndexPath() string {
	if x != nil {
		return x.IndexPath
	}
	return ""
}

type DeleteVideoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteVideoResponse) Reset() {
	*x = DeleteVideoResponse{}
	mi := &file_title_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteVideoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteVideoResponse) ProtoMessage() {}

func (x *DeleteVideoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_title_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteVideoResponse.ProtoReflect.Descriptor instead.
func (*DeleteVideoResponse) Descriptor() ([]byte, []int) {
	return file_title_proto_rawDescGZIP(), []int{11}
}

// Request to update metadata of an existing video.
type UpdateVideoMetadataRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Video         *Video                 `protobuf:"bytes,1,opt,name=video,proto3" json:"video,omitempty"`         // Updated video information.
	IndexPath     string                 `protobuf:"bytes,2,opt,name=indexPath,proto3" json:"indexPath,omitempty"` // Path where the video data is stored.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateVideoMetadataRequest) Reset() {
	*x = UpdateVideoMetadataRequest{}
	mi := &file_title_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateVideoMetadataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateVideoMetadataRequest) ProtoMessage() {}

func (x *UpdateVideoMetadataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_title_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateVideoMetadataRequest.ProtoReflect.Descriptor instead.
func (*UpdateVideoMetadataRequest) Descriptor() ([]byte, []int) {
	return file_title_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateVideoMetadataRequest) GetVideo() *Video {
	if x != nil {
		return x.Video
	}
	return nil
}

func (x *UpdateVideoMetadataRequest) GetIndexPath() string {
	if x != nil {
		return x.IndexPath
	}
	return ""
}

type UpdateVideoMetadataResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateVideoMetadataResponse) Reset() {
	*x = UpdateVideoMetadataResponse{}
	mi := &file_title_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateVideoMetadataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateVideoMetadataResponse) ProtoMessage() {}

func (x *UpdateVideoMetadataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_title_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateVideoMetadataResponse.ProtoReflect.Descriptor instead.
func (*UpdateVideoMetadataResponse) Descriptor() ([]byte, []int) {
	return file_title_proto_rawDescGZIP(), []int{13}
}

// Represents a media title (like a movie, TV show, etc.).
type Title struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ID            string                 `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`                        // Unique identifier for the title.
	URL           string                 `protobuf:"bytes,2,opt,name=URL,proto3" json:"URL,omitempty"`                      // URL to more information about the title.
	Name          string                 `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`                    // Name of the title.
	Type          string                 `protobuf:"bytes,4,opt,name=Type,proto3" json:"Type,omitempty"`                    // Type of the title (e.g., movie, series).
	Year          int32                  `protobuf:"varint,5,opt,name=Year,proto3" json:"Year,omitempty"`                   // Release year.
	Rating        float32                `protobuf:"fixed32,6,opt,name=Rating,proto3" json:"Rating,omitempty"`              // Average rating.
	RatingCount   int32                  `protobuf:"varint,7,opt,name=RatingCount,proto3" json:"RatingCount,omitempty"`     // Number of ratings.
	Directors     []*Person              `protobuf:"bytes,8,rep,name=Directors,proto3" json:"Directors,omitempty"`          // List of directors.
	Writers       []*Person              `protobuf:"bytes,9,rep,name=Writers,proto3" json:"Writers,omitempty"`              // List of writers.
	Actors        []*Person              `protobuf:"bytes,10,rep,name=Actors,proto3" json:"Actors,omitempty"`               // List of actors.
	Genres        []string               `protobuf:"bytes,11,rep,name=Genres,proto3" json:"Genres,omitempty"`               // Genres of the title.
	Language      []string               `protobuf:"bytes,12,rep,name=Language,proto3" json:"Language,omitempty"`           // Languages available.
	Nationalities []string               `protobuf:"bytes,13,rep,name=Nationalities,proto3" json:"Nationalities,omitempty"` // Nationalities involved in the title.
	Description   string                 `protobuf:"bytes,14,opt,name=Description,proto3" json:"Description,omitempty"`     // Description of the title.
	Poster        *Poster                `protobuf:"bytes,15,opt,name=Poster,proto3" json:"Poster,omitempty"`               // Associated poster.
	AKA           []string               `protobuf:"bytes,16,rep,name=AKA,proto3" json:"AKA,omitempty"`                     // Also Known As (alternative titles).
	Duration      string                 `protobuf:"bytes,17,opt,name=Duration,proto3" json:"Duration,omitempty"`           // Duration of the title.
	Season        int32                  `protobuf:"varint,18,opt,name=Season,proto3" json:"Season,omitempty"`              // Season number, if applicable.
	Episode       int32                  `protobuf:"varint,19,opt,name=Episode,proto3" json:"Episode,omitempty"`            // Episode number, if applicable.
	Serie         string                 `protobuf:"bytes,20,opt,name=Serie,proto3" json:"Serie,omitempty"`                 // Series name, if part of a series.
	UUID          string                 `protobuf:"bytes,21,opt,name=UUID,proto3" json:"UUID,omitempty"`                   // Unique identifier.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Title) Reset() {
	*x = Title{}
	mi := &file_title_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Title) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Title) ProtoMessage() {}

func (x *Title) ProtoReflect() protoreflect.Message {
	mi := &file_title_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Title.ProtoReflect.Descriptor instead.
func (*Title) Descriptor() ([]byte, []int) {
	return file_title_proto_rawDescGZIP(), []int{14}
}

func (x *Title) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Title) GetURL() string {
	if x != nil {
		return x.URL
	}
	return ""
}

func (x *Title) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Title) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Title) GetYear() int32 {
	if x != nil {
		return x.Year
	}
	return 0
}

func (x *Title) GetRating() float32 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *Title) GetRatingCount() int32 {
	if x != nil {
		return x.RatingCount
	}
	return 0
}

func (x *Title) GetDirectors() []*Person {
	if x != nil {
		return x.Directors
	}
	return nil
}

func (x *Title) GetWriters() []*Person {
	if x != nil {
		return x.Writers
	}
	return nil
}

func (x *Title) GetActors() []*Person {
	if x != nil {
		return x.Actors
	}
	return nil
}

func (x *Title) GetGenres() []string {
	if x != nil {
		return x.Genres
	}
	return nil
}

func (x *Title) GetLanguage() []string {
	if x != nil {
		return x.Language
	}
	return nil
}

func (x *Title) GetNationalities() []string {
	if x != nil {
		return x.Nationalities
	}
	return nil
}

func (x *Title) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Title) GetPoster() *Poster {
	if x != nil {
		return x.Poster
	}
	return nil
}

func (x *Title) GetAKA() []string {
	if x != nil {
		return x.AKA
	}
	return nil
}

func (x *Title) GetDuration() string {
	if x != nil {
		return x.Duration
	}
	return ""
}

func (x *Title) GetSeason() int32 {
	if x != nil {
		return x.Season
	}
	return 0
}

func (x *Title) GetEpisode() int32 {
	if x != nil {
		return x.Episode
	}
	return 0
}

func (x *Title) GetSerie() string {
	if x != nil {
		return x.Serie
	}
	return ""
}

func (x *Title) GetUUID() string {
	if x != nil {
		return x.UUID
	}
	return ""
}

// Collection of titles.
type Titles struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Titles        []*Title               `protobuf:"bytes,1,rep,name=titles,proto3" json:"titles,omitempty"` // List of titles.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Titles) Reset() {
	*x = Titles{}
	mi := &file_title_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Titles) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Titles) ProtoMessage() {}

func (x *Titles) ProtoReflect() protoreflect.Message {
	mi := &file_title_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Titles.ProtoReflect.Descriptor instead.
func (*Titles) Descriptor() ([]byte, []int) {
	return file_title_proto_rawDescGZIP(), []int{15}
}

func (x *Titles) GetTitles() []*Title {
	if x != nil {
		return x.Titles
	}
	return nil
}

// Request to create a new title entry in the database.
type CreateTitleRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Title         *Title                 `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`         // Title data to be created.
	IndexPath     string                 `protobuf:"bytes,2,opt,name=indexPath,proto3" json:"indexPath,omitempty"` // Path where the title data will be stored.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTitleRequest) Reset() {
	*x = CreateTitleRequest{}
	mi := &file_title_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTitleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTitleRequest) ProtoMessage() {}

func (x *CreateTitleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_title_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTitleRequest.ProtoReflect.Descriptor instead.
func (*CreateTitleRequest) Descriptor() ([]byte, []int) {
	return file_title_proto_rawDescGZIP(), []int{16}
}

func (x *CreateTitleRequest) GetTitle() *Title {
	if x != nil {
		return x.Title
	}
	return nil
}

func (x *CreateTitleRequest) GetIndexPath() string {
	if x != nil {
		return x.IndexPath
	}
	return ""
}

type CreateTitleResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTitleResponse) Reset() {
	*x = CreateTitleResponse{}
	mi := &file_title_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTitleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTitleResponse) ProtoMessage() {}

func (x *CreateTitleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_title_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTitleResponse.ProtoReflect.Descriptor instead.
func (*CreateTitleResponse) Descriptor() ([]byte, []int) {
	return file_title_proto_rawDescGZIP(), []int{17}
}

// Request to retrieve a title by its ID.
type GetTitleByIdRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TitleId       string                 `protobuf:"bytes,1,opt,name=titleId,proto3" json:"titleId,omitempty"`     // ID of the title to retrieve.
	IndexPath     string                 `protobuf:"bytes,2,opt,name=indexPath,proto3" json:"indexPath,omitempty"` // Path where the title data is stored.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTitleByIdRequest) Reset() {
	*x = GetTitleByIdRequest{}
	mi := &file_title_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTitleByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTitleByIdRequest) ProtoMessage() {}

func (x *GetTitleByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_title_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTitleByIdRequest.ProtoReflect.Descriptor instead.
func (*GetTitleByIdRequest) Descriptor() ([]byte, []int) {
	return file_title_proto_rawDescGZIP(), []int{18}
}

func (x *GetTitleByIdRequest) GetTitleId() string {
	if x != nil {
		return x.TitleId
	}
	return ""
}

func (x *GetTitleByIdRequest) GetIndexPath() string {
	if x != nil {
		return x.IndexPath
	}
	return ""
}

type GetTitleByIdResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Title         *Title                 `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`           // Retrieved title data.
	FilesPaths    []string               `protobuf:"bytes,3,rep,name=filesPaths,proto3" json:"filesPaths,omitempty"` // Paths to associated files or resources.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTitleByIdResponse) Reset() {
	*x = GetTitleByIdResponse{}
	mi := &file_title_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTitleByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTitleByIdResponse) ProtoMessage() {}

func (x *GetTitleByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_title_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTitleByIdResponse.ProtoReflect.Descriptor instead.
func (*GetTitleByIdResponse) Descriptor() ([]byte, []int) {
	return file_title_proto_rawDescGZIP(), []int{19}
}

func (x *GetTitleByIdResponse) GetTitle() *Title {
	if x != nil {
		return x.Title
	}
	return nil
}

func (x *GetTitleByIdResponse) GetFilesPaths() []string {
	if x != nil {
		return x.FilesPaths
	}
	return nil
}

// Request to delete a title from the database.
type DeleteTitleRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TitleId       string                 `protobuf:"bytes,1,opt,name=titleId,proto3" json:"titleId,omitempty"`     // ID of the title to be deleted.
	IndexPath     string                 `protobuf:"bytes,2,opt,name=indexPath,proto3" json:"indexPath,omitempty"` // Path where the title data is stored.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteTitleRequest) Reset() {
	*x = DeleteTitleRequest{}
	mi := &file_title_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteTitleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTitleRequest) ProtoMessage() {}

func (x *DeleteTitleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_title_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTitleRequest.ProtoReflect.Descriptor instead.
func (*DeleteTitleRequest) Descriptor() ([]byte, []int) {
	return file_title_proto_rawDescGZIP(), []int{20}
}

func (x *DeleteTitleRequest) GetTitleId() string {
	if x != nil {
		return x.TitleId
	}
	return ""
}

func (x *DeleteTitleRequest) GetIndexPath() string {
	if x != nil {
		return x.IndexPath
	}
	return ""
}

type DeleteTitleResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteTitleResponse) Reset() {
	*x = DeleteTitleResponse{}
	mi := &file_title_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteTitleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTitleResponse) ProtoMessage() {}

func (x *DeleteTitleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_title_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTitleResponse.ProtoReflect.Descriptor instead.
func (*DeleteTitleResponse) Descriptor() ([]byte, []int) {
	return file_title_proto_rawDescGZIP(), []int{21}
}

// Request to update metadata of an existing title.
type UpdateTitleMetadataRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Title         *Title                 `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`         // Updated title information.
	IndexPath     string                 `protobuf:"bytes,2,opt,name=indexPath,proto3" json:"indexPath,omitempty"` // Path where the title data is stored.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateTitleMetadataRequest) Reset() {
	*x = UpdateTitleMetadataRequest{}
	mi := &file_title_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTitleMetadataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTitleMetadataRequest) ProtoMessage() {}

func (x *UpdateTitleMetadataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_title_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTitleMetadataRequest.ProtoReflect.Descriptor instead.
func (*UpdateTitleMetadataRequest) Descriptor() ([]byte, []int) {
	return file_title_proto_rawDescGZIP(), []int{22}
}

func (x *UpdateTitleMetadataRequest) GetTitle() *Title {
	if x != nil {
		return x.Title
	}
	return nil
}

func (x *UpdateTitleMetadataRequest) GetIndexPath() string {
	if x != nil {
		return x.IndexPath
	}
	return ""
}

type UpdateTitleMetadataResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateTitleMetadataResponse) Reset() {
	*x = UpdateTitleMetadataResponse{}
	mi := &file_title_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTitleMetadataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTitleMetadataResponse) ProtoMessage() {}

func (x *UpdateTitleMetadataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_title_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTitleMetadataResponse.ProtoReflect.Descriptor instead.
func (*UpdateTitleMetadataResponse) Descriptor() ([]byte, []int) {
	return file_title_proto_rawDescGZIP(), []int{23}
}

// Request to associate a file with a title.
type AssociateFileWithTitleRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TitleId       string                 `protobuf:"bytes,1,opt,name=titleId,proto3" json:"titleId,omitempty"`     // ID of the title.
	FilePath      string                 `protobuf:"bytes,2,opt,name=filePath,proto3" json:"filePath,omitempty"`   // Path of the file to associate.
	IndexPath     string                 `protobuf:"bytes,3,opt,name=indexPath,proto3" json:"indexPath,omitempty"` // Path where the title data is stored.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AssociateFileWithTitleRequest) Reset() {
	*x = AssociateFileWithTitleRequest{}
	mi := &file_title_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AssociateFileWithTitleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssociateFileWithTitleRequest) ProtoMessage() {}

func (x *AssociateFileWithTitleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_title_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssociateFileWithTitleRequest.ProtoReflect.Descriptor instead.
func (*AssociateFileWithTitleRequest) Descriptor() ([]byte, []int) {
	return file_title_proto_rawDescGZIP(), []int{24}
}

func (x *AssociateFileWithTitleRequest) GetTitleId() string {
	if x != nil {
		return x.TitleId
	}
	return ""
}

func (x *AssociateFileWithTitleRequest) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *AssociateFileWithTitleRequest) GetIndexPath() string {
	if x != nil {
		return x.IndexPath
	}
	return ""
}

// Response for associating a file with a title - intentionally left blank
type AssociateFileWithTitleResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AssociateFileWithTitleResponse) Reset() {
	*x = AssociateFileWithTitleResponse{}
	mi := &file_title_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AssociateFileWithTitleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssociateFileWithTitleResponse) ProtoMessage() {}

func (x *AssociateFileWithTitleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_title_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssociateFileWithTitleResponse.ProtoReflect.Descriptor instead.
func (*AssociateFileWithTitleResponse) Descriptor() ([]byte, []int) {
	return file_title_proto_rawDescGZIP(), []int{25}
}

// Request to dissociate a file from a title
type DissociateFileWithTitleRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TitleId       string                 `protobuf:"bytes,1,opt,name=titleId,proto3" json:"titleId,omitempty"`     // ID of the title to dissociate
	FilePath      string                 `protobuf:"bytes,2,opt,name=filePath,proto3" json:"filePath,omitempty"`   // Path of the file to dissociate
	IndexPath     string                 `protobuf:"bytes,3,opt,name=indexPath,proto3" json:"indexPath,omitempty"` // Index path for the dissociation
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DissociateFileWithTitleRequest) Reset() {
	*x = DissociateFileWithTitleRequest{}
	mi := &file_title_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DissociateFileWithTitleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DissociateFileWithTitleRequest) ProtoMessage() {}

func (x *DissociateFileWithTitleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_title_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DissociateFileWithTitleRequest.ProtoReflect.Descriptor instead.
func (*DissociateFileWithTitleRequest) Descriptor() ([]byte, []int) {
	return file_title_proto_rawDescGZIP(), []int{26}
}

func (x *DissociateFileWithTitleRequest) GetTitleId() string {
	if x != nil {
		return x.TitleId
	}
	return ""
}

func (x *DissociateFileWithTitleRequest) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *DissociateFileWithTitleRequest) GetIndexPath() string {
	if x != nil {
		return x.IndexPath
	}
	return ""
}

// Response for dissociating a file from a title - intentionally left blank
type DissociateFileWithTitleResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DissociateFileWithTitleResponse) Reset() {
	*x = DissociateFileWithTitleResponse{}
	mi := &file_title_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DissociateFileWithTitleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DissociateFileWithTitleResponse) ProtoMessage() {}

func (x *DissociateFileWithTitleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_title_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DissociateFileWithTitleResponse.ProtoReflect.Descriptor instead.
func (*DissociateFileWithTitleResponse) Descriptor() ([]byte, []int) {
	return file_title_proto_rawDescGZIP(), []int{27}
}

// Request to get the list of titles associated with a file
type GetFileTitlesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FilePath      string                 `protobuf:"bytes,1,opt,name=filePath,proto3" json:"filePath,omitempty"`   // Path of the file
	IndexPath     string                 `protobuf:"bytes,2,opt,name=indexPath,proto3" json:"indexPath,omitempty"` // Index path for querying
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFileTitlesRequest) Reset() {
	*x = GetFileTitlesRequest{}
	mi := &file_title_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFileTitlesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFileTitlesRequest) ProtoMessage() {}

func (x *GetFileTitlesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_title_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFileTitlesRequest.ProtoReflect.Descriptor instead.
func (*GetFileTitlesRequest) Descriptor() ([]byte, []int) {
	return file_title_proto_rawDescGZIP(), []int{28}
}

func (x *GetFileTitlesRequest) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *GetFileTitlesRequest) GetIndexPath() string {
	if x != nil {
		return x.IndexPath
	}
	return ""
}

// Response containing the list of titles associated with a file
type GetFileTitlesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Titles        *Titles                `protobuf:"bytes,1,opt,name=titles,proto3" json:"titles,omitempty"` // List of titles associated with the file
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFileTitlesResponse) Reset() {
	*x = GetFileTitlesResponse{}
	mi := &file_title_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFileTitlesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFileTitlesResponse) ProtoMessage() {}

func (x *GetFileTitlesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_title_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFileTitlesResponse.ProtoReflect.Descriptor instead.
func (*GetFileTitlesResponse) Descriptor() ([]byte, []int) {
	return file_title_proto_rawDescGZIP(), []int{29}
}

func (x *GetFileTitlesResponse) GetTitles() *Titles {
	if x != nil {
		return x.Titles
	}
	return nil
}

// Request to get the list of videos associated with a file
type GetFileVideosRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FilePath      string                 `protobuf:"bytes,1,opt,name=filePath,proto3" json:"filePath,omitempty"`   // Path of the file
	IndexPath     string                 `protobuf:"bytes,2,opt,name=indexPath,proto3" json:"indexPath,omitempty"` // Index path for querying
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFileVideosRequest) Reset() {
	*x = GetFileVideosRequest{}
	mi := &file_title_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFileVideosRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFileVideosRequest) ProtoMessage() {}

func (x *GetFileVideosRequest) ProtoReflect() protoreflect.Message {
	mi := &file_title_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFileVideosRequest.ProtoReflect.Descriptor instead.
func (*GetFileVideosRequest) Descriptor() ([]byte, []int) {
	return file_title_proto_rawDescGZIP(), []int{30}
}

func (x *GetFileVideosRequest) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *GetFileVideosRequest) GetIndexPath() string {
	if x != nil {
		return x.IndexPath
	}
	return ""
}

// Response containing the list of videos associated with a file
type GetFileVideosResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Videos        *Videos                `protobuf:"bytes,1,opt,name=videos,proto3" json:"videos,omitempty"` // List of videos associated with the file
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFileVideosResponse) Reset() {
	*x = GetFileVideosResponse{}
	mi := &file_title_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFileVideosResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFileVideosResponse) ProtoMessage() {}

func (x *GetFileVideosResponse) ProtoReflect() protoreflect.Message {
	mi := &file_title_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFileVideosResponse.ProtoReflect.Descriptor instead.
func (*GetFileVideosResponse) Descriptor() ([]byte, []int) {
	return file_title_proto_rawDescGZIP(), []int{31}
}

func (x *GetFileVideosResponse) GetVideos() *Videos {
	if x != nil {
		return x.Videos
	}
	return nil
}

// Request to get the list of files associated with a title
type GetTitleFilesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TitleId       string                 `protobuf:"bytes,1,opt,name=titleId,proto3" json:"titleId,omitempty"`     // ID of the title
	IndexPath     string                 `protobuf:"bytes,2,opt,name=indexPath,proto3" json:"indexPath,omitempty"` // Index path for querying
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTitleFilesRequest) Reset() {
	*x = GetTitleFilesRequest{}
	mi := &file_title_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTitleFilesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTitleFilesRequest) ProtoMessage() {}

func (x *GetTitleFilesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_title_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTitleFilesRequest.ProtoReflect.Descriptor instead.
func (*GetTitleFilesRequest) Descriptor() ([]byte, []int) {
	return file_title_proto_rawDescGZIP(), []int{32}
}

func (x *GetTitleFilesRequest) GetTitleId() string {
	if x != nil {
		return x.TitleId
	}
	return ""
}

func (x *GetTitleFilesRequest) GetIndexPath() string {
	if x != nil {
		return x.IndexPath
	}
	return ""
}

// Response containing the list of files associated with a title
type GetTitleFilesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FilePaths     []string               `protobuf:"bytes,1,rep,name=filePaths,proto3" json:"filePaths,omitempty"` // List of file paths associated with the title
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTitleFilesResponse) Reset() {
	*x = GetTitleFilesResponse{}
	mi := &file_title_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTitleFilesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTitleFilesResponse) ProtoMessage() {}

func (x *GetTitleFilesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_title_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTitleFilesResponse.ProtoReflect.Descriptor instead.
func (*GetTitleFilesResponse) Descriptor() ([]byte, []int) {
	return file_title_proto_rawDescGZIP(), []int{33}
}

func (x *GetTitleFilesResponse) GetFilePaths() []string {
	if x != nil {
		return x.FilePaths
	}
	return nil
}

// Snippet of a search result
type Snippet struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Field         string                 `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`         // Field of the snippet
	Fragments     []string               `protobuf:"bytes,2,rep,name=fragments,proto3" json:"fragments,omitempty"` // Fragments of the snippet
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Snippet) Reset() {
	*x = Snippet{}
	mi := &file_title_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Snippet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Snippet) ProtoMessage() {}

func (x *Snippet) ProtoReflect() protoreflect.Message {
	mi := &file_title_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Snippet.ProtoReflect.Descriptor instead.
func (*Snippet) Descriptor() ([]byte, []int) {
	return file_title_proto_rawDescGZIP(), []int{34}
}

func (x *Snippet) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *Snippet) GetFragments() []string {
	if x != nil {
		return x.Fragments
	}
	return nil
}

// A single search result hit
type SearchHit struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	Index    int32                  `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`      // Index of the hit
	Score    float64                `protobuf:"fixed64,2,opt,name=score,proto3" json:"score,omitempty"`     // Score of the hit
	Snippets []*Snippet             `protobuf:"bytes,3,rep,name=snippets,proto3" json:"snippets,omitempty"` // Snippets of the hit
	// The underlying values
	//
	// Types that are valid to be assigned to Result:
	//
	//	*SearchHit_Title
	//	*SearchHit_Video
	//	*SearchHit_Audio
	//	*SearchHit_Person
	Result        isSearchHit_Result `protobuf_oneof:"result"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchHit) Reset() {
	*x = SearchHit{}
	mi := &file_title_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchHit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchHit) ProtoMessage() {}

func (x *SearchHit) ProtoReflect() protoreflect.Message {
	mi := &file_title_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchHit.ProtoReflect.Descriptor instead.
func (*SearchHit) Descriptor() ([]byte, []int) {
	return file_title_proto_rawDescGZIP(), []int{35}
}

func (x *SearchHit) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *SearchHit) GetScore() float64 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *SearchHit) GetSnippets() []*Snippet {
	if x != nil {
		return x.Snippets
	}
	return nil
}

func (x *SearchHit) GetResult() isSearchHit_Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *SearchHit) GetTitle() *Title {
	if x != nil {
		if x, ok := x.Result.(*SearchHit_Title); ok {
			return x.Title
		}
	}
	return nil
}

func (x *SearchHit) GetVideo() *Video {
	if x != nil {
		if x, ok := x.Result.(*SearchHit_Video); ok {
			return x.Video
		}
	}
	return nil
}

func (x *SearchHit) GetAudio() *Audio {
	if x != nil {
		if x, ok := x.Result.(*SearchHit_Audio); ok {
			return x.Audio
		}
	}
	return nil
}

func (x *SearchHit) GetPerson() *Person {
	if x != nil {
		if x, ok := x.Result.(*SearchHit_Person); ok {
			return x.Person
		}
	}
	return nil
}

type isSearchHit_Result interface {
	isSearchHit_Result()
}

type SearchHit_Title struct {
	Title *Title `protobuf:"bytes,4,opt,name=title,proto3,oneof"`
}

type SearchHit_Video struct {
	Video *Video `protobuf:"bytes,5,opt,name=video,proto3,oneof"`
}

type SearchHit_Audio struct {
	Audio *Audio `protobuf:"bytes,6,opt,name=audio,proto3,oneof"`
}

type SearchHit_Person struct {
	Person *Person `protobuf:"bytes,7,opt,name=person,proto3,oneof"`
}

func (*SearchHit_Title) isSearchHit_Result() {}

func (*SearchHit_Video) isSearchHit_Result() {}

func (*SearchHit_Audio) isSearchHit_Result() {}

func (*SearchHit_Person) isSearchHit_Result() {}

// Summary of the search results
type SearchSummary struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Query         string                 `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`  // The search input
	Total         uint64                 `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"` // Number of found matches
	Took          int64                  `protobuf:"varint,3,opt,name=took,proto3" json:"took,omitempty"`   // Time taken for the search
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchSummary) Reset() {
	*x = SearchSummary{}
	mi := &file_title_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchSummary) ProtoMessage() {}

func (x *SearchSummary) ProtoReflect() protoreflect.Message {
	mi := &file_title_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchSummary.ProtoReflect.Descriptor instead.
func (*SearchSummary) Descriptor() ([]byte, []int) {
	return file_title_proto_rawDescGZIP(), []int{36}
}

func (x *SearchSummary) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *SearchSummary) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *SearchSummary) GetTook() int64 {
	if x != nil {
		return x.Took
	}
	return 0
}

// A term within a search facet
type SearchFacetTerm struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Term          string                 `protobuf:"bytes,1,opt,name=term,proto3" json:"term,omitempty"`    // The term
	Count         int32                  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"` // Count of the term
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchFacetTerm) Reset() {
	*x = SearchFacetTerm{}
	mi := &file_title_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchFacetTerm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchFacetTerm) ProtoMessage() {}

func (x *SearchFacetTerm) ProtoReflect() protoreflect.Message {
	mi := &file_title_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchFacetTerm.ProtoReflect.Descriptor instead.
func (*SearchFacetTerm) Descriptor() ([]byte, []int) {
	return file_title_proto_rawDescGZIP(), []int{37}
}

func (x *SearchFacetTerm) GetTerm() string {
	if x != nil {
		return x.Term
	}
	return ""
}

func (x *SearchFacetTerm) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

// A facet in search results
type SearchFacet struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Field         string                 `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`  // Field of the facet
	Total         int32                  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"` // Total count for this facet
	Terms         []*SearchFacetTerm     `protobuf:"bytes,3,rep,name=terms,proto3" json:"terms,omitempty"`  // Terms in the facet
	Other         int32                  `protobuf:"varint,4,opt,name=other,proto3" json:"other,omitempty"` // Count of other terms
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchFacet) Reset() {
	*x = SearchFacet{}
	mi := &file_title_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchFacet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchFacet) ProtoMessage() {}

func (x *SearchFacet) ProtoReflect() protoreflect.Message {
	mi := &file_title_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchFacet.ProtoReflect.Descriptor instead.
func (*SearchFacet) Descriptor() ([]byte, []int) {
	return file_title_proto_rawDescGZIP(), []int{38}
}

func (x *SearchFacet) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *SearchFacet) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *SearchFacet) GetTerms() []*SearchFacetTerm {
	if x != nil {
		return x.Terms
	}
	return nil
}

func (x *SearchFacet) GetOther() int32 {
	if x != nil {
		return x.Other
	}
	return 0
}

// Facets in search results
type SearchFacets struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Facets        []*SearchFacet         `protobuf:"bytes,1,rep,name=facets,proto3" json:"facets,omitempty"` // List of facets
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchFacets) Reset() {
	*x = SearchFacets{}
	mi := &file_title_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchFacets) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchFacets) ProtoMessage() {}

func (x *SearchFacets) ProtoReflect() protoreflect.Message {
	mi := &file_title_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchFacets.ProtoReflect.Descriptor instead.
func (*SearchFacets) Descriptor() ([]byte, []int) {
	return file_title_proto_rawDescGZIP(), []int{39}
}

func (x *SearchFacets) GetFacets() []*SearchFacet {
	if x != nil {
		return x.Facets
	}
	return nil
}

// Request for searching titles
type SearchTitlesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Query         string                 `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`         // Search query
	Fields        []string               `protobuf:"bytes,2,rep,name=fields,proto3" json:"fields,omitempty"`       // Fields to search in
	IndexPath     string                 `protobuf:"bytes,3,opt,name=indexPath,proto3" json:"indexPath,omitempty"` // Index path for searching
	Size          int32                  `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`          // Size of the search result set
	Offset        int32                  `protobuf:"varint,5,opt,name=offset,proto3" json:"offset,omitempty"`      // Offset for the search results
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchTitlesRequest) Reset() {
	*x = SearchTitlesRequest{}
	mi := &file_title_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchTitlesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchTitlesRequest) ProtoMessage() {}

func (x *SearchTitlesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_title_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchTitlesRequest.ProtoReflect.Descriptor instead.
func (*SearchTitlesRequest) Descriptor() ([]byte, []int) {
	return file_title_proto_rawDescGZIP(), []int{40}
}

func (x *SearchTitlesRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *SearchTitlesRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *SearchTitlesRequest) GetIndexPath() string {
	if x != nil {
		return x.IndexPath
	}
	return ""
}

func (x *SearchTitlesRequest) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *SearchTitlesRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

// Response for searching titles
type SearchTitlesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Result:
	//
	//	*SearchTitlesResponse_Summary
	//	*SearchTitlesResponse_Hit
	//	*SearchTitlesResponse_Facets
	Result        isSearchTitlesResponse_Result `protobuf_oneof:"result"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchTitlesResponse) Reset() {
	*x = SearchTitlesResponse{}
	mi := &file_title_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchTitlesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchTitlesResponse) ProtoMessage() {}

func (x *SearchTitlesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_title_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchTitlesResponse.ProtoReflect.Descriptor instead.
func (*SearchTitlesResponse) Descriptor() ([]byte, []int) {
	return file_title_proto_rawDescGZIP(), []int{41}
}

func (x *SearchTitlesResponse) GetResult() isSearchTitlesResponse_Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *SearchTitlesResponse) GetSummary() *SearchSummary {
	if x != nil {
		if x, ok := x.Result.(*SearchTitlesResponse_Summary); ok {
			return x.Summary
		}
	}
	return nil
}

func (x *SearchTitlesResponse) GetHit() *SearchHit {
	if x != nil {
		if x, ok := x.Result.(*SearchTitlesResponse_Hit); ok {
			return x.Hit
		}
	}
	return nil
}

func (x *SearchTitlesResponse) GetFacets() *SearchFacets {
	if x != nil {
		if x, ok := x.Result.(*SearchTitlesResponse_Facets); ok {
			return x.Facets
		}
	}
	return nil
}

type isSearchTitlesResponse_Result interface {
	isSearchTitlesResponse_Result()
}

type SearchTitlesResponse_Summary struct {
	Summary *SearchSummary `protobuf:"bytes,1,opt,name=summary,proto3,oneof"` // Summary of the search
}

type SearchTitlesResponse_Hit struct {
	Hit *SearchHit `protobuf:"bytes,2,opt,name=hit,proto3,oneof"` // Individual hit of the search
}

type SearchTitlesResponse_Facets struct {
	Facets *SearchFacets `protobuf:"bytes,3,opt,name=facets,proto3,oneof"` // Facets of the search results
}

func (*SearchTitlesResponse_Summary) isSearchTitlesResponse_Result() {}

func (*SearchTitlesResponse_Hit) isSearchTitlesResponse_Result() {}

func (*SearchTitlesResponse_Facets) isSearchTitlesResponse_Result() {}

// Request for searching persons
type SearchPersonsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Query         string                 `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`         // Search query
	Fields        []string               `protobuf:"bytes,2,rep,name=fields,proto3" json:"fields,omitempty"`       // Fields to search in
	IndexPath     string                 `protobuf:"bytes,3,opt,name=indexPath,proto3" json:"indexPath,omitempty"` // Index path for searching
	Size          int32                  `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`          // Size of the search result set
	Offset        int32                  `protobuf:"varint,5,opt,name=offset,proto3" json:"offset,omitempty"`      // Offset for the search results
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchPersonsRequest) Reset() {
	*x = SearchPersonsRequest{}
	mi := &file_title_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchPersonsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchPersonsRequest) ProtoMessage() {}

func (x *SearchPersonsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_title_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchPersonsRequest.ProtoReflect.Descriptor instead.
func (*SearchPersonsRequest) Descriptor() ([]byte, []int) {
	return file_title_proto_rawDescGZIP(), []int{42}
}

func (x *SearchPersonsRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *SearchPersonsRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *SearchPersonsRequest) GetIndexPath() string {
	if x != nil {
		return x.IndexPath
	}
	return ""
}

func (x *SearchPersonsRequest) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *SearchPersonsRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

// Response for searching persons
type SearchPersonsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Contains either summary, a single hit, or facets of the search
	//
	// Types that are valid to be assigned to Result:
	//
	//	*SearchPersonsResponse_Summary
	//	*SearchPersonsResponse_Hit
	//	*SearchPersonsResponse_Facets
	Result        isSearchPersonsResponse_Result `protobuf_oneof:"result"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchPersonsResponse) Reset() {
	*x = SearchPersonsResponse{}
	mi := &file_title_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchPersonsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchPersonsResponse) ProtoMessage() {}

func (x *SearchPersonsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_title_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchPersonsResponse.ProtoReflect.Descriptor instead.
func (*SearchPersonsResponse) Descriptor() ([]byte, []int) {
	return file_title_proto_rawDescGZIP(), []int{43}
}

func (x *SearchPersonsResponse) GetResult() isSearchPersonsResponse_Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *SearchPersonsResponse) GetSummary() *SearchSummary {
	if x != nil {
		if x, ok := x.Result.(*SearchPersonsResponse_Summary); ok {
			return x.Summary
		}
	}
	return nil
}

func (x *SearchPersonsResponse) GetHit() *SearchHit {
	if x != nil {
		if x, ok := x.Result.(*SearchPersonsResponse_Hit); ok {
			return x.Hit
		}
	}
	return nil
}

func (x *SearchPersonsResponse) GetFacets() *SearchFacets {
	if x != nil {
		if x, ok := x.Result.(*SearchPersonsResponse_Facets); ok {
			return x.Facets
		}
	}
	return nil
}

type isSearchPersonsResponse_Result interface {
	isSearchPersonsResponse_Result()
}

type SearchPersonsResponse_Summary struct {
	Summary *SearchSummary `protobuf:"bytes,1,opt,name=summary,proto3,oneof"` // Summary of the search
}

type SearchPersonsResponse_Hit struct {
	Hit *SearchHit `protobuf:"bytes,2,opt,name=hit,proto3,oneof"` // Individual hit of the search
}

type SearchPersonsResponse_Facets struct {
	Facets *SearchFacets `protobuf:"bytes,3,opt,name=facets,proto3,oneof"` // Facets of the search results
}

func (*SearchPersonsResponse_Summary) isSearchPersonsResponse_Result() {}

func (*SearchPersonsResponse_Hit) isSearchPersonsResponse_Result() {}

func (*SearchPersonsResponse_Facets) isSearchPersonsResponse_Result() {}

// Request to create a publisher
type CreatePublisherRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Publisher     *Publisher             `protobuf:"bytes,1,opt,name=publisher,proto3" json:"publisher,omitempty"` // Publisher details
	IndexPath     string                 `protobuf:"bytes,2,opt,name=indexPath,proto3" json:"indexPath,omitempty"` // Index path for the creation
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreatePublisherRequest) Reset() {
	*x = CreatePublisherRequest{}
	mi := &file_title_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePublisherRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePublisherRequest) ProtoMessage() {}

func (x *CreatePublisherRequest) ProtoReflect() protoreflect.Message {
	mi := &file_title_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePublisherRequest.ProtoReflect.Descriptor instead.
func (*CreatePublisherRequest) Descriptor() ([]byte, []int) {
	return file_title_proto_rawDescGZIP(), []int{44}
}

func (x *CreatePublisherRequest) GetPublisher() *Publisher {
	if x != nil {
		return x.Publisher
	}
	return nil
}

func (x *CreatePublisherRequest) GetIndexPath() string {
	if x != nil {
		return x.IndexPath
	}
	return ""
}

// Response for creating a publisher - intentionally left blank
type CreatePublisherResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreatePublisherResponse) Reset() {
	*x = CreatePublisherResponse{}
	mi := &file_title_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePublisherResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePublisherResponse) ProtoMessage() {}

func (x *CreatePublisherResponse) ProtoReflect() protoreflect.Message {
	mi := &file_title_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePublisherResponse.ProtoReflect.Descriptor instead.
func (*CreatePublisherResponse) Descriptor() ([]byte, []int) {
	return file_title_proto_rawDescGZIP(), []int{45}
}

// Request to delete a publisher
type DeletePublisherRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PublisherID   string                 `protobuf:"bytes,1,opt,name=PublisherID,proto3" json:"PublisherID,omitempty"` // ID of the publisher to delete
	IndexPath     string                 `protobuf:"bytes,2,opt,name=indexPath,proto3" json:"indexPath,omitempty"`     // Index path for the deletion
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeletePublisherRequest) Reset() {
	*x = DeletePublisherRequest{}
	mi := &file_title_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeletePublisherRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePublisherRequest) ProtoMessage() {}

func (x *DeletePublisherRequest) ProtoReflect() protoreflect.Message {
	mi := &file_title_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePublisherRequest.ProtoReflect.Descriptor instead.
func (*DeletePublisherRequest) Descriptor() ([]byte, []int) {
	return file_title_proto_rawDescGZIP(), []int{46}
}

func (x *DeletePublisherRequest) GetPublisherID() string {
	if x != nil {
		return x.PublisherID
	}
	return ""
}

func (x *DeletePublisherRequest) GetIndexPath() string {
	if x != nil {
		return x.IndexPath
	}
	return ""
}

// Response for deleting a publisher - intentionally left blank
type DeletePublisherResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeletePublisherResponse) Reset() {
	*x = DeletePublisherResponse{}
	mi := &file_title_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeletePublisherResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePublisherResponse) ProtoMessage() {}

func (x *DeletePublisherResponse) ProtoReflect() protoreflect.Message {
	mi := &file_title_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePublisherResponse.ProtoReflect.Descriptor instead.
func (*DeletePublisherResponse) Descriptor() ([]byte, []int) {
	return file_title_proto_rawDescGZIP(), []int{47}
}

// Request to get a publisher by ID
type GetPublisherByIdRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PublisherID   string                 `protobuf:"bytes,1,opt,name=PublisherID,proto3" json:"PublisherID,omitempty"` // ID of the publisher
	IndexPath     string                 `protobuf:"bytes,2,opt,name=indexPath,proto3" json:"indexPath,omitempty"`     // Index path for querying
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPublisherByIdRequest) Reset() {
	*x = GetPublisherByIdRequest{}
	mi := &file_title_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPublisherByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPublisherByIdRequest) ProtoMessage() {}

func (x *GetPublisherByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_title_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPublisherByIdRequest.ProtoReflect.Descriptor instead.
func (*GetPublisherByIdRequest) Descriptor() ([]byte, []int) {
	return file_title_proto_rawDescGZIP(), []int{48}
}

func (x *GetPublisherByIdRequest) GetPublisherID() string {
	if x != nil {
		return x.PublisherID
	}
	return ""
}

func (x *GetPublisherByIdRequest) GetIndexPath() string {
	if x != nil {
		return x.IndexPath
	}
	return ""
}

// Response containing the requested publisher
type GetPublisherByIdResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Publisher     *Publisher             `protobuf:"bytes,1,opt,name=publisher,proto3" json:"publisher,omitempty"` // Publisher details
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPublisherByIdResponse) Reset() {
	*x = GetPublisherByIdResponse{}
	mi := &file_title_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPublisherByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPublisherByIdResponse) ProtoMessage() {}

func (x *GetPublisherByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_title_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPublisherByIdResponse.ProtoReflect.Descriptor instead.
func (*GetPublisherByIdResponse) Descriptor() ([]byte, []int) {
	return file_title_proto_rawDescGZIP(), []int{49}
}

func (x *GetPublisherByIdResponse) GetPublisher() *Publisher {
	if x != nil {
		return x.Publisher
	}
	return nil
}

// Request to create a person
type CreatePersonRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Person        *Person                `protobuf:"bytes,1,opt,name=person,proto3" json:"person,omitempty"`       // Person details
	IndexPath     string                 `protobuf:"bytes,2,opt,name=indexPath,proto3" json:"indexPath,omitempty"` // Index path for the creation
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreatePersonRequest) Reset() {
	*x = CreatePersonRequest{}
	mi := &file_title_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePersonRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePersonRequest) ProtoMessage() {}

func (x *CreatePersonRequest) ProtoReflect() protoreflect.Message {
	mi := &file_title_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePersonRequest.ProtoReflect.Descriptor instead.
func (*CreatePersonRequest) Descriptor() ([]byte, []int) {
	return file_title_proto_rawDescGZIP(), []int{50}
}

func (x *CreatePersonRequest) GetPerson() *Person {
	if x != nil {
		return x.Person
	}
	return nil
}

func (x *CreatePersonRequest) GetIndexPath() string {
	if x != nil {
		return x.IndexPath
	}
	return ""
}

// Response for creating a person - intentionally left blank
type CreatePersonResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreatePersonResponse) Reset() {
	*x = CreatePersonResponse{}
	mi := &file_title_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePersonResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePersonResponse) ProtoMessage() {}

func (x *CreatePersonResponse) ProtoReflect() protoreflect.Message {
	mi := &file_title_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePersonResponse.ProtoReflect.Descriptor instead.
func (*CreatePersonResponse) Descriptor() ([]byte, []int) {
	return file_title_proto_rawDescGZIP(), []int{51}
}

// Request to delete a person
type DeletePersonRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PersonId      string                 `protobuf:"bytes,1,opt,name=personId,proto3" json:"personId,omitempty"`   // ID of the person to delete
	IndexPath     string                 `protobuf:"bytes,2,opt,name=indexPath,proto3" json:"indexPath,omitempty"` // Index path for the deletion
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeletePersonRequest) Reset() {
	*x = DeletePersonRequest{}
	mi := &file_title_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeletePersonRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePersonRequest) ProtoMessage() {}

func (x *DeletePersonRequest) ProtoReflect() protoreflect.Message {
	mi := &file_title_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePersonRequest.ProtoReflect.Descriptor instead.
func (*DeletePersonRequest) Descriptor() ([]byte, []int) {
	return file_title_proto_rawDescGZIP(), []int{52}
}

func (x *DeletePersonRequest) GetPersonId() string {
	if x != nil {
		return x.PersonId
	}
	return ""
}

func (x *DeletePersonRequest) GetIndexPath() string {
	if x != nil {
		return x.IndexPath
	}
	return ""
}

// Response for deleting a person - intentionally left blank
type DeletePersonResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeletePersonResponse) Reset() {
	*x = DeletePersonResponse{}
	mi := &file_title_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeletePersonResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePersonResponse) ProtoMessage() {}

func (x *DeletePersonResponse) ProtoReflect() protoreflect.Message {
	mi := &file_title_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePersonResponse.ProtoReflect.Descriptor instead.
func (*DeletePersonResponse) Descriptor() ([]byte, []int) {
	return file_title_proto_rawDescGZIP(), []int{53}
}

// Request to get a person by ID
type GetPersonByIdRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PersonId      string                 `protobuf:"bytes,1,opt,name=personId,proto3" json:"personId,omitempty"`   // ID of the person
	IndexPath     string                 `protobuf:"bytes,2,opt,name=indexPath,proto3" json:"indexPath,omitempty"` // Index path for querying
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPersonByIdRequest) Reset() {
	*x = GetPersonByIdRequest{}
	mi := &file_title_proto_msgTypes[54]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPersonByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPersonByIdRequest) ProtoMessage() {}

func (x *GetPersonByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_title_proto_msgTypes[54]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPersonByIdRequest.ProtoReflect.Descriptor instead.
func (*GetPersonByIdRequest) Descriptor() ([]byte, []int) {
	return file_title_proto_rawDescGZIP(), []int{54}
}

func (x *GetPersonByIdRequest) GetPersonId() string {
	if x != nil {
		return x.PersonId
	}
	return ""
}

func (x *GetPersonByIdRequest) GetIndexPath() string {
	if x != nil {
		return x.IndexPath
	}
	return ""
}

// Response containing the requested person
type GetPersonByIdResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Person        *Person                `protobuf:"bytes,1,opt,name=person,proto3" json:"person,omitempty"` // Person details
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPersonByIdResponse) Reset() {
	*x = GetPersonByIdResponse{}
	mi := &file_title_proto_msgTypes[55]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPersonByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPersonByIdResponse) ProtoMessage() {}

func (x *GetPersonByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_title_proto_msgTypes[55]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPersonByIdResponse.ProtoReflect.Descriptor instead.
func (*GetPersonByIdResponse) Descriptor() ([]byte, []int) {
	return file_title_proto_rawDescGZIP(), []int{55}
}

func (x *GetPersonByIdResponse) GetPerson() *Person {
	if x != nil {
		return x.Person
	}
	return nil
}

// Represents an audio track with its metadata
type Audio struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ID            string                 `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`                     // Unique identifier of the audio
	URL           string                 `protobuf:"bytes,2,opt,name=URL,proto3" json:"URL,omitempty"`                   // URL of the audio
	Artist        string                 `protobuf:"bytes,3,opt,name=Artist,proto3" json:"Artist,omitempty"`             // Artist of the track
	AlbumArtist   string                 `protobuf:"bytes,4,opt,name=AlbumArtist,proto3" json:"AlbumArtist,omitempty"`   // Album artist
	Album         string                 `protobuf:"bytes,5,opt,name=Album,proto3" json:"Album,omitempty"`               // Album name
	Comment       string                 `protobuf:"bytes,6,opt,name=Comment,proto3" json:"Comment,omitempty"`           // Any comments about the audio
	Composer      string                 `protobuf:"bytes,7,opt,name=Composer,proto3" json:"Composer,omitempty"`         // Composer of the track
	Genres        []string               `protobuf:"bytes,8,rep,name=Genres,proto3" json:"Genres,omitempty"`             // Genres of the audio track
	Lyrics        string                 `protobuf:"bytes,9,opt,name=Lyrics,proto3" json:"Lyrics,omitempty"`             // Lyrics of the track
	Title         string                 `protobuf:"bytes,10,opt,name=Title,proto3" json:"Title,omitempty"`              // Title of the track
	Year          int32                  `protobuf:"varint,11,opt,name=Year,proto3" json:"Year,omitempty"`               // Year of release
	DiscNumber    int32                  `protobuf:"varint,12,opt,name=DiscNumber,proto3" json:"DiscNumber,omitempty"`   // Disc number in the album
	DiscTotal     int32                  `protobuf:"varint,13,opt,name=DiscTotal,proto3" json:"DiscTotal,omitempty"`     // Total number of discs in the album
	TrackNumber   int32                  `protobuf:"varint,14,opt,name=TrackNumber,proto3" json:"TrackNumber,omitempty"` // Track number on the disc
	TrackTotal    int32                  `protobuf:"varint,15,opt,name=TrackTotal,proto3" json:"TrackTotal,omitempty"`   // Total number of tracks on the disc
	Poster        *Poster                `protobuf:"bytes,16,opt,name=Poster,proto3" json:"Poster,omitempty"`            // Poster image for the audio
	Duration      int32                  `protobuf:"varint,17,opt,name=Duration,proto3" json:"Duration,omitempty"`       // Duration of the audio track in seconds
	UUID          string                 `protobuf:"bytes,19,opt,name=UUID,proto3" json:"UUID,omitempty"`                // Universally Unique Identifier
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Audio) Reset() {
	*x = Audio{}
	mi := &file_title_proto_msgTypes[56]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Audio) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Audio) ProtoMessage() {}

func (x *Audio) ProtoReflect() protoreflect.Message {
	mi := &file_title_proto_msgTypes[56]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Audio.ProtoReflect.Descriptor instead.
func (*Audio) Descriptor() ([]byte, []int) {
	return file_title_proto_rawDescGZIP(), []int{56}
}

func (x *Audio) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Audio) GetURL() string {
	if x != nil {
		return x.URL
	}
	return ""
}

func (x *Audio) GetArtist() string {
	if x != nil {
		return x.Artist
	}
	return ""
}

func (x *Audio) GetAlbumArtist() string {
	if x != nil {
		return x.AlbumArtist
	}
	return ""
}

func (x *Audio) GetAlbum() string {
	if x != nil {
		return x.Album
	}
	return ""
}

func (x *Audio) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *Audio) GetComposer() string {
	if x != nil {
		return x.Composer
	}
	return ""
}

func (x *Audio) GetGenres() []string {
	if x != nil {
		return x.Genres
	}
	return nil
}

func (x *Audio) GetLyrics() string {
	if x != nil {
		return x.Lyrics
	}
	return ""
}

func (x *Audio) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Audio) GetYear() int32 {
	if x != nil {
		return x.Year
	}
	return 0
}

func (x *Audio) GetDiscNumber() int32 {
	if x != nil {
		return x.DiscNumber
	}
	return 0
}

func (x *Audio) GetDiscTotal() int32 {
	if x != nil {
		return x.DiscTotal
	}
	return 0
}

func (x *Audio) GetTrackNumber() int32 {
	if x != nil {
		return x.TrackNumber
	}
	return 0
}

func (x *Audio) GetTrackTotal() int32 {
	if x != nil {
		return x.TrackTotal
	}
	return 0
}

func (x *Audio) GetPoster() *Poster {
	if x != nil {
		return x.Poster
	}
	return nil
}

func (x *Audio) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *Audio) GetUUID() string {
	if x != nil {
		return x.UUID
	}
	return ""
}

// Represents an album with its details
type Album struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ID            string                 `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`         // Unique identifier for the album
	Artist        string                 `protobuf:"bytes,2,opt,name=Artist,proto3" json:"Artist,omitempty"` // Artist of the album
	Year          int32                  `protobuf:"varint,3,opt,name=Year,proto3" json:"Year,omitempty"`    // Release year of the album
	Genres        []string               `protobuf:"bytes,4,rep,name=Genres,proto3" json:"Genres,omitempty"` // Genres of the album
	Tracks        *Audios                `protobuf:"bytes,5,opt,name=tracks,proto3" json:"tracks,omitempty"` // Tracks in the album
	Poster        *Poster                `protobuf:"bytes,6,opt,name=Poster,proto3" json:"Poster,omitempty"` // Poster image for the album
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Album) Reset() {
	*x = Album{}
	mi := &file_title_proto_msgTypes[57]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Album) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Album) ProtoMessage() {}

func (x *Album) ProtoReflect() protoreflect.Message {
	mi := &file_title_proto_msgTypes[57]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Album.ProtoReflect.Descriptor instead.
func (*Album) Descriptor() ([]byte, []int) {
	return file_title_proto_rawDescGZIP(), []int{57}
}

func (x *Album) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Album) GetArtist() string {
	if x != nil {
		return x.Artist
	}
	return ""
}

func (x *Album) GetYear() int32 {
	if x != nil {
		return x.Year
	}
	return 0
}

func (x *Album) GetGenres() []string {
	if x != nil {
		return x.Genres
	}
	return nil
}

func (x *Album) GetTracks() *Audios {
	if x != nil {
		return x.Tracks
	}
	return nil
}

func (x *Album) GetPoster() *Poster {
	if x != nil {
		return x.Poster
	}
	return nil
}

// Collection of audio tracks
type Audios struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Audios        []*Audio               `protobuf:"bytes,1,rep,name=audios,proto3" json:"audios,omitempty"` // List of audio tracks
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Audios) Reset() {
	*x = Audios{}
	mi := &file_title_proto_msgTypes[58]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Audios) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Audios) ProtoMessage() {}

func (x *Audios) ProtoReflect() protoreflect.Message {
	mi := &file_title_proto_msgTypes[58]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Audios.ProtoReflect.Descriptor instead.
func (*Audios) Descriptor() ([]byte, []int) {
	return file_title_proto_rawDescGZIP(), []int{58}
}

func (x *Audios) GetAudios() []*Audio {
	if x != nil {
		return x.Audios
	}
	return nil
}

// Request to create an audio track
type CreateAudioRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Audio         *Audio                 `protobuf:"bytes,1,opt,name=audio,proto3" json:"audio,omitempty"`         // Audio track details
	IndexPath     string                 `protobuf:"bytes,2,opt,name=indexPath,proto3" json:"indexPath,omitempty"` // Index path for creation
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateAudioRequest) Reset() {
	*x = CreateAudioRequest{}
	mi := &file_title_proto_msgTypes[59]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateAudioRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAudioRequest) ProtoMessage() {}

func (x *CreateAudioRequest) ProtoReflect() protoreflect.Message {
	mi := &file_title_proto_msgTypes[59]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAudioRequest.ProtoReflect.Descriptor instead.
func (*CreateAudioRequest) Descriptor() ([]byte, []int) {
	return file_title_proto_rawDescGZIP(), []int{59}
}

func (x *CreateAudioRequest) GetAudio() *Audio {
	if x != nil {
		return x.Audio
	}
	return nil
}

func (x *CreateAudioRequest) GetIndexPath() string {
	if x != nil {
		return x.IndexPath
	}
	return ""
}

// Response for creating an audio track - intentionally left blank
type CreateAudioResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateAudioResponse) Reset() {
	*x = CreateAudioResponse{}
	mi := &file_title_proto_msgTypes[60]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateAudioResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAudioResponse) ProtoMessage() {}

func (x *CreateAudioResponse) ProtoReflect() protoreflect.Message {
	mi := &file_title_proto_msgTypes[60]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAudioResponse.ProtoReflect.Descriptor instead.
func (*CreateAudioResponse) Descriptor() ([]byte, []int) {
	return file_title_proto_rawDescGZIP(), []int{60}
}

// Request to get an audio track by ID
type GetAudioByIdRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AudioId       string                 `protobuf:"bytes,1,opt,name=audioId,proto3" json:"audioId,omitempty"`     // ID of the audio track
	IndexPath     string                 `protobuf:"bytes,2,opt,name=indexPath,proto3" json:"indexPath,omitempty"` // Index path for querying
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAudioByIdRequest) Reset() {
	*x = GetAudioByIdRequest{}
	mi := &file_title_proto_msgTypes[61]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAudioByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAudioByIdRequest) ProtoMessage() {}

func (x *GetAudioByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_title_proto_msgTypes[61]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAudioByIdRequest.ProtoReflect.Descriptor instead.
func (*GetAudioByIdRequest) Descriptor() ([]byte, []int) {
	return file_title_proto_rawDescGZIP(), []int{61}
}

func (x *GetAudioByIdRequest) GetAudioId() string {
	if x != nil {
		return x.AudioId
	}
	return ""
}

func (x *GetAudioByIdRequest) GetIndexPath() string {
	if x != nil {
		return x.IndexPath
	}
	return ""
}

// Response containing the requested audio track
type GetAudioByIdResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Audio         *Audio                 `protobuf:"bytes,1,opt,name=audio,proto3" json:"audio,omitempty"`           // Audio track details
	FilesPaths    []string               `protobuf:"bytes,2,rep,name=filesPaths,proto3" json:"filesPaths,omitempty"` // File paths related to the audio
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAudioByIdResponse) Reset() {
	*x = GetAudioByIdResponse{}
	mi := &file_title_proto_msgTypes[62]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAudioByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAudioByIdResponse) ProtoMessage() {}

func (x *GetAudioByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_title_proto_msgTypes[62]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAudioByIdResponse.ProtoReflect.Descriptor instead.
func (*GetAudioByIdResponse) Descriptor() ([]byte, []int) {
	return file_title_proto_rawDescGZIP(), []int{62}
}

func (x *GetAudioByIdResponse) GetAudio() *Audio {
	if x != nil {
		return x.Audio
	}
	return nil
}

func (x *GetAudioByIdResponse) GetFilesPaths() []string {
	if x != nil {
		return x.FilesPaths
	}
	return nil
}

// Request to delete an audio track
type DeleteAudioRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AudioId       string                 `protobuf:"bytes,1,opt,name=audioId,proto3" json:"audioId,omitempty"`     // ID of the audio track to delete
	IndexPath     string                 `protobuf:"bytes,2,opt,name=indexPath,proto3" json:"indexPath,omitempty"` // Index path for deletion
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteAudioRequest) Reset() {
	*x = DeleteAudioRequest{}
	mi := &file_title_proto_msgTypes[63]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteAudioRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAudioRequest) ProtoMessage() {}

func (x *DeleteAudioRequest) ProtoReflect() protoreflect.Message {
	mi := &file_title_proto_msgTypes[63]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAudioRequest.ProtoReflect.Descriptor instead.
func (*DeleteAudioRequest) Descriptor() ([]byte, []int) {
	return file_title_proto_rawDescGZIP(), []int{63}
}

func (x *DeleteAudioRequest) GetAudioId() string {
	if x != nil {
		return x.AudioId
	}
	return ""
}

func (x *DeleteAudioRequest) GetIndexPath() string {
	if x != nil {
		return x.IndexPath
	}
	return ""
}

// Response for deleting an audio track - intentionally left blank
type DeleteAudioResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteAudioResponse) Reset() {
	*x = DeleteAudioResponse{}
	mi := &file_title_proto_msgTypes[64]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteAudioResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAudioResponse) ProtoMessage() {}

func (x *DeleteAudioResponse) ProtoReflect() protoreflect.Message {
	mi := &file_title_proto_msgTypes[64]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAudioResponse.ProtoReflect.Descriptor instead.
func (*DeleteAudioResponse) Descriptor() ([]byte, []int) {
	return file_title_proto_rawDescGZIP(), []int{64}
}

// Request to get audio tracks associated with a file
type GetFileAudiosRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FilePath      string                 `protobuf:"bytes,1,opt,name=filePath,proto3" json:"filePath,omitempty"`   // Path of the file
	IndexPath     string                 `protobuf:"bytes,2,opt,name=indexPath,proto3" json:"indexPath,omitempty"` // Index path for querying
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFileAudiosRequest) Reset() {
	*x = GetFileAudiosRequest{}
	mi := &file_title_proto_msgTypes[65]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFileAudiosRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFileAudiosRequest) ProtoMessage() {}

func (x *GetFileAudiosRequest) ProtoReflect() protoreflect.Message {
	mi := &file_title_proto_msgTypes[65]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFileAudiosRequest.ProtoReflect.Descriptor instead.
func (*GetFileAudiosRequest) Descriptor() ([]byte, []int) {
	return file_title_proto_rawDescGZIP(), []int{65}
}

func (x *GetFileAudiosRequest) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *GetFileAudiosRequest) GetIndexPath() string {
	if x != nil {
		return x.IndexPath
	}
	return ""
}

// Response containing audio tracks associated with a file
type GetFileAudiosResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Audios        *Audios                `protobuf:"bytes,1,opt,name=audios,proto3" json:"audios,omitempty"` // Collection of audio tracks
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFileAudiosResponse) Reset() {
	*x = GetFileAudiosResponse{}
	mi := &file_title_proto_msgTypes[66]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFileAudiosResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFileAudiosResponse) ProtoMessage() {}

func (x *GetFileAudiosResponse) ProtoReflect() protoreflect.Message {
	mi := &file_title_proto_msgTypes[66]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFileAudiosResponse.ProtoReflect.Descriptor instead.
func (*GetFileAudiosResponse) Descriptor() ([]byte, []int) {
	return file_title_proto_rawDescGZIP(), []int{66}
}

func (x *GetFileAudiosResponse) GetAudios() *Audios {
	if x != nil {
		return x.Audios
	}
	return nil
}

// Request to get an album by ID
type GetAlbumRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AlbumId       string                 `protobuf:"bytes,1,opt,name=albumId,proto3" json:"albumId,omitempty"`     // ID of the album
	IndexPath     string                 `protobuf:"bytes,2,opt,name=indexPath,proto3" json:"indexPath,omitempty"` // Index path for querying
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAlbumRequest) Reset() {
	*x = GetAlbumRequest{}
	mi := &file_title_proto_msgTypes[67]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAlbumRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAlbumRequest) ProtoMessage() {}

func (x *GetAlbumRequest) ProtoReflect() protoreflect.Message {
	mi := &file_title_proto_msgTypes[67]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAlbumRequest.ProtoReflect.Descriptor instead.
func (*GetAlbumRequest) Descriptor() ([]byte, []int) {
	return file_title_proto_rawDescGZIP(), []int{67}
}

func (x *GetAlbumRequest) GetAlbumId() string {
	if x != nil {
		return x.AlbumId
	}
	return ""
}

func (x *GetAlbumRequest) GetIndexPath() string {
	if x != nil {
		return x.IndexPath
	}
	return ""
}

// Response containing the requested album
type GetAlbumResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Album         *Album                 `protobuf:"bytes,1,opt,name=album,proto3" json:"album,omitempty"` // Album details
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAlbumResponse) Reset() {
	*x = GetAlbumResponse{}
	mi := &file_title_proto_msgTypes[68]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAlbumResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAlbumResponse) ProtoMessage() {}

func (x *GetAlbumResponse) ProtoReflect() protoreflect.Message {
	mi := &file_title_proto_msgTypes[68]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAlbumResponse.ProtoReflect.Descriptor instead.
func (*GetAlbumResponse) Descriptor() ([]byte, []int) {
	return file_title_proto_rawDescGZIP(), []int{68}
}

func (x *GetAlbumResponse) GetAlbum() *Album {
	if x != nil {
		return x.Album
	}
	return nil
}

// Request to delete an album
type DeleteAlbumRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AlbumId       string                 `protobuf:"bytes,1,opt,name=albumId,proto3" json:"albumId,omitempty"`     // ID of the album to delete
	IndexPath     string                 `protobuf:"bytes,2,opt,name=indexPath,proto3" json:"indexPath,omitempty"` // Index path for deletion
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteAlbumRequest) Reset() {
	*x = DeleteAlbumRequest{}
	mi := &file_title_proto_msgTypes[69]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteAlbumRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAlbumRequest) ProtoMessage() {}

func (x *DeleteAlbumRequest) ProtoReflect() protoreflect.Message {
	mi := &file_title_proto_msgTypes[69]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAlbumRequest.ProtoReflect.Descriptor instead.
func (*DeleteAlbumRequest) Descriptor() ([]byte, []int) {
	return file_title_proto_rawDescGZIP(), []int{69}
}

func (x *DeleteAlbumRequest) GetAlbumId() string {
	if x != nil {
		return x.AlbumId
	}
	return ""
}

func (x *DeleteAlbumRequest) GetIndexPath() string {
	if x != nil {
		return x.IndexPath
	}
	return ""
}

// Response for deleting an album - intentionally left blank
type DeleteAlbumResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteAlbumResponse) Reset() {
	*x = DeleteAlbumResponse{}
	mi := &file_title_proto_msgTypes[70]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteAlbumResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAlbumResponse) ProtoMessage() {}

func (x *DeleteAlbumResponse) ProtoReflect() protoreflect.Message {
	mi := &file_title_proto_msgTypes[70]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAlbumResponse.ProtoReflect.Descriptor instead.
func (*DeleteAlbumResponse) Descriptor() ([]byte, []int) {
	return file_title_proto_rawDescGZIP(), []int{70}
}

var File_title_proto protoreflect.FileDescriptor

const file_title_proto_rawDesc = "" +
	"\n" +
	"\vtitle.proto\x12\x05title\"\xfc\x02\n" +
	"\x06Person\x12\x0e\n" +
	"\x02ID\x18\x01 \x01(\tR\x02ID\x12\x10\n" +
	"\x03URL\x18\x02 \x01(\tR\x03URL\x12\x1a\n" +
	"\bFullName\x18\x03 \x01(\tR\bFullName\x12\x18\n" +
	"\aAliases\x18\x04 \x03(\tR\aAliases\x12\x18\n" +
	"\aPicture\x18\x05 \x01(\tR\aPicture\x12\x1c\n" +
	"\tBiography\x18\x06 \x01(\tR\tBiography\x12\"\n" +
	"\fCareerStatus\x18\a \x01(\tR\fCareerStatus\x12\x16\n" +
	"\x06Gender\x18\b \x01(\tR\x06Gender\x12\x1e\n" +
	"\n" +
	"BirthPlace\x18\t \x01(\tR\n" +
	"BirthPlace\x12\x1c\n" +
	"\tBirthDate\x18\n" +
	" \x01(\tR\tBirthDate\x12\x1c\n" +
	"\tDirecting\x18\v \x03(\tR\tDirecting\x12\x18\n" +
	"\aWriting\x18\f \x03(\tR\aWriting\x12\x16\n" +
	"\x06Acting\x18\r \x03(\tR\x06Acting\x12\x18\n" +
	"\aCasting\x18\x0e \x03(\tR\aCasting\"d\n" +
	"\x06Poster\x12\x0e\n" +
	"\x02ID\x18\x01 \x01(\tR\x02ID\x12\x18\n" +
	"\atitleId\x18\x02 \x01(\tR\atitleId\x12\x10\n" +
	"\x03URL\x18\x03 \x01(\tR\x03URL\x12\x1e\n" +
	"\n" +
	"ContentUrl\x18\x04 \x01(\tR\n" +
	"ContentUrl\"e\n" +
	"\aPreview\x12\x0e\n" +
	"\x02ID\x18\x01 \x01(\tR\x02ID\x12\x18\n" +
	"\atitleId\x18\x02 \x01(\tR\atitleId\x12\x10\n" +
	"\x03URL\x18\x03 \x01(\tR\x03URL\x12\x1e\n" +
	"\n" +
	"ContentUrl\x18\x04 \x01(\tR\n" +
	"ContentUrl\"A\n" +
	"\tPublisher\x12\x0e\n" +
	"\x02ID\x18\x01 \x01(\tR\x02ID\x12\x10\n" +
	"\x03URL\x18\x02 \x01(\tR\x03URL\x12\x12\n" +
	"\x04Name\x18\x03 \x01(\tR\x04Name\"\xc3\x03\n" +
	"\x05Video\x12\x0e\n" +
	"\x02ID\x18\x01 \x01(\tR\x02ID\x12\x10\n" +
	"\x03URL\x18\x02 \x01(\tR\x03URL\x12\x14\n" +
	"\x05Title\x18\x03 \x01(\tR\x05Title\x12 \n" +
	"\vDescription\x18\x04 \x01(\tR\vDescription\x122\n" +
	"\vPublisherID\x18\x05 \x01(\v2\x10.title.PublisherR\vPublisherID\x12\x14\n" +
	"\x05Count\x18\x06 \x01(\x03R\x05Count\x12\x16\n" +
	"\x06Rating\x18\a \x01(\x02R\x06Rating\x12\x14\n" +
	"\x05Likes\x18\b \x01(\x03R\x05Likes\x12\x12\n" +
	"\x04Date\x18\t \x01(\tR\x04Date\x12\x16\n" +
	"\x06Genres\x18\n" +
	" \x03(\tR\x06Genres\x12\x12\n" +
	"\x04Tags\x18\v \x03(\tR\x04Tags\x12'\n" +
	"\aCasting\x18\f \x03(\v2\r.title.PersonR\aCasting\x12%\n" +
	"\x06poster\x18\r \x01(\v2\r.title.PosterR\x06poster\x12(\n" +
	"\apreview\x18\x0e \x01(\v2\x0e.title.PreviewR\apreview\x12\x1a\n" +
	"\bDuration\x18\x0f \x01(\x05R\bDuration\x12\x12\n" +
	"\x04UUID\x18\x10 \x01(\tR\x04UUID\".\n" +
	"\x06Videos\x12$\n" +
	"\x06videos\x18\x01 \x03(\v2\f.title.VideoR\x06videos\"V\n" +
	"\x12CreateVideoRequest\x12\"\n" +
	"\x05video\x18\x01 \x01(\v2\f.title.VideoR\x05video\x12\x1c\n" +
	"\tindexPath\x18\x02 \x01(\tR\tindexPath\"\x15\n" +
	"\x13CreateVideoResponse\"M\n" +
	"\x13GetVideoByIdRequest\x12\x18\n" +
	"\avideoId\x18\x01 \x01(\tR\avideoId\x12\x1c\n" +
	"\tindexPath\x18\x02 \x01(\tR\tindexPath\"Z\n" +
	"\x14GetVideoByIdResponse\x12\"\n" +
	"\x05video\x18\x01 \x01(\v2\f.title.VideoR\x05video\x12\x1e\n" +
	"\n" +
	"filesPaths\x18\x03 \x03(\tR\n" +
	"filesPaths\"L\n" +
	"\x12DeleteVideoRequest\x12\x18\n" +
	"\avideoId\x18\x01 \x01(\tR\avideoId\x12\x1c\n" +
	"\tindexPath\x18\x02 \x01(\tR\tindexPath\"\x15\n" +
	"\x13DeleteVideoResponse\"^\n" +
	"\x1aUpdateVideoMetadataRequest\x12\"\n" +
	"\x05video\x18\x01 \x01(\v2\f.title.VideoR\x05video\x12\x1c\n" +
	"\tindexPath\x18\x02 \x01(\tR\tindexPath\"\x1d\n" +
	"\x1bUpdateVideoMetadataResponse\"\xc9\x04\n" +
	"\x05Title\x12\x0e\n" +
	"\x02ID\x18\x01 \x01(\tR\x02ID\x12\x10\n" +
	"\x03URL\x18\x02 \x01(\tR\x03URL\x12\x12\n" +
	"\x04Name\x18\x03 \x01(\tR\x04Name\x12\x12\n" +
	"\x04Type\x18\x04 \x01(\tR\x04Type\x12\x12\n" +
	"\x04Year\x18\x05 \x01(\x05R\x04Year\x12\x16\n" +
	"\x06Rating\x18\x06 \x01(\x02R\x06Rating\x12 \n" +
	"\vRatingCount\x18\a \x01(\x05R\vRatingCount\x12+\n" +
	"\tDirectors\x18\b \x03(\v2\r.title.PersonR\tDirectors\x12'\n" +
	"\aWriters\x18\t \x03(\v2\r.title.PersonR\aWriters\x12%\n" +
	"\x06Actors\x18\n" +
	" \x03(\v2\r.title.PersonR\x06Actors\x12\x16\n" +
	"\x06Genres\x18\v \x03(\tR\x06Genres\x12\x1a\n" +
	"\bLanguage\x18\f \x03(\tR\bLanguage\x12$\n" +
	"\rNationalities\x18\r \x03(\tR\rNationalities\x12 \n" +
	"\vDescription\x18\x0e \x01(\tR\vDescription\x12%\n" +
	"\x06Poster\x18\x0f \x01(\v2\r.title.PosterR\x06Poster\x12\x10\n" +
	"\x03AKA\x18\x10 \x03(\tR\x03AKA\x12\x1a\n" +
	"\bDuration\x18\x11 \x01(\tR\bDuration\x12\x16\n" +
	"\x06Season\x18\x12 \x01(\x05R\x06Season\x12\x18\n" +
	"\aEpisode\x18\x13 \x01(\x05R\aEpisode\x12\x14\n" +
	"\x05Serie\x18\x14 \x01(\tR\x05Serie\x12\x12\n" +
	"\x04UUID\x18\x15 \x01(\tR\x04UUID\".\n" +
	"\x06Titles\x12$\n" +
	"\x06titles\x18\x01 \x03(\v2\f.title.TitleR\x06titles\"V\n" +
	"\x12CreateTitleRequest\x12\"\n" +
	"\x05title\x18\x01 \x01(\v2\f.title.TitleR\x05title\x12\x1c\n" +
	"\tindexPath\x18\x02 \x01(\tR\tindexPath\"\x15\n" +
	"\x13CreateTitleResponse\"M\n" +
	"\x13GetTitleByIdRequest\x12\x18\n" +
	"\atitleId\x18\x01 \x01(\tR\atitleId\x12\x1c\n" +
	"\tindexPath\x18\x02 \x01(\tR\tindexPath\"Z\n" +
	"\x14GetTitleByIdResponse\x12\"\n" +
	"\x05title\x18\x01 \x01(\v2\f.title.TitleR\x05title\x12\x1e\n" +
	"\n" +
	"filesPaths\x18\x03 \x03(\tR\n" +
	"filesPaths\"L\n" +
	"\x12DeleteTitleRequest\x12\x18\n" +
	"\atitleId\x18\x01 \x01(\tR\atitleId\x12\x1c\n" +
	"\tindexPath\x18\x02 \x01(\tR\tindexPath\"\x15\n" +
	"\x13DeleteTitleResponse\"^\n" +
	"\x1aUpdateTitleMetadataRequest\x12\"\n" +
	"\x05title\x18\x01 \x01(\v2\f.title.TitleR\x05title\x12\x1c\n" +
	"\tindexPath\x18\x02 \x01(\tR\tindexPath\"\x1d\n" +
	"\x1bUpdateTitleMetadataResponse\"s\n" +
	"\x1dAssociateFileWithTitleRequest\x12\x18\n" +
	"\atitleId\x18\x01 \x01(\tR\atitleId\x12\x1a\n" +
	"\bfilePath\x18\x02 \x01(\tR\bfilePath\x12\x1c\n" +
	"\tindexPath\x18\x03 \x01(\tR\tindexPath\" \n" +
	"\x1eAssociateFileWithTitleResponse\"t\n" +
	"\x1eDissociateFileWithTitleRequest\x12\x18\n" +
	"\atitleId\x18\x01 \x01(\tR\atitleId\x12\x1a\n" +
	"\bfilePath\x18\x02 \x01(\tR\bfilePath\x12\x1c\n" +
	"\tindexPath\x18\x03 \x01(\tR\tindexPath\"!\n" +
	"\x1fDissociateFileWithTitleResponse\"P\n" +
	"\x14GetFileTitlesRequest\x12\x1a\n" +
	"\bfilePath\x18\x01 \x01(\tR\bfilePath\x12\x1c\n" +
	"\tindexPath\x18\x02 \x01(\tR\tindexPath\">\n" +
	"\x15GetFileTitlesResponse\x12%\n" +
	"\x06titles\x18\x01 \x01(\v2\r.title.TitlesR\x06titles\"P\n" +
	"\x14GetFileVideosRequest\x12\x1a\n" +
	"\bfilePath\x18\x01 \x01(\tR\bfilePath\x12\x1c\n" +
	"\tindexPath\x18\x02 \x01(\tR\tindexPath\">\n" +
	"\x15GetFileVideosResponse\x12%\n" +
	"\x06videos\x18\x01 \x01(\v2\r.title.VideosR\x06videos\"N\n" +
	"\x14GetTitleFilesRequest\x12\x18\n" +
	"\atitleId\x18\x01 \x01(\tR\atitleId\x12\x1c\n" +
	"\tindexPath\x18\x02 \x01(\tR\tindexPath\"5\n" +
	"\x15GetTitleFilesResponse\x12\x1c\n" +
	"\tfilePaths\x18\x01 \x03(\tR\tfilePaths\"=\n" +
	"\aSnippet\x12\x14\n" +
	"\x05field\x18\x01 \x01(\tR\x05field\x12\x1c\n" +
	"\tfragments\x18\x02 \x03(\tR\tfragments\"\x88\x02\n" +
	"\tSearchHit\x12\x14\n" +
	"\x05index\x18\x01 \x01(\x05R\x05index\x12\x14\n" +
	"\x05score\x18\x02 \x01(\x01R\x05score\x12*\n" +
	"\bsnippets\x18\x03 \x03(\v2\x0e.title.SnippetR\bsnippets\x12$\n" +
	"\x05title\x18\x04 \x01(\v2\f.title.TitleH\x00R\x05title\x12$\n" +
	"\x05video\x18\x05 \x01(\v2\f.title.VideoH\x00R\x05video\x12$\n" +
	"\x05audio\x18\x06 \x01(\v2\f.title.AudioH\x00R\x05audio\x12'\n" +
	"\x06person\x18\a \x01(\v2\r.title.PersonH\x00R\x06personB\b\n" +
	"\x06result\"O\n" +
	"\rSearchSummary\x12\x14\n" +
	"\x05query\x18\x01 \x01(\tR\x05query\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x04R\x05total\x12\x12\n" +
	"\x04took\x18\x03 \x01(\x03R\x04took\";\n" +
	"\x0fSearchFacetTerm\x12\x12\n" +
	"\x04term\x18\x01 \x01(\tR\x04term\x12\x14\n" +
	"\x05count\x18\x02 \x01(\x05R\x05count\"}\n" +
	"\vSearchFacet\x12\x14\n" +
	"\x05field\x18\x01 \x01(\tR\x05field\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x05R\x05total\x12,\n" +
	"\x05terms\x18\x03 \x03(\v2\x16.title.SearchFacetTermR\x05terms\x12\x14\n" +
	"\x05other\x18\x04 \x01(\x05R\x05other\":\n" +
	"\fSearchFacets\x12*\n" +
	"\x06facets\x18\x01 \x03(\v2\x12.title.SearchFacetR\x06facets\"\x8d\x01\n" +
	"\x13SearchTitlesRequest\x12\x14\n" +
	"\x05query\x18\x01 \x01(\tR\x05query\x12\x16\n" +
	"\x06fields\x18\x02 \x03(\tR\x06fields\x12\x1c\n" +
	"\tindexPath\x18\x03 \x01(\tR\tindexPath\x12\x12\n" +
	"\x04size\x18\x04 \x01(\x05R\x04size\x12\x16\n" +
	"\x06offset\x18\x05 \x01(\x05R\x06offset\"\xa7\x01\n" +
	"\x14SearchTitlesResponse\x120\n" +
	"\asummary\x18\x01 \x01(\v2\x14.title.SearchSummaryH\x00R\asummary\x12$\n" +
	"\x03hit\x18\x02 \x01(\v2\x10.title.SearchHitH\x00R\x03hit\x12-\n" +
	"\x06facets\x18\x03 \x01(\v2\x13.title.SearchFacetsH\x00R\x06facetsB\b\n" +
	"\x06result\"\x8e\x01\n" +
	"\x14SearchPersonsRequest\x12\x14\n" +
	"\x05query\x18\x01 \x01(\tR\x05query\x12\x16\n" +
	"\x06fields\x18\x02 \x03(\tR\x06fields\x12\x1c\n" +
	"\tindexPath\x18\x03 \x01(\tR\tindexPath\x12\x12\n" +
	"\x04size\x18\x04 \x01(\x05R\x04size\x12\x16\n" +
	"\x06offset\x18\x05 \x01(\x05R\x06offset\"\xa8\x01\n" +
	"\x15SearchPersonsResponse\x120\n" +
	"\asummary\x18\x01 \x01(\v2\x14.title.SearchSummaryH\x00R\asummary\x12$\n" +
	"\x03hit\x18\x02 \x01(\v2\x10.title.SearchHitH\x00R\x03hit\x12-\n" +
	"\x06facets\x18\x03 \x01(\v2\x13.title.SearchFacetsH\x00R\x06facetsB\b\n" +
	"\x06result\"f\n" +
	"\x16CreatePublisherRequest\x12.\n" +
	"\tpublisher\x18\x01 \x01(\v2\x10.title.PublisherR\tpublisher\x12\x1c\n" +
	"\tindexPath\x18\x02 \x01(\tR\tindexPath\"\x19\n" +
	"\x17CreatePublisherResponse\"X\n" +
	"\x16DeletePublisherRequest\x12 \n" +
	"\vPublisherID\x18\x01 \x01(\tR\vPublisherID\x12\x1c\n" +
	"\tindexPath\x18\x02 \x01(\tR\tindexPath\"\x19\n" +
	"\x17DeletePublisherResponse\"Y\n" +
	"\x17GetPublisherByIdRequest\x12 \n" +
	"\vPublisherID\x18\x01 \x01(\tR\vPublisherID\x12\x1c\n" +
	"\tindexPath\x18\x02 \x01(\tR\tindexPath\"J\n" +
	"\x18GetPublisherByIdResponse\x12.\n" +
	"\tpublisher\x18\x01 \x01(\v2\x10.title.PublisherR\tpublisher\"Z\n" +
	"\x13CreatePersonRequest\x12%\n" +
	"\x06person\x18\x01 \x01(\v2\r.title.PersonR\x06person\x12\x1c\n" +
	"\tindexPath\x18\x02 \x01(\tR\tindexPath\"\x16\n" +
	"\x14CreatePersonResponse\"O\n" +
	"\x13DeletePersonRequest\x12\x1a\n" +
	"\bpersonId\x18\x01 \x01(\tR\bpersonId\x12\x1c\n" +
	"\tindexPath\x18\x02 \x01(\tR\tindexPath\"\x16\n" +
	"\x14DeletePersonResponse\"P\n" +
	"\x14GetPersonByIdRequest\x12\x1a\n" +
	"\bpersonId\x18\x01 \x01(\tR\bpersonId\x12\x1c\n" +
	"\tindexPath\x18\x02 \x01(\tR\tindexPath\">\n" +
	"\x15GetPersonByIdResponse\x12%\n" +
	"\x06person\x18\x01 \x01(\v2\r.title.PersonR\x06person\"\xe0\x03\n" +
	"\x05Audio\x12\x0e\n" +
	"\x02ID\x18\x01 \x01(\tR\x02ID\x12\x10\n" +
	"\x03URL\x18\x02 \x01(\tR\x03URL\x12\x16\n" +
	"\x06Artist\x18\x03 \x01(\tR\x06Artist\x12 \n" +
	"\vAlbumArtist\x18\x04 \x01(\tR\vAlbumArtist\x12\x14\n" +
	"\x05Album\x18\x05 \x01(\tR\x05Album\x12\x18\n" +
	"\aComment\x18\x06 \x01(\tR\aComment\x12\x1a\n" +
	"\bComposer\x18\a \x01(\tR\bComposer\x12\x16\n" +
	"\x06Genres\x18\b \x03(\tR\x06Genres\x12\x16\n" +
	"\x06Lyrics\x18\t \x01(\tR\x06Lyrics\x12\x14\n" +
	"\x05Title\x18\n" +
	" \x01(\tR\x05Title\x12\x12\n" +
	"\x04Year\x18\v \x01(\x05R\x04Year\x12\x1e\n" +
	"\n" +
	"DiscNumber\x18\f \x01(\x05R\n" +
	"DiscNumber\x12\x1c\n" +
	"\tDiscTotal\x18\r \x01(\x05R\tDiscTotal\x12 \n" +
	"\vTrackNumber\x18\x0e \x01(\x05R\vTrackNumber\x12\x1e\n" +
	"\n" +
	"TrackTotal\x18\x0f \x01(\x05R\n" +
	"TrackTotal\x12%\n" +
	"\x06Poster\x18\x10 \x01(\v2\r.title.PosterR\x06Poster\x12\x1a\n" +
	"\bDuration\x18\x11 \x01(\x05R\bDuration\x12\x12\n" +
	"\x04UUID\x18\x13 \x01(\tR\x04UUID\"\xa9\x01\n" +
	"\x05Album\x12\x0e\n" +
	"\x02ID\x18\x01 \x01(\tR\x02ID\x12\x16\n" +
	"\x06Artist\x18\x02 \x01(\tR\x06Artist\x12\x12\n" +
	"\x04Year\x18\x03 \x01(\x05R\x04Year\x12\x16\n" +
	"\x06Genres\x18\x04 \x03(\tR\x06Genres\x12%\n" +
	"\x06tracks\x18\x05 \x01(\v2\r.title.AudiosR\x06tracks\x12%\n" +
	"\x06Poster\x18\x06 \x01(\v2\r.title.PosterR\x06Poster\".\n" +
	"\x06Audios\x12$\n" +
	"\x06audios\x18\x01 \x03(\v2\f.title.AudioR\x06audios\"V\n" +
	"\x12CreateAudioRequest\x12\"\n" +
	"\x05audio\x18\x01 \x01(\v2\f.title.AudioR\x05audio\x12\x1c\n" +
	"\tindexPath\x18\x02 \x01(\tR\tindexPath\"\x15\n" +
	"\x13CreateAudioResponse\"M\n" +
	"\x13GetAudioByIdRequest\x12\x18\n" +
	"\aaudioId\x18\x01 \x01(\tR\aaudioId\x12\x1c\n" +
	"\tindexPath\x18\x02 \x01(\tR\tindexPath\"Z\n" +
	"\x14GetAudioByIdResponse\x12\"\n" +
	"\x05audio\x18\x01 \x01(\v2\f.title.AudioR\x05audio\x12\x1e\n" +
	"\n" +
	"filesPaths\x18\x02 \x03(\tR\n" +
	"filesPaths\"L\n" +
	"\x12DeleteAudioRequest\x12\x18\n" +
	"\aaudioId\x18\x01 \x01(\tR\aaudioId\x12\x1c\n" +
	"\tindexPath\x18\x02 \x01(\tR\tindexPath\"\x15\n" +
	"\x13DeleteAudioResponse\"P\n" +
	"\x14GetFileAudiosRequest\x12\x1a\n" +
	"\bfilePath\x18\x01 \x01(\tR\bfilePath\x12\x1c\n" +
	"\tindexPath\x18\x02 \x01(\tR\tindexPath\">\n" +
	"\x15GetFileAudiosResponse\x12%\n" +
	"\x06audios\x18\x01 \x01(\v2\r.title.AudiosR\x06audios\"I\n" +
	"\x0fGetAlbumRequest\x12\x18\n" +
	"\aalbumId\x18\x01 \x01(\tR\aalbumId\x12\x1c\n" +
	"\tindexPath\x18\x02 \x01(\tR\tindexPath\"6\n" +
	"\x10GetAlbumResponse\x12\"\n" +
	"\x05album\x18\x01 \x01(\v2\f.title.AlbumR\x05album\"L\n" +
	"\x12DeleteAlbumRequest\x12\x18\n" +
	"\aalbumId\x18\x01 \x01(\tR\aalbumId\x12\x1c\n" +
	"\tindexPath\x18\x02 \x01(\tR\tindexPath\"\x15\n" +
	"\x13DeleteAlbumResponse2\xbd\x10\n" +
	"\fTitleService\x12P\n" +
	"\x0fCreatePublisher\x12\x1d.title.CreatePublisherRequest\x1a\x1e.title.CreatePublisherResponse\x12P\n" +
	"\x0fDeletePublisher\x12\x1d.title.DeletePublisherRequest\x1a\x1e.title.DeletePublisherResponse\x12S\n" +
	"\x10GetPublisherById\x12\x1e.title.GetPublisherByIdRequest\x1a\x1f.title.GetPublisherByIdResponse\x12G\n" +
	"\fCreatePerson\x12\x1a.title.CreatePersonRequest\x1a\x1b.title.CreatePersonResponse\x12G\n" +
	"\fDeletePerson\x12\x1a.title.DeletePersonRequest\x1a\x1b.title.DeletePersonResponse\x12J\n" +
	"\rGetPersonById\x12\x1b.title.GetPersonByIdRequest\x1a\x1c.title.GetPersonByIdResponse\x12D\n" +
	"\vCreateTitle\x12\x19.title.CreateTitleRequest\x1a\x1a.title.CreateTitleResponse\x12G\n" +
	"\fGetTitleById\x12\x1a.title.GetTitleByIdRequest\x1a\x1b.title.GetTitleByIdResponse\x12D\n" +
	"\vDeleteTitle\x12\x19.title.DeleteTitleRequest\x1a\x1a.title.DeleteTitleResponse\x12\\\n" +
	"\x13UpdateTitleMetadata\x12!.title.UpdateTitleMetadataRequest\x1a\".title.UpdateTitleMetadataResponse\x12D\n" +
	"\vCreateAudio\x12\x19.title.CreateAudioRequest\x1a\x1a.title.CreateAudioResponse\x12G\n" +
	"\fGetAudioById\x12\x1a.title.GetAudioByIdRequest\x1a\x1b.title.GetAudioByIdResponse\x12;\n" +
	"\bGetAlbum\x12\x16.title.GetAlbumRequest\x1a\x17.title.GetAlbumResponse\x12D\n" +
	"\vDeleteAudio\x12\x19.title.DeleteAudioRequest\x1a\x1a.title.DeleteAudioResponse\x12D\n" +
	"\vDeleteAlbum\x12\x19.title.DeleteAlbumRequest\x1a\x1a.title.DeleteAlbumResponse\x12D\n" +
	"\vCreateVideo\x12\x19.title.CreateVideoRequest\x1a\x1a.title.CreateVideoResponse\x12G\n" +
	"\fGetVideoById\x12\x1a.title.GetVideoByIdRequest\x1a\x1b.title.GetVideoByIdResponse\x12D\n" +
	"\vDeleteVideo\x12\x19.title.DeleteVideoRequest\x1a\x1a.title.DeleteVideoResponse\x12\\\n" +
	"\x13UpdateVideoMetadata\x12!.title.UpdateVideoMetadataRequest\x1a\".title.UpdateVideoMetadataResponse\x12e\n" +
	"\x16AssociateFileWithTitle\x12$.title.AssociateFileWithTitleRequest\x1a%.title.AssociateFileWithTitleResponse\x12h\n" +
	"\x17DissociateFileWithTitle\x12%.title.DissociateFileWithTitleRequest\x1a&.title.DissociateFileWithTitleResponse\x12J\n" +
	"\rGetFileTitles\x12\x1b.title.GetFileTitlesRequest\x1a\x1c.title.GetFileTitlesResponse\x12J\n" +
	"\rGetFileVideos\x12\x1b.title.GetFileVideosRequest\x1a\x1c.title.GetFileVideosResponse\x12J\n" +
	"\rGetFileAudios\x12\x1b.title.GetFileAudiosRequest\x1a\x1c.title.GetFileAudiosResponse\x12J\n" +
	"\rGetTitleFiles\x12\x1b.title.GetTitleFilesRequest\x1a\x1c.title.GetTitleFilesResponse\x12I\n" +
	"\fSearchTitles\x12\x1a.title.SearchTitlesRequest\x1a\x1b.title.SearchTitlesResponse0\x01\x12L\n" +
	"\rSearchPersons\x12\x1b.title.SearchPersonsRequest\x1a\x1c.title.SearchPersonsResponse0\x01B5Z3github.com/globulario/services/golang/title/titlepbb\x06proto3"

var (
	file_title_proto_rawDescOnce sync.Once
	file_title_proto_rawDescData []byte
)

func file_title_proto_rawDescGZIP() []byte {
	file_title_proto_rawDescOnce.Do(func() {
		file_title_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_title_proto_rawDesc), len(file_title_proto_rawDesc)))
	})
	return file_title_proto_rawDescData
}

var file_title_proto_msgTypes = make([]protoimpl.MessageInfo, 71)
var file_title_proto_goTypes = []any{
	(*Person)(nil),                          // 0: title.Person
	(*Poster)(nil),                          // 1: title.Poster
	(*Preview)(nil),                         // 2: title.Preview
	(*Publisher)(nil),                       // 3: title.Publisher
	(*Video)(nil),                           // 4: title.Video
	(*Videos)(nil),                          // 5: title.Videos
	(*CreateVideoRequest)(nil),              // 6: title.CreateVideoRequest
	(*CreateVideoResponse)(nil),             // 7: title.CreateVideoResponse
	(*GetVideoByIdRequest)(nil),             // 8: title.GetVideoByIdRequest
	(*GetVideoByIdResponse)(nil),            // 9: title.GetVideoByIdResponse
	(*DeleteVideoRequest)(nil),              // 10: title.DeleteVideoRequest
	(*DeleteVideoResponse)(nil),             // 11: title.DeleteVideoResponse
	(*UpdateVideoMetadataRequest)(nil),      // 12: title.UpdateVideoMetadataRequest
	(*UpdateVideoMetadataResponse)(nil),     // 13: title.UpdateVideoMetadataResponse
	(*Title)(nil),                           // 14: title.Title
	(*Titles)(nil),                          // 15: title.Titles
	(*CreateTitleRequest)(nil),              // 16: title.CreateTitleRequest
	(*CreateTitleResponse)(nil),             // 17: title.CreateTitleResponse
	(*GetTitleByIdRequest)(nil),             // 18: title.GetTitleByIdRequest
	(*GetTitleByIdResponse)(nil),            // 19: title.GetTitleByIdResponse
	(*DeleteTitleRequest)(nil),              // 20: title.DeleteTitleRequest
	(*DeleteTitleResponse)(nil),             // 21: title.DeleteTitleResponse
	(*UpdateTitleMetadataRequest)(nil),      // 22: title.UpdateTitleMetadataRequest
	(*UpdateTitleMetadataResponse)(nil),     // 23: title.UpdateTitleMetadataResponse
	(*AssociateFileWithTitleRequest)(nil),   // 24: title.AssociateFileWithTitleRequest
	(*AssociateFileWithTitleResponse)(nil),  // 25: title.AssociateFileWithTitleResponse
	(*DissociateFileWithTitleRequest)(nil),  // 26: title.DissociateFileWithTitleRequest
	(*DissociateFileWithTitleResponse)(nil), // 27: title.DissociateFileWithTitleResponse
	(*GetFileTitlesRequest)(nil),            // 28: title.GetFileTitlesRequest
	(*GetFileTitlesResponse)(nil),           // 29: title.GetFileTitlesResponse
	(*GetFileVideosRequest)(nil),            // 30: title.GetFileVideosRequest
	(*GetFileVideosResponse)(nil),           // 31: title.GetFileVideosResponse
	(*GetTitleFilesRequest)(nil),            // 32: title.GetTitleFilesRequest
	(*GetTitleFilesResponse)(nil),           // 33: title.GetTitleFilesResponse
	(*Snippet)(nil),                         // 34: title.Snippet
	(*SearchHit)(nil),                       // 35: title.SearchHit
	(*SearchSummary)(nil),                   // 36: title.SearchSummary
	(*SearchFacetTerm)(nil),                 // 37: title.SearchFacetTerm
	(*SearchFacet)(nil),                     // 38: title.SearchFacet
	(*SearchFacets)(nil),                    // 39: title.SearchFacets
	(*SearchTitlesRequest)(nil),             // 40: title.SearchTitlesRequest
	(*SearchTitlesResponse)(nil),            // 41: title.SearchTitlesResponse
	(*SearchPersonsRequest)(nil),            // 42: title.SearchPersonsRequest
	(*SearchPersonsResponse)(nil),           // 43: title.SearchPersonsResponse
	(*CreatePublisherRequest)(nil),          // 44: title.CreatePublisherRequest
	(*CreatePublisherResponse)(nil),         // 45: title.CreatePublisherResponse
	(*DeletePublisherRequest)(nil),          // 46: title.DeletePublisherRequest
	(*DeletePublisherResponse)(nil),         // 47: title.DeletePublisherResponse
	(*GetPublisherByIdRequest)(nil),         // 48: title.GetPublisherByIdRequest
	(*GetPublisherByIdResponse)(nil),        // 49: title.GetPublisherByIdResponse
	(*CreatePersonRequest)(nil),             // 50: title.CreatePersonRequest
	(*CreatePersonResponse)(nil),            // 51: title.CreatePersonResponse
	(*DeletePersonRequest)(nil),             // 52: title.DeletePersonRequest
	(*DeletePersonResponse)(nil),            // 53: title.DeletePersonResponse
	(*GetPersonByIdRequest)(nil),            // 54: title.GetPersonByIdRequest
	(*GetPersonByIdResponse)(nil),           // 55: title.GetPersonByIdResponse
	(*Audio)(nil),                           // 56: title.Audio
	(*Album)(nil),                           // 57: title.Album
	(*Audios)(nil),                          // 58: title.Audios
	(*CreateAudioRequest)(nil),              // 59: title.CreateAudioRequest
	(*CreateAudioResponse)(nil),             // 60: title.CreateAudioResponse
	(*GetAudioByIdRequest)(nil),             // 61: title.GetAudioByIdRequest
	(*GetAudioByIdResponse)(nil),            // 62: title.GetAudioByIdResponse
	(*DeleteAudioRequest)(nil),              // 63: title.DeleteAudioRequest
	(*DeleteAudioResponse)(nil),             // 64: title.DeleteAudioResponse
	(*GetFileAudiosRequest)(nil),            // 65: title.GetFileAudiosRequest
	(*GetFileAudiosResponse)(nil),           // 66: title.GetFileAudiosResponse
	(*GetAlbumRequest)(nil),                 // 67: title.GetAlbumRequest
	(*GetAlbumResponse)(nil),                // 68: title.GetAlbumResponse
	(*DeleteAlbumRequest)(nil),              // 69: title.DeleteAlbumRequest
	(*DeleteAlbumResponse)(nil),             // 70: title.DeleteAlbumResponse
}
var file_title_proto_depIdxs = []int32{
	3,  // 0: title.Video.PublisherID:type_name -> title.Publisher
	0,  // 1: title.Video.Casting:type_name -> title.Person
	1,  // 2: title.Video.poster:type_name -> title.Poster
	2,  // 3: title.Video.preview:type_name -> title.Preview
	4,  // 4: title.Videos.videos:type_name -> title.Video
	4,  // 5: title.CreateVideoRequest.video:type_name -> title.Video
	4,  // 6: title.GetVideoByIdResponse.video:type_name -> title.Video
	4,  // 7: title.UpdateVideoMetadataRequest.video:type_name -> title.Video
	0,  // 8: title.Title.Directors:type_name -> title.Person
	0,  // 9: title.Title.Writers:type_name -> title.Person
	0,  // 10: title.Title.Actors:type_name -> title.Person
	1,  // 11: title.Title.Poster:type_name -> title.Poster
	14, // 12: title.Titles.titles:type_name -> title.Title
	14, // 13: title.CreateTitleRequest.title:type_name -> title.Title
	14, // 14: title.GetTitleByIdResponse.title:type_name -> title.Title
	14, // 15: title.UpdateTitleMetadataRequest.title:type_name -> title.Title
	15, // 16: title.GetFileTitlesResponse.titles:type_name -> title.Titles
	5,  // 17: title.GetFileVideosResponse.videos:type_name -> title.Videos
	34, // 18: title.SearchHit.snippets:type_name -> title.Snippet
	14, // 19: title.SearchHit.title:type_name -> title.Title
	4,  // 20: title.SearchHit.video:type_name -> title.Video
	56, // 21: title.SearchHit.audio:type_name -> title.Audio
	0,  // 22: title.SearchHit.person:type_name -> title.Person
	37, // 23: title.SearchFacet.terms:type_name -> title.SearchFacetTerm
	38, // 24: title.SearchFacets.facets:type_name -> title.SearchFacet
	36, // 25: title.SearchTitlesResponse.summary:type_name -> title.SearchSummary
	35, // 26: title.SearchTitlesResponse.hit:type_name -> title.SearchHit
	39, // 27: title.SearchTitlesResponse.facets:type_name -> title.SearchFacets
	36, // 28: title.SearchPersonsResponse.summary:type_name -> title.SearchSummary
	35, // 29: title.SearchPersonsResponse.hit:type_name -> title.SearchHit
	39, // 30: title.SearchPersonsResponse.facets:type_name -> title.SearchFacets
	3,  // 31: title.CreatePublisherRequest.publisher:type_name -> title.Publisher
	3,  // 32: title.GetPublisherByIdResponse.publisher:type_name -> title.Publisher
	0,  // 33: title.CreatePersonRequest.person:type_name -> title.Person
	0,  // 34: title.GetPersonByIdResponse.person:type_name -> title.Person
	1,  // 35: title.Audio.Poster:type_name -> title.Poster
	58, // 36: title.Album.tracks:type_name -> title.Audios
	1,  // 37: title.Album.Poster:type_name -> title.Poster
	56, // 38: title.Audios.audios:type_name -> title.Audio
	56, // 39: title.CreateAudioRequest.audio:type_name -> title.Audio
	56, // 40: title.GetAudioByIdResponse.audio:type_name -> title.Audio
	58, // 41: title.GetFileAudiosResponse.audios:type_name -> title.Audios
	57, // 42: title.GetAlbumResponse.album:type_name -> title.Album
	44, // 43: title.TitleService.CreatePublisher:input_type -> title.CreatePublisherRequest
	46, // 44: title.TitleService.DeletePublisher:input_type -> title.DeletePublisherRequest
	48, // 45: title.TitleService.GetPublisherById:input_type -> title.GetPublisherByIdRequest
	50, // 46: title.TitleService.CreatePerson:input_type -> title.CreatePersonRequest
	52, // 47: title.TitleService.DeletePerson:input_type -> title.DeletePersonRequest
	54, // 48: title.TitleService.GetPersonById:input_type -> title.GetPersonByIdRequest
	16, // 49: title.TitleService.CreateTitle:input_type -> title.CreateTitleRequest
	18, // 50: title.TitleService.GetTitleById:input_type -> title.GetTitleByIdRequest
	20, // 51: title.TitleService.DeleteTitle:input_type -> title.DeleteTitleRequest
	22, // 52: title.TitleService.UpdateTitleMetadata:input_type -> title.UpdateTitleMetadataRequest
	59, // 53: title.TitleService.CreateAudio:input_type -> title.CreateAudioRequest
	61, // 54: title.TitleService.GetAudioById:input_type -> title.GetAudioByIdRequest
	67, // 55: title.TitleService.GetAlbum:input_type -> title.GetAlbumRequest
	63, // 56: title.TitleService.DeleteAudio:input_type -> title.DeleteAudioRequest
	69, // 57: title.TitleService.DeleteAlbum:input_type -> title.DeleteAlbumRequest
	6,  // 58: title.TitleService.CreateVideo:input_type -> title.CreateVideoRequest
	8,  // 59: title.TitleService.GetVideoById:input_type -> title.GetVideoByIdRequest
	10, // 60: title.TitleService.DeleteVideo:input_type -> title.DeleteVideoRequest
	12, // 61: title.TitleService.UpdateVideoMetadata:input_type -> title.UpdateVideoMetadataRequest
	24, // 62: title.TitleService.AssociateFileWithTitle:input_type -> title.AssociateFileWithTitleRequest
	26, // 63: title.TitleService.DissociateFileWithTitle:input_type -> title.DissociateFileWithTitleRequest
	28, // 64: title.TitleService.GetFileTitles:input_type -> title.GetFileTitlesRequest
	30, // 65: title.TitleService.GetFileVideos:input_type -> title.GetFileVideosRequest
	65, // 66: title.TitleService.GetFileAudios:input_type -> title.GetFileAudiosRequest
	32, // 67: title.TitleService.GetTitleFiles:input_type -> title.GetTitleFilesRequest
	40, // 68: title.TitleService.SearchTitles:input_type -> title.SearchTitlesRequest
	42, // 69: title.TitleService.SearchPersons:input_type -> title.SearchPersonsRequest
	45, // 70: title.TitleService.CreatePublisher:output_type -> title.CreatePublisherResponse
	47, // 71: title.TitleService.DeletePublisher:output_type -> title.DeletePublisherResponse
	49, // 72: title.TitleService.GetPublisherById:output_type -> title.GetPublisherByIdResponse
	51, // 73: title.TitleService.CreatePerson:output_type -> title.CreatePersonResponse
	53, // 74: title.TitleService.DeletePerson:output_type -> title.DeletePersonResponse
	55, // 75: title.TitleService.GetPersonById:output_type -> title.GetPersonByIdResponse
	17, // 76: title.TitleService.CreateTitle:output_type -> title.CreateTitleResponse
	19, // 77: title.TitleService.GetTitleById:output_type -> title.GetTitleByIdResponse
	21, // 78: title.TitleService.DeleteTitle:output_type -> title.DeleteTitleResponse
	23, // 79: title.TitleService.UpdateTitleMetadata:output_type -> title.UpdateTitleMetadataResponse
	60, // 80: title.TitleService.CreateAudio:output_type -> title.CreateAudioResponse
	62, // 81: title.TitleService.GetAudioById:output_type -> title.GetAudioByIdResponse
	68, // 82: title.TitleService.GetAlbum:output_type -> title.GetAlbumResponse
	64, // 83: title.TitleService.DeleteAudio:output_type -> title.DeleteAudioResponse
	70, // 84: title.TitleService.DeleteAlbum:output_type -> title.DeleteAlbumResponse
	7,  // 85: title.TitleService.CreateVideo:output_type -> title.CreateVideoResponse
	9,  // 86: title.TitleService.GetVideoById:output_type -> title.GetVideoByIdResponse
	11, // 87: title.TitleService.DeleteVideo:output_type -> title.DeleteVideoResponse
	13, // 88: title.TitleService.UpdateVideoMetadata:output_type -> title.UpdateVideoMetadataResponse
	25, // 89: title.TitleService.AssociateFileWithTitle:output_type -> title.AssociateFileWithTitleResponse
	27, // 90: title.TitleService.DissociateFileWithTitle:output_type -> title.DissociateFileWithTitleResponse
	29, // 91: title.TitleService.GetFileTitles:output_type -> title.GetFileTitlesResponse
	31, // 92: title.TitleService.GetFileVideos:output_type -> title.GetFileVideosResponse
	66, // 93: title.TitleService.GetFileAudios:output_type -> title.GetFileAudiosResponse
	33, // 94: title.TitleService.GetTitleFiles:output_type -> title.GetTitleFilesResponse
	41, // 95: title.TitleService.SearchTitles:output_type -> title.SearchTitlesResponse
	43, // 96: title.TitleService.SearchPersons:output_type -> title.SearchPersonsResponse
	70, // [70:97] is the sub-list for method output_type
	43, // [43:70] is the sub-list for method input_type
	43, // [43:43] is the sub-list for extension type_name
	43, // [43:43] is the sub-list for extension extendee
	0,  // [0:43] is the sub-list for field type_name
}

func init() { file_title_proto_init() }
func file_title_proto_init() {
	if File_title_proto != nil {
		return
	}
	file_title_proto_msgTypes[35].OneofWrappers = []any{
		(*SearchHit_Title)(nil),
		(*SearchHit_Video)(nil),
		(*SearchHit_Audio)(nil),
		(*SearchHit_Person)(nil),
	}
	file_title_proto_msgTypes[41].OneofWrappers = []any{
		(*SearchTitlesResponse_Summary)(nil),
		(*SearchTitlesResponse_Hit)(nil),
		(*SearchTitlesResponse_Facets)(nil),
	}
	file_title_proto_msgTypes[43].OneofWrappers = []any{
		(*SearchPersonsResponse_Summary)(nil),
		(*SearchPersonsResponse_Hit)(nil),
		(*SearchPersonsResponse_Facets)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_title_proto_rawDesc), len(file_title_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   71,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_title_proto_goTypes,
		DependencyIndexes: file_title_proto_depIdxs,
		MessageInfos:      file_title_proto_msgTypes,
	}.Build()
	File_title_proto = out.File
	file_title_proto_goTypes = nil
	file_title_proto_depIdxs = nil
}
