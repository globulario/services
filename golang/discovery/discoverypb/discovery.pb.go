// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.12.4
// source: discovery.proto

package discoverypb

import (
	resourcepb "github.com/globulario/services/golang/resource/resourcepb"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request for publishing a service.
type PublishServiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceId    string   `protobuf:"bytes,1,opt,name=serviceId,proto3" json:"serviceId,omitempty"`       // Unique identifier for the service.
	ServiceName  string   `protobuf:"bytes,2,opt,name=serviceName,proto3" json:"serviceName,omitempty"`   // Name of the service.
	User         string   `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`                 // Username of the person publishing the service.
	Organization string   `protobuf:"bytes,4,opt,name=organization,proto3" json:"organization,omitempty"` // Name of the organization publishing the service.
	DiscoveryId  string   `protobuf:"bytes,5,opt,name=discoveryId,proto3" json:"discoveryId,omitempty"`   // ID for the discovery service.
	RepositoryId string   `protobuf:"bytes,6,opt,name=repositoryId,proto3" json:"repositoryId,omitempty"` // Repository identifier where the service is stored.
	Description  string   `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`   // Description of the service.
	Keywords     []string `protobuf:"bytes,8,rep,name=keywords,proto3" json:"keywords,omitempty"`         // Keywords associated with the service for searchability.
	Version      string   `protobuf:"bytes,9,opt,name=version,proto3" json:"version,omitempty"`           // Version of the service.
	Platform     string   `protobuf:"bytes,10,opt,name=platform,proto3" json:"platform,omitempty"`        // Platform for which the service is developed.
	Path         string   `protobuf:"bytes,11,opt,name=path,proto3" json:"path,omitempty"`                // Path to the service in the repository.
}

func (x *PublishServiceRequest) Reset() {
	*x = PublishServiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discovery_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublishServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishServiceRequest) ProtoMessage() {}

func (x *PublishServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discovery_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishServiceRequest.ProtoReflect.Descriptor instead.
func (*PublishServiceRequest) Descriptor() ([]byte, []int) {
	return file_discovery_proto_rawDescGZIP(), []int{0}
}

func (x *PublishServiceRequest) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *PublishServiceRequest) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *PublishServiceRequest) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *PublishServiceRequest) GetOrganization() string {
	if x != nil {
		return x.Organization
	}
	return ""
}

func (x *PublishServiceRequest) GetDiscoveryId() string {
	if x != nil {
		return x.DiscoveryId
	}
	return ""
}

func (x *PublishServiceRequest) GetRepositoryId() string {
	if x != nil {
		return x.RepositoryId
	}
	return ""
}

func (x *PublishServiceRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *PublishServiceRequest) GetKeywords() []string {
	if x != nil {
		return x.Keywords
	}
	return nil
}

func (x *PublishServiceRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *PublishServiceRequest) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *PublishServiceRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

// Response for service publication.
type PublishServiceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"` // Indicates success or failure of the service publication.
}

func (x *PublishServiceResponse) Reset() {
	*x = PublishServiceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discovery_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublishServiceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishServiceResponse) ProtoMessage() {}

func (x *PublishServiceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discovery_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishServiceResponse.ProtoReflect.Descriptor instead.
func (*PublishServiceResponse) Descriptor() ([]byte, []int) {
	return file_discovery_proto_rawDescGZIP(), []int{1}
}

func (x *PublishServiceResponse) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// Request for publishing an application.
type PublishApplicationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string              `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                                         // Name of the application.
	Domain       string              `protobuf:"bytes,2,opt,name=domain,proto3" json:"domain,omitempty"`                                     // Domain associated with the application.
	Data         []byte              `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`                                         // Binary data of the application.
	User         string              `protobuf:"bytes,4,opt,name=user,proto3" json:"user,omitempty"`                                         // Username of the person publishing the application.
	Organization string              `protobuf:"bytes,5,opt,name=organization,proto3" json:"organization,omitempty"`                         // Name of the organization publishing the application.
	Version      string              `protobuf:"bytes,6,opt,name=version,proto3" json:"version,omitempty"`                                   // Version of the application.
	Keywords     []string            `protobuf:"bytes,7,rep,name=keywords,proto3" json:"keywords,omitempty"`                                 // Keywords for searchability of the application.
	Description  string              `protobuf:"bytes,8,opt,name=description,proto3" json:"description,omitempty"`                           // Description of the application.
	Actions      []string            `protobuf:"bytes,9,rep,name=actions,proto3" json:"actions,omitempty"`                                   // Actions that the application is capable of performing.
	Repository   string              `protobuf:"bytes,10,opt,name=repository,proto3" json:"repository,omitempty"`                            // Repository where the application is stored.
	Discovery    string              `protobuf:"bytes,11,opt,name=discovery,proto3" json:"discovery,omitempty"`                              // Discovery service ID for the application.
	Icon         string              `protobuf:"bytes,12,opt,name=icon,proto3" json:"icon,omitempty"`                                        // Icon for the application.
	Alias        string              `protobuf:"bytes,13,opt,name=alias,proto3" json:"alias,omitempty"`                                      // Alias for the application.
	Roles        []*resourcepb.Role  `protobuf:"bytes,14,rep,name=roles,proto3" json:"roles,omitempty"`                                      // Roles associated with the application.
	Groups       []*resourcepb.Group `protobuf:"bytes,15,rep,name=groups,proto3" json:"groups,omitempty"`                                    // Groups associated with the application.
	SetAsDefault bool                `protobuf:"varint,16,opt,name=set_as_default,json=setAsDefault,proto3" json:"set_as_default,omitempty"` // Flag to set the application as default.
	Path         string              `protobuf:"bytes,17,opt,name=path,proto3" json:"path,omitempty"`                                        // Path to the application in the repository.
}

func (x *PublishApplicationRequest) Reset() {
	*x = PublishApplicationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discovery_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublishApplicationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishApplicationRequest) ProtoMessage() {}

func (x *PublishApplicationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discovery_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishApplicationRequest.ProtoReflect.Descriptor instead.
func (*PublishApplicationRequest) Descriptor() ([]byte, []int) {
	return file_discovery_proto_rawDescGZIP(), []int{2}
}

func (x *PublishApplicationRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PublishApplicationRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *PublishApplicationRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *PublishApplicationRequest) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *PublishApplicationRequest) GetOrganization() string {
	if x != nil {
		return x.Organization
	}
	return ""
}

func (x *PublishApplicationRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *PublishApplicationRequest) GetKeywords() []string {
	if x != nil {
		return x.Keywords
	}
	return nil
}

func (x *PublishApplicationRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *PublishApplicationRequest) GetActions() []string {
	if x != nil {
		return x.Actions
	}
	return nil
}

func (x *PublishApplicationRequest) GetRepository() string {
	if x != nil {
		return x.Repository
	}
	return ""
}

func (x *PublishApplicationRequest) GetDiscovery() string {
	if x != nil {
		return x.Discovery
	}
	return ""
}

func (x *PublishApplicationRequest) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *PublishApplicationRequest) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

func (x *PublishApplicationRequest) GetRoles() []*resourcepb.Role {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *PublishApplicationRequest) GetGroups() []*resourcepb.Group {
	if x != nil {
		return x.Groups
	}
	return nil
}

func (x *PublishApplicationRequest) GetSetAsDefault() bool {
	if x != nil {
		return x.SetAsDefault
	}
	return false
}

func (x *PublishApplicationRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

// Response for application publication.
type PublishApplicationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"` // Indicates success or failure of the application publication.
}

func (x *PublishApplicationResponse) Reset() {
	*x = PublishApplicationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discovery_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublishApplicationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishApplicationResponse) ProtoMessage() {}

func (x *PublishApplicationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discovery_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishApplicationResponse.ProtoReflect.Descriptor instead.
func (*PublishApplicationResponse) Descriptor() ([]byte, []int) {
	return file_discovery_proto_rawDescGZIP(), []int{3}
}

func (x *PublishApplicationResponse) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

var File_discovery_proto protoreflect.FileDescriptor

var file_discovery_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x09, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x1a, 0x0e, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xdd, 0x02, 0x0a,
	0x15, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x49, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x49, 0x64,
	0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f,
	0x72, 0x79, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72,
	0x64, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72,
	0x64, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0x30, 0x0a, 0x16,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xf6,
	0x03, 0x0a, 0x19, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04,
	0x75, 0x73, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72,
	0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1a,
	0x0a, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x6f, 0x72, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76,
	0x65, 0x72, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x69, 0x73, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c, 0x69, 0x61,
	0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x24,
	0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x05, 0x72,
	0x6f, 0x6c, 0x65, 0x73, 0x12, 0x27, 0x0a, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x0f,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x24, 0x0a,
	0x0e, 0x73, 0x65, 0x74, 0x5f, 0x61, 0x73, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x73, 0x65, 0x74, 0x41, 0x73, 0x44, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0x34, 0x0a, 0x1a, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x73, 0x68, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x32, 0xcc, 0x01,
	0x0a, 0x10, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x79, 0x12, 0x55, 0x0a, 0x0e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x20, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79,
	0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x79, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x61, 0x0a, 0x12, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x73, 0x68, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x24, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x79, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x3d, 0x5a, 0x3b,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x6c, 0x6f, 0x62, 0x75,
	0x6c, 0x61, 0x72, 0x69, 0x6f, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x67,
	0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x2f,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_discovery_proto_rawDescOnce sync.Once
	file_discovery_proto_rawDescData = file_discovery_proto_rawDesc
)

func file_discovery_proto_rawDescGZIP() []byte {
	file_discovery_proto_rawDescOnce.Do(func() {
		file_discovery_proto_rawDescData = protoimpl.X.CompressGZIP(file_discovery_proto_rawDescData)
	})
	return file_discovery_proto_rawDescData
}

var file_discovery_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_discovery_proto_goTypes = []any{
	(*PublishServiceRequest)(nil),      // 0: discovery.PublishServiceRequest
	(*PublishServiceResponse)(nil),     // 1: discovery.PublishServiceResponse
	(*PublishApplicationRequest)(nil),  // 2: discovery.PublishApplicationRequest
	(*PublishApplicationResponse)(nil), // 3: discovery.PublishApplicationResponse
	(*resourcepb.Role)(nil),            // 4: resource.Role
	(*resourcepb.Group)(nil),           // 5: resource.Group
}
var file_discovery_proto_depIdxs = []int32{
	4, // 0: discovery.PublishApplicationRequest.roles:type_name -> resource.Role
	5, // 1: discovery.PublishApplicationRequest.groups:type_name -> resource.Group
	0, // 2: discovery.PackageDiscovery.PublishService:input_type -> discovery.PublishServiceRequest
	2, // 3: discovery.PackageDiscovery.PublishApplication:input_type -> discovery.PublishApplicationRequest
	1, // 4: discovery.PackageDiscovery.PublishService:output_type -> discovery.PublishServiceResponse
	3, // 5: discovery.PackageDiscovery.PublishApplication:output_type -> discovery.PublishApplicationResponse
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_discovery_proto_init() }
func file_discovery_proto_init() {
	if File_discovery_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_discovery_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*PublishServiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discovery_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*PublishServiceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discovery_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*PublishApplicationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discovery_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*PublishApplicationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_discovery_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_discovery_proto_goTypes,
		DependencyIndexes: file_discovery_proto_depIdxs,
		MessageInfos:      file_discovery_proto_msgTypes,
	}.Build()
	File_discovery_proto = out.File
	file_discovery_proto_rawDesc = nil
	file_discovery_proto_goTypes = nil
	file_discovery_proto_depIdxs = nil
}
