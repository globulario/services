// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v3.21.12
// source: event.proto

package eventpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// KeepAlive message, likely used for maintaining the connection alive.
type KeepAlive struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KeepAlive) Reset() {
	*x = KeepAlive{}
	mi := &file_event_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KeepAlive) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeepAlive) ProtoMessage() {}

func (x *KeepAlive) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeepAlive.ProtoReflect.Descriptor instead.
func (*KeepAlive) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{0}
}

// Event represents a generic event with a name and data.
type Event struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"` // The event name.
	Data          []byte                 `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"` // The event data, can be anything.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Event) Reset() {
	*x = Event{}
	mi := &file_event_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{1}
}

func (x *Event) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Event) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// QuitRequest message to request stopping a stream or connection.
type QuitRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uuid          string                 `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"` // Unique identifier for the request.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QuitRequest) Reset() {
	*x = QuitRequest{}
	mi := &file_event_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuitRequest) ProtoMessage() {}

func (x *QuitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuitRequest.ProtoReflect.Descriptor instead.
func (*QuitRequest) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{2}
}

func (x *QuitRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

// QuitResponse message as a result of QuitRequest.
type QuitResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        bool                   `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"` // Result of the quit request.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QuitResponse) Reset() {
	*x = QuitResponse{}
	mi := &file_event_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuitResponse) ProtoMessage() {}

func (x *QuitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuitResponse.ProtoReflect.Descriptor instead.
func (*QuitResponse) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{3}
}

func (x *QuitResponse) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// OnEventRequest message for starting event stream.
type OnEventRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uuid          string                 `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"` // Unique identifier for the stream request.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OnEventRequest) Reset() {
	*x = OnEventRequest{}
	mi := &file_event_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OnEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnEventRequest) ProtoMessage() {}

func (x *OnEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnEventRequest.ProtoReflect.Descriptor instead.
func (*OnEventRequest) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{4}
}

func (x *OnEventRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

// OnEventResponse message as a stream response.
type OnEventResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Data:
	//
	//	*OnEventResponse_Evt
	//	*OnEventResponse_Ka
	Data          isOnEventResponse_Data `protobuf_oneof:"data"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OnEventResponse) Reset() {
	*x = OnEventResponse{}
	mi := &file_event_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OnEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnEventResponse) ProtoMessage() {}

func (x *OnEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnEventResponse.ProtoReflect.Descriptor instead.
func (*OnEventResponse) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{5}
}

func (x *OnEventResponse) GetData() isOnEventResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *OnEventResponse) GetEvt() *Event {
	if x != nil {
		if x, ok := x.Data.(*OnEventResponse_Evt); ok {
			return x.Evt
		}
	}
	return nil
}

func (x *OnEventResponse) GetKa() *KeepAlive {
	if x != nil {
		if x, ok := x.Data.(*OnEventResponse_Ka); ok {
			return x.Ka
		}
	}
	return nil
}

type isOnEventResponse_Data interface {
	isOnEventResponse_Data()
}

type OnEventResponse_Evt struct {
	Evt *Event `protobuf:"bytes,1,opt,name=evt,proto3,oneof"` // Event data.
}

type OnEventResponse_Ka struct {
	Ka *KeepAlive `protobuf:"bytes,2,opt,name=ka,proto3,oneof"` // KeepAlive signal.
}

func (*OnEventResponse_Evt) isOnEventResponse_Data() {}

func (*OnEventResponse_Ka) isOnEventResponse_Data() {}

// SubscribeRequest message for subscribing to an event topic.
type SubscribeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"` // The event topic to subscribe to.
	Uuid          string                 `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"` // The subscriber's unique identifier.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscribeRequest) Reset() {
	*x = SubscribeRequest{}
	mi := &file_event_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeRequest) ProtoMessage() {}

func (x *SubscribeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeRequest.ProtoReflect.Descriptor instead.
func (*SubscribeRequest) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{6}
}

func (x *SubscribeRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SubscribeRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

// SubscribeResponse message as a result of SubscribeRequest.
type SubscribeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        bool                   `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"` // Result of the subscribe request.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscribeResponse) Reset() {
	*x = SubscribeResponse{}
	mi := &file_event_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeResponse) ProtoMessage() {}

func (x *SubscribeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeResponse.ProtoReflect.Descriptor instead.
func (*SubscribeResponse) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{7}
}

func (x *SubscribeResponse) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// UnSubscribeRequest message for unsubscribing from an event topic.
type UnSubscribeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"` // The event topic to unsubscribe from.
	Uuid          string                 `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"` // The subscriber's unique identifier.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnSubscribeRequest) Reset() {
	*x = UnSubscribeRequest{}
	mi := &file_event_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnSubscribeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnSubscribeRequest) ProtoMessage() {}

func (x *UnSubscribeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnSubscribeRequest.ProtoReflect.Descriptor instead.
func (*UnSubscribeRequest) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{8}
}

func (x *UnSubscribeRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UnSubscribeRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

// UnSubscribeResponse message as a result of UnSubscribeRequest.
type UnSubscribeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        bool                   `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"` // Result of the unsubscribe request.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnSubscribeResponse) Reset() {
	*x = UnSubscribeResponse{}
	mi := &file_event_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnSubscribeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnSubscribeResponse) ProtoMessage() {}

func (x *UnSubscribeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnSubscribeResponse.ProtoReflect.Descriptor instead.
func (*UnSubscribeResponse) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{9}
}

func (x *UnSubscribeResponse) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// PublishRequest message for publishing an event.
type PublishRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Evt           *Event                 `protobuf:"bytes,1,opt,name=evt,proto3" json:"evt,omitempty"` // The event to publish.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PublishRequest) Reset() {
	*x = PublishRequest{}
	mi := &file_event_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PublishRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishRequest) ProtoMessage() {}

func (x *PublishRequest) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishRequest.ProtoReflect.Descriptor instead.
func (*PublishRequest) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{10}
}

func (x *PublishRequest) GetEvt() *Event {
	if x != nil {
		return x.Evt
	}
	return nil
}

// PublishResponse message as a result of PublishRequest.
type PublishResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        bool                   `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"` // Result of the publish request.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PublishResponse) Reset() {
	*x = PublishResponse{}
	mi := &file_event_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PublishResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishResponse) ProtoMessage() {}

func (x *PublishResponse) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishResponse.ProtoReflect.Descriptor instead.
func (*PublishResponse) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{11}
}

func (x *PublishResponse) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// StopRequest message to stop the server.
type StopRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopRequest) Reset() {
	*x = StopRequest{}
	mi := &file_event_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopRequest) ProtoMessage() {}

func (x *StopRequest) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopRequest.ProtoReflect.Descriptor instead.
func (*StopRequest) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{12}
}

// StopResponse message as a result of StopRequest.
type StopResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopResponse) Reset() {
	*x = StopResponse{}
	mi := &file_event_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopResponse) ProtoMessage() {}

func (x *StopResponse) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopResponse.ProtoReflect.Descriptor instead.
func (*StopResponse) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{13}
}

var File_event_proto protoreflect.FileDescriptor

const file_event_proto_rawDesc = "" +
	"\n" +
	"\vevent.proto\x12\x05event\"\v\n" +
	"\tKeepAlive\"/\n" +
	"\x05Event\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04data\x18\x02 \x01(\fR\x04data\"!\n" +
	"\vQuitRequest\x12\x12\n" +
	"\x04uuid\x18\x01 \x01(\tR\x04uuid\"&\n" +
	"\fQuitResponse\x12\x16\n" +
	"\x06result\x18\x01 \x01(\bR\x06result\"$\n" +
	"\x0eOnEventRequest\x12\x12\n" +
	"\x04uuid\x18\x01 \x01(\tR\x04uuid\"_\n" +
	"\x0fOnEventResponse\x12 \n" +
	"\x03evt\x18\x01 \x01(\v2\f.event.EventH\x00R\x03evt\x12\"\n" +
	"\x02ka\x18\x02 \x01(\v2\x10.event.KeepAliveH\x00R\x02kaB\x06\n" +
	"\x04data\":\n" +
	"\x10SubscribeRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04uuid\x18\x02 \x01(\tR\x04uuid\"+\n" +
	"\x11SubscribeResponse\x12\x16\n" +
	"\x06result\x18\x01 \x01(\bR\x06result\"<\n" +
	"\x12UnSubscribeRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04uuid\x18\x02 \x01(\tR\x04uuid\"-\n" +
	"\x13UnSubscribeResponse\x12\x16\n" +
	"\x06result\x18\x01 \x01(\bR\x06result\"0\n" +
	"\x0ePublishRequest\x12\x1e\n" +
	"\x03evt\x18\x01 \x01(\v2\f.event.EventR\x03evt\")\n" +
	"\x0fPublishResponse\x12\x16\n" +
	"\x06result\x18\x01 \x01(\bR\x06result\"\r\n" +
	"\vStopRequest\"\x0e\n" +
	"\fStopResponse2\xf6\x02\n" +
	"\fEventService\x12/\n" +
	"\x04Stop\x12\x12.event.StopRequest\x1a\x13.event.StopResponse\x12<\n" +
	"\aOnEvent\x12\x15.event.OnEventRequest\x1a\x16.event.OnEventResponse\"\x000\x01\x121\n" +
	"\x04Quit\x12\x12.event.QuitRequest\x1a\x13.event.QuitResponse\"\x00\x12@\n" +
	"\tSubscribe\x12\x17.event.SubscribeRequest\x1a\x18.event.SubscribeResponse\"\x00\x12F\n" +
	"\vUnSubscribe\x12\x19.event.UnSubscribeRequest\x1a\x1a.event.UnSubscribeResponse\"\x00\x12:\n" +
	"\aPublish\x12\x15.event.PublishRequest\x1a\x16.event.PublishResponse\"\x00B5Z3github.com/globulario/services/golang/event/eventpbb\x06proto3"

var (
	file_event_proto_rawDescOnce sync.Once
	file_event_proto_rawDescData []byte
)

func file_event_proto_rawDescGZIP() []byte {
	file_event_proto_rawDescOnce.Do(func() {
		file_event_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_event_proto_rawDesc), len(file_event_proto_rawDesc)))
	})
	return file_event_proto_rawDescData
}

var file_event_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_event_proto_goTypes = []any{
	(*KeepAlive)(nil),           // 0: event.KeepAlive
	(*Event)(nil),               // 1: event.Event
	(*QuitRequest)(nil),         // 2: event.QuitRequest
	(*QuitResponse)(nil),        // 3: event.QuitResponse
	(*OnEventRequest)(nil),      // 4: event.OnEventRequest
	(*OnEventResponse)(nil),     // 5: event.OnEventResponse
	(*SubscribeRequest)(nil),    // 6: event.SubscribeRequest
	(*SubscribeResponse)(nil),   // 7: event.SubscribeResponse
	(*UnSubscribeRequest)(nil),  // 8: event.UnSubscribeRequest
	(*UnSubscribeResponse)(nil), // 9: event.UnSubscribeResponse
	(*PublishRequest)(nil),      // 10: event.PublishRequest
	(*PublishResponse)(nil),     // 11: event.PublishResponse
	(*StopRequest)(nil),         // 12: event.StopRequest
	(*StopResponse)(nil),        // 13: event.StopResponse
}
var file_event_proto_depIdxs = []int32{
	1,  // 0: event.OnEventResponse.evt:type_name -> event.Event
	0,  // 1: event.OnEventResponse.ka:type_name -> event.KeepAlive
	1,  // 2: event.PublishRequest.evt:type_name -> event.Event
	12, // 3: event.EventService.Stop:input_type -> event.StopRequest
	4,  // 4: event.EventService.OnEvent:input_type -> event.OnEventRequest
	2,  // 5: event.EventService.Quit:input_type -> event.QuitRequest
	6,  // 6: event.EventService.Subscribe:input_type -> event.SubscribeRequest
	8,  // 7: event.EventService.UnSubscribe:input_type -> event.UnSubscribeRequest
	10, // 8: event.EventService.Publish:input_type -> event.PublishRequest
	13, // 9: event.EventService.Stop:output_type -> event.StopResponse
	5,  // 10: event.EventService.OnEvent:output_type -> event.OnEventResponse
	3,  // 11: event.EventService.Quit:output_type -> event.QuitResponse
	7,  // 12: event.EventService.Subscribe:output_type -> event.SubscribeResponse
	9,  // 13: event.EventService.UnSubscribe:output_type -> event.UnSubscribeResponse
	11, // 14: event.EventService.Publish:output_type -> event.PublishResponse
	9,  // [9:15] is the sub-list for method output_type
	3,  // [3:9] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_event_proto_init() }
func file_event_proto_init() {
	if File_event_proto != nil {
		return
	}
	file_event_proto_msgTypes[5].OneofWrappers = []any{
		(*OnEventResponse_Evt)(nil),
		(*OnEventResponse_Ka)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_event_proto_rawDesc), len(file_event_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_event_proto_goTypes,
		DependencyIndexes: file_event_proto_depIdxs,
		MessageInfos:      file_event_proto_msgTypes,
	}.Build()
	File_event_proto = out.File
	file_event_proto_goTypes = nil
	file_event_proto_depIdxs = nil
}
