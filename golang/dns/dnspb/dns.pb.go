// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.12.4
// source: dns.proto

package dnspb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// SetARequest is used to set an 'A' (Address) record in DNS.
type SetARequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domain string `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"` // The domain name for the A record.
	A      string `protobuf:"bytes,2,opt,name=a,proto3" json:"a,omitempty"`           // The IPv4 address associated with the domain.
	Ttl    uint32 `protobuf:"varint,3,opt,name=ttl,proto3" json:"ttl,omitempty"`      // Time To Live: duration that the record may be cached.
}

func (x *SetARequest) Reset() {
	*x = SetARequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dns_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetARequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetARequest) ProtoMessage() {}

func (x *SetARequest) ProtoReflect() protoreflect.Message {
	mi := &file_dns_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetARequest.ProtoReflect.Descriptor instead.
func (*SetARequest) Descriptor() ([]byte, []int) {
	return file_dns_proto_rawDescGZIP(), []int{0}
}

func (x *SetARequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *SetARequest) GetA() string {
	if x != nil {
		return x.A
	}
	return ""
}

func (x *SetARequest) GetTtl() uint32 {
	if x != nil {
		return x.Ttl
	}
	return 0
}

// SetAResponse is the response for a SetARequest.
type SetAResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"` // Response message or confirmation.
}

func (x *SetAResponse) Reset() {
	*x = SetAResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dns_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetAResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetAResponse) ProtoMessage() {}

func (x *SetAResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dns_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetAResponse.ProtoReflect.Descriptor instead.
func (*SetAResponse) Descriptor() ([]byte, []int) {
	return file_dns_proto_rawDescGZIP(), []int{1}
}

func (x *SetAResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// RemoveARequest is used to remove an 'A' record.
type RemoveARequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domain string `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"` // The domain name for the A record to be removed.
	A      string `protobuf:"bytes,2,opt,name=a,proto3" json:"a,omitempty"`           // The IPv4 address associated with the domain to be removed.
}

func (x *RemoveARequest) Reset() {
	*x = RemoveARequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dns_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveARequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveARequest) ProtoMessage() {}

func (x *RemoveARequest) ProtoReflect() protoreflect.Message {
	mi := &file_dns_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveARequest.ProtoReflect.Descriptor instead.
func (*RemoveARequest) Descriptor() ([]byte, []int) {
	return file_dns_proto_rawDescGZIP(), []int{2}
}

func (x *RemoveARequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *RemoveARequest) GetA() string {
	if x != nil {
		return x.A
	}
	return ""
}

// RemoveAResponse is the response for a RemoveARequest.
type RemoveAResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"` // The result of the removal operation, typically a success flag.
}

func (x *RemoveAResponse) Reset() {
	*x = RemoveAResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dns_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveAResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveAResponse) ProtoMessage() {}

func (x *RemoveAResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dns_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveAResponse.ProtoReflect.Descriptor instead.
func (*RemoveAResponse) Descriptor() ([]byte, []int) {
	return file_dns_proto_rawDescGZIP(), []int{3}
}

func (x *RemoveAResponse) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// GetARequest is used to retrieve 'A' records.
type GetARequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domain string `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"` // The domain name to get the A records for.
}

func (x *GetARequest) Reset() {
	*x = GetARequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dns_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetARequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetARequest) ProtoMessage() {}

func (x *GetARequest) ProtoReflect() protoreflect.Message {
	mi := &file_dns_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetARequest.ProtoReflect.Descriptor instead.
func (*GetARequest) Descriptor() ([]byte, []int) {
	return file_dns_proto_rawDescGZIP(), []int{4}
}

func (x *GetARequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

// GetAResponse returns the 'A' records for a given domain.
type GetAResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	A []string `protobuf:"bytes,1,rep,name=a,proto3" json:"a,omitempty"` // List of IPv4 addresses associated with the domain.
}

func (x *GetAResponse) Reset() {
	*x = GetAResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dns_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAResponse) ProtoMessage() {}

func (x *GetAResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dns_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAResponse.ProtoReflect.Descriptor instead.
func (*GetAResponse) Descriptor() ([]byte, []int) {
	return file_dns_proto_rawDescGZIP(), []int{5}
}

func (x *GetAResponse) GetA() []string {
	if x != nil {
		return x.A
	}
	return nil
}

// SetAAAARequest is used to set an 'AAAA' (IPv6 Address) record in DNS.
type SetAAAARequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domain string `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"` // The domain name for the AAAA record.
	Aaaa   string `protobuf:"bytes,2,opt,name=aaaa,proto3" json:"aaaa,omitempty"`     // The IPv6 address associated with the domain.
	Ttl    uint32 `protobuf:"varint,3,opt,name=ttl,proto3" json:"ttl,omitempty"`      // Time To Live: duration that the record may be cached.
}

func (x *SetAAAARequest) Reset() {
	*x = SetAAAARequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dns_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetAAAARequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetAAAARequest) ProtoMessage() {}

func (x *SetAAAARequest) ProtoReflect() protoreflect.Message {
	mi := &file_dns_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetAAAARequest.ProtoReflect.Descriptor instead.
func (*SetAAAARequest) Descriptor() ([]byte, []int) {
	return file_dns_proto_rawDescGZIP(), []int{6}
}

func (x *SetAAAARequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *SetAAAARequest) GetAaaa() string {
	if x != nil {
		return x.Aaaa
	}
	return ""
}

func (x *SetAAAARequest) GetTtl() uint32 {
	if x != nil {
		return x.Ttl
	}
	return 0
}

// SetAAAAResponse is the response for a SetAAAARequest.
type SetAAAAResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"` // Response message or confirmation.
}

func (x *SetAAAAResponse) Reset() {
	*x = SetAAAAResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dns_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetAAAAResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetAAAAResponse) ProtoMessage() {}

func (x *SetAAAAResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dns_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetAAAAResponse.ProtoReflect.Descriptor instead.
func (*SetAAAAResponse) Descriptor() ([]byte, []int) {
	return file_dns_proto_rawDescGZIP(), []int{7}
}

func (x *SetAAAAResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// RemoveAAAARequest is used to remove an 'AAAA' (IPv6 Address) record.
type RemoveAAAARequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domain string `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"` // The domain name for the AAAA record to be removed.
	Aaaa   string `protobuf:"bytes,2,opt,name=aaaa,proto3" json:"aaaa,omitempty"`     // The IPv6 address associated with the domain to be removed.
}

func (x *RemoveAAAARequest) Reset() {
	*x = RemoveAAAARequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dns_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveAAAARequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveAAAARequest) ProtoMessage() {}

func (x *RemoveAAAARequest) ProtoReflect() protoreflect.Message {
	mi := &file_dns_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveAAAARequest.ProtoReflect.Descriptor instead.
func (*RemoveAAAARequest) Descriptor() ([]byte, []int) {
	return file_dns_proto_rawDescGZIP(), []int{8}
}

func (x *RemoveAAAARequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *RemoveAAAARequest) GetAaaa() string {
	if x != nil {
		return x.Aaaa
	}
	return ""
}

// RemoveAAAAResponse is the response for a RemoveAAAARequest.
type RemoveAAAAResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"` // The result of the removal operation, typically a success flag.
}

func (x *RemoveAAAAResponse) Reset() {
	*x = RemoveAAAAResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dns_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveAAAAResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveAAAAResponse) ProtoMessage() {}

func (x *RemoveAAAAResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dns_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveAAAAResponse.ProtoReflect.Descriptor instead.
func (*RemoveAAAAResponse) Descriptor() ([]byte, []int) {
	return file_dns_proto_rawDescGZIP(), []int{9}
}

func (x *RemoveAAAAResponse) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// GetAAAARequest is used to retrieve 'AAAA' records.
type GetAAAARequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domain string `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"` // The domain name to get the AAAA records for.
}

func (x *GetAAAARequest) Reset() {
	*x = GetAAAARequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dns_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAAAARequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAAAARequest) ProtoMessage() {}

func (x *GetAAAARequest) ProtoReflect() protoreflect.Message {
	mi := &file_dns_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAAAARequest.ProtoReflect.Descriptor instead.
func (*GetAAAARequest) Descriptor() ([]byte, []int) {
	return file_dns_proto_rawDescGZIP(), []int{10}
}

func (x *GetAAAARequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

// GetAAAAResponse returns the 'AAAA' records for a given domain.
type GetAAAAResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Aaaa []string `protobuf:"bytes,1,rep,name=aaaa,proto3" json:"aaaa,omitempty"` // List of IPv6 addresses associated with the domain.
}

func (x *GetAAAAResponse) Reset() {
	*x = GetAAAAResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dns_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAAAAResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAAAAResponse) ProtoMessage() {}

func (x *GetAAAAResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dns_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAAAAResponse.ProtoReflect.Descriptor instead.
func (*GetAAAAResponse) Descriptor() ([]byte, []int) {
	return file_dns_proto_rawDescGZIP(), []int{11}
}

func (x *GetAAAAResponse) GetAaaa() []string {
	if x != nil {
		return x.Aaaa
	}
	return nil
}

// SetTextRequest is used to set a text record in DNS.
type SetTextRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`         // Identifier for the text record.
	Values []string `protobuf:"bytes,2,rep,name=values,proto3" json:"values,omitempty"` // List of values for the text record.
	Ttl    uint32   `protobuf:"varint,3,opt,name=ttl,proto3" json:"ttl,omitempty"`      // Time To Live: duration that the record may be cached.
}

func (x *SetTextRequest) Reset() {
	*x = SetTextRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dns_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetTextRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetTextRequest) ProtoMessage() {}

func (x *SetTextRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dns_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetTextRequest.ProtoReflect.Descriptor instead.
func (*SetTextRequest) Descriptor() ([]byte, []int) {
	return file_dns_proto_rawDescGZIP(), []int{12}
}

func (x *SetTextRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SetTextRequest) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *SetTextRequest) GetTtl() uint32 {
	if x != nil {
		return x.Ttl
	}
	return 0
}

// SetTextResponse is the response for a SetTextRequest.
type SetTextResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"` // The result of the set operation, typically a success flag.
}

func (x *SetTextResponse) Reset() {
	*x = SetTextResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dns_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetTextResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetTextResponse) ProtoMessage() {}

func (x *SetTextResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dns_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetTextResponse.ProtoReflect.Descriptor instead.
func (*SetTextResponse) Descriptor() ([]byte, []int) {
	return file_dns_proto_rawDescGZIP(), []int{13}
}

func (x *SetTextResponse) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// GetTextRequest is used to retrieve text records.
type GetTextRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // Identifier for the text record to retrieve.
}

func (x *GetTextRequest) Reset() {
	*x = GetTextRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dns_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTextRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTextRequest) ProtoMessage() {}

func (x *GetTextRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dns_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTextRequest.ProtoReflect.Descriptor instead.
func (*GetTextRequest) Descriptor() ([]byte, []int) {
	return file_dns_proto_rawDescGZIP(), []int{14}
}

func (x *GetTextRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// GetTextResponse returns the text records for a given ID.
type GetTextResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values []string `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"` // List of values associated with the text record.
}

func (x *GetTextResponse) Reset() {
	*x = GetTextResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dns_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTextResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTextResponse) ProtoMessage() {}

func (x *GetTextResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dns_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTextResponse.ProtoReflect.Descriptor instead.
func (*GetTextResponse) Descriptor() ([]byte, []int) {
	return file_dns_proto_rawDescGZIP(), []int{15}
}

func (x *GetTextResponse) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

// RemoveTextRequest is used to remove a text record.
type RemoveTextRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // Identifier for the text record to be removed.
}

func (x *RemoveTextRequest) Reset() {
	*x = RemoveTextRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dns_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveTextRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveTextRequest) ProtoMessage() {}

func (x *RemoveTextRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dns_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveTextRequest.ProtoReflect.Descriptor instead.
func (*RemoveTextRequest) Descriptor() ([]byte, []int) {
	return file_dns_proto_rawDescGZIP(), []int{16}
}

func (x *RemoveTextRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// RemoveTextResponse is the response for a RemoveTextRequest.
type RemoveTextResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"` // The result of the removal operation, typically a success flag.
}

func (x *RemoveTextResponse) Reset() {
	*x = RemoveTextResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dns_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveTextResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveTextResponse) ProtoMessage() {}

func (x *RemoveTextResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dns_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveTextResponse.ProtoReflect.Descriptor instead.
func (*RemoveTextResponse) Descriptor() ([]byte, []int) {
	return file_dns_proto_rawDescGZIP(), []int{17}
}

func (x *RemoveTextResponse) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// SetNsRequest is used to set a Name Server (NS) record.
type SetNsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id  string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`    // Identifier for the NS record.
	Ns  string `protobuf:"bytes,2,opt,name=ns,proto3" json:"ns,omitempty"`    // The Name Server to be set.
	Ttl uint32 `protobuf:"varint,3,opt,name=ttl,proto3" json:"ttl,omitempty"` // Time To Live: duration that the record may be cached.
}

func (x *SetNsRequest) Reset() {
	*x = SetNsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dns_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetNsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetNsRequest) ProtoMessage() {}

func (x *SetNsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dns_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetNsRequest.ProtoReflect.Descriptor instead.
func (*SetNsRequest) Descriptor() ([]byte, []int) {
	return file_dns_proto_rawDescGZIP(), []int{18}
}

func (x *SetNsRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SetNsRequest) GetNs() string {
	if x != nil {
		return x.Ns
	}
	return ""
}

func (x *SetNsRequest) GetTtl() uint32 {
	if x != nil {
		return x.Ttl
	}
	return 0
}

// SetNsResponse is the response for a SetNsRequest.
type SetNsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"` // The result of the set operation, typically a success flag.
}

func (x *SetNsResponse) Reset() {
	*x = SetNsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dns_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetNsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetNsResponse) ProtoMessage() {}

func (x *SetNsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dns_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetNsResponse.ProtoReflect.Descriptor instead.
func (*SetNsResponse) Descriptor() ([]byte, []int) {
	return file_dns_proto_rawDescGZIP(), []int{19}
}

func (x *SetNsResponse) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// GetNsRequest is used to retrieve Name Server (NS) records.
type GetNsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // Identifier for the NS records to retrieve.
}

func (x *GetNsRequest) Reset() {
	*x = GetNsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dns_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNsRequest) ProtoMessage() {}

func (x *GetNsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dns_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNsRequest.ProtoReflect.Descriptor instead.
func (*GetNsRequest) Descriptor() ([]byte, []int) {
	return file_dns_proto_rawDescGZIP(), []int{20}
}

func (x *GetNsRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// GetNsResponse returns the NS records for a given identifier.
type GetNsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ns []string `protobuf:"bytes,1,rep,name=ns,proto3" json:"ns,omitempty"` // List of Name Servers associated with the identifier.
}

func (x *GetNsResponse) Reset() {
	*x = GetNsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dns_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNsResponse) ProtoMessage() {}

func (x *GetNsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dns_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNsResponse.ProtoReflect.Descriptor instead.
func (*GetNsResponse) Descriptor() ([]byte, []int) {
	return file_dns_proto_rawDescGZIP(), []int{21}
}

func (x *GetNsResponse) GetNs() []string {
	if x != nil {
		return x.Ns
	}
	return nil
}

// RemoveNsRequest is used to remove a Name Server (NS) record.
type RemoveNsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // Identifier for the NS record to be removed.
	Ns string `protobuf:"bytes,2,opt,name=ns,proto3" json:"ns,omitempty"` // The Name Server to be removed.
}

func (x *RemoveNsRequest) Reset() {
	*x = RemoveNsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dns_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveNsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveNsRequest) ProtoMessage() {}

func (x *RemoveNsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dns_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveNsRequest.ProtoReflect.Descriptor instead.
func (*RemoveNsRequest) Descriptor() ([]byte, []int) {
	return file_dns_proto_rawDescGZIP(), []int{22}
}

func (x *RemoveNsRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RemoveNsRequest) GetNs() string {
	if x != nil {
		return x.Ns
	}
	return ""
}

// RemoveNsResponse is the response for a RemoveNsRequest.
type RemoveNsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"` // The result of the removal operation, typically a success flag.
}

func (x *RemoveNsResponse) Reset() {
	*x = RemoveNsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dns_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveNsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveNsResponse) ProtoMessage() {}

func (x *RemoveNsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dns_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveNsResponse.ProtoReflect.Descriptor instead.
func (*RemoveNsResponse) Descriptor() ([]byte, []int) {
	return file_dns_proto_rawDescGZIP(), []int{23}
}

func (x *RemoveNsResponse) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// SetCNameRequest is used to set a Canonical Name (CNAME) record.
type SetCNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`       // Identifier for the CNAME record.
	Cname string `protobuf:"bytes,2,opt,name=cname,proto3" json:"cname,omitempty"` // The Canonical Name to be set.
	Ttl   uint32 `protobuf:"varint,3,opt,name=ttl,proto3" json:"ttl,omitempty"`    // Time To Live: duration that the record may be cached.
}

func (x *SetCNameRequest) Reset() {
	*x = SetCNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dns_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetCNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetCNameRequest) ProtoMessage() {}

func (x *SetCNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dns_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetCNameRequest.ProtoReflect.Descriptor instead.
func (*SetCNameRequest) Descriptor() ([]byte, []int) {
	return file_dns_proto_rawDescGZIP(), []int{24}
}

func (x *SetCNameRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SetCNameRequest) GetCname() string {
	if x != nil {
		return x.Cname
	}
	return ""
}

func (x *SetCNameRequest) GetTtl() uint32 {
	if x != nil {
		return x.Ttl
	}
	return 0
}

// SetCNameResponse is the response for a SetCNameRequest.
type SetCNameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"` // The result of the set operation, typically a success flag.
}

func (x *SetCNameResponse) Reset() {
	*x = SetCNameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dns_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetCNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetCNameResponse) ProtoMessage() {}

func (x *SetCNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dns_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetCNameResponse.ProtoReflect.Descriptor instead.
func (*SetCNameResponse) Descriptor() ([]byte, []int) {
	return file_dns_proto_rawDescGZIP(), []int{25}
}

func (x *SetCNameResponse) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// GetCNameRequest is used to retrieve Canonical Name (CNAME) records.
type GetCNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // Identifier for the CNAME record to retrieve.
}

func (x *GetCNameRequest) Reset() {
	*x = GetCNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dns_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCNameRequest) ProtoMessage() {}

func (x *GetCNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dns_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCNameRequest.ProtoReflect.Descriptor instead.
func (*GetCNameRequest) Descriptor() ([]byte, []int) {
	return file_dns_proto_rawDescGZIP(), []int{26}
}

func (x *GetCNameRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// GetCNameResponse returns the CNAME record for a given identifier.
type GetCNameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cname string `protobuf:"bytes,1,opt,name=cname,proto3" json:"cname,omitempty"` // The Canonical Name associated with the identifier.
}

func (x *GetCNameResponse) Reset() {
	*x = GetCNameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dns_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCNameResponse) ProtoMessage() {}

func (x *GetCNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dns_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCNameResponse.ProtoReflect.Descriptor instead.
func (*GetCNameResponse) Descriptor() ([]byte, []int) {
	return file_dns_proto_rawDescGZIP(), []int{27}
}

func (x *GetCNameResponse) GetCname() string {
	if x != nil {
		return x.Cname
	}
	return ""
}

// RemoveCNameRequest is used to remove a Canonical Name (CNAME) record.
type RemoveCNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // Identifier for the CNAME record to be removed.
}

func (x *RemoveCNameRequest) Reset() {
	*x = RemoveCNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dns_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveCNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveCNameRequest) ProtoMessage() {}

func (x *RemoveCNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dns_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveCNameRequest.ProtoReflect.Descriptor instead.
func (*RemoveCNameRequest) Descriptor() ([]byte, []int) {
	return file_dns_proto_rawDescGZIP(), []int{28}
}

func (x *RemoveCNameRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// RemoveCNameResponse is the response for a RemoveCNameRequest.
type RemoveCNameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"` // The result of the removal operation, typically a success flag.
}

func (x *RemoveCNameResponse) Reset() {
	*x = RemoveCNameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dns_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveCNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveCNameResponse) ProtoMessage() {}

func (x *RemoveCNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dns_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveCNameResponse.ProtoReflect.Descriptor instead.
func (*RemoveCNameResponse) Descriptor() ([]byte, []int) {
	return file_dns_proto_rawDescGZIP(), []int{29}
}

func (x *RemoveCNameResponse) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// AFSDB represents an AFS database record.
type AFSDB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subtype  uint32 `protobuf:"varint,1,opt,name=subtype,proto3" json:"subtype,omitempty"`  // The subtype of the AFSDB record.
	Hostname string `protobuf:"bytes,2,opt,name=hostname,proto3" json:"hostname,omitempty"` // The hostname of the AFS database server.
}

func (x *AFSDB) Reset() {
	*x = AFSDB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dns_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AFSDB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AFSDB) ProtoMessage() {}

func (x *AFSDB) ProtoReflect() protoreflect.Message {
	mi := &file_dns_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AFSDB.ProtoReflect.Descriptor instead.
func (*AFSDB) Descriptor() ([]byte, []int) {
	return file_dns_proto_rawDescGZIP(), []int{30}
}

func (x *AFSDB) GetSubtype() uint32 {
	if x != nil {
		return x.Subtype
	}
	return 0
}

func (x *AFSDB) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

// SetAfsdbRequest is used to set an AFSDB record.
type SetAfsdbRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`       // Identifier for the AFSDB record.
	Afsdb *AFSDB `protobuf:"bytes,2,opt,name=afsdb,proto3" json:"afsdb,omitempty"` // The AFSDB record to be set.
	Ttl   uint32 `protobuf:"varint,3,opt,name=ttl,proto3" json:"ttl,omitempty"`    // Time To Live: duration that the record may be cached.
}

func (x *SetAfsdbRequest) Reset() {
	*x = SetAfsdbRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dns_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetAfsdbRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetAfsdbRequest) ProtoMessage() {}

func (x *SetAfsdbRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dns_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetAfsdbRequest.ProtoReflect.Descriptor instead.
func (*SetAfsdbRequest) Descriptor() ([]byte, []int) {
	return file_dns_proto_rawDescGZIP(), []int{31}
}

func (x *SetAfsdbRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SetAfsdbRequest) GetAfsdb() *AFSDB {
	if x != nil {
		return x.Afsdb
	}
	return nil
}

func (x *SetAfsdbRequest) GetTtl() uint32 {
	if x != nil {
		return x.Ttl
	}
	return 0
}

// SetAfsdbResponse is the response for a SetAfsdbRequest.
type SetAfsdbResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"` // The result of the set operation, typically a success flag.
}

func (x *SetAfsdbResponse) Reset() {
	*x = SetAfsdbResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dns_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetAfsdbResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetAfsdbResponse) ProtoMessage() {}

func (x *SetAfsdbResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dns_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetAfsdbResponse.ProtoReflect.Descriptor instead.
func (*SetAfsdbResponse) Descriptor() ([]byte, []int) {
	return file_dns_proto_rawDescGZIP(), []int{32}
}

func (x *SetAfsdbResponse) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// GetAfsdbRequest is used to retrieve AFSDB records.
type GetAfsdbRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // Identifier for the AFSDB record to retrieve.
}

func (x *GetAfsdbRequest) Reset() {
	*x = GetAfsdbRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dns_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAfsdbRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAfsdbRequest) ProtoMessage() {}

func (x *GetAfsdbRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dns_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAfsdbRequest.ProtoReflect.Descriptor instead.
func (*GetAfsdbRequest) Descriptor() ([]byte, []int) {
	return file_dns_proto_rawDescGZIP(), []int{33}
}

func (x *GetAfsdbRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// GetAfsdbResponse returns the AFSDB record for a given identifier.
type GetAfsdbResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *AFSDB `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"` // The AFSDB record associated with the identifier.
}

func (x *GetAfsdbResponse) Reset() {
	*x = GetAfsdbResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dns_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAfsdbResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAfsdbResponse) ProtoMessage() {}

func (x *GetAfsdbResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dns_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAfsdbResponse.ProtoReflect.Descriptor instead.
func (*GetAfsdbResponse) Descriptor() ([]byte, []int) {
	return file_dns_proto_rawDescGZIP(), []int{34}
}

func (x *GetAfsdbResponse) GetResult() *AFSDB {
	if x != nil {
		return x.Result
	}
	return nil
}

// RemoveAfsdbRequest is used to remove an AFSDB record.
type RemoveAfsdbRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // Identifier for the AFSDB record to be removed.
}

func (x *RemoveAfsdbRequest) Reset() {
	*x = RemoveAfsdbRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dns_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveAfsdbRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveAfsdbRequest) ProtoMessage() {}

func (x *RemoveAfsdbRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dns_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveAfsdbRequest.ProtoReflect.Descriptor instead.
func (*RemoveAfsdbRequest) Descriptor() ([]byte, []int) {
	return file_dns_proto_rawDescGZIP(), []int{35}
}

func (x *RemoveAfsdbRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// RemoveAfsdbResponse is the response for a RemoveAfsdbRequest.
type RemoveAfsdbResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"` // The result of the removal operation, typically a success flag.
}

func (x *RemoveAfsdbResponse) Reset() {
	*x = RemoveAfsdbResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dns_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveAfsdbResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveAfsdbResponse) ProtoMessage() {}

func (x *RemoveAfsdbResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dns_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveAfsdbResponse.ProtoReflect.Descriptor instead.
func (*RemoveAfsdbResponse) Descriptor() ([]byte, []int) {
	return file_dns_proto_rawDescGZIP(), []int{36}
}

func (x *RemoveAfsdbResponse) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// MX represents a mail exchange (MX) record.
type MX struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Preference int32  `protobuf:"varint,1,opt,name=preference,proto3" json:"preference,omitempty"` // Preference of the MX record, lower values are more preferred.
	Mx         string `protobuf:"bytes,2,opt,name=mx,proto3" json:"mx,omitempty"`                  // The mail exchange server for this MX record.
}

func (x *MX) Reset() {
	*x = MX{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dns_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MX) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MX) ProtoMessage() {}

func (x *MX) ProtoReflect() protoreflect.Message {
	mi := &file_dns_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MX.ProtoReflect.Descriptor instead.
func (*MX) Descriptor() ([]byte, []int) {
	return file_dns_proto_rawDescGZIP(), []int{37}
}

func (x *MX) GetPreference() int32 {
	if x != nil {
		return x.Preference
	}
	return 0
}

func (x *MX) GetMx() string {
	if x != nil {
		return x.Mx
	}
	return ""
}

// SetMxRequest is used to set an MX record.
type SetMxRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id  string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`    // Identifier for the MX record.
	Mx  *MX    `protobuf:"bytes,2,opt,name=mx,proto3" json:"mx,omitempty"`    // The MX record to be set.
	Ttl uint32 `protobuf:"varint,3,opt,name=ttl,proto3" json:"ttl,omitempty"` // Time To Live: duration that the record may be cached.
}

func (x *SetMxRequest) Reset() {
	*x = SetMxRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dns_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetMxRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetMxRequest) ProtoMessage() {}

func (x *SetMxRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dns_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetMxRequest.ProtoReflect.Descriptor instead.
func (*SetMxRequest) Descriptor() ([]byte, []int) {
	return file_dns_proto_rawDescGZIP(), []int{38}
}

func (x *SetMxRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SetMxRequest) GetMx() *MX {
	if x != nil {
		return x.Mx
	}
	return nil
}

func (x *SetMxRequest) GetTtl() uint32 {
	if x != nil {
		return x.Ttl
	}
	return 0
}

// SetMxResponse is the response for a SetMxRequest.
type SetMxResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"` // The result of the set operation, typically a success flag.
}

func (x *SetMxResponse) Reset() {
	*x = SetMxResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dns_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetMxResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetMxResponse) ProtoMessage() {}

func (x *SetMxResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dns_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetMxResponse.ProtoReflect.Descriptor instead.
func (*SetMxResponse) Descriptor() ([]byte, []int) {
	return file_dns_proto_rawDescGZIP(), []int{39}
}

func (x *SetMxResponse) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// GetMxRequest is used to retrieve MX records.
type GetMxRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // Identifier for the MX records to retrieve.
	Mx string `protobuf:"bytes,2,opt,name=mx,proto3" json:"mx,omitempty"` // Optional: specific MX record to retrieve.
}

func (x *GetMxRequest) Reset() {
	*x = GetMxRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dns_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMxRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMxRequest) ProtoMessage() {}

func (x *GetMxRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dns_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMxRequest.ProtoReflect.Descriptor instead.
func (*GetMxRequest) Descriptor() ([]byte, []int) {
	return file_dns_proto_rawDescGZIP(), []int{40}
}

func (x *GetMxRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetMxRequest) GetMx() string {
	if x != nil {
		return x.Mx
	}
	return ""
}

// GetMxResponse returns the MX records for a given identifier.
type GetMxResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result []*MX `protobuf:"bytes,1,rep,name=result,proto3" json:"result,omitempty"` // List of MX records associated with the identifier.
}

func (x *GetMxResponse) Reset() {
	*x = GetMxResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dns_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMxResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMxResponse) ProtoMessage() {}

func (x *GetMxResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dns_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMxResponse.ProtoReflect.Descriptor instead.
func (*GetMxResponse) Descriptor() ([]byte, []int) {
	return file_dns_proto_rawDescGZIP(), []int{41}
}

func (x *GetMxResponse) GetResult() []*MX {
	if x != nil {
		return x.Result
	}
	return nil
}

// RemoveMxRequest is used to remove an MX record.
type RemoveMxRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // Identifier for the MX record to be removed.
	Mx string `protobuf:"bytes,2,opt,name=mx,proto3" json:"mx,omitempty"` // Specific MX record to remove.
}

func (x *RemoveMxRequest) Reset() {
	*x = RemoveMxRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dns_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveMxRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveMxRequest) ProtoMessage() {}

func (x *RemoveMxRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dns_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveMxRequest.ProtoReflect.Descriptor instead.
func (*RemoveMxRequest) Descriptor() ([]byte, []int) {
	return file_dns_proto_rawDescGZIP(), []int{42}
}

func (x *RemoveMxRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RemoveMxRequest) GetMx() string {
	if x != nil {
		return x.Mx
	}
	return ""
}

// RemoveMxResponse is the response for a RemoveMxRequest.
type RemoveMxResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"` // The result of the removal operation, typically a success flag.
}

func (x *RemoveMxResponse) Reset() {
	*x = RemoveMxResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dns_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveMxResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveMxResponse) ProtoMessage() {}

func (x *RemoveMxResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dns_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveMxResponse.ProtoReflect.Descriptor instead.
func (*RemoveMxResponse) Descriptor() ([]byte, []int) {
	return file_dns_proto_rawDescGZIP(), []int{43}
}

func (x *RemoveMxResponse) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// SOA represents a Start of Authority record.
type SOA struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ns      string `protobuf:"bytes,1,opt,name=ns,proto3" json:"ns,omitempty"`            // The primary name server for the domain.
	Mbox    string `protobuf:"bytes,2,opt,name=mbox,proto3" json:"mbox,omitempty"`        // The responsible party's mailbox for the domain.
	Serial  uint32 `protobuf:"varint,3,opt,name=serial,proto3" json:"serial,omitempty"`   // The serial number of the zone.
	Refresh uint32 `protobuf:"varint,4,opt,name=refresh,proto3" json:"refresh,omitempty"` // Time interval before the zone should be refreshed.
	Retry   uint32 `protobuf:"varint,5,opt,name=retry,proto3" json:"retry,omitempty"`     // Time interval to retry if the primary NS is not available.
	Expire  uint32 `protobuf:"varint,6,opt,name=expire,proto3" json:"expire,omitempty"`   // Time when the zone data is no longer authoritative.
	Minttl  uint32 `protobuf:"varint,7,opt,name=minttl,proto3" json:"minttl,omitempty"`   // Minimum TTL to be exported with any RR from the zone.
}

func (x *SOA) Reset() {
	*x = SOA{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dns_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SOA) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SOA) ProtoMessage() {}

func (x *SOA) ProtoReflect() protoreflect.Message {
	mi := &file_dns_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SOA.ProtoReflect.Descriptor instead.
func (*SOA) Descriptor() ([]byte, []int) {
	return file_dns_proto_rawDescGZIP(), []int{44}
}

func (x *SOA) GetNs() string {
	if x != nil {
		return x.Ns
	}
	return ""
}

func (x *SOA) GetMbox() string {
	if x != nil {
		return x.Mbox
	}
	return ""
}

func (x *SOA) GetSerial() uint32 {
	if x != nil {
		return x.Serial
	}
	return 0
}

func (x *SOA) GetRefresh() uint32 {
	if x != nil {
		return x.Refresh
	}
	return 0
}

func (x *SOA) GetRetry() uint32 {
	if x != nil {
		return x.Retry
	}
	return 0
}

func (x *SOA) GetExpire() uint32 {
	if x != nil {
		return x.Expire
	}
	return 0
}

func (x *SOA) GetMinttl() uint32 {
	if x != nil {
		return x.Minttl
	}
	return 0
}

// SetSoaRequest is used to set an SOA record.
type SetSoaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id  string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`    // Identifier for the SOA record.
	Soa *SOA   `protobuf:"bytes,2,opt,name=soa,proto3" json:"soa,omitempty"`  // The SOA record to be set.
	Ttl uint32 `protobuf:"varint,3,opt,name=ttl,proto3" json:"ttl,omitempty"` // Time To Live: duration that the record may be cached.
}

func (x *SetSoaRequest) Reset() {
	*x = SetSoaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dns_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetSoaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetSoaRequest) ProtoMessage() {}

func (x *SetSoaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dns_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetSoaRequest.ProtoReflect.Descriptor instead.
func (*SetSoaRequest) Descriptor() ([]byte, []int) {
	return file_dns_proto_rawDescGZIP(), []int{45}
}

func (x *SetSoaRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SetSoaRequest) GetSoa() *SOA {
	if x != nil {
		return x.Soa
	}
	return nil
}

func (x *SetSoaRequest) GetTtl() uint32 {
	if x != nil {
		return x.Ttl
	}
	return 0
}

// SetSoaResponse is the response for a SetSoaRequest.
type SetSoaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"` // The result of the set operation, typically a success flag.
}

func (x *SetSoaResponse) Reset() {
	*x = SetSoaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dns_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetSoaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetSoaResponse) ProtoMessage() {}

func (x *SetSoaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dns_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetSoaResponse.ProtoReflect.Descriptor instead.
func (*SetSoaResponse) Descriptor() ([]byte, []int) {
	return file_dns_proto_rawDescGZIP(), []int{46}
}

func (x *SetSoaResponse) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// GetSoaRequest is used to retrieve SOA records.
type GetSoaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // Identifier for the SOA records to retrieve.
	Ns string `protobuf:"bytes,2,opt,name=ns,proto3" json:"ns,omitempty"` // Optional: specific name server for which to retrieve the SOA.
}

func (x *GetSoaRequest) Reset() {
	*x = GetSoaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dns_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSoaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSoaRequest) ProtoMessage() {}

func (x *GetSoaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dns_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSoaRequest.ProtoReflect.Descriptor instead.
func (*GetSoaRequest) Descriptor() ([]byte, []int) {
	return file_dns_proto_rawDescGZIP(), []int{47}
}

func (x *GetSoaRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetSoaRequest) GetNs() string {
	if x != nil {
		return x.Ns
	}
	return ""
}

// GetSoaResponse returns the SOA records for a given identifier.
type GetSoaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result []*SOA `protobuf:"bytes,1,rep,name=result,proto3" json:"result,omitempty"` // List of SOA records associated with the identifier.
}

func (x *GetSoaResponse) Reset() {
	*x = GetSoaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dns_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSoaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSoaResponse) ProtoMessage() {}

func (x *GetSoaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dns_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSoaResponse.ProtoReflect.Descriptor instead.
func (*GetSoaResponse) Descriptor() ([]byte, []int) {
	return file_dns_proto_rawDescGZIP(), []int{48}
}

func (x *GetSoaResponse) GetResult() []*SOA {
	if x != nil {
		return x.Result
	}
	return nil
}

// RemoveSoaRequest is used to remove an SOA record.
type RemoveSoaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // Identifier for the SOA record to be removed.
	Ns string `protobuf:"bytes,2,opt,name=ns,proto3" json:"ns,omitempty"` // Specific name server for which to remove the SOA.
}

func (x *RemoveSoaRequest) Reset() {
	*x = RemoveSoaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dns_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveSoaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveSoaRequest) ProtoMessage() {}

func (x *RemoveSoaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dns_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveSoaRequest.ProtoReflect.Descriptor instead.
func (*RemoveSoaRequest) Descriptor() ([]byte, []int) {
	return file_dns_proto_rawDescGZIP(), []int{49}
}

func (x *RemoveSoaRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RemoveSoaRequest) GetNs() string {
	if x != nil {
		return x.Ns
	}
	return ""
}

// RemoveSoaResponse is the response for a RemoveSoaRequest.
type RemoveSoaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"` // The result of the removal operation, typically a success flag.
}

func (x *RemoveSoaResponse) Reset() {
	*x = RemoveSoaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dns_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveSoaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveSoaResponse) ProtoMessage() {}

func (x *RemoveSoaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dns_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveSoaResponse.ProtoReflect.Descriptor instead.
func (*RemoveSoaResponse) Descriptor() ([]byte, []int) {
	return file_dns_proto_rawDescGZIP(), []int{50}
}

func (x *RemoveSoaResponse) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// URI represents a Uniform Resource Identifier record.
type URI struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Priority uint32 `protobuf:"varint,1,opt,name=priority,proto3" json:"priority,omitempty"` // The priority of the target host, lower value means more preferred.
	Weight   uint32 `protobuf:"varint,2,opt,name=weight,proto3" json:"weight,omitempty"`     // A relative weight for records with the same priority.
	Target   string `protobuf:"bytes,3,opt,name=target,proto3" json:"target,omitempty"`      // The target URI for the record.
}

func (x *URI) Reset() {
	*x = URI{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dns_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *URI) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*URI) ProtoMessage() {}

func (x *URI) ProtoReflect() protoreflect.Message {
	mi := &file_dns_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use URI.ProtoReflect.Descriptor instead.
func (*URI) Descriptor() ([]byte, []int) {
	return file_dns_proto_rawDescGZIP(), []int{51}
}

func (x *URI) GetPriority() uint32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *URI) GetWeight() uint32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *URI) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

// SetUriRequest is used to set a URI record.
type SetUriRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id  string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`    // Identifier for the URI record.
	Uri *URI   `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`  // The URI record to be set.
	Ttl uint32 `protobuf:"varint,3,opt,name=ttl,proto3" json:"ttl,omitempty"` // Time To Live: duration that the record may be cached.
}

func (x *SetUriRequest) Reset() {
	*x = SetUriRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dns_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetUriRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetUriRequest) ProtoMessage() {}

func (x *SetUriRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dns_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetUriRequest.ProtoReflect.Descriptor instead.
func (*SetUriRequest) Descriptor() ([]byte, []int) {
	return file_dns_proto_rawDescGZIP(), []int{52}
}

func (x *SetUriRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SetUriRequest) GetUri() *URI {
	if x != nil {
		return x.Uri
	}
	return nil
}

func (x *SetUriRequest) GetTtl() uint32 {
	if x != nil {
		return x.Ttl
	}
	return 0
}

// SetUriResponse is the response for a SetUriRequest.
type SetUriResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"` // The result of the set operation, typically a success flag.
}

func (x *SetUriResponse) Reset() {
	*x = SetUriResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dns_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetUriResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetUriResponse) ProtoMessage() {}

func (x *SetUriResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dns_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetUriResponse.ProtoReflect.Descriptor instead.
func (*SetUriResponse) Descriptor() ([]byte, []int) {
	return file_dns_proto_rawDescGZIP(), []int{53}
}

func (x *SetUriResponse) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// GetUriRequest is used to retrieve URI records.
type GetUriRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`         // Identifier for the URI records to retrieve.
	Target string `protobuf:"bytes,2,opt,name=target,proto3" json:"target,omitempty"` // Optional: specific target URI to retrieve.
}

func (x *GetUriRequest) Reset() {
	*x = GetUriRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dns_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUriRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUriRequest) ProtoMessage() {}

func (x *GetUriRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dns_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUriRequest.ProtoReflect.Descriptor instead.
func (*GetUriRequest) Descriptor() ([]byte, []int) {
	return file_dns_proto_rawDescGZIP(), []int{54}
}

func (x *GetUriRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetUriRequest) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

// GetUriResponse returns the URI records for a given identifier.
type GetUriResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result []*URI `protobuf:"bytes,1,rep,name=result,proto3" json:"result,omitempty"` // List of URI records associated with the identifier.
}

func (x *GetUriResponse) Reset() {
	*x = GetUriResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dns_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUriResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUriResponse) ProtoMessage() {}

func (x *GetUriResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dns_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUriResponse.ProtoReflect.Descriptor instead.
func (*GetUriResponse) Descriptor() ([]byte, []int) {
	return file_dns_proto_rawDescGZIP(), []int{55}
}

func (x *GetUriResponse) GetResult() []*URI {
	if x != nil {
		return x.Result
	}
	return nil
}

// RemoveUriRequest is used to remove a URI record.
type RemoveUriRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`         // Identifier for the URI record to be removed.
	Target string `protobuf:"bytes,2,opt,name=target,proto3" json:"target,omitempty"` // Specific target URI to remove.
}

func (x *RemoveUriRequest) Reset() {
	*x = RemoveUriRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dns_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveUriRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveUriRequest) ProtoMessage() {}

func (x *RemoveUriRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dns_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveUriRequest.ProtoReflect.Descriptor instead.
func (*RemoveUriRequest) Descriptor() ([]byte, []int) {
	return file_dns_proto_rawDescGZIP(), []int{56}
}

func (x *RemoveUriRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RemoveUriRequest) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

// RemoveUriResponse is the response for a RemoveUriRequest.
type RemoveUriResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"` // The result of the removal operation, typically a success flag.
}

func (x *RemoveUriResponse) Reset() {
	*x = RemoveUriResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dns_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveUriResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveUriResponse) ProtoMessage() {}

func (x *RemoveUriResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dns_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveUriResponse.ProtoReflect.Descriptor instead.
func (*RemoveUriResponse) Descriptor() ([]byte, []int) {
	return file_dns_proto_rawDescGZIP(), []int{57}
}

func (x *RemoveUriResponse) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// CAA represents a Certification Authority Authorization record.
type CAA struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Flag   uint32 `protobuf:"varint,1,opt,name=flag,proto3" json:"flag,omitempty"`    // An unsigned integer between 0-255 used as a flag.
	Tag    string `protobuf:"bytes,2,opt,name=tag,proto3" json:"tag,omitempty"`       // The property identifier, a case-sensitive ASCII string.
	Domain string `protobuf:"bytes,3,opt,name=domain,proto3" json:"domain,omitempty"` // The domain name associated with the record.
}

func (x *CAA) Reset() {
	*x = CAA{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dns_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CAA) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CAA) ProtoMessage() {}

func (x *CAA) ProtoReflect() protoreflect.Message {
	mi := &file_dns_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CAA.ProtoReflect.Descriptor instead.
func (*CAA) Descriptor() ([]byte, []int) {
	return file_dns_proto_rawDescGZIP(), []int{58}
}

func (x *CAA) GetFlag() uint32 {
	if x != nil {
		return x.Flag
	}
	return 0
}

func (x *CAA) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *CAA) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

// SetCaaRequest is used to set a CAA record.
type SetCaaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id  string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`    // Identifier for the CAA record.
	Caa *CAA   `protobuf:"bytes,2,opt,name=caa,proto3" json:"caa,omitempty"`  // The CAA record to be set.
	Ttl uint32 `protobuf:"varint,3,opt,name=ttl,proto3" json:"ttl,omitempty"` // Time To Live: duration that the record may be cached.
}

func (x *SetCaaRequest) Reset() {
	*x = SetCaaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dns_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetCaaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetCaaRequest) ProtoMessage() {}

func (x *SetCaaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dns_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetCaaRequest.ProtoReflect.Descriptor instead.
func (*SetCaaRequest) Descriptor() ([]byte, []int) {
	return file_dns_proto_rawDescGZIP(), []int{59}
}

func (x *SetCaaRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SetCaaRequest) GetCaa() *CAA {
	if x != nil {
		return x.Caa
	}
	return nil
}

func (x *SetCaaRequest) GetTtl() uint32 {
	if x != nil {
		return x.Ttl
	}
	return 0
}

// SetCaaResponse is the response for a SetCaaRequest.
type SetCaaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"` // The result of the set operation, typically a success flag.
}

func (x *SetCaaResponse) Reset() {
	*x = SetCaaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dns_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetCaaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetCaaResponse) ProtoMessage() {}

func (x *SetCaaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dns_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetCaaResponse.ProtoReflect.Descriptor instead.
func (*SetCaaResponse) Descriptor() ([]byte, []int) {
	return file_dns_proto_rawDescGZIP(), []int{60}
}

func (x *SetCaaResponse) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// GetCaaRequest is used to retrieve CAA records.
type GetCaaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`         // Identifier for the CAA records to retrieve.
	Domain string `protobuf:"bytes,2,opt,name=domain,proto3" json:"domain,omitempty"` // Specific domain for which to retrieve the CAA record.
}

func (x *GetCaaRequest) Reset() {
	*x = GetCaaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dns_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCaaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCaaRequest) ProtoMessage() {}

func (x *GetCaaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dns_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCaaRequest.ProtoReflect.Descriptor instead.
func (*GetCaaRequest) Descriptor() ([]byte, []int) {
	return file_dns_proto_rawDescGZIP(), []int{61}
}

func (x *GetCaaRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetCaaRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

// GetCaaResponse returns the CAA records for a given identifier.
type GetCaaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result []*CAA `protobuf:"bytes,1,rep,name=result,proto3" json:"result,omitempty"` // List of CAA records associated with the identifier.
}

func (x *GetCaaResponse) Reset() {
	*x = GetCaaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dns_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCaaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCaaResponse) ProtoMessage() {}

func (x *GetCaaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dns_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCaaResponse.ProtoReflect.Descriptor instead.
func (*GetCaaResponse) Descriptor() ([]byte, []int) {
	return file_dns_proto_rawDescGZIP(), []int{62}
}

func (x *GetCaaResponse) GetResult() []*CAA {
	if x != nil {
		return x.Result
	}
	return nil
}

// RemoveCaaRequest is used to remove a CAA record.
type RemoveCaaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`         // Identifier for the CAA record to be removed.
	Domain string `protobuf:"bytes,2,opt,name=domain,proto3" json:"domain,omitempty"` // Specific domain for which to remove the CAA record.
}

func (x *RemoveCaaRequest) Reset() {
	*x = RemoveCaaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dns_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveCaaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveCaaRequest) ProtoMessage() {}

func (x *RemoveCaaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dns_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveCaaRequest.ProtoReflect.Descriptor instead.
func (*RemoveCaaRequest) Descriptor() ([]byte, []int) {
	return file_dns_proto_rawDescGZIP(), []int{63}
}

func (x *RemoveCaaRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RemoveCaaRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

// RemoveCaaResponse is the response for a RemoveCaaRequest.
type RemoveCaaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"` // The result of the removal operation, typically a success flag.
}

func (x *RemoveCaaResponse) Reset() {
	*x = RemoveCaaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dns_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveCaaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveCaaResponse) ProtoMessage() {}

func (x *RemoveCaaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dns_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveCaaResponse.ProtoReflect.Descriptor instead.
func (*RemoveCaaResponse) Descriptor() ([]byte, []int) {
	return file_dns_proto_rawDescGZIP(), []int{64}
}

func (x *RemoveCaaResponse) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// StopRequest is a request to stop or terminate an operation or process.
type StopRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StopRequest) Reset() {
	*x = StopRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dns_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopRequest) ProtoMessage() {}

func (x *StopRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dns_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopRequest.ProtoReflect.Descriptor instead.
func (*StopRequest) Descriptor() ([]byte, []int) {
	return file_dns_proto_rawDescGZIP(), []int{65}
}

// StopResponse is the response to a StopRequest.
type StopResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StopResponse) Reset() {
	*x = StopResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dns_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopResponse) ProtoMessage() {}

func (x *StopResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dns_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopResponse.ProtoReflect.Descriptor instead.
func (*StopResponse) Descriptor() ([]byte, []int) {
	return file_dns_proto_rawDescGZIP(), []int{66}
}

var File_dns_proto protoreflect.FileDescriptor

var file_dns_proto_rawDesc = []byte{
	0x0a, 0x09, 0x64, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x64, 0x6e, 0x73,
	0x22, 0x45, 0x0a, 0x0b, 0x53, 0x65, 0x74, 0x41, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x0c, 0x0a, 0x01, 0x61, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x01, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x74, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x03, 0x74, 0x74, 0x6c, 0x22, 0x28, 0x0a, 0x0c, 0x53, 0x65, 0x74, 0x41, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x36, 0x0a, 0x0e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x0c, 0x0a, 0x01, 0x61,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x61, 0x22, 0x29, 0x0a, 0x0f, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x41, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0x25, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x41, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x22, 0x1c, 0x0a, 0x0c, 0x47,
	0x65, 0x74, 0x41, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0c, 0x0a, 0x01, 0x61,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x01, 0x61, 0x22, 0x4e, 0x0a, 0x0e, 0x53, 0x65, 0x74,
	0x41, 0x41, 0x41, 0x41, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x61, 0x61, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x61, 0x61, 0x61, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x74, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x74, 0x74, 0x6c, 0x22, 0x2b, 0x0a, 0x0f, 0x53, 0x65, 0x74,
	0x41, 0x41, 0x41, 0x41, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x3f, 0x0a, 0x11, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x41, 0x41, 0x41, 0x41, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x61, 0x61, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x61, 0x61, 0x61, 0x61, 0x22, 0x2c, 0x0a, 0x12, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x41, 0x41, 0x41, 0x41, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x28, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x41, 0x41, 0x41, 0x41,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x22,
	0x25, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x41, 0x41, 0x41, 0x41, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x61, 0x61, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x04, 0x61, 0x61, 0x61, 0x61, 0x22, 0x4a, 0x0a, 0x0e, 0x53, 0x65, 0x74, 0x54, 0x65, 0x78,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73,
	0x12, 0x10, 0x0a, 0x03, 0x74, 0x74, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x74,
	0x74, 0x6c, 0x22, 0x29, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x20, 0x0a,
	0x0e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x29, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x23, 0x0a, 0x11, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x2c, 0x0a, 0x12, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x40, 0x0a,
	0x0c, 0x53, 0x65, 0x74, 0x4e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x0e, 0x0a,
	0x02, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6e, 0x73, 0x12, 0x10, 0x0a,
	0x03, 0x74, 0x74, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x74, 0x74, 0x6c, 0x22,
	0x27, 0x0a, 0x0d, 0x53, 0x65, 0x74, 0x4e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x1e, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4e,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x1f, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4e,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x6e, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x02, 0x6e, 0x73, 0x22, 0x31, 0x0a, 0x0f, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x4e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x0e, 0x0a, 0x02,
	0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6e, 0x73, 0x22, 0x2a, 0x0a, 0x10,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x49, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x43,
	0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x74, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03,
	0x74, 0x74, 0x6c, 0x22, 0x2a, 0x0a, 0x10, 0x53, 0x65, 0x74, 0x43, 0x4e, 0x61, 0x6d, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0x21, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x43, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x28, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x43, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x24, 0x0a, 0x12,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x2d, 0x0a, 0x13, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x4e, 0x61, 0x6d,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x22, 0x3d, 0x0a, 0x05, 0x41, 0x46, 0x53, 0x44, 0x42, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x62, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x75, 0x62,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0x55, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x41, 0x66, 0x73, 0x64, 0x62, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x05, 0x61, 0x66, 0x73, 0x64, 0x62, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x64, 0x6e, 0x73, 0x2e, 0x41, 0x46, 0x53, 0x44, 0x42, 0x52, 0x05,
	0x61, 0x66, 0x73, 0x64, 0x62, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x74, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x03, 0x74, 0x74, 0x6c, 0x22, 0x2a, 0x0a, 0x10, 0x53, 0x65, 0x74, 0x41, 0x66,
	0x73, 0x64, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x22, 0x21, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x41, 0x66, 0x73, 0x64, 0x62, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x36, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x41, 0x66, 0x73,
	0x64, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x64, 0x6e, 0x73,
	0x2e, 0x41, 0x46, 0x53, 0x44, 0x42, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x24,
	0x0a, 0x12, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x66, 0x73, 0x64, 0x62, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x2d, 0x0a, 0x13, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x66,
	0x73, 0x64, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x22, 0x34, 0x0a, 0x02, 0x4d, 0x58, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70,
	0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x6d, 0x78, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6d, 0x78, 0x22, 0x49, 0x0a, 0x0c, 0x53, 0x65, 0x74,
	0x4d, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x02, 0x6d, 0x78, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x64, 0x6e, 0x73, 0x2e, 0x4d, 0x58, 0x52, 0x02,
	0x6d, 0x78, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x74, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x03, 0x74, 0x74, 0x6c, 0x22, 0x27, 0x0a, 0x0d, 0x53, 0x65, 0x74, 0x4d, 0x78, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x2e, 0x0a,
	0x0c, 0x47, 0x65, 0x74, 0x4d, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x0e, 0x0a,
	0x02, 0x6d, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6d, 0x78, 0x22, 0x30, 0x0a,
	0x0d, 0x47, 0x65, 0x74, 0x4d, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x07,
	0x2e, 0x64, 0x6e, 0x73, 0x2e, 0x4d, 0x58, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0x31, 0x0a, 0x0f, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x6d, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x6d, 0x78, 0x22, 0x2a, 0x0a, 0x10, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x78, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xa1,
	0x01, 0x0a, 0x03, 0x53, 0x4f, 0x41, 0x12, 0x0e, 0x0a, 0x02, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x6e, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x62, 0x6f, 0x78, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x62, 0x6f, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x65, 0x72, 0x69,
	0x61, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x07, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x12, 0x14, 0x0a, 0x05,
	0x72, 0x65, 0x74, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x72, 0x65, 0x74,
	0x72, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x69,
	0x6e, 0x74, 0x74, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6d, 0x69, 0x6e, 0x74,
	0x74, 0x6c, 0x22, 0x4d, 0x0a, 0x0d, 0x53, 0x65, 0x74, 0x53, 0x6f, 0x61, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x03, 0x73, 0x6f, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x08, 0x2e, 0x64, 0x6e, 0x73, 0x2e, 0x53, 0x4f, 0x41, 0x52, 0x03, 0x73, 0x6f, 0x61, 0x12,
	0x10, 0x0a, 0x03, 0x74, 0x74, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x74, 0x74,
	0x6c, 0x22, 0x28, 0x0a, 0x0e, 0x53, 0x65, 0x74, 0x53, 0x6f, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x2f, 0x0a, 0x0d, 0x47,
	0x65, 0x74, 0x53, 0x6f, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x0e, 0x0a, 0x02,
	0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6e, 0x73, 0x22, 0x32, 0x0a, 0x0e,
	0x47, 0x65, 0x74, 0x53, 0x6f, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08,
	0x2e, 0x64, 0x6e, 0x73, 0x2e, 0x53, 0x4f, 0x41, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0x32, 0x0a, 0x10, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x6f, 0x61, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x6e, 0x73, 0x22, 0x2b, 0x0a, 0x11, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x6f,
	0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x22, 0x51, 0x0a, 0x03, 0x55, 0x52, 0x49, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f,
	0x72, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f,
	0x72, 0x69, 0x74, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x22, 0x4d, 0x0a, 0x0d, 0x53, 0x65, 0x74, 0x55, 0x72, 0x69, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x08, 0x2e, 0x64, 0x6e, 0x73, 0x2e, 0x55, 0x52, 0x49, 0x52, 0x03, 0x75, 0x72,
	0x69, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x74, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03,
	0x74, 0x74, 0x6c, 0x22, 0x28, 0x0a, 0x0e, 0x53, 0x65, 0x74, 0x55, 0x72, 0x69, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x37, 0x0a,
	0x0d, 0x47, 0x65, 0x74, 0x55, 0x72, 0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x22, 0x32, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x55, 0x72, 0x69,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x64, 0x6e, 0x73, 0x2e, 0x55,
	0x52, 0x49, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x3a, 0x0a, 0x10, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x55, 0x72, 0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x22, 0x2b, 0x0a, 0x11, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x55, 0x72, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x22, 0x43, 0x0a, 0x03, 0x43, 0x41, 0x41, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x6c,
	0x61, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x12, 0x10,
	0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67,
	0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x22, 0x4d, 0x0a, 0x0d, 0x53, 0x65, 0x74, 0x43,
	0x61, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x03, 0x63, 0x61, 0x61,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x64, 0x6e, 0x73, 0x2e, 0x43, 0x41, 0x41,
	0x52, 0x03, 0x63, 0x61, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x74, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x03, 0x74, 0x74, 0x6c, 0x22, 0x28, 0x0a, 0x0e, 0x53, 0x65, 0x74, 0x43, 0x61,
	0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x22, 0x37, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x43, 0x61, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x22, 0x32, 0x0a, 0x0e, 0x47, 0x65,
	0x74, 0x43, 0x61, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x64,
	0x6e, 0x73, 0x2e, 0x43, 0x41, 0x41, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x3a,
	0x0a, 0x10, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x61, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x22, 0x2b, 0x0a, 0x11, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x43, 0x61, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x0d, 0x0a, 0x0b, 0x53, 0x74, 0x6f, 0x70, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x0e, 0x0a, 0x0c, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x9f, 0x0d, 0x0a, 0x0a, 0x44, 0x6e, 0x73, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x53, 0x74, 0x6f, 0x70, 0x12, 0x10, 0x2e,
	0x64, 0x6e, 0x73, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x11, 0x2e, 0x64, 0x6e, 0x73, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x53, 0x65, 0x74, 0x41, 0x12, 0x10, 0x2e, 0x64, 0x6e, 0x73,
	0x2e, 0x53, 0x65, 0x74, 0x41, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x64,
	0x6e, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x41, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x34, 0x0a, 0x07, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x12, 0x13, 0x2e, 0x64, 0x6e, 0x73,
	0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x14, 0x2e, 0x64, 0x6e, 0x73, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x47, 0x65, 0x74, 0x41, 0x12, 0x10, 0x2e,
	0x64, 0x6e, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x11, 0x2e, 0x64, 0x6e, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x34, 0x0a, 0x07, 0x53, 0x65, 0x74, 0x41, 0x41, 0x41, 0x41, 0x12, 0x13, 0x2e,
	0x64, 0x6e, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x41, 0x41, 0x41, 0x41, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x14, 0x2e, 0x64, 0x6e, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x41, 0x41, 0x41, 0x41,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0a, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x41, 0x41, 0x41, 0x41, 0x12, 0x16, 0x2e, 0x64, 0x6e, 0x73, 0x2e, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x41, 0x41, 0x41, 0x41, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17,
	0x2e, 0x64, 0x6e, 0x73, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x41, 0x41, 0x41, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x41, 0x41,
	0x41, 0x41, 0x12, 0x13, 0x2e, 0x64, 0x6e, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x41, 0x41, 0x41,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x64, 0x6e, 0x73, 0x2e, 0x47, 0x65,
	0x74, 0x41, 0x41, 0x41, 0x41, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a,
	0x07, 0x53, 0x65, 0x74, 0x54, 0x65, 0x78, 0x74, 0x12, 0x13, 0x2e, 0x64, 0x6e, 0x73, 0x2e, 0x53,
	0x65, 0x74, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e,
	0x64, 0x6e, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x54, 0x65, 0x78, 0x74, 0x12, 0x13,
	0x2e, 0x64, 0x6e, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x64, 0x6e, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x78,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0a, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x54, 0x65, 0x78, 0x74, 0x12, 0x16, 0x2e, 0x64, 0x6e, 0x73, 0x2e, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x17, 0x2e, 0x64, 0x6e, 0x73, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x54, 0x65, 0x78, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x05, 0x53, 0x65, 0x74, 0x4e,
	0x73, 0x12, 0x11, 0x2e, 0x64, 0x6e, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x4e, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x64, 0x6e, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x4e, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x05, 0x47, 0x65, 0x74, 0x4e,
	0x73, 0x12, 0x11, 0x2e, 0x64, 0x6e, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x64, 0x6e, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x08, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x4e, 0x73, 0x12, 0x14, 0x2e, 0x64, 0x6e, 0x73, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x4e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x64, 0x6e, 0x73,
	0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x37, 0x0a, 0x08, 0x53, 0x65, 0x74, 0x43, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x2e,
	0x64, 0x6e, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x43, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x64, 0x6e, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x43, 0x4e, 0x61,
	0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x08, 0x47, 0x65,
	0x74, 0x43, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x2e, 0x64, 0x6e, 0x73, 0x2e, 0x47, 0x65, 0x74,
	0x43, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x64,
	0x6e, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x0b, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x17, 0x2e, 0x64, 0x6e, 0x73, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43,
	0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x64, 0x6e,
	0x73, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x05, 0x53, 0x65, 0x74, 0x4d, 0x78, 0x12, 0x11,
	0x2e, 0x64, 0x6e, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x4d, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x12, 0x2e, 0x64, 0x6e, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x4d, 0x78, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x05, 0x47, 0x65, 0x74, 0x4d, 0x78, 0x12, 0x11,
	0x2e, 0x64, 0x6e, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x12, 0x2e, 0x64, 0x6e, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x78, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x08, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4d,
	0x78, 0x12, 0x14, 0x2e, 0x64, 0x6e, 0x73, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x78,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x64, 0x6e, 0x73, 0x2e, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31,
	0x0a, 0x06, 0x53, 0x65, 0x74, 0x53, 0x6f, 0x61, 0x12, 0x12, 0x2e, 0x64, 0x6e, 0x73, 0x2e, 0x53,
	0x65, 0x74, 0x53, 0x6f, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x64,
	0x6e, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x53, 0x6f, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x31, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x53, 0x6f, 0x61, 0x12, 0x12, 0x2e, 0x64, 0x6e,
	0x73, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x6f, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x13, 0x2e, 0x64, 0x6e, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x6f, 0x61, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x09, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x6f,
	0x61, 0x12, 0x15, 0x2e, 0x64, 0x6e, 0x73, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x6f,
	0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x64, 0x6e, 0x73, 0x2e, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x6f, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x31, 0x0a, 0x06, 0x53, 0x65, 0x74, 0x55, 0x72, 0x69, 0x12, 0x12, 0x2e, 0x64, 0x6e, 0x73,
	0x2e, 0x53, 0x65, 0x74, 0x55, 0x72, 0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13,
	0x2e, 0x64, 0x6e, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x55, 0x72, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x55, 0x72, 0x69, 0x12, 0x12, 0x2e,
	0x64, 0x6e, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x72, 0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x13, 0x2e, 0x64, 0x6e, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x72, 0x69, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x09, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x55, 0x72, 0x69, 0x12, 0x15, 0x2e, 0x64, 0x6e, 0x73, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x55, 0x72, 0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x64, 0x6e, 0x73,
	0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x55, 0x72, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x31, 0x0a, 0x06, 0x53, 0x65, 0x74, 0x43, 0x61, 0x61, 0x12, 0x12, 0x2e, 0x64,
	0x6e, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x43, 0x61, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x13, 0x2e, 0x64, 0x6e, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x43, 0x61, 0x61, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x43, 0x61, 0x61, 0x12,
	0x12, 0x2e, 0x64, 0x6e, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x61, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x64, 0x6e, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x61,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x09, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x43, 0x61, 0x61, 0x12, 0x15, 0x2e, 0x64, 0x6e, 0x73, 0x2e, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x43, 0x61, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x64,
	0x6e, 0x73, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x61, 0x61, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x08, 0x53, 0x65, 0x74, 0x41, 0x66, 0x73, 0x64, 0x62,
	0x12, 0x14, 0x2e, 0x64, 0x6e, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x41, 0x66, 0x73, 0x64, 0x62, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x64, 0x6e, 0x73, 0x2e, 0x53, 0x65, 0x74,
	0x41, 0x66, 0x73, 0x64, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a,
	0x08, 0x47, 0x65, 0x74, 0x41, 0x66, 0x73, 0x64, 0x62, 0x12, 0x14, 0x2e, 0x64, 0x6e, 0x73, 0x2e,
	0x47, 0x65, 0x74, 0x41, 0x66, 0x73, 0x64, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x15, 0x2e, 0x64, 0x6e, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x66, 0x73, 0x64, 0x62, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x0b, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x41, 0x66, 0x73, 0x64, 0x62, 0x12, 0x17, 0x2e, 0x64, 0x6e, 0x73, 0x2e, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x41, 0x66, 0x73, 0x64, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18,
	0x2e, 0x64, 0x6e, 0x73, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x66, 0x73, 0x64, 0x62,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x31, 0x5a, 0x2f, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x6c, 0x6f, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x69,
	0x6f, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x67, 0x6f, 0x6c, 0x61, 0x6e,
	0x67, 0x2f, 0x64, 0x6e, 0x73, 0x2f, 0x64, 0x6e, 0x73, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_dns_proto_rawDescOnce sync.Once
	file_dns_proto_rawDescData = file_dns_proto_rawDesc
)

func file_dns_proto_rawDescGZIP() []byte {
	file_dns_proto_rawDescOnce.Do(func() {
		file_dns_proto_rawDescData = protoimpl.X.CompressGZIP(file_dns_proto_rawDescData)
	})
	return file_dns_proto_rawDescData
}

var file_dns_proto_msgTypes = make([]protoimpl.MessageInfo, 67)
var file_dns_proto_goTypes = []any{
	(*SetARequest)(nil),         // 0: dns.SetARequest
	(*SetAResponse)(nil),        // 1: dns.SetAResponse
	(*RemoveARequest)(nil),      // 2: dns.RemoveARequest
	(*RemoveAResponse)(nil),     // 3: dns.RemoveAResponse
	(*GetARequest)(nil),         // 4: dns.GetARequest
	(*GetAResponse)(nil),        // 5: dns.GetAResponse
	(*SetAAAARequest)(nil),      // 6: dns.SetAAAARequest
	(*SetAAAAResponse)(nil),     // 7: dns.SetAAAAResponse
	(*RemoveAAAARequest)(nil),   // 8: dns.RemoveAAAARequest
	(*RemoveAAAAResponse)(nil),  // 9: dns.RemoveAAAAResponse
	(*GetAAAARequest)(nil),      // 10: dns.GetAAAARequest
	(*GetAAAAResponse)(nil),     // 11: dns.GetAAAAResponse
	(*SetTextRequest)(nil),      // 12: dns.SetTextRequest
	(*SetTextResponse)(nil),     // 13: dns.SetTextResponse
	(*GetTextRequest)(nil),      // 14: dns.GetTextRequest
	(*GetTextResponse)(nil),     // 15: dns.GetTextResponse
	(*RemoveTextRequest)(nil),   // 16: dns.RemoveTextRequest
	(*RemoveTextResponse)(nil),  // 17: dns.RemoveTextResponse
	(*SetNsRequest)(nil),        // 18: dns.SetNsRequest
	(*SetNsResponse)(nil),       // 19: dns.SetNsResponse
	(*GetNsRequest)(nil),        // 20: dns.GetNsRequest
	(*GetNsResponse)(nil),       // 21: dns.GetNsResponse
	(*RemoveNsRequest)(nil),     // 22: dns.RemoveNsRequest
	(*RemoveNsResponse)(nil),    // 23: dns.RemoveNsResponse
	(*SetCNameRequest)(nil),     // 24: dns.SetCNameRequest
	(*SetCNameResponse)(nil),    // 25: dns.SetCNameResponse
	(*GetCNameRequest)(nil),     // 26: dns.GetCNameRequest
	(*GetCNameResponse)(nil),    // 27: dns.GetCNameResponse
	(*RemoveCNameRequest)(nil),  // 28: dns.RemoveCNameRequest
	(*RemoveCNameResponse)(nil), // 29: dns.RemoveCNameResponse
	(*AFSDB)(nil),               // 30: dns.AFSDB
	(*SetAfsdbRequest)(nil),     // 31: dns.SetAfsdbRequest
	(*SetAfsdbResponse)(nil),    // 32: dns.SetAfsdbResponse
	(*GetAfsdbRequest)(nil),     // 33: dns.GetAfsdbRequest
	(*GetAfsdbResponse)(nil),    // 34: dns.GetAfsdbResponse
	(*RemoveAfsdbRequest)(nil),  // 35: dns.RemoveAfsdbRequest
	(*RemoveAfsdbResponse)(nil), // 36: dns.RemoveAfsdbResponse
	(*MX)(nil),                  // 37: dns.MX
	(*SetMxRequest)(nil),        // 38: dns.SetMxRequest
	(*SetMxResponse)(nil),       // 39: dns.SetMxResponse
	(*GetMxRequest)(nil),        // 40: dns.GetMxRequest
	(*GetMxResponse)(nil),       // 41: dns.GetMxResponse
	(*RemoveMxRequest)(nil),     // 42: dns.RemoveMxRequest
	(*RemoveMxResponse)(nil),    // 43: dns.RemoveMxResponse
	(*SOA)(nil),                 // 44: dns.SOA
	(*SetSoaRequest)(nil),       // 45: dns.SetSoaRequest
	(*SetSoaResponse)(nil),      // 46: dns.SetSoaResponse
	(*GetSoaRequest)(nil),       // 47: dns.GetSoaRequest
	(*GetSoaResponse)(nil),      // 48: dns.GetSoaResponse
	(*RemoveSoaRequest)(nil),    // 49: dns.RemoveSoaRequest
	(*RemoveSoaResponse)(nil),   // 50: dns.RemoveSoaResponse
	(*URI)(nil),                 // 51: dns.URI
	(*SetUriRequest)(nil),       // 52: dns.SetUriRequest
	(*SetUriResponse)(nil),      // 53: dns.SetUriResponse
	(*GetUriRequest)(nil),       // 54: dns.GetUriRequest
	(*GetUriResponse)(nil),      // 55: dns.GetUriResponse
	(*RemoveUriRequest)(nil),    // 56: dns.RemoveUriRequest
	(*RemoveUriResponse)(nil),   // 57: dns.RemoveUriResponse
	(*CAA)(nil),                 // 58: dns.CAA
	(*SetCaaRequest)(nil),       // 59: dns.SetCaaRequest
	(*SetCaaResponse)(nil),      // 60: dns.SetCaaResponse
	(*GetCaaRequest)(nil),       // 61: dns.GetCaaRequest
	(*GetCaaResponse)(nil),      // 62: dns.GetCaaResponse
	(*RemoveCaaRequest)(nil),    // 63: dns.RemoveCaaRequest
	(*RemoveCaaResponse)(nil),   // 64: dns.RemoveCaaResponse
	(*StopRequest)(nil),         // 65: dns.StopRequest
	(*StopResponse)(nil),        // 66: dns.StopResponse
}
var file_dns_proto_depIdxs = []int32{
	30, // 0: dns.SetAfsdbRequest.afsdb:type_name -> dns.AFSDB
	30, // 1: dns.GetAfsdbResponse.result:type_name -> dns.AFSDB
	37, // 2: dns.SetMxRequest.mx:type_name -> dns.MX
	37, // 3: dns.GetMxResponse.result:type_name -> dns.MX
	44, // 4: dns.SetSoaRequest.soa:type_name -> dns.SOA
	44, // 5: dns.GetSoaResponse.result:type_name -> dns.SOA
	51, // 6: dns.SetUriRequest.uri:type_name -> dns.URI
	51, // 7: dns.GetUriResponse.result:type_name -> dns.URI
	58, // 8: dns.SetCaaRequest.caa:type_name -> dns.CAA
	58, // 9: dns.GetCaaResponse.result:type_name -> dns.CAA
	65, // 10: dns.DnsService.Stop:input_type -> dns.StopRequest
	0,  // 11: dns.DnsService.SetA:input_type -> dns.SetARequest
	2,  // 12: dns.DnsService.RemoveA:input_type -> dns.RemoveARequest
	4,  // 13: dns.DnsService.GetA:input_type -> dns.GetARequest
	6,  // 14: dns.DnsService.SetAAAA:input_type -> dns.SetAAAARequest
	8,  // 15: dns.DnsService.RemoveAAAA:input_type -> dns.RemoveAAAARequest
	10, // 16: dns.DnsService.GetAAAA:input_type -> dns.GetAAAARequest
	12, // 17: dns.DnsService.SetText:input_type -> dns.SetTextRequest
	14, // 18: dns.DnsService.GetText:input_type -> dns.GetTextRequest
	16, // 19: dns.DnsService.RemoveText:input_type -> dns.RemoveTextRequest
	18, // 20: dns.DnsService.SetNs:input_type -> dns.SetNsRequest
	20, // 21: dns.DnsService.GetNs:input_type -> dns.GetNsRequest
	22, // 22: dns.DnsService.RemoveNs:input_type -> dns.RemoveNsRequest
	24, // 23: dns.DnsService.SetCName:input_type -> dns.SetCNameRequest
	26, // 24: dns.DnsService.GetCName:input_type -> dns.GetCNameRequest
	28, // 25: dns.DnsService.RemoveCName:input_type -> dns.RemoveCNameRequest
	38, // 26: dns.DnsService.SetMx:input_type -> dns.SetMxRequest
	40, // 27: dns.DnsService.GetMx:input_type -> dns.GetMxRequest
	42, // 28: dns.DnsService.RemoveMx:input_type -> dns.RemoveMxRequest
	45, // 29: dns.DnsService.SetSoa:input_type -> dns.SetSoaRequest
	47, // 30: dns.DnsService.GetSoa:input_type -> dns.GetSoaRequest
	49, // 31: dns.DnsService.RemoveSoa:input_type -> dns.RemoveSoaRequest
	52, // 32: dns.DnsService.SetUri:input_type -> dns.SetUriRequest
	54, // 33: dns.DnsService.GetUri:input_type -> dns.GetUriRequest
	56, // 34: dns.DnsService.RemoveUri:input_type -> dns.RemoveUriRequest
	59, // 35: dns.DnsService.SetCaa:input_type -> dns.SetCaaRequest
	61, // 36: dns.DnsService.GetCaa:input_type -> dns.GetCaaRequest
	63, // 37: dns.DnsService.RemoveCaa:input_type -> dns.RemoveCaaRequest
	31, // 38: dns.DnsService.SetAfsdb:input_type -> dns.SetAfsdbRequest
	33, // 39: dns.DnsService.GetAfsdb:input_type -> dns.GetAfsdbRequest
	35, // 40: dns.DnsService.RemoveAfsdb:input_type -> dns.RemoveAfsdbRequest
	66, // 41: dns.DnsService.Stop:output_type -> dns.StopResponse
	1,  // 42: dns.DnsService.SetA:output_type -> dns.SetAResponse
	3,  // 43: dns.DnsService.RemoveA:output_type -> dns.RemoveAResponse
	5,  // 44: dns.DnsService.GetA:output_type -> dns.GetAResponse
	7,  // 45: dns.DnsService.SetAAAA:output_type -> dns.SetAAAAResponse
	9,  // 46: dns.DnsService.RemoveAAAA:output_type -> dns.RemoveAAAAResponse
	11, // 47: dns.DnsService.GetAAAA:output_type -> dns.GetAAAAResponse
	13, // 48: dns.DnsService.SetText:output_type -> dns.SetTextResponse
	15, // 49: dns.DnsService.GetText:output_type -> dns.GetTextResponse
	17, // 50: dns.DnsService.RemoveText:output_type -> dns.RemoveTextResponse
	19, // 51: dns.DnsService.SetNs:output_type -> dns.SetNsResponse
	21, // 52: dns.DnsService.GetNs:output_type -> dns.GetNsResponse
	23, // 53: dns.DnsService.RemoveNs:output_type -> dns.RemoveNsResponse
	25, // 54: dns.DnsService.SetCName:output_type -> dns.SetCNameResponse
	27, // 55: dns.DnsService.GetCName:output_type -> dns.GetCNameResponse
	29, // 56: dns.DnsService.RemoveCName:output_type -> dns.RemoveCNameResponse
	39, // 57: dns.DnsService.SetMx:output_type -> dns.SetMxResponse
	41, // 58: dns.DnsService.GetMx:output_type -> dns.GetMxResponse
	43, // 59: dns.DnsService.RemoveMx:output_type -> dns.RemoveMxResponse
	46, // 60: dns.DnsService.SetSoa:output_type -> dns.SetSoaResponse
	48, // 61: dns.DnsService.GetSoa:output_type -> dns.GetSoaResponse
	50, // 62: dns.DnsService.RemoveSoa:output_type -> dns.RemoveSoaResponse
	53, // 63: dns.DnsService.SetUri:output_type -> dns.SetUriResponse
	55, // 64: dns.DnsService.GetUri:output_type -> dns.GetUriResponse
	57, // 65: dns.DnsService.RemoveUri:output_type -> dns.RemoveUriResponse
	60, // 66: dns.DnsService.SetCaa:output_type -> dns.SetCaaResponse
	62, // 67: dns.DnsService.GetCaa:output_type -> dns.GetCaaResponse
	64, // 68: dns.DnsService.RemoveCaa:output_type -> dns.RemoveCaaResponse
	32, // 69: dns.DnsService.SetAfsdb:output_type -> dns.SetAfsdbResponse
	34, // 70: dns.DnsService.GetAfsdb:output_type -> dns.GetAfsdbResponse
	36, // 71: dns.DnsService.RemoveAfsdb:output_type -> dns.RemoveAfsdbResponse
	41, // [41:72] is the sub-list for method output_type
	10, // [10:41] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_dns_proto_init() }
func file_dns_proto_init() {
	if File_dns_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_dns_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*SetARequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dns_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*SetAResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dns_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*RemoveARequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dns_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*RemoveAResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dns_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*GetARequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dns_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*GetAResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dns_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*SetAAAARequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dns_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*SetAAAAResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dns_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*RemoveAAAARequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dns_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*RemoveAAAAResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dns_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*GetAAAARequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dns_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*GetAAAAResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dns_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*SetTextRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dns_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*SetTextResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dns_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*GetTextRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dns_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*GetTextResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dns_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*RemoveTextRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dns_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*RemoveTextResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dns_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*SetNsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dns_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*SetNsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dns_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*GetNsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dns_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*GetNsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dns_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*RemoveNsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dns_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*RemoveNsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dns_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*SetCNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dns_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*SetCNameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dns_proto_msgTypes[26].Exporter = func(v any, i int) any {
			switch v := v.(*GetCNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dns_proto_msgTypes[27].Exporter = func(v any, i int) any {
			switch v := v.(*GetCNameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dns_proto_msgTypes[28].Exporter = func(v any, i int) any {
			switch v := v.(*RemoveCNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dns_proto_msgTypes[29].Exporter = func(v any, i int) any {
			switch v := v.(*RemoveCNameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dns_proto_msgTypes[30].Exporter = func(v any, i int) any {
			switch v := v.(*AFSDB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dns_proto_msgTypes[31].Exporter = func(v any, i int) any {
			switch v := v.(*SetAfsdbRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dns_proto_msgTypes[32].Exporter = func(v any, i int) any {
			switch v := v.(*SetAfsdbResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dns_proto_msgTypes[33].Exporter = func(v any, i int) any {
			switch v := v.(*GetAfsdbRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dns_proto_msgTypes[34].Exporter = func(v any, i int) any {
			switch v := v.(*GetAfsdbResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dns_proto_msgTypes[35].Exporter = func(v any, i int) any {
			switch v := v.(*RemoveAfsdbRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dns_proto_msgTypes[36].Exporter = func(v any, i int) any {
			switch v := v.(*RemoveAfsdbResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dns_proto_msgTypes[37].Exporter = func(v any, i int) any {
			switch v := v.(*MX); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dns_proto_msgTypes[38].Exporter = func(v any, i int) any {
			switch v := v.(*SetMxRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dns_proto_msgTypes[39].Exporter = func(v any, i int) any {
			switch v := v.(*SetMxResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dns_proto_msgTypes[40].Exporter = func(v any, i int) any {
			switch v := v.(*GetMxRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dns_proto_msgTypes[41].Exporter = func(v any, i int) any {
			switch v := v.(*GetMxResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dns_proto_msgTypes[42].Exporter = func(v any, i int) any {
			switch v := v.(*RemoveMxRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dns_proto_msgTypes[43].Exporter = func(v any, i int) any {
			switch v := v.(*RemoveMxResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dns_proto_msgTypes[44].Exporter = func(v any, i int) any {
			switch v := v.(*SOA); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dns_proto_msgTypes[45].Exporter = func(v any, i int) any {
			switch v := v.(*SetSoaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dns_proto_msgTypes[46].Exporter = func(v any, i int) any {
			switch v := v.(*SetSoaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dns_proto_msgTypes[47].Exporter = func(v any, i int) any {
			switch v := v.(*GetSoaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dns_proto_msgTypes[48].Exporter = func(v any, i int) any {
			switch v := v.(*GetSoaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dns_proto_msgTypes[49].Exporter = func(v any, i int) any {
			switch v := v.(*RemoveSoaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dns_proto_msgTypes[50].Exporter = func(v any, i int) any {
			switch v := v.(*RemoveSoaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dns_proto_msgTypes[51].Exporter = func(v any, i int) any {
			switch v := v.(*URI); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dns_proto_msgTypes[52].Exporter = func(v any, i int) any {
			switch v := v.(*SetUriRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dns_proto_msgTypes[53].Exporter = func(v any, i int) any {
			switch v := v.(*SetUriResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dns_proto_msgTypes[54].Exporter = func(v any, i int) any {
			switch v := v.(*GetUriRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dns_proto_msgTypes[55].Exporter = func(v any, i int) any {
			switch v := v.(*GetUriResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dns_proto_msgTypes[56].Exporter = func(v any, i int) any {
			switch v := v.(*RemoveUriRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dns_proto_msgTypes[57].Exporter = func(v any, i int) any {
			switch v := v.(*RemoveUriResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dns_proto_msgTypes[58].Exporter = func(v any, i int) any {
			switch v := v.(*CAA); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dns_proto_msgTypes[59].Exporter = func(v any, i int) any {
			switch v := v.(*SetCaaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dns_proto_msgTypes[60].Exporter = func(v any, i int) any {
			switch v := v.(*SetCaaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dns_proto_msgTypes[61].Exporter = func(v any, i int) any {
			switch v := v.(*GetCaaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dns_proto_msgTypes[62].Exporter = func(v any, i int) any {
			switch v := v.(*GetCaaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dns_proto_msgTypes[63].Exporter = func(v any, i int) any {
			switch v := v.(*RemoveCaaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dns_proto_msgTypes[64].Exporter = func(v any, i int) any {
			switch v := v.(*RemoveCaaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dns_proto_msgTypes[65].Exporter = func(v any, i int) any {
			switch v := v.(*StopRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dns_proto_msgTypes[66].Exporter = func(v any, i int) any {
			switch v := v.(*StopResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_dns_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   67,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_dns_proto_goTypes,
		DependencyIndexes: file_dns_proto_depIdxs,
		MessageInfos:      file_dns_proto_msgTypes,
	}.Build()
	File_dns_proto = out.File
	file_dns_proto_rawDesc = nil
	file_dns_proto_goTypes = nil
	file_dns_proto_depIdxs = nil
}
