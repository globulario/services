// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.12.4
// source: sql.proto

package sqlpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Represents a database connection configuration.
type Connection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`             // Unique identifier for the connection.
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`         // Human-readable name for the connection.
	Host     string `protobuf:"bytes,3,opt,name=host,proto3" json:"host,omitempty"`         // Host address of the SQL server.
	Charset  string `protobuf:"bytes,4,opt,name=charset,proto3" json:"charset,omitempty"`   // Character set used in the SQL server.
	Driver   string `protobuf:"bytes,5,opt,name=driver,proto3" json:"driver,omitempty"`     // Database driver (e.g., MySQL, PostgreSQL).
	User     string `protobuf:"bytes,6,opt,name=user,proto3" json:"user,omitempty"`         // Username for the SQL server authentication.
	Password string `protobuf:"bytes,7,opt,name=password,proto3" json:"password,omitempty"` // Password for the SQL server authentication.
	Port     int32  `protobuf:"varint,8,opt,name=port,proto3" json:"port,omitempty"`        // Port number for the SQL server.
	Path     string `protobuf:"bytes,9,opt,name=path,proto3" json:"path,omitempty"`         // Path to the database file, used by SQLite.
}

func (x *Connection) Reset() {
	*x = Connection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sql_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Connection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Connection) ProtoMessage() {}

func (x *Connection) ProtoReflect() protoreflect.Message {
	mi := &file_sql_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Connection.ProtoReflect.Descriptor instead.
func (*Connection) Descriptor() ([]byte, []int) {
	return file_sql_proto_rawDescGZIP(), []int{0}
}

func (x *Connection) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Connection) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Connection) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *Connection) GetCharset() string {
	if x != nil {
		return x.Charset
	}
	return ""
}

func (x *Connection) GetDriver() string {
	if x != nil {
		return x.Driver
	}
	return ""
}

func (x *Connection) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *Connection) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *Connection) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *Connection) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

// Request to create a new database connection.
type CreateConnectionRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Connection *Connection `protobuf:"bytes,1,opt,name=connection,proto3" json:"connection,omitempty"` // The connection details.
}

func (x *CreateConnectionRqst) Reset() {
	*x = CreateConnectionRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sql_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateConnectionRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateConnectionRqst) ProtoMessage() {}

func (x *CreateConnectionRqst) ProtoReflect() protoreflect.Message {
	mi := &file_sql_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateConnectionRqst.ProtoReflect.Descriptor instead.
func (*CreateConnectionRqst) Descriptor() ([]byte, []int) {
	return file_sql_proto_rawDescGZIP(), []int{1}
}

func (x *CreateConnectionRqst) GetConnection() *Connection {
	if x != nil {
		return x.Connection
	}
	return nil
}

// Response for CreateConnectionRqst.
type CreateConnectionRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"` // Result of the connection creation process.
}

func (x *CreateConnectionRsp) Reset() {
	*x = CreateConnectionRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sql_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateConnectionRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateConnectionRsp) ProtoMessage() {}

func (x *CreateConnectionRsp) ProtoReflect() protoreflect.Message {
	mi := &file_sql_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateConnectionRsp.ProtoReflect.Descriptor instead.
func (*CreateConnectionRsp) Descriptor() ([]byte, []int) {
	return file_sql_proto_rawDescGZIP(), []int{2}
}

func (x *CreateConnectionRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// Request to delete an existing database connection.
type DeleteConnectionRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // Identifier of the connection to delete.
}

func (x *DeleteConnectionRqst) Reset() {
	*x = DeleteConnectionRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sql_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteConnectionRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteConnectionRqst) ProtoMessage() {}

func (x *DeleteConnectionRqst) ProtoReflect() protoreflect.Message {
	mi := &file_sql_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteConnectionRqst.ProtoReflect.Descriptor instead.
func (*DeleteConnectionRqst) Descriptor() ([]byte, []int) {
	return file_sql_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteConnectionRqst) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// Response for DeleteConnectionRqst.
type DeleteConnectionRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"` // Result of the connection deletion process.
}

func (x *DeleteConnectionRsp) Reset() {
	*x = DeleteConnectionRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sql_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteConnectionRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteConnectionRsp) ProtoMessage() {}

func (x *DeleteConnectionRsp) ProtoReflect() protoreflect.Message {
	mi := &file_sql_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteConnectionRsp.ProtoReflect.Descriptor instead.
func (*DeleteConnectionRsp) Descriptor() ([]byte, []int) {
	return file_sql_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteConnectionRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// Request to ping a database connection to check its validity.
type PingConnectionRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // Identifier of the connection to ping.
}

func (x *PingConnectionRqst) Reset() {
	*x = PingConnectionRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sql_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingConnectionRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingConnectionRqst) ProtoMessage() {}

func (x *PingConnectionRqst) ProtoReflect() protoreflect.Message {
	mi := &file_sql_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingConnectionRqst.ProtoReflect.Descriptor instead.
func (*PingConnectionRqst) Descriptor() ([]byte, []int) {
	return file_sql_proto_rawDescGZIP(), []int{5}
}

func (x *PingConnectionRqst) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// Response for PingConnectionRqst.
type PingConnectionRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"` // Result of the ping operation.
}

func (x *PingConnectionRsp) Reset() {
	*x = PingConnectionRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sql_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingConnectionRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingConnectionRsp) ProtoMessage() {}

func (x *PingConnectionRsp) ProtoReflect() protoreflect.Message {
	mi := &file_sql_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingConnectionRsp.ProtoReflect.Descriptor instead.
func (*PingConnectionRsp) Descriptor() ([]byte, []int) {
	return file_sql_proto_rawDescGZIP(), []int{6}
}

func (x *PingConnectionRsp) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

// Represents an SQL query and its associated parameters.
type Query struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConnectionId string `protobuf:"bytes,1,opt,name=connectionId,proto3" json:"connectionId,omitempty"` // The connection ID to use for this query.
	Query        string `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`               // The SQL query string.
	Parameters   string `protobuf:"bytes,3,opt,name=parameters,proto3" json:"parameters,omitempty"`     // JSON string of query parameters (for various types).
	Charset      string `protobuf:"bytes,4,opt,name=charset,proto3" json:"charset,omitempty"`           // Charset for the result, defaults to connection charset if not set.
}

func (x *Query) Reset() {
	*x = Query{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sql_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Query) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Query) ProtoMessage() {}

func (x *Query) ProtoReflect() protoreflect.Message {
	mi := &file_sql_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Query.ProtoReflect.Descriptor instead.
func (*Query) Descriptor() ([]byte, []int) {
	return file_sql_proto_rawDescGZIP(), []int{7}
}

func (x *Query) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

func (x *Query) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *Query) GetParameters() string {
	if x != nil {
		return x.Parameters
	}
	return ""
}

func (x *Query) GetCharset() string {
	if x != nil {
		return x.Charset
	}
	return ""
}

// Request to execute a query that returns data (e.g., SELECT).
type QueryContextRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query *Query `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"` // The query to be executed.
}

func (x *QueryContextRqst) Reset() {
	*x = QueryContextRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sql_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryContextRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryContextRqst) ProtoMessage() {}

func (x *QueryContextRqst) ProtoReflect() protoreflect.Message {
	mi := &file_sql_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryContextRqst.ProtoReflect.Descriptor instead.
func (*QueryContextRqst) Descriptor() ([]byte, []int) {
	return file_sql_proto_rawDescGZIP(), []int{8}
}

func (x *QueryContextRqst) GetQuery() *Query {
	if x != nil {
		return x.Query
	}
	return nil
}

// Response for QueryContextRqst with query results.
type QueryContextRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Result:
	//
	//	*QueryContextRsp_Header
	//	*QueryContextRsp_Rows
	Result isQueryContextRsp_Result `protobuf_oneof:"result"`
}

func (x *QueryContextRsp) Reset() {
	*x = QueryContextRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sql_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryContextRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryContextRsp) ProtoMessage() {}

func (x *QueryContextRsp) ProtoReflect() protoreflect.Message {
	mi := &file_sql_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryContextRsp.ProtoReflect.Descriptor instead.
func (*QueryContextRsp) Descriptor() ([]byte, []int) {
	return file_sql_proto_rawDescGZIP(), []int{9}
}

func (m *QueryContextRsp) GetResult() isQueryContextRsp_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *QueryContextRsp) GetHeader() string {
	if x, ok := x.GetResult().(*QueryContextRsp_Header); ok {
		return x.Header
	}
	return ""
}

func (x *QueryContextRsp) GetRows() string {
	if x, ok := x.GetResult().(*QueryContextRsp_Rows); ok {
		return x.Rows
	}
	return ""
}

type isQueryContextRsp_Result interface {
	isQueryContextRsp_Result()
}

type QueryContextRsp_Header struct {
	Header string `protobuf:"bytes,1,opt,name=header,proto3,oneof"` // Contains column information of the result set.
}

type QueryContextRsp_Rows struct {
	Rows string `protobuf:"bytes,2,opt,name=rows,proto3,oneof"` // Array of rows (e.g., [[1,2,3],[4,5,6]]), data types include Null, Number, String, Bool.
}

func (*QueryContextRsp_Header) isQueryContextRsp_Result() {}

func (*QueryContextRsp_Rows) isQueryContextRsp_Result() {}

// Request to execute an SQL statement (e.g., INSERT, UPDATE) with optional transaction.
type ExecContextRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query *Query `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"` // The SQL statement to execute.
	Tx    bool   `protobuf:"varint,2,opt,name=tx,proto3" json:"tx,omitempty"`      // Flag to indicate if a transaction should be used.
}

func (x *ExecContextRqst) Reset() {
	*x = ExecContextRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sql_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecContextRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecContextRqst) ProtoMessage() {}

func (x *ExecContextRqst) ProtoReflect() protoreflect.Message {
	mi := &file_sql_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecContextRqst.ProtoReflect.Descriptor instead.
func (*ExecContextRqst) Descriptor() ([]byte, []int) {
	return file_sql_proto_rawDescGZIP(), []int{10}
}

func (x *ExecContextRqst) GetQuery() *Query {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *ExecContextRqst) GetTx() bool {
	if x != nil {
		return x.Tx
	}
	return false
}

// Response for ExecContextRqst with execution results.
type ExecContextRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AffectedRows int64 `protobuf:"varint,1,opt,name=affectedRows,proto3" json:"affectedRows,omitempty"` // Number of rows affected by the SQL statement.
	LastId       int64 `protobuf:"varint,2,opt,name=lastId,proto3" json:"lastId,omitempty"`             // The last inserted ID, if applicable.
}

func (x *ExecContextRsp) Reset() {
	*x = ExecContextRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sql_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecContextRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecContextRsp) ProtoMessage() {}

func (x *ExecContextRsp) ProtoReflect() protoreflect.Message {
	mi := &file_sql_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecContextRsp.ProtoReflect.Descriptor instead.
func (*ExecContextRsp) Descriptor() ([]byte, []int) {
	return file_sql_proto_rawDescGZIP(), []int{11}
}

func (x *ExecContextRsp) GetAffectedRows() int64 {
	if x != nil {
		return x.AffectedRows
	}
	return 0
}

func (x *ExecContextRsp) GetLastId() int64 {
	if x != nil {
		return x.LastId
	}
	return 0
}

// Request to stop the SQL service.
type StopRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StopRequest) Reset() {
	*x = StopRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sql_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopRequest) ProtoMessage() {}

func (x *StopRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sql_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopRequest.ProtoReflect.Descriptor instead.
func (*StopRequest) Descriptor() ([]byte, []int) {
	return file_sql_proto_rawDescGZIP(), []int{12}
}

// Response for StopRequest.
type StopResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StopResponse) Reset() {
	*x = StopResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sql_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopResponse) ProtoMessage() {}

func (x *StopResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sql_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopResponse.ProtoReflect.Descriptor instead.
func (*StopResponse) Descriptor() ([]byte, []int) {
	return file_sql_proto_rawDescGZIP(), []int{13}
}

var File_sql_proto protoreflect.FileDescriptor

var file_sql_proto_rawDesc = []byte{
	0x0a, 0x09, 0x73, 0x71, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x73, 0x71, 0x6c,
	0x22, 0xce, 0x01, 0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x72, 0x73,
	0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x72, 0x73, 0x65,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65,
	0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72,
	0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x22, 0x47, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x71, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x73, 0x71, 0x6c, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x2d, 0x0a, 0x13, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x73,
	0x70, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x26, 0x0a, 0x14, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x71, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x2d, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0x24, 0x0a, 0x12, 0x50, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x71, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x2b, 0x0a, 0x11, 0x50, 0x69, 0x6e, 0x67, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x22, 0x7b, 0x0a, 0x05, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x22, 0x0a, 0x0c,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x72, 0x73, 0x65,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x72, 0x73, 0x65, 0x74,
	0x22, 0x34, 0x0a, 0x10, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x52, 0x71, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x73, 0x71, 0x6c, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52,
	0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x22, 0x4b, 0x0a, 0x0f, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x06, 0x68, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x68, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x42, 0x08, 0x0a, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x22, 0x43, 0x0a, 0x0f, 0x45, 0x78, 0x65, 0x63, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x52, 0x71, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x73, 0x71, 0x6c, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x78, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x74, 0x78, 0x22, 0x4c, 0x0a, 0x0e, 0x45, 0x78, 0x65, 0x63,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x73, 0x70, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x66,
	0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x52, 0x6f, 0x77, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0c, 0x61, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x52, 0x6f, 0x77, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x6c, 0x61, 0x73, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x6c, 0x61, 0x73, 0x74, 0x49, 0x64, 0x22, 0x0d, 0x0a, 0x0b, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x0e, 0x0a, 0x0c, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xfd, 0x02, 0x0a, 0x0a, 0x53, 0x71, 0x6c, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x53, 0x74, 0x6f, 0x70, 0x12, 0x10, 0x2e, 0x73,
	0x71, 0x6c, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11,
	0x2e, 0x73, 0x71, 0x6c, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x47, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x2e, 0x73, 0x71, 0x6c, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x71, 0x73, 0x74,
	0x1a, 0x18, 0x2e, 0x73, 0x71, 0x6c, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x73, 0x70, 0x12, 0x47, 0x0a, 0x10, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19,
	0x2e, 0x73, 0x71, 0x6c, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x71, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x73, 0x71, 0x6c, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x73, 0x70, 0x12, 0x37, 0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x17, 0x2e, 0x73, 0x71,
	0x6c, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x71, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x73, 0x71, 0x6c, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x73, 0x70, 0x12, 0x3d, 0x0a, 0x0c,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x15, 0x2e, 0x73,
	0x71, 0x6c, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52,
	0x71, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x73, 0x71, 0x6c, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x73, 0x70, 0x30, 0x01, 0x12, 0x38, 0x0a, 0x0b, 0x45,
	0x78, 0x65, 0x63, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x14, 0x2e, 0x73, 0x71, 0x6c,
	0x2e, 0x45, 0x78, 0x65, 0x63, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x71, 0x73, 0x74,
	0x1a, 0x13, 0x2e, 0x73, 0x71, 0x6c, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x52, 0x73, 0x70, 0x42, 0x31, 0x5a, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x6c, 0x6f, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x69, 0x6f, 0x2f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x73,
	0x71, 0x6c, 0x2f, 0x73, 0x71, 0x6c, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_sql_proto_rawDescOnce sync.Once
	file_sql_proto_rawDescData = file_sql_proto_rawDesc
)

func file_sql_proto_rawDescGZIP() []byte {
	file_sql_proto_rawDescOnce.Do(func() {
		file_sql_proto_rawDescData = protoimpl.X.CompressGZIP(file_sql_proto_rawDescData)
	})
	return file_sql_proto_rawDescData
}

var file_sql_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_sql_proto_goTypes = []any{
	(*Connection)(nil),           // 0: sql.Connection
	(*CreateConnectionRqst)(nil), // 1: sql.CreateConnectionRqst
	(*CreateConnectionRsp)(nil),  // 2: sql.CreateConnectionRsp
	(*DeleteConnectionRqst)(nil), // 3: sql.DeleteConnectionRqst
	(*DeleteConnectionRsp)(nil),  // 4: sql.DeleteConnectionRsp
	(*PingConnectionRqst)(nil),   // 5: sql.PingConnectionRqst
	(*PingConnectionRsp)(nil),    // 6: sql.PingConnectionRsp
	(*Query)(nil),                // 7: sql.Query
	(*QueryContextRqst)(nil),     // 8: sql.QueryContextRqst
	(*QueryContextRsp)(nil),      // 9: sql.QueryContextRsp
	(*ExecContextRqst)(nil),      // 10: sql.ExecContextRqst
	(*ExecContextRsp)(nil),       // 11: sql.ExecContextRsp
	(*StopRequest)(nil),          // 12: sql.StopRequest
	(*StopResponse)(nil),         // 13: sql.StopResponse
}
var file_sql_proto_depIdxs = []int32{
	0,  // 0: sql.CreateConnectionRqst.connection:type_name -> sql.Connection
	7,  // 1: sql.QueryContextRqst.query:type_name -> sql.Query
	7,  // 2: sql.ExecContextRqst.query:type_name -> sql.Query
	12, // 3: sql.SqlService.Stop:input_type -> sql.StopRequest
	1,  // 4: sql.SqlService.CreateConnection:input_type -> sql.CreateConnectionRqst
	3,  // 5: sql.SqlService.DeleteConnection:input_type -> sql.DeleteConnectionRqst
	5,  // 6: sql.SqlService.Ping:input_type -> sql.PingConnectionRqst
	8,  // 7: sql.SqlService.QueryContext:input_type -> sql.QueryContextRqst
	10, // 8: sql.SqlService.ExecContext:input_type -> sql.ExecContextRqst
	13, // 9: sql.SqlService.Stop:output_type -> sql.StopResponse
	2,  // 10: sql.SqlService.CreateConnection:output_type -> sql.CreateConnectionRsp
	4,  // 11: sql.SqlService.DeleteConnection:output_type -> sql.DeleteConnectionRsp
	6,  // 12: sql.SqlService.Ping:output_type -> sql.PingConnectionRsp
	9,  // 13: sql.SqlService.QueryContext:output_type -> sql.QueryContextRsp
	11, // 14: sql.SqlService.ExecContext:output_type -> sql.ExecContextRsp
	9,  // [9:15] is the sub-list for method output_type
	3,  // [3:9] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_sql_proto_init() }
func file_sql_proto_init() {
	if File_sql_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_sql_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Connection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sql_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*CreateConnectionRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sql_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*CreateConnectionRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sql_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteConnectionRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sql_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteConnectionRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sql_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*PingConnectionRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sql_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*PingConnectionRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sql_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*Query); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sql_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*QueryContextRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sql_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*QueryContextRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sql_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*ExecContextRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sql_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*ExecContextRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sql_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*StopRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sql_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*StopResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_sql_proto_msgTypes[9].OneofWrappers = []any{
		(*QueryContextRsp_Header)(nil),
		(*QueryContextRsp_Rows)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sql_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_sql_proto_goTypes,
		DependencyIndexes: file_sql_proto_depIdxs,
		MessageInfos:      file_sql_proto_msgTypes,
	}.Build()
	File_sql_proto = out.File
	file_sql_proto_rawDesc = nil
	file_sql_proto_goTypes = nil
	file_sql_proto_depIdxs = nil
}
