//*
// AdminService: Provides administrative functionalities for managing Globular clusters.
// This includes managing processes, environment variables, certificates, and system updates.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v3.21.12
// source: admin.proto

package adminpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// HostInfo represents information about a host in the network.
type HostInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ip            string                 `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`       // IP address of the host.
	Mac           string                 `protobuf:"bytes,2,opt,name=mac,proto3" json:"mac,omitempty"`     // MAC address of the host.
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`   // Name of the host.
	Infos         string                 `protobuf:"bytes,4,opt,name=infos,proto3" json:"infos,omitempty"` // Additional information to help identify the host.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HostInfo) Reset() {
	*x = HostInfo{}
	mi := &file_admin_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HostInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostInfo) ProtoMessage() {}

func (x *HostInfo) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostInfo.ProtoReflect.Descriptor instead.
func (*HostInfo) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{0}
}

func (x *HostInfo) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *HostInfo) GetMac() string {
	if x != nil {
		return x.Mac
	}
	return ""
}

func (x *HostInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *HostInfo) GetInfos() string {
	if x != nil {
		return x.Infos
	}
	return ""
}

// getAvailableHostsRequest is the request message for listing available hosts.
type GetAvailableHostsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAvailableHostsRequest) Reset() {
	*x = GetAvailableHostsRequest{}
	mi := &file_admin_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAvailableHostsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAvailableHostsRequest) ProtoMessage() {}

func (x *GetAvailableHostsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAvailableHostsRequest.ProtoReflect.Descriptor instead.
func (*GetAvailableHostsRequest) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{1}
}

// getAvailableHostsResponse is the response message containing a list of available hosts.
type GetAvailableHostsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hosts         []*HostInfo            `protobuf:"bytes,1,rep,name=hosts,proto3" json:"hosts,omitempty"` // List of available hosts.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAvailableHostsResponse) Reset() {
	*x = GetAvailableHostsResponse{}
	mi := &file_admin_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAvailableHostsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAvailableHostsResponse) ProtoMessage() {}

func (x *GetAvailableHostsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAvailableHostsResponse.ProtoReflect.Descriptor instead.
func (*GetAvailableHostsResponse) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{2}
}

func (x *GetAvailableHostsResponse) GetHosts() []*HostInfo {
	if x != nil {
		return x.Hosts
	}
	return nil
}

// FileInfo represents details about a file on the host system.
type FileInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`        // File name.
	Path          string                 `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`        // File path.
	Size          int64                  `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`       // File size in bytes.
	IsDir         bool                   `protobuf:"varint,4,opt,name=isDir,proto3" json:"isDir,omitempty"`     // Indicates if the file is a directory.
	ModTime       int64                  `protobuf:"varint,5,opt,name=modTime,proto3" json:"modTime,omitempty"` // Last modification time (Unix timestamp).
	Files         []*FileInfo            `protobuf:"bytes,6,rep,name=files,proto3" json:"files,omitempty"`      // List of files (used for directories).
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileInfo) Reset() {
	*x = FileInfo{}
	mi := &file_admin_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileInfo) ProtoMessage() {}

func (x *FileInfo) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileInfo.ProtoReflect.Descriptor instead.
func (*FileInfo) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{3}
}

func (x *FileInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FileInfo) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *FileInfo) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *FileInfo) GetIsDir() bool {
	if x != nil {
		return x.IsDir
	}
	return false
}

func (x *FileInfo) GetModTime() int64 {
	if x != nil {
		return x.ModTime
	}
	return 0
}

func (x *FileInfo) GetFiles() []*FileInfo {
	if x != nil {
		return x.Files
	}
	return nil
}

// HasRunningProcessRequest is the request message to check if a process is running.
type HasRunningProcessRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"` // Name of the process to check.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HasRunningProcessRequest) Reset() {
	*x = HasRunningProcessRequest{}
	mi := &file_admin_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HasRunningProcessRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HasRunningProcessRequest) ProtoMessage() {}

func (x *HasRunningProcessRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HasRunningProcessRequest.ProtoReflect.Descriptor instead.
func (*HasRunningProcessRequest) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{4}
}

func (x *HasRunningProcessRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// HasRunningProcessResponse is the response message indicating if a process is running.
type HasRunningProcessResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        bool                   `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"` // True if the process is running.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HasRunningProcessResponse) Reset() {
	*x = HasRunningProcessResponse{}
	mi := &file_admin_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HasRunningProcessResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HasRunningProcessResponse) ProtoMessage() {}

func (x *HasRunningProcessResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HasRunningProcessResponse.ProtoReflect.Descriptor instead.
func (*HasRunningProcessResponse) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{5}
}

func (x *HasRunningProcessResponse) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// RunCmdRequest is the request message to run a command on the host system.
type RunCmdRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cmd           string                 `protobuf:"bytes,1,opt,name=cmd,proto3" json:"cmd,omitempty"`            // Command to be executed.
	Args          []string               `protobuf:"bytes,2,rep,name=args,proto3" json:"args,omitempty"`          // Arguments for the command.
	Blocking      bool                   `protobuf:"varint,3,opt,name=blocking,proto3" json:"blocking,omitempty"` // If true, wait for the command to complete.
	Path          string                 `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`          // The path where the command must be executed.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RunCmdRequest) Reset() {
	*x = RunCmdRequest{}
	mi := &file_admin_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunCmdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunCmdRequest) ProtoMessage() {}

func (x *RunCmdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunCmdRequest.ProtoReflect.Descriptor instead.
func (*RunCmdRequest) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{6}
}

func (x *RunCmdRequest) GetCmd() string {
	if x != nil {
		return x.Cmd
	}
	return ""
}

func (x *RunCmdRequest) GetArgs() []string {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *RunCmdRequest) GetBlocking() bool {
	if x != nil {
		return x.Blocking
	}
	return false
}

func (x *RunCmdRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

// RunCmdResponse is the response message containing the result of the command execution.
type RunCmdResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        string                 `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"` // Output of the command execution.
	Pid           int32                  `protobuf:"varint,4,opt,name=pid,proto3" json:"pid,omitempty"`      // Process ID of the executed command.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RunCmdResponse) Reset() {
	*x = RunCmdResponse{}
	mi := &file_admin_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunCmdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunCmdResponse) ProtoMessage() {}

func (x *RunCmdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunCmdResponse.ProtoReflect.Descriptor instead.
func (*RunCmdResponse) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{7}
}

func (x *RunCmdResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

func (x *RunCmdResponse) GetPid() int32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

// SetEnvironmentVariableRequest is the request message to set an environment variable.
type SetEnvironmentVariableRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`   // Name of the environment variable.
	Value         string                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"` // Value of the environment variable.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetEnvironmentVariableRequest) Reset() {
	*x = SetEnvironmentVariableRequest{}
	mi := &file_admin_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetEnvironmentVariableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetEnvironmentVariableRequest) ProtoMessage() {}

func (x *SetEnvironmentVariableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetEnvironmentVariableRequest.ProtoReflect.Descriptor instead.
func (*SetEnvironmentVariableRequest) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{8}
}

func (x *SetEnvironmentVariableRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SetEnvironmentVariableRequest) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// SetEnvironmentVariableResponse is the response message for setting an environment variable.
type SetEnvironmentVariableResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetEnvironmentVariableResponse) Reset() {
	*x = SetEnvironmentVariableResponse{}
	mi := &file_admin_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetEnvironmentVariableResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetEnvironmentVariableResponse) ProtoMessage() {}

func (x *SetEnvironmentVariableResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetEnvironmentVariableResponse.ProtoReflect.Descriptor instead.
func (*SetEnvironmentVariableResponse) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{9}
}

// GetEnvironmentVariableRequest is the request message to get an environment variable's value.
type GetEnvironmentVariableRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"` // Name of the environment variable.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetEnvironmentVariableRequest) Reset() {
	*x = GetEnvironmentVariableRequest{}
	mi := &file_admin_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEnvironmentVariableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEnvironmentVariableRequest) ProtoMessage() {}

func (x *GetEnvironmentVariableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEnvironmentVariableRequest.ProtoReflect.Descriptor instead.
func (*GetEnvironmentVariableRequest) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{10}
}

func (x *GetEnvironmentVariableRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// GetEnvironmentVariableResponse is the response message containing the value of an environment variable.
type GetEnvironmentVariableResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         string                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"` // Value of the environment variable.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetEnvironmentVariableResponse) Reset() {
	*x = GetEnvironmentVariableResponse{}
	mi := &file_admin_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEnvironmentVariableResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEnvironmentVariableResponse) ProtoMessage() {}

func (x *GetEnvironmentVariableResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEnvironmentVariableResponse.ProtoReflect.Descriptor instead.
func (*GetEnvironmentVariableResponse) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{11}
}

func (x *GetEnvironmentVariableResponse) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// UnsetEnvironmentVariableRequest is the request message to unset an environment variable.
type UnsetEnvironmentVariableRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"` // Name of the environment variable to unset.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnsetEnvironmentVariableRequest) Reset() {
	*x = UnsetEnvironmentVariableRequest{}
	mi := &file_admin_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnsetEnvironmentVariableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsetEnvironmentVariableRequest) ProtoMessage() {}

func (x *UnsetEnvironmentVariableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsetEnvironmentVariableRequest.ProtoReflect.Descriptor instead.
func (*UnsetEnvironmentVariableRequest) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{12}
}

func (x *UnsetEnvironmentVariableRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// UnsetEnvironmentVariableResponse is the response message for unsetting an environment variable.
type UnsetEnvironmentVariableResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnsetEnvironmentVariableResponse) Reset() {
	*x = UnsetEnvironmentVariableResponse{}
	mi := &file_admin_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnsetEnvironmentVariableResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsetEnvironmentVariableResponse) ProtoMessage() {}

func (x *UnsetEnvironmentVariableResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsetEnvironmentVariableResponse.ProtoReflect.Descriptor instead.
func (*UnsetEnvironmentVariableResponse) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{13}
}

// GetCertificatesRequest is the request message to retrieve certificates for a domain.
type GetCertificatesRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Domain           string                 `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`                     // Domain for which the certificates are requested.
	Port             int32                  `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`                        // Port number (defaults to 80).
	Path             string                 `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`                         // Path to store the certificates (defaults to tmp).
	Country          string                 `protobuf:"bytes,4,opt,name=country,proto3" json:"country,omitempty"`                   // Country for the certificate.
	State            string                 `protobuf:"bytes,5,opt,name=state,proto3" json:"state,omitempty"`                       // State for the certificate.
	City             string                 `protobuf:"bytes,6,opt,name=city,proto3" json:"city,omitempty"`                         // City for the certificate.
	Organization     string                 `protobuf:"bytes,7,opt,name=organization,proto3" json:"organization,omitempty"`         // Organization for the certificate.
	AlternateDomains []string               `protobuf:"bytes,8,rep,name=alternateDomains,proto3" json:"alternateDomains,omitempty"` // Alternate domains for the certificate.
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *GetCertificatesRequest) Reset() {
	*x = GetCertificatesRequest{}
	mi := &file_admin_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCertificatesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCertificatesRequest) ProtoMessage() {}

func (x *GetCertificatesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCertificatesRequest.ProtoReflect.Descriptor instead.
func (*GetCertificatesRequest) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{14}
}

func (x *GetCertificatesRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *GetCertificatesRequest) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *GetCertificatesRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *GetCertificatesRequest) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *GetCertificatesRequest) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *GetCertificatesRequest) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *GetCertificatesRequest) GetOrganization() string {
	if x != nil {
		return x.Organization
	}
	return ""
}

func (x *GetCertificatesRequest) GetAlternateDomains() []string {
	if x != nil {
		return x.AlternateDomains
	}
	return nil
}

// GetCertificatesResponse is the response message containing the requested certificates.
type GetCertificatesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cacert        string                 `protobuf:"bytes,1,opt,name=cacert,proto3" json:"cacert,omitempty"`   // CA certificate.
	Cert          string                 `protobuf:"bytes,2,opt,name=cert,proto3" json:"cert,omitempty"`       // Certificate.
	Certkey       string                 `protobuf:"bytes,3,opt,name=certkey,proto3" json:"certkey,omitempty"` // Certificate key.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCertificatesResponse) Reset() {
	*x = GetCertificatesResponse{}
	mi := &file_admin_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCertificatesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCertificatesResponse) ProtoMessage() {}

func (x *GetCertificatesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCertificatesResponse.ProtoReflect.Descriptor instead.
func (*GetCertificatesResponse) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{15}
}

func (x *GetCertificatesResponse) GetCacert() string {
	if x != nil {
		return x.Cacert
	}
	return ""
}

func (x *GetCertificatesResponse) GetCert() string {
	if x != nil {
		return x.Cert
	}
	return ""
}

func (x *GetCertificatesResponse) GetCertkey() string {
	if x != nil {
		return x.Certkey
	}
	return ""
}

// KillProcessRequest is the request message to kill a process by its PID.
type KillProcessRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pid           int64                  `protobuf:"varint,1,opt,name=pid,proto3" json:"pid,omitempty"` // Process ID of the process to be killed.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KillProcessRequest) Reset() {
	*x = KillProcessRequest{}
	mi := &file_admin_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KillProcessRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KillProcessRequest) ProtoMessage() {}

func (x *KillProcessRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KillProcessRequest.ProtoReflect.Descriptor instead.
func (*KillProcessRequest) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{16}
}

func (x *KillProcessRequest) GetPid() int64 {
	if x != nil {
		return x.Pid
	}
	return 0
}

// KillProcessResponse is the response message for killing a process.
type KillProcessResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KillProcessResponse) Reset() {
	*x = KillProcessResponse{}
	mi := &file_admin_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KillProcessResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KillProcessResponse) ProtoMessage() {}

func (x *KillProcessResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KillProcessResponse.ProtoReflect.Descriptor instead.
func (*KillProcessResponse) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{17}
}

// KillProcessesRequest is the request message to kill processes by name.
type KillProcessesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"` // Name of the processes to be killed.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KillProcessesRequest) Reset() {
	*x = KillProcessesRequest{}
	mi := &file_admin_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KillProcessesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KillProcessesRequest) ProtoMessage() {}

func (x *KillProcessesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KillProcessesRequest.ProtoReflect.Descriptor instead.
func (*KillProcessesRequest) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{18}
}

func (x *KillProcessesRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// KillProcessesResponse is the response message for killing processes by name.
type KillProcessesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KillProcessesResponse) Reset() {
	*x = KillProcessesResponse{}
	mi := &file_admin_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KillProcessesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KillProcessesResponse) ProtoMessage() {}

func (x *KillProcessesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KillProcessesResponse.ProtoReflect.Descriptor instead.
func (*KillProcessesResponse) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{19}
}

// ProcessInfo represents details about a process on the host system.
type ProcessInfo struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Name               string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                                                           // Process name.
	Exec               string                 `protobuf:"bytes,2,opt,name=exec,proto3" json:"exec,omitempty"`                                                           // Executable path.
	Pid                int32                  `protobuf:"varint,3,opt,name=pid,proto3" json:"pid,omitempty"`                                                            // Process ID.
	Ppid               int32                  `protobuf:"varint,4,opt,name=ppid,proto3" json:"ppid,omitempty"`                                                          // Parent Process ID.
	User               string                 `protobuf:"bytes,5,opt,name=user,proto3" json:"user,omitempty"`                                                           // User running the process.
	Priority           string                 `protobuf:"bytes,6,opt,name=priority,proto3" json:"priority,omitempty"`                                                   // Process priority.
	CpuUsagePercent    float64                `protobuf:"fixed64,7,opt,name=cpu_usage_percent,json=cpuUsagePercent,proto3" json:"cpu_usage_percent,omitempty"`          // CPU usage percentage.
	MemoryUsagePercent float32                `protobuf:"fixed32,8,opt,name=memory_usage_percent,json=memoryUsagePercent,proto3" json:"memory_usage_percent,omitempty"` // Memory usage percentage.
	MemoryUsage        uint64                 `protobuf:"varint,9,opt,name=memory_usage,json=memoryUsage,proto3" json:"memory_usage,omitempty"`                         // Memory usage in bytes.
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ProcessInfo) Reset() {
	*x = ProcessInfo{}
	mi := &file_admin_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessInfo) ProtoMessage() {}

func (x *ProcessInfo) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessInfo.ProtoReflect.Descriptor instead.
func (*ProcessInfo) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{20}
}

func (x *ProcessInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProcessInfo) GetExec() string {
	if x != nil {
		return x.Exec
	}
	return ""
}

func (x *ProcessInfo) GetPid() int32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *ProcessInfo) GetPpid() int32 {
	if x != nil {
		return x.Ppid
	}
	return 0
}

func (x *ProcessInfo) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *ProcessInfo) GetPriority() string {
	if x != nil {
		return x.Priority
	}
	return ""
}

func (x *ProcessInfo) GetCpuUsagePercent() float64 {
	if x != nil {
		return x.CpuUsagePercent
	}
	return 0
}

func (x *ProcessInfo) GetMemoryUsagePercent() float32 {
	if x != nil {
		return x.MemoryUsagePercent
	}
	return 0
}

func (x *ProcessInfo) GetMemoryUsage() uint64 {
	if x != nil {
		return x.MemoryUsage
	}
	return 0
}

// GetProcessInfosRequest is the request message to get information about specific processes.
type GetProcessInfosRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"` // Name of the process.
	Pid           int32                  `protobuf:"varint,2,opt,name=pid,proto3" json:"pid,omitempty"`  // Process ID.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetProcessInfosRequest) Reset() {
	*x = GetProcessInfosRequest{}
	mi := &file_admin_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetProcessInfosRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProcessInfosRequest) ProtoMessage() {}

func (x *GetProcessInfosRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProcessInfosRequest.ProtoReflect.Descriptor instead.
func (*GetProcessInfosRequest) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{21}
}

func (x *GetProcessInfosRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetProcessInfosRequest) GetPid() int32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

// GetProcessInfosResponse is the response message containing information about processes.
type GetProcessInfosResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Infos         []*ProcessInfo         `protobuf:"bytes,1,rep,name=infos,proto3" json:"infos,omitempty"` // Information about the requested processes.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetProcessInfosResponse) Reset() {
	*x = GetProcessInfosResponse{}
	mi := &file_admin_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetProcessInfosResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProcessInfosResponse) ProtoMessage() {}

func (x *GetProcessInfosResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProcessInfosResponse.ProtoReflect.Descriptor instead.
func (*GetProcessInfosResponse) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{22}
}

func (x *GetProcessInfosResponse) GetInfos() []*ProcessInfo {
	if x != nil {
		return x.Infos
	}
	return nil
}

// GetPidsRequest is the request message to get the PIDs of processes by name.
type GetPidsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"` // Name of the process.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPidsRequest) Reset() {
	*x = GetPidsRequest{}
	mi := &file_admin_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPidsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPidsRequest) ProtoMessage() {}

func (x *GetPidsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPidsRequest.ProtoReflect.Descriptor instead.
func (*GetPidsRequest) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{23}
}

func (x *GetPidsRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// GetPidsResponse is the response message containing the PIDs of the requested processes.
type GetPidsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pids          []int32                `protobuf:"varint,1,rep,packed,name=pids,proto3" json:"pids,omitempty"` // List of Process IDs.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPidsResponse) Reset() {
	*x = GetPidsResponse{}
	mi := &file_admin_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPidsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPidsResponse) ProtoMessage() {}

func (x *GetPidsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPidsResponse.ProtoReflect.Descriptor instead.
func (*GetPidsResponse) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{24}
}

func (x *GetPidsResponse) GetPids() []int32 {
	if x != nil {
		return x.Pids
	}
	return nil
}

// UpdateRequest is the request message for updating a Globular server.
type UpdateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Platform      string                 `protobuf:"bytes,1,opt,name=platform,proto3" json:"platform,omitempty"` // Platform of the server to be updated.
	Data          []byte                 `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`         // Update data.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateRequest) Reset() {
	*x = UpdateRequest{}
	mi := &file_admin_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRequest) ProtoMessage() {}

func (x *UpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRequest.ProtoReflect.Descriptor instead.
func (*UpdateRequest) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{25}
}

func (x *UpdateRequest) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *UpdateRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// UpdateResponse is the response message for the update operation.
type UpdateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateResponse) Reset() {
	*x = UpdateResponse{}
	mi := &file_admin_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateResponse) ProtoMessage() {}

func (x *UpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateResponse.ProtoReflect.Descriptor instead.
func (*UpdateResponse) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{26}
}

// DownloadGlobularRequest is the request message to download the Globular executable.
type DownloadGlobularRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Platform      string                 `protobuf:"bytes,1,opt,name=platform,proto3" json:"platform,omitempty"` // Platform for which the executable is requested.
	Source        string                 `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`     // Address of the server to download from.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DownloadGlobularRequest) Reset() {
	*x = DownloadGlobularRequest{}
	mi := &file_admin_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DownloadGlobularRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadGlobularRequest) ProtoMessage() {}

func (x *DownloadGlobularRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadGlobularRequest.ProtoReflect.Descriptor instead.
func (*DownloadGlobularRequest) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{27}
}

func (x *DownloadGlobularRequest) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *DownloadGlobularRequest) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

// DownloadGlobularResponse is the response message containing the Globular executable.
type DownloadGlobularResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          []byte                 `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"` // Downloaded data.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DownloadGlobularResponse) Reset() {
	*x = DownloadGlobularResponse{}
	mi := &file_admin_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DownloadGlobularResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadGlobularResponse) ProtoMessage() {}

func (x *DownloadGlobularResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadGlobularResponse.ProtoReflect.Descriptor instead.
func (*DownloadGlobularResponse) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{28}
}

func (x *DownloadGlobularResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// SaveConfigRequest is the request message to save the Globular configuration.
type SaveConfigRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Config        string                 `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"` // Configuration data to be saved.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SaveConfigRequest) Reset() {
	*x = SaveConfigRequest{}
	mi := &file_admin_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SaveConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveConfigRequest) ProtoMessage() {}

func (x *SaveConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveConfigRequest.ProtoReflect.Descriptor instead.
func (*SaveConfigRequest) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{29}
}

func (x *SaveConfigRequest) GetConfig() string {
	if x != nil {
		return x.Config
	}
	return ""
}

// SaveConfigResponse is the response message for saving the Globular configuration.
type SaveConfigResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SaveConfigResponse) Reset() {
	*x = SaveConfigResponse{}
	mi := &file_admin_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SaveConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveConfigResponse) ProtoMessage() {}

func (x *SaveConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveConfigResponse.ProtoReflect.Descriptor instead.
func (*SaveConfigResponse) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{30}
}

// GetFileInfoRequest is the request message to get information about a file.
type GetFileInfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"` // Path of the file.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFileInfoRequest) Reset() {
	*x = GetFileInfoRequest{}
	mi := &file_admin_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFileInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFileInfoRequest) ProtoMessage() {}

func (x *GetFileInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFileInfoRequest.ProtoReflect.Descriptor instead.
func (*GetFileInfoRequest) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{31}
}

func (x *GetFileInfoRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

// GetFileInfoResponse is the response message containing information about the requested file.
type GetFileInfoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Info          *FileInfo              `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"` // Information about the file.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFileInfoResponse) Reset() {
	*x = GetFileInfoResponse{}
	mi := &file_admin_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFileInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFileInfoResponse) ProtoMessage() {}

func (x *GetFileInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFileInfoResponse.ProtoReflect.Descriptor instead.
func (*GetFileInfoResponse) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{32}
}

func (x *GetFileInfoResponse) GetInfo() *FileInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

var File_admin_proto protoreflect.FileDescriptor

const file_admin_proto_rawDesc = "" +
	"\n" +
	"\vadmin.proto\x12\x05admin\"V\n" +
	"\bHostInfo\x12\x0e\n" +
	"\x02ip\x18\x01 \x01(\tR\x02ip\x12\x10\n" +
	"\x03mac\x18\x02 \x01(\tR\x03mac\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12\x14\n" +
	"\x05infos\x18\x04 \x01(\tR\x05infos\"\x1a\n" +
	"\x18getAvailableHostsRequest\"B\n" +
	"\x19getAvailableHostsResponse\x12%\n" +
	"\x05hosts\x18\x01 \x03(\v2\x0f.admin.HostInfoR\x05hosts\"\x9d\x01\n" +
	"\bFileInfo\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04path\x18\x02 \x01(\tR\x04path\x12\x12\n" +
	"\x04size\x18\x03 \x01(\x03R\x04size\x12\x14\n" +
	"\x05isDir\x18\x04 \x01(\bR\x05isDir\x12\x18\n" +
	"\amodTime\x18\x05 \x01(\x03R\amodTime\x12%\n" +
	"\x05files\x18\x06 \x03(\v2\x0f.admin.FileInfoR\x05files\".\n" +
	"\x18HasRunningProcessRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\"3\n" +
	"\x19HasRunningProcessResponse\x12\x16\n" +
	"\x06result\x18\x01 \x01(\bR\x06result\"e\n" +
	"\rRunCmdRequest\x12\x10\n" +
	"\x03cmd\x18\x01 \x01(\tR\x03cmd\x12\x12\n" +
	"\x04args\x18\x02 \x03(\tR\x04args\x12\x1a\n" +
	"\bblocking\x18\x03 \x01(\bR\bblocking\x12\x12\n" +
	"\x04path\x18\x04 \x01(\tR\x04path\":\n" +
	"\x0eRunCmdResponse\x12\x16\n" +
	"\x06result\x18\x01 \x01(\tR\x06result\x12\x10\n" +
	"\x03pid\x18\x04 \x01(\x05R\x03pid\"I\n" +
	"\x1dSetEnvironmentVariableRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value\" \n" +
	"\x1eSetEnvironmentVariableResponse\"3\n" +
	"\x1dGetEnvironmentVariableRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\"6\n" +
	"\x1eGetEnvironmentVariableResponse\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value\"5\n" +
	"\x1fUnsetEnvironmentVariableRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\"\"\n" +
	" UnsetEnvironmentVariableResponse\"\xec\x01\n" +
	"\x16GetCertificatesRequest\x12\x16\n" +
	"\x06domain\x18\x01 \x01(\tR\x06domain\x12\x12\n" +
	"\x04port\x18\x02 \x01(\x05R\x04port\x12\x12\n" +
	"\x04path\x18\x03 \x01(\tR\x04path\x12\x18\n" +
	"\acountry\x18\x04 \x01(\tR\acountry\x12\x14\n" +
	"\x05state\x18\x05 \x01(\tR\x05state\x12\x12\n" +
	"\x04city\x18\x06 \x01(\tR\x04city\x12\"\n" +
	"\forganization\x18\a \x01(\tR\forganization\x12*\n" +
	"\x10alternateDomains\x18\b \x03(\tR\x10alternateDomains\"_\n" +
	"\x17GetCertificatesResponse\x12\x16\n" +
	"\x06cacert\x18\x01 \x01(\tR\x06cacert\x12\x12\n" +
	"\x04cert\x18\x02 \x01(\tR\x04cert\x12\x18\n" +
	"\acertkey\x18\x03 \x01(\tR\acertkey\"&\n" +
	"\x12KillProcessRequest\x12\x10\n" +
	"\x03pid\x18\x01 \x01(\x03R\x03pid\"\x15\n" +
	"\x13KillProcessResponse\"*\n" +
	"\x14KillProcessesRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\"\x17\n" +
	"\x15KillProcessesResponse\"\x8c\x02\n" +
	"\vProcessInfo\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04exec\x18\x02 \x01(\tR\x04exec\x12\x10\n" +
	"\x03pid\x18\x03 \x01(\x05R\x03pid\x12\x12\n" +
	"\x04ppid\x18\x04 \x01(\x05R\x04ppid\x12\x12\n" +
	"\x04user\x18\x05 \x01(\tR\x04user\x12\x1a\n" +
	"\bpriority\x18\x06 \x01(\tR\bpriority\x12*\n" +
	"\x11cpu_usage_percent\x18\a \x01(\x01R\x0fcpuUsagePercent\x120\n" +
	"\x14memory_usage_percent\x18\b \x01(\x02R\x12memoryUsagePercent\x12!\n" +
	"\fmemory_usage\x18\t \x01(\x04R\vmemoryUsage\">\n" +
	"\x16GetProcessInfosRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x10\n" +
	"\x03pid\x18\x02 \x01(\x05R\x03pid\"C\n" +
	"\x17GetProcessInfosResponse\x12(\n" +
	"\x05infos\x18\x01 \x03(\v2\x12.admin.ProcessInfoR\x05infos\"$\n" +
	"\x0eGetPidsRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\"%\n" +
	"\x0fGetPidsResponse\x12\x12\n" +
	"\x04pids\x18\x01 \x03(\x05R\x04pids\"?\n" +
	"\rUpdateRequest\x12\x1a\n" +
	"\bplatform\x18\x01 \x01(\tR\bplatform\x12\x12\n" +
	"\x04data\x18\x02 \x01(\fR\x04data\"\x10\n" +
	"\x0eUpdateResponse\"M\n" +
	"\x17DownloadGlobularRequest\x12\x1a\n" +
	"\bplatform\x18\x01 \x01(\tR\bplatform\x12\x16\n" +
	"\x06source\x18\x02 \x01(\tR\x06source\".\n" +
	"\x18DownloadGlobularResponse\x12\x12\n" +
	"\x04data\x18\x01 \x01(\fR\x04data\"+\n" +
	"\x11SaveConfigRequest\x12\x16\n" +
	"\x06config\x18\x01 \x01(\tR\x06config\"\x14\n" +
	"\x12SaveConfigResponse\"(\n" +
	"\x12GetFileInfoRequest\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\":\n" +
	"\x13GetFileInfoResponse\x12#\n" +
	"\x04info\x18\x02 \x01(\v2\x0f.admin.FileInfoR\x04info2\xbc\t\n" +
	"\fAdminService\x127\n" +
	"\x06Update\x12\x14.admin.UpdateRequest\x1a\x15.admin.UpdateResponse(\x01\x12U\n" +
	"\x10DownloadGlobular\x12\x1e.admin.DownloadGlobularRequest\x1a\x1f.admin.DownloadGlobularResponse0\x01\x12P\n" +
	"\x0fGetCertificates\x12\x1d.admin.GetCertificatesRequest\x1a\x1e.admin.GetCertificatesResponse\x12V\n" +
	"\x11HasRunningProcess\x12\x1f.admin.HasRunningProcessRequest\x1a .admin.HasRunningProcessResponse\x12R\n" +
	"\x0fGetProcessInfos\x12\x1d.admin.GetProcessInfosRequest\x1a\x1e.admin.GetProcessInfosResponse0\x01\x127\n" +
	"\x06RunCmd\x12\x14.admin.RunCmdRequest\x1a\x15.admin.RunCmdResponse0\x01\x12e\n" +
	"\x16SetEnvironmentVariable\x12$.admin.SetEnvironmentVariableRequest\x1a%.admin.SetEnvironmentVariableResponse\x12e\n" +
	"\x16GetEnvironmentVariable\x12$.admin.GetEnvironmentVariableRequest\x1a%.admin.GetEnvironmentVariableResponse\x12k\n" +
	"\x18UnsetEnvironmentVariable\x12&.admin.UnsetEnvironmentVariableRequest\x1a'.admin.UnsetEnvironmentVariableResponse\x12D\n" +
	"\vKillProcess\x12\x19.admin.KillProcessRequest\x1a\x1a.admin.KillProcessResponse\x12J\n" +
	"\rKillProcesses\x12\x1b.admin.KillProcessesRequest\x1a\x1c.admin.KillProcessesResponse\x128\n" +
	"\aGetPids\x12\x15.admin.GetPidsRequest\x1a\x16.admin.GetPidsResponse\x12@\n" +
	"\n" +
	"SaveConfig\x12\x18.admin.SaveConfigRequest\x1a\x18.admin.SaveConfigRequest\x12D\n" +
	"\vGetFileInfo\x12\x19.admin.GetFileInfoRequest\x1a\x1a.admin.GetFileInfoResponse\x12V\n" +
	"\x11GetAvailableHosts\x12\x1f.admin.getAvailableHostsRequest\x1a .admin.getAvailableHostsResponseB5Z3github.com/globulario/services/golang/admin/adminpbb\x06proto3"

var (
	file_admin_proto_rawDescOnce sync.Once
	file_admin_proto_rawDescData []byte
)

func file_admin_proto_rawDescGZIP() []byte {
	file_admin_proto_rawDescOnce.Do(func() {
		file_admin_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_admin_proto_rawDesc), len(file_admin_proto_rawDesc)))
	})
	return file_admin_proto_rawDescData
}

var file_admin_proto_msgTypes = make([]protoimpl.MessageInfo, 33)
var file_admin_proto_goTypes = []any{
	(*HostInfo)(nil),                         // 0: admin.HostInfo
	(*GetAvailableHostsRequest)(nil),         // 1: admin.getAvailableHostsRequest
	(*GetAvailableHostsResponse)(nil),        // 2: admin.getAvailableHostsResponse
	(*FileInfo)(nil),                         // 3: admin.FileInfo
	(*HasRunningProcessRequest)(nil),         // 4: admin.HasRunningProcessRequest
	(*HasRunningProcessResponse)(nil),        // 5: admin.HasRunningProcessResponse
	(*RunCmdRequest)(nil),                    // 6: admin.RunCmdRequest
	(*RunCmdResponse)(nil),                   // 7: admin.RunCmdResponse
	(*SetEnvironmentVariableRequest)(nil),    // 8: admin.SetEnvironmentVariableRequest
	(*SetEnvironmentVariableResponse)(nil),   // 9: admin.SetEnvironmentVariableResponse
	(*GetEnvironmentVariableRequest)(nil),    // 10: admin.GetEnvironmentVariableRequest
	(*GetEnvironmentVariableResponse)(nil),   // 11: admin.GetEnvironmentVariableResponse
	(*UnsetEnvironmentVariableRequest)(nil),  // 12: admin.UnsetEnvironmentVariableRequest
	(*UnsetEnvironmentVariableResponse)(nil), // 13: admin.UnsetEnvironmentVariableResponse
	(*GetCertificatesRequest)(nil),           // 14: admin.GetCertificatesRequest
	(*GetCertificatesResponse)(nil),          // 15: admin.GetCertificatesResponse
	(*KillProcessRequest)(nil),               // 16: admin.KillProcessRequest
	(*KillProcessResponse)(nil),              // 17: admin.KillProcessResponse
	(*KillProcessesRequest)(nil),             // 18: admin.KillProcessesRequest
	(*KillProcessesResponse)(nil),            // 19: admin.KillProcessesResponse
	(*ProcessInfo)(nil),                      // 20: admin.ProcessInfo
	(*GetProcessInfosRequest)(nil),           // 21: admin.GetProcessInfosRequest
	(*GetProcessInfosResponse)(nil),          // 22: admin.GetProcessInfosResponse
	(*GetPidsRequest)(nil),                   // 23: admin.GetPidsRequest
	(*GetPidsResponse)(nil),                  // 24: admin.GetPidsResponse
	(*UpdateRequest)(nil),                    // 25: admin.UpdateRequest
	(*UpdateResponse)(nil),                   // 26: admin.UpdateResponse
	(*DownloadGlobularRequest)(nil),          // 27: admin.DownloadGlobularRequest
	(*DownloadGlobularResponse)(nil),         // 28: admin.DownloadGlobularResponse
	(*SaveConfigRequest)(nil),                // 29: admin.SaveConfigRequest
	(*SaveConfigResponse)(nil),               // 30: admin.SaveConfigResponse
	(*GetFileInfoRequest)(nil),               // 31: admin.GetFileInfoRequest
	(*GetFileInfoResponse)(nil),              // 32: admin.GetFileInfoResponse
}
var file_admin_proto_depIdxs = []int32{
	0,  // 0: admin.getAvailableHostsResponse.hosts:type_name -> admin.HostInfo
	3,  // 1: admin.FileInfo.files:type_name -> admin.FileInfo
	20, // 2: admin.GetProcessInfosResponse.infos:type_name -> admin.ProcessInfo
	3,  // 3: admin.GetFileInfoResponse.info:type_name -> admin.FileInfo
	25, // 4: admin.AdminService.Update:input_type -> admin.UpdateRequest
	27, // 5: admin.AdminService.DownloadGlobular:input_type -> admin.DownloadGlobularRequest
	14, // 6: admin.AdminService.GetCertificates:input_type -> admin.GetCertificatesRequest
	4,  // 7: admin.AdminService.HasRunningProcess:input_type -> admin.HasRunningProcessRequest
	21, // 8: admin.AdminService.GetProcessInfos:input_type -> admin.GetProcessInfosRequest
	6,  // 9: admin.AdminService.RunCmd:input_type -> admin.RunCmdRequest
	8,  // 10: admin.AdminService.SetEnvironmentVariable:input_type -> admin.SetEnvironmentVariableRequest
	10, // 11: admin.AdminService.GetEnvironmentVariable:input_type -> admin.GetEnvironmentVariableRequest
	12, // 12: admin.AdminService.UnsetEnvironmentVariable:input_type -> admin.UnsetEnvironmentVariableRequest
	16, // 13: admin.AdminService.KillProcess:input_type -> admin.KillProcessRequest
	18, // 14: admin.AdminService.KillProcesses:input_type -> admin.KillProcessesRequest
	23, // 15: admin.AdminService.GetPids:input_type -> admin.GetPidsRequest
	29, // 16: admin.AdminService.SaveConfig:input_type -> admin.SaveConfigRequest
	31, // 17: admin.AdminService.GetFileInfo:input_type -> admin.GetFileInfoRequest
	1,  // 18: admin.AdminService.GetAvailableHosts:input_type -> admin.getAvailableHostsRequest
	26, // 19: admin.AdminService.Update:output_type -> admin.UpdateResponse
	28, // 20: admin.AdminService.DownloadGlobular:output_type -> admin.DownloadGlobularResponse
	15, // 21: admin.AdminService.GetCertificates:output_type -> admin.GetCertificatesResponse
	5,  // 22: admin.AdminService.HasRunningProcess:output_type -> admin.HasRunningProcessResponse
	22, // 23: admin.AdminService.GetProcessInfos:output_type -> admin.GetProcessInfosResponse
	7,  // 24: admin.AdminService.RunCmd:output_type -> admin.RunCmdResponse
	9,  // 25: admin.AdminService.SetEnvironmentVariable:output_type -> admin.SetEnvironmentVariableResponse
	11, // 26: admin.AdminService.GetEnvironmentVariable:output_type -> admin.GetEnvironmentVariableResponse
	13, // 27: admin.AdminService.UnsetEnvironmentVariable:output_type -> admin.UnsetEnvironmentVariableResponse
	17, // 28: admin.AdminService.KillProcess:output_type -> admin.KillProcessResponse
	19, // 29: admin.AdminService.KillProcesses:output_type -> admin.KillProcessesResponse
	24, // 30: admin.AdminService.GetPids:output_type -> admin.GetPidsResponse
	29, // 31: admin.AdminService.SaveConfig:output_type -> admin.SaveConfigRequest
	32, // 32: admin.AdminService.GetFileInfo:output_type -> admin.GetFileInfoResponse
	2,  // 33: admin.AdminService.GetAvailableHosts:output_type -> admin.getAvailableHostsResponse
	19, // [19:34] is the sub-list for method output_type
	4,  // [4:19] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_admin_proto_init() }
func file_admin_proto_init() {
	if File_admin_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_admin_proto_rawDesc), len(file_admin_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   33,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_admin_proto_goTypes,
		DependencyIndexes: file_admin_proto_depIdxs,
		MessageInfos:      file_admin_proto_msgTypes,
	}.Build()
	File_admin_proto = out.File
	file_admin_proto_goTypes = nil
	file_admin_proto_depIdxs = nil
}
