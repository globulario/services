// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: config.proto

#ifndef PROTOBUF_INCLUDED_config_2eproto
#define PROTOBUF_INCLUDED_config_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_config_2eproto 

namespace protobuf_config_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[10];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_config_2eproto
namespace config {
class GetServiceConfigurationByIdRequest;
class GetServiceConfigurationByIdRequestDefaultTypeInternal;
extern GetServiceConfigurationByIdRequestDefaultTypeInternal _GetServiceConfigurationByIdRequest_default_instance_;
class GetServiceConfigurationByIdResponse;
class GetServiceConfigurationByIdResponseDefaultTypeInternal;
extern GetServiceConfigurationByIdResponseDefaultTypeInternal _GetServiceConfigurationByIdResponse_default_instance_;
class GetServiceConfigurationRequest;
class GetServiceConfigurationRequestDefaultTypeInternal;
extern GetServiceConfigurationRequestDefaultTypeInternal _GetServiceConfigurationRequest_default_instance_;
class GetServiceConfigurationResponse;
class GetServiceConfigurationResponseDefaultTypeInternal;
extern GetServiceConfigurationResponseDefaultTypeInternal _GetServiceConfigurationResponse_default_instance_;
class GetServicesConfigurationsByNameRequest;
class GetServicesConfigurationsByNameRequestDefaultTypeInternal;
extern GetServicesConfigurationsByNameRequestDefaultTypeInternal _GetServicesConfigurationsByNameRequest_default_instance_;
class GetServicesConfigurationsByNameResponse;
class GetServicesConfigurationsByNameResponseDefaultTypeInternal;
extern GetServicesConfigurationsByNameResponseDefaultTypeInternal _GetServicesConfigurationsByNameResponse_default_instance_;
class GetServicesConfigurationsRequest;
class GetServicesConfigurationsRequestDefaultTypeInternal;
extern GetServicesConfigurationsRequestDefaultTypeInternal _GetServicesConfigurationsRequest_default_instance_;
class GetServicesConfigurationsResponse;
class GetServicesConfigurationsResponseDefaultTypeInternal;
extern GetServicesConfigurationsResponseDefaultTypeInternal _GetServicesConfigurationsResponse_default_instance_;
class SetServiceConfigurationRequest;
class SetServiceConfigurationRequestDefaultTypeInternal;
extern SetServiceConfigurationRequestDefaultTypeInternal _SetServiceConfigurationRequest_default_instance_;
class SetServiceConfigurationResponse;
class SetServiceConfigurationResponseDefaultTypeInternal;
extern SetServiceConfigurationResponseDefaultTypeInternal _SetServiceConfigurationResponse_default_instance_;
}  // namespace config
namespace google {
namespace protobuf {
template<> ::config::GetServiceConfigurationByIdRequest* Arena::CreateMaybeMessage<::config::GetServiceConfigurationByIdRequest>(Arena*);
template<> ::config::GetServiceConfigurationByIdResponse* Arena::CreateMaybeMessage<::config::GetServiceConfigurationByIdResponse>(Arena*);
template<> ::config::GetServiceConfigurationRequest* Arena::CreateMaybeMessage<::config::GetServiceConfigurationRequest>(Arena*);
template<> ::config::GetServiceConfigurationResponse* Arena::CreateMaybeMessage<::config::GetServiceConfigurationResponse>(Arena*);
template<> ::config::GetServicesConfigurationsByNameRequest* Arena::CreateMaybeMessage<::config::GetServicesConfigurationsByNameRequest>(Arena*);
template<> ::config::GetServicesConfigurationsByNameResponse* Arena::CreateMaybeMessage<::config::GetServicesConfigurationsByNameResponse>(Arena*);
template<> ::config::GetServicesConfigurationsRequest* Arena::CreateMaybeMessage<::config::GetServicesConfigurationsRequest>(Arena*);
template<> ::config::GetServicesConfigurationsResponse* Arena::CreateMaybeMessage<::config::GetServicesConfigurationsResponse>(Arena*);
template<> ::config::SetServiceConfigurationRequest* Arena::CreateMaybeMessage<::config::SetServiceConfigurationRequest>(Arena*);
template<> ::config::SetServiceConfigurationResponse* Arena::CreateMaybeMessage<::config::SetServiceConfigurationResponse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace config {

// ===================================================================

class SetServiceConfigurationRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:config.SetServiceConfigurationRequest) */ {
 public:
  SetServiceConfigurationRequest();
  virtual ~SetServiceConfigurationRequest();

  SetServiceConfigurationRequest(const SetServiceConfigurationRequest& from);

  inline SetServiceConfigurationRequest& operator=(const SetServiceConfigurationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetServiceConfigurationRequest(SetServiceConfigurationRequest&& from) noexcept
    : SetServiceConfigurationRequest() {
    *this = ::std::move(from);
  }

  inline SetServiceConfigurationRequest& operator=(SetServiceConfigurationRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetServiceConfigurationRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SetServiceConfigurationRequest* internal_default_instance() {
    return reinterpret_cast<const SetServiceConfigurationRequest*>(
               &_SetServiceConfigurationRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(SetServiceConfigurationRequest* other);
  friend void swap(SetServiceConfigurationRequest& a, SetServiceConfigurationRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetServiceConfigurationRequest* New() const final {
    return CreateMaybeMessage<SetServiceConfigurationRequest>(NULL);
  }

  SetServiceConfigurationRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SetServiceConfigurationRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SetServiceConfigurationRequest& from);
  void MergeFrom(const SetServiceConfigurationRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetServiceConfigurationRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string config = 1;
  void clear_config();
  static const int kConfigFieldNumber = 1;
  const ::std::string& config() const;
  void set_config(const ::std::string& value);
  #if LANG_CXX11
  void set_config(::std::string&& value);
  #endif
  void set_config(const char* value);
  void set_config(const char* value, size_t size);
  ::std::string* mutable_config();
  ::std::string* release_config();
  void set_allocated_config(::std::string* config);

  // @@protoc_insertion_point(class_scope:config.SetServiceConfigurationRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr config_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_config_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetServiceConfigurationResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:config.SetServiceConfigurationResponse) */ {
 public:
  SetServiceConfigurationResponse();
  virtual ~SetServiceConfigurationResponse();

  SetServiceConfigurationResponse(const SetServiceConfigurationResponse& from);

  inline SetServiceConfigurationResponse& operator=(const SetServiceConfigurationResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetServiceConfigurationResponse(SetServiceConfigurationResponse&& from) noexcept
    : SetServiceConfigurationResponse() {
    *this = ::std::move(from);
  }

  inline SetServiceConfigurationResponse& operator=(SetServiceConfigurationResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetServiceConfigurationResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SetServiceConfigurationResponse* internal_default_instance() {
    return reinterpret_cast<const SetServiceConfigurationResponse*>(
               &_SetServiceConfigurationResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(SetServiceConfigurationResponse* other);
  friend void swap(SetServiceConfigurationResponse& a, SetServiceConfigurationResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetServiceConfigurationResponse* New() const final {
    return CreateMaybeMessage<SetServiceConfigurationResponse>(NULL);
  }

  SetServiceConfigurationResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SetServiceConfigurationResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SetServiceConfigurationResponse& from);
  void MergeFrom(const SetServiceConfigurationResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetServiceConfigurationResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:config.SetServiceConfigurationResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_config_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetServiceConfigurationRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:config.GetServiceConfigurationRequest) */ {
 public:
  GetServiceConfigurationRequest();
  virtual ~GetServiceConfigurationRequest();

  GetServiceConfigurationRequest(const GetServiceConfigurationRequest& from);

  inline GetServiceConfigurationRequest& operator=(const GetServiceConfigurationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetServiceConfigurationRequest(GetServiceConfigurationRequest&& from) noexcept
    : GetServiceConfigurationRequest() {
    *this = ::std::move(from);
  }

  inline GetServiceConfigurationRequest& operator=(GetServiceConfigurationRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetServiceConfigurationRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetServiceConfigurationRequest* internal_default_instance() {
    return reinterpret_cast<const GetServiceConfigurationRequest*>(
               &_GetServiceConfigurationRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(GetServiceConfigurationRequest* other);
  friend void swap(GetServiceConfigurationRequest& a, GetServiceConfigurationRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetServiceConfigurationRequest* New() const final {
    return CreateMaybeMessage<GetServiceConfigurationRequest>(NULL);
  }

  GetServiceConfigurationRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetServiceConfigurationRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetServiceConfigurationRequest& from);
  void MergeFrom(const GetServiceConfigurationRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetServiceConfigurationRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string path = 1;
  void clear_path();
  static const int kPathFieldNumber = 1;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  #if LANG_CXX11
  void set_path(::std::string&& value);
  #endif
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // @@protoc_insertion_point(class_scope:config.GetServiceConfigurationRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_config_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetServiceConfigurationResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:config.GetServiceConfigurationResponse) */ {
 public:
  GetServiceConfigurationResponse();
  virtual ~GetServiceConfigurationResponse();

  GetServiceConfigurationResponse(const GetServiceConfigurationResponse& from);

  inline GetServiceConfigurationResponse& operator=(const GetServiceConfigurationResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetServiceConfigurationResponse(GetServiceConfigurationResponse&& from) noexcept
    : GetServiceConfigurationResponse() {
    *this = ::std::move(from);
  }

  inline GetServiceConfigurationResponse& operator=(GetServiceConfigurationResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetServiceConfigurationResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetServiceConfigurationResponse* internal_default_instance() {
    return reinterpret_cast<const GetServiceConfigurationResponse*>(
               &_GetServiceConfigurationResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(GetServiceConfigurationResponse* other);
  friend void swap(GetServiceConfigurationResponse& a, GetServiceConfigurationResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetServiceConfigurationResponse* New() const final {
    return CreateMaybeMessage<GetServiceConfigurationResponse>(NULL);
  }

  GetServiceConfigurationResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetServiceConfigurationResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetServiceConfigurationResponse& from);
  void MergeFrom(const GetServiceConfigurationResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetServiceConfigurationResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string config = 1;
  void clear_config();
  static const int kConfigFieldNumber = 1;
  const ::std::string& config() const;
  void set_config(const ::std::string& value);
  #if LANG_CXX11
  void set_config(::std::string&& value);
  #endif
  void set_config(const char* value);
  void set_config(const char* value, size_t size);
  ::std::string* mutable_config();
  ::std::string* release_config();
  void set_allocated_config(::std::string* config);

  // @@protoc_insertion_point(class_scope:config.GetServiceConfigurationResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr config_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_config_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetServiceConfigurationByIdRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:config.GetServiceConfigurationByIdRequest) */ {
 public:
  GetServiceConfigurationByIdRequest();
  virtual ~GetServiceConfigurationByIdRequest();

  GetServiceConfigurationByIdRequest(const GetServiceConfigurationByIdRequest& from);

  inline GetServiceConfigurationByIdRequest& operator=(const GetServiceConfigurationByIdRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetServiceConfigurationByIdRequest(GetServiceConfigurationByIdRequest&& from) noexcept
    : GetServiceConfigurationByIdRequest() {
    *this = ::std::move(from);
  }

  inline GetServiceConfigurationByIdRequest& operator=(GetServiceConfigurationByIdRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetServiceConfigurationByIdRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetServiceConfigurationByIdRequest* internal_default_instance() {
    return reinterpret_cast<const GetServiceConfigurationByIdRequest*>(
               &_GetServiceConfigurationByIdRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(GetServiceConfigurationByIdRequest* other);
  friend void swap(GetServiceConfigurationByIdRequest& a, GetServiceConfigurationByIdRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetServiceConfigurationByIdRequest* New() const final {
    return CreateMaybeMessage<GetServiceConfigurationByIdRequest>(NULL);
  }

  GetServiceConfigurationByIdRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetServiceConfigurationByIdRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetServiceConfigurationByIdRequest& from);
  void MergeFrom(const GetServiceConfigurationByIdRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetServiceConfigurationByIdRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // @@protoc_insertion_point(class_scope:config.GetServiceConfigurationByIdRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_config_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetServiceConfigurationByIdResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:config.GetServiceConfigurationByIdResponse) */ {
 public:
  GetServiceConfigurationByIdResponse();
  virtual ~GetServiceConfigurationByIdResponse();

  GetServiceConfigurationByIdResponse(const GetServiceConfigurationByIdResponse& from);

  inline GetServiceConfigurationByIdResponse& operator=(const GetServiceConfigurationByIdResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetServiceConfigurationByIdResponse(GetServiceConfigurationByIdResponse&& from) noexcept
    : GetServiceConfigurationByIdResponse() {
    *this = ::std::move(from);
  }

  inline GetServiceConfigurationByIdResponse& operator=(GetServiceConfigurationByIdResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetServiceConfigurationByIdResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetServiceConfigurationByIdResponse* internal_default_instance() {
    return reinterpret_cast<const GetServiceConfigurationByIdResponse*>(
               &_GetServiceConfigurationByIdResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(GetServiceConfigurationByIdResponse* other);
  friend void swap(GetServiceConfigurationByIdResponse& a, GetServiceConfigurationByIdResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetServiceConfigurationByIdResponse* New() const final {
    return CreateMaybeMessage<GetServiceConfigurationByIdResponse>(NULL);
  }

  GetServiceConfigurationByIdResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetServiceConfigurationByIdResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetServiceConfigurationByIdResponse& from);
  void MergeFrom(const GetServiceConfigurationByIdResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetServiceConfigurationByIdResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string config = 1;
  void clear_config();
  static const int kConfigFieldNumber = 1;
  const ::std::string& config() const;
  void set_config(const ::std::string& value);
  #if LANG_CXX11
  void set_config(::std::string&& value);
  #endif
  void set_config(const char* value);
  void set_config(const char* value, size_t size);
  ::std::string* mutable_config();
  ::std::string* release_config();
  void set_allocated_config(::std::string* config);

  // @@protoc_insertion_point(class_scope:config.GetServiceConfigurationByIdResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr config_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_config_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetServicesConfigurationsByNameRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:config.GetServicesConfigurationsByNameRequest) */ {
 public:
  GetServicesConfigurationsByNameRequest();
  virtual ~GetServicesConfigurationsByNameRequest();

  GetServicesConfigurationsByNameRequest(const GetServicesConfigurationsByNameRequest& from);

  inline GetServicesConfigurationsByNameRequest& operator=(const GetServicesConfigurationsByNameRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetServicesConfigurationsByNameRequest(GetServicesConfigurationsByNameRequest&& from) noexcept
    : GetServicesConfigurationsByNameRequest() {
    *this = ::std::move(from);
  }

  inline GetServicesConfigurationsByNameRequest& operator=(GetServicesConfigurationsByNameRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetServicesConfigurationsByNameRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetServicesConfigurationsByNameRequest* internal_default_instance() {
    return reinterpret_cast<const GetServicesConfigurationsByNameRequest*>(
               &_GetServicesConfigurationsByNameRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(GetServicesConfigurationsByNameRequest* other);
  friend void swap(GetServicesConfigurationsByNameRequest& a, GetServicesConfigurationsByNameRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetServicesConfigurationsByNameRequest* New() const final {
    return CreateMaybeMessage<GetServicesConfigurationsByNameRequest>(NULL);
  }

  GetServicesConfigurationsByNameRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetServicesConfigurationsByNameRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetServicesConfigurationsByNameRequest& from);
  void MergeFrom(const GetServicesConfigurationsByNameRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetServicesConfigurationsByNameRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:config.GetServicesConfigurationsByNameRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_config_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetServicesConfigurationsByNameResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:config.GetServicesConfigurationsByNameResponse) */ {
 public:
  GetServicesConfigurationsByNameResponse();
  virtual ~GetServicesConfigurationsByNameResponse();

  GetServicesConfigurationsByNameResponse(const GetServicesConfigurationsByNameResponse& from);

  inline GetServicesConfigurationsByNameResponse& operator=(const GetServicesConfigurationsByNameResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetServicesConfigurationsByNameResponse(GetServicesConfigurationsByNameResponse&& from) noexcept
    : GetServicesConfigurationsByNameResponse() {
    *this = ::std::move(from);
  }

  inline GetServicesConfigurationsByNameResponse& operator=(GetServicesConfigurationsByNameResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetServicesConfigurationsByNameResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetServicesConfigurationsByNameResponse* internal_default_instance() {
    return reinterpret_cast<const GetServicesConfigurationsByNameResponse*>(
               &_GetServicesConfigurationsByNameResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(GetServicesConfigurationsByNameResponse* other);
  friend void swap(GetServicesConfigurationsByNameResponse& a, GetServicesConfigurationsByNameResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetServicesConfigurationsByNameResponse* New() const final {
    return CreateMaybeMessage<GetServicesConfigurationsByNameResponse>(NULL);
  }

  GetServicesConfigurationsByNameResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetServicesConfigurationsByNameResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetServicesConfigurationsByNameResponse& from);
  void MergeFrom(const GetServicesConfigurationsByNameResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetServicesConfigurationsByNameResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string configs = 1;
  int configs_size() const;
  void clear_configs();
  static const int kConfigsFieldNumber = 1;
  const ::std::string& configs(int index) const;
  ::std::string* mutable_configs(int index);
  void set_configs(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_configs(int index, ::std::string&& value);
  #endif
  void set_configs(int index, const char* value);
  void set_configs(int index, const char* value, size_t size);
  ::std::string* add_configs();
  void add_configs(const ::std::string& value);
  #if LANG_CXX11
  void add_configs(::std::string&& value);
  #endif
  void add_configs(const char* value);
  void add_configs(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& configs() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_configs();

  // @@protoc_insertion_point(class_scope:config.GetServicesConfigurationsByNameResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> configs_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_config_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetServicesConfigurationsRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:config.GetServicesConfigurationsRequest) */ {
 public:
  GetServicesConfigurationsRequest();
  virtual ~GetServicesConfigurationsRequest();

  GetServicesConfigurationsRequest(const GetServicesConfigurationsRequest& from);

  inline GetServicesConfigurationsRequest& operator=(const GetServicesConfigurationsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetServicesConfigurationsRequest(GetServicesConfigurationsRequest&& from) noexcept
    : GetServicesConfigurationsRequest() {
    *this = ::std::move(from);
  }

  inline GetServicesConfigurationsRequest& operator=(GetServicesConfigurationsRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetServicesConfigurationsRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetServicesConfigurationsRequest* internal_default_instance() {
    return reinterpret_cast<const GetServicesConfigurationsRequest*>(
               &_GetServicesConfigurationsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(GetServicesConfigurationsRequest* other);
  friend void swap(GetServicesConfigurationsRequest& a, GetServicesConfigurationsRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetServicesConfigurationsRequest* New() const final {
    return CreateMaybeMessage<GetServicesConfigurationsRequest>(NULL);
  }

  GetServicesConfigurationsRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetServicesConfigurationsRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetServicesConfigurationsRequest& from);
  void MergeFrom(const GetServicesConfigurationsRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetServicesConfigurationsRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:config.GetServicesConfigurationsRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_config_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetServicesConfigurationsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:config.GetServicesConfigurationsResponse) */ {
 public:
  GetServicesConfigurationsResponse();
  virtual ~GetServicesConfigurationsResponse();

  GetServicesConfigurationsResponse(const GetServicesConfigurationsResponse& from);

  inline GetServicesConfigurationsResponse& operator=(const GetServicesConfigurationsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetServicesConfigurationsResponse(GetServicesConfigurationsResponse&& from) noexcept
    : GetServicesConfigurationsResponse() {
    *this = ::std::move(from);
  }

  inline GetServicesConfigurationsResponse& operator=(GetServicesConfigurationsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetServicesConfigurationsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetServicesConfigurationsResponse* internal_default_instance() {
    return reinterpret_cast<const GetServicesConfigurationsResponse*>(
               &_GetServicesConfigurationsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(GetServicesConfigurationsResponse* other);
  friend void swap(GetServicesConfigurationsResponse& a, GetServicesConfigurationsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetServicesConfigurationsResponse* New() const final {
    return CreateMaybeMessage<GetServicesConfigurationsResponse>(NULL);
  }

  GetServicesConfigurationsResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetServicesConfigurationsResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetServicesConfigurationsResponse& from);
  void MergeFrom(const GetServicesConfigurationsResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetServicesConfigurationsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string configs = 1;
  int configs_size() const;
  void clear_configs();
  static const int kConfigsFieldNumber = 1;
  const ::std::string& configs(int index) const;
  ::std::string* mutable_configs(int index);
  void set_configs(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_configs(int index, ::std::string&& value);
  #endif
  void set_configs(int index, const char* value);
  void set_configs(int index, const char* value, size_t size);
  ::std::string* add_configs();
  void add_configs(const ::std::string& value);
  #if LANG_CXX11
  void add_configs(::std::string&& value);
  #endif
  void add_configs(const char* value);
  void add_configs(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& configs() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_configs();

  // @@protoc_insertion_point(class_scope:config.GetServicesConfigurationsResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> configs_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_config_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// SetServiceConfigurationRequest

// string config = 1;
inline void SetServiceConfigurationRequest::clear_config() {
  config_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SetServiceConfigurationRequest::config() const {
  // @@protoc_insertion_point(field_get:config.SetServiceConfigurationRequest.config)
  return config_.GetNoArena();
}
inline void SetServiceConfigurationRequest::set_config(const ::std::string& value) {
  
  config_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:config.SetServiceConfigurationRequest.config)
}
#if LANG_CXX11
inline void SetServiceConfigurationRequest::set_config(::std::string&& value) {
  
  config_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:config.SetServiceConfigurationRequest.config)
}
#endif
inline void SetServiceConfigurationRequest::set_config(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  config_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:config.SetServiceConfigurationRequest.config)
}
inline void SetServiceConfigurationRequest::set_config(const char* value, size_t size) {
  
  config_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:config.SetServiceConfigurationRequest.config)
}
inline ::std::string* SetServiceConfigurationRequest::mutable_config() {
  
  // @@protoc_insertion_point(field_mutable:config.SetServiceConfigurationRequest.config)
  return config_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetServiceConfigurationRequest::release_config() {
  // @@protoc_insertion_point(field_release:config.SetServiceConfigurationRequest.config)
  
  return config_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetServiceConfigurationRequest::set_allocated_config(::std::string* config) {
  if (config != NULL) {
    
  } else {
    
  }
  config_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), config);
  // @@protoc_insertion_point(field_set_allocated:config.SetServiceConfigurationRequest.config)
}

// -------------------------------------------------------------------

// SetServiceConfigurationResponse

// -------------------------------------------------------------------

// GetServiceConfigurationRequest

// string path = 1;
inline void GetServiceConfigurationRequest::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetServiceConfigurationRequest::path() const {
  // @@protoc_insertion_point(field_get:config.GetServiceConfigurationRequest.path)
  return path_.GetNoArena();
}
inline void GetServiceConfigurationRequest::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:config.GetServiceConfigurationRequest.path)
}
#if LANG_CXX11
inline void GetServiceConfigurationRequest::set_path(::std::string&& value) {
  
  path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:config.GetServiceConfigurationRequest.path)
}
#endif
inline void GetServiceConfigurationRequest::set_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:config.GetServiceConfigurationRequest.path)
}
inline void GetServiceConfigurationRequest::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:config.GetServiceConfigurationRequest.path)
}
inline ::std::string* GetServiceConfigurationRequest::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:config.GetServiceConfigurationRequest.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetServiceConfigurationRequest::release_path() {
  // @@protoc_insertion_point(field_release:config.GetServiceConfigurationRequest.path)
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetServiceConfigurationRequest::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:config.GetServiceConfigurationRequest.path)
}

// -------------------------------------------------------------------

// GetServiceConfigurationResponse

// string config = 1;
inline void GetServiceConfigurationResponse::clear_config() {
  config_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetServiceConfigurationResponse::config() const {
  // @@protoc_insertion_point(field_get:config.GetServiceConfigurationResponse.config)
  return config_.GetNoArena();
}
inline void GetServiceConfigurationResponse::set_config(const ::std::string& value) {
  
  config_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:config.GetServiceConfigurationResponse.config)
}
#if LANG_CXX11
inline void GetServiceConfigurationResponse::set_config(::std::string&& value) {
  
  config_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:config.GetServiceConfigurationResponse.config)
}
#endif
inline void GetServiceConfigurationResponse::set_config(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  config_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:config.GetServiceConfigurationResponse.config)
}
inline void GetServiceConfigurationResponse::set_config(const char* value, size_t size) {
  
  config_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:config.GetServiceConfigurationResponse.config)
}
inline ::std::string* GetServiceConfigurationResponse::mutable_config() {
  
  // @@protoc_insertion_point(field_mutable:config.GetServiceConfigurationResponse.config)
  return config_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetServiceConfigurationResponse::release_config() {
  // @@protoc_insertion_point(field_release:config.GetServiceConfigurationResponse.config)
  
  return config_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetServiceConfigurationResponse::set_allocated_config(::std::string* config) {
  if (config != NULL) {
    
  } else {
    
  }
  config_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), config);
  // @@protoc_insertion_point(field_set_allocated:config.GetServiceConfigurationResponse.config)
}

// -------------------------------------------------------------------

// GetServiceConfigurationByIdRequest

// string id = 1;
inline void GetServiceConfigurationByIdRequest::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetServiceConfigurationByIdRequest::id() const {
  // @@protoc_insertion_point(field_get:config.GetServiceConfigurationByIdRequest.id)
  return id_.GetNoArena();
}
inline void GetServiceConfigurationByIdRequest::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:config.GetServiceConfigurationByIdRequest.id)
}
#if LANG_CXX11
inline void GetServiceConfigurationByIdRequest::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:config.GetServiceConfigurationByIdRequest.id)
}
#endif
inline void GetServiceConfigurationByIdRequest::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:config.GetServiceConfigurationByIdRequest.id)
}
inline void GetServiceConfigurationByIdRequest::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:config.GetServiceConfigurationByIdRequest.id)
}
inline ::std::string* GetServiceConfigurationByIdRequest::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:config.GetServiceConfigurationByIdRequest.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetServiceConfigurationByIdRequest::release_id() {
  // @@protoc_insertion_point(field_release:config.GetServiceConfigurationByIdRequest.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetServiceConfigurationByIdRequest::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:config.GetServiceConfigurationByIdRequest.id)
}

// -------------------------------------------------------------------

// GetServiceConfigurationByIdResponse

// string config = 1;
inline void GetServiceConfigurationByIdResponse::clear_config() {
  config_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetServiceConfigurationByIdResponse::config() const {
  // @@protoc_insertion_point(field_get:config.GetServiceConfigurationByIdResponse.config)
  return config_.GetNoArena();
}
inline void GetServiceConfigurationByIdResponse::set_config(const ::std::string& value) {
  
  config_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:config.GetServiceConfigurationByIdResponse.config)
}
#if LANG_CXX11
inline void GetServiceConfigurationByIdResponse::set_config(::std::string&& value) {
  
  config_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:config.GetServiceConfigurationByIdResponse.config)
}
#endif
inline void GetServiceConfigurationByIdResponse::set_config(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  config_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:config.GetServiceConfigurationByIdResponse.config)
}
inline void GetServiceConfigurationByIdResponse::set_config(const char* value, size_t size) {
  
  config_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:config.GetServiceConfigurationByIdResponse.config)
}
inline ::std::string* GetServiceConfigurationByIdResponse::mutable_config() {
  
  // @@protoc_insertion_point(field_mutable:config.GetServiceConfigurationByIdResponse.config)
  return config_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetServiceConfigurationByIdResponse::release_config() {
  // @@protoc_insertion_point(field_release:config.GetServiceConfigurationByIdResponse.config)
  
  return config_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetServiceConfigurationByIdResponse::set_allocated_config(::std::string* config) {
  if (config != NULL) {
    
  } else {
    
  }
  config_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), config);
  // @@protoc_insertion_point(field_set_allocated:config.GetServiceConfigurationByIdResponse.config)
}

// -------------------------------------------------------------------

// GetServicesConfigurationsByNameRequest

// string name = 1;
inline void GetServicesConfigurationsByNameRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetServicesConfigurationsByNameRequest::name() const {
  // @@protoc_insertion_point(field_get:config.GetServicesConfigurationsByNameRequest.name)
  return name_.GetNoArena();
}
inline void GetServicesConfigurationsByNameRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:config.GetServicesConfigurationsByNameRequest.name)
}
#if LANG_CXX11
inline void GetServicesConfigurationsByNameRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:config.GetServicesConfigurationsByNameRequest.name)
}
#endif
inline void GetServicesConfigurationsByNameRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:config.GetServicesConfigurationsByNameRequest.name)
}
inline void GetServicesConfigurationsByNameRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:config.GetServicesConfigurationsByNameRequest.name)
}
inline ::std::string* GetServicesConfigurationsByNameRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:config.GetServicesConfigurationsByNameRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetServicesConfigurationsByNameRequest::release_name() {
  // @@protoc_insertion_point(field_release:config.GetServicesConfigurationsByNameRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetServicesConfigurationsByNameRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:config.GetServicesConfigurationsByNameRequest.name)
}

// -------------------------------------------------------------------

// GetServicesConfigurationsByNameResponse

// repeated string configs = 1;
inline int GetServicesConfigurationsByNameResponse::configs_size() const {
  return configs_.size();
}
inline void GetServicesConfigurationsByNameResponse::clear_configs() {
  configs_.Clear();
}
inline const ::std::string& GetServicesConfigurationsByNameResponse::configs(int index) const {
  // @@protoc_insertion_point(field_get:config.GetServicesConfigurationsByNameResponse.configs)
  return configs_.Get(index);
}
inline ::std::string* GetServicesConfigurationsByNameResponse::mutable_configs(int index) {
  // @@protoc_insertion_point(field_mutable:config.GetServicesConfigurationsByNameResponse.configs)
  return configs_.Mutable(index);
}
inline void GetServicesConfigurationsByNameResponse::set_configs(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:config.GetServicesConfigurationsByNameResponse.configs)
  configs_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void GetServicesConfigurationsByNameResponse::set_configs(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:config.GetServicesConfigurationsByNameResponse.configs)
  configs_.Mutable(index)->assign(std::move(value));
}
#endif
inline void GetServicesConfigurationsByNameResponse::set_configs(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  configs_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:config.GetServicesConfigurationsByNameResponse.configs)
}
inline void GetServicesConfigurationsByNameResponse::set_configs(int index, const char* value, size_t size) {
  configs_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:config.GetServicesConfigurationsByNameResponse.configs)
}
inline ::std::string* GetServicesConfigurationsByNameResponse::add_configs() {
  // @@protoc_insertion_point(field_add_mutable:config.GetServicesConfigurationsByNameResponse.configs)
  return configs_.Add();
}
inline void GetServicesConfigurationsByNameResponse::add_configs(const ::std::string& value) {
  configs_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:config.GetServicesConfigurationsByNameResponse.configs)
}
#if LANG_CXX11
inline void GetServicesConfigurationsByNameResponse::add_configs(::std::string&& value) {
  configs_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:config.GetServicesConfigurationsByNameResponse.configs)
}
#endif
inline void GetServicesConfigurationsByNameResponse::add_configs(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  configs_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:config.GetServicesConfigurationsByNameResponse.configs)
}
inline void GetServicesConfigurationsByNameResponse::add_configs(const char* value, size_t size) {
  configs_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:config.GetServicesConfigurationsByNameResponse.configs)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
GetServicesConfigurationsByNameResponse::configs() const {
  // @@protoc_insertion_point(field_list:config.GetServicesConfigurationsByNameResponse.configs)
  return configs_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
GetServicesConfigurationsByNameResponse::mutable_configs() {
  // @@protoc_insertion_point(field_mutable_list:config.GetServicesConfigurationsByNameResponse.configs)
  return &configs_;
}

// -------------------------------------------------------------------

// GetServicesConfigurationsRequest

// -------------------------------------------------------------------

// GetServicesConfigurationsResponse

// repeated string configs = 1;
inline int GetServicesConfigurationsResponse::configs_size() const {
  return configs_.size();
}
inline void GetServicesConfigurationsResponse::clear_configs() {
  configs_.Clear();
}
inline const ::std::string& GetServicesConfigurationsResponse::configs(int index) const {
  // @@protoc_insertion_point(field_get:config.GetServicesConfigurationsResponse.configs)
  return configs_.Get(index);
}
inline ::std::string* GetServicesConfigurationsResponse::mutable_configs(int index) {
  // @@protoc_insertion_point(field_mutable:config.GetServicesConfigurationsResponse.configs)
  return configs_.Mutable(index);
}
inline void GetServicesConfigurationsResponse::set_configs(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:config.GetServicesConfigurationsResponse.configs)
  configs_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void GetServicesConfigurationsResponse::set_configs(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:config.GetServicesConfigurationsResponse.configs)
  configs_.Mutable(index)->assign(std::move(value));
}
#endif
inline void GetServicesConfigurationsResponse::set_configs(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  configs_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:config.GetServicesConfigurationsResponse.configs)
}
inline void GetServicesConfigurationsResponse::set_configs(int index, const char* value, size_t size) {
  configs_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:config.GetServicesConfigurationsResponse.configs)
}
inline ::std::string* GetServicesConfigurationsResponse::add_configs() {
  // @@protoc_insertion_point(field_add_mutable:config.GetServicesConfigurationsResponse.configs)
  return configs_.Add();
}
inline void GetServicesConfigurationsResponse::add_configs(const ::std::string& value) {
  configs_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:config.GetServicesConfigurationsResponse.configs)
}
#if LANG_CXX11
inline void GetServicesConfigurationsResponse::add_configs(::std::string&& value) {
  configs_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:config.GetServicesConfigurationsResponse.configs)
}
#endif
inline void GetServicesConfigurationsResponse::add_configs(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  configs_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:config.GetServicesConfigurationsResponse.configs)
}
inline void GetServicesConfigurationsResponse::add_configs(const char* value, size_t size) {
  configs_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:config.GetServicesConfigurationsResponse.configs)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
GetServicesConfigurationsResponse::configs() const {
  // @@protoc_insertion_point(field_list:config.GetServicesConfigurationsResponse.configs)
  return configs_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
GetServicesConfigurationsResponse::mutable_configs() {
  // @@protoc_insertion_point(field_mutable_list:config.GetServicesConfigurationsResponse.configs)
  return &configs_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace config

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_config_2eproto
