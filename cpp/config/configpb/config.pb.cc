// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: config.proto

#include "config.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace config {
constexpr SetServiceConfigurationRequest::SetServiceConfigurationRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : config_(nullptr){}
struct SetServiceConfigurationRequestDefaultTypeInternal {
  constexpr SetServiceConfigurationRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SetServiceConfigurationRequestDefaultTypeInternal() {}
  union {
    SetServiceConfigurationRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SetServiceConfigurationRequestDefaultTypeInternal _SetServiceConfigurationRequest_default_instance_;
constexpr SetServiceConfigurationResponse::SetServiceConfigurationResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct SetServiceConfigurationResponseDefaultTypeInternal {
  constexpr SetServiceConfigurationResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SetServiceConfigurationResponseDefaultTypeInternal() {}
  union {
    SetServiceConfigurationResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SetServiceConfigurationResponseDefaultTypeInternal _SetServiceConfigurationResponse_default_instance_;
constexpr GetServiceConfigurationRequest::GetServiceConfigurationRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : path_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct GetServiceConfigurationRequestDefaultTypeInternal {
  constexpr GetServiceConfigurationRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetServiceConfigurationRequestDefaultTypeInternal() {}
  union {
    GetServiceConfigurationRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetServiceConfigurationRequestDefaultTypeInternal _GetServiceConfigurationRequest_default_instance_;
constexpr GetServiceConfigurationResponse::GetServiceConfigurationResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : config_(nullptr){}
struct GetServiceConfigurationResponseDefaultTypeInternal {
  constexpr GetServiceConfigurationResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetServiceConfigurationResponseDefaultTypeInternal() {}
  union {
    GetServiceConfigurationResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetServiceConfigurationResponseDefaultTypeInternal _GetServiceConfigurationResponse_default_instance_;
constexpr GetServiceConfigurationByIdRequest::GetServiceConfigurationByIdRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct GetServiceConfigurationByIdRequestDefaultTypeInternal {
  constexpr GetServiceConfigurationByIdRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetServiceConfigurationByIdRequestDefaultTypeInternal() {}
  union {
    GetServiceConfigurationByIdRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetServiceConfigurationByIdRequestDefaultTypeInternal _GetServiceConfigurationByIdRequest_default_instance_;
constexpr GetServiceConfigurationByIdResponse::GetServiceConfigurationByIdResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : config_(nullptr){}
struct GetServiceConfigurationByIdResponseDefaultTypeInternal {
  constexpr GetServiceConfigurationByIdResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetServiceConfigurationByIdResponseDefaultTypeInternal() {}
  union {
    GetServiceConfigurationByIdResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetServiceConfigurationByIdResponseDefaultTypeInternal _GetServiceConfigurationByIdResponse_default_instance_;
constexpr GetServicesConfigurationsByNameRequest::GetServicesConfigurationsByNameRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct GetServicesConfigurationsByNameRequestDefaultTypeInternal {
  constexpr GetServicesConfigurationsByNameRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetServicesConfigurationsByNameRequestDefaultTypeInternal() {}
  union {
    GetServicesConfigurationsByNameRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetServicesConfigurationsByNameRequestDefaultTypeInternal _GetServicesConfigurationsByNameRequest_default_instance_;
constexpr GetServicesConfigurationsByNameResponse::GetServicesConfigurationsByNameResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : configs_(){}
struct GetServicesConfigurationsByNameResponseDefaultTypeInternal {
  constexpr GetServicesConfigurationsByNameResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetServicesConfigurationsByNameResponseDefaultTypeInternal() {}
  union {
    GetServicesConfigurationsByNameResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetServicesConfigurationsByNameResponseDefaultTypeInternal _GetServicesConfigurationsByNameResponse_default_instance_;
constexpr GetServicesConfigurationsRequest::GetServicesConfigurationsRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct GetServicesConfigurationsRequestDefaultTypeInternal {
  constexpr GetServicesConfigurationsRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetServicesConfigurationsRequestDefaultTypeInternal() {}
  union {
    GetServicesConfigurationsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetServicesConfigurationsRequestDefaultTypeInternal _GetServicesConfigurationsRequest_default_instance_;
constexpr GetServicesConfigurationsResponse::GetServicesConfigurationsResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : configs_(){}
struct GetServicesConfigurationsResponseDefaultTypeInternal {
  constexpr GetServicesConfigurationsResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetServicesConfigurationsResponseDefaultTypeInternal() {}
  union {
    GetServicesConfigurationsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetServicesConfigurationsResponseDefaultTypeInternal _GetServicesConfigurationsResponse_default_instance_;
}  // namespace config
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_config_2eproto[10];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_config_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_config_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_config_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::config::SetServiceConfigurationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::config::SetServiceConfigurationRequest, config_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::config::SetServiceConfigurationResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::config::GetServiceConfigurationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::config::GetServiceConfigurationRequest, path_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::config::GetServiceConfigurationResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::config::GetServiceConfigurationResponse, config_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::config::GetServiceConfigurationByIdRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::config::GetServiceConfigurationByIdRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::config::GetServiceConfigurationByIdResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::config::GetServiceConfigurationByIdResponse, config_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::config::GetServicesConfigurationsByNameRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::config::GetServicesConfigurationsByNameRequest, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::config::GetServicesConfigurationsByNameResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::config::GetServicesConfigurationsByNameResponse, configs_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::config::GetServicesConfigurationsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::config::GetServicesConfigurationsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::config::GetServicesConfigurationsResponse, configs_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::config::SetServiceConfigurationRequest)},
  { 6, -1, sizeof(::config::SetServiceConfigurationResponse)},
  { 11, -1, sizeof(::config::GetServiceConfigurationRequest)},
  { 17, -1, sizeof(::config::GetServiceConfigurationResponse)},
  { 23, -1, sizeof(::config::GetServiceConfigurationByIdRequest)},
  { 29, -1, sizeof(::config::GetServiceConfigurationByIdResponse)},
  { 35, -1, sizeof(::config::GetServicesConfigurationsByNameRequest)},
  { 41, -1, sizeof(::config::GetServicesConfigurationsByNameResponse)},
  { 47, -1, sizeof(::config::GetServicesConfigurationsRequest)},
  { 52, -1, sizeof(::config::GetServicesConfigurationsResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::config::_SetServiceConfigurationRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::config::_SetServiceConfigurationResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::config::_GetServiceConfigurationRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::config::_GetServiceConfigurationResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::config::_GetServiceConfigurationByIdRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::config::_GetServiceConfigurationByIdResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::config::_GetServicesConfigurationsByNameRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::config::_GetServicesConfigurationsByNameResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::config::_GetServicesConfigurationsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::config::_GetServicesConfigurationsResponse_default_instance_),
};

const char descriptor_table_protodef_config_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\014config.proto\022\006config\032\034google/protobuf/"
  "struct.proto\"I\n\036SetServiceConfigurationR"
  "equest\022\'\n\006config\030\001 \001(\0132\027.google.protobuf"
  ".Struct\"!\n\037SetServiceConfigurationRespon"
  "se\".\n\036GetServiceConfigurationRequest\022\014\n\004"
  "path\030\001 \001(\t\"J\n\037GetServiceConfigurationRes"
  "ponse\022\'\n\006config\030\001 \001(\0132\027.google.protobuf."
  "Struct\"0\n\"GetServiceConfigurationByIdReq"
  "uest\022\n\n\002id\030\001 \001(\t\"N\n#GetServiceConfigurat"
  "ionByIdResponse\022\'\n\006config\030\001 \001(\0132\027.google"
  ".protobuf.Struct\"6\n&GetServicesConfigura"
  "tionsByNameRequest\022\014\n\004name\030\001 \001(\t\"S\n\'GetS"
  "ervicesConfigurationsByNameResponse\022(\n\007c"
  "onfigs\030\001 \003(\0132\027.google.protobuf.Struct\"\"\n"
  " GetServicesConfigurationsRequest\"M\n!Get"
  "ServicesConfigurationsResponse\022(\n\007config"
  "s\030\001 \003(\0132\027.google.protobuf.Struct2\340\004\n\rCon"
  "figService\022l\n\027SetServiceConfiguration\022&."
  "config.SetServiceConfigurationRequest\032\'."
  "config.SetServiceConfigurationResponse\"\000"
  "\022l\n\027GetServiceConfiguration\022&.config.Get"
  "ServiceConfigurationRequest\032\'.config.Get"
  "ServiceConfigurationResponse\"\000\022x\n\033GetSer"
  "viceConfigurationById\022*.config.GetServic"
  "eConfigurationByIdRequest\032+.config.GetSe"
  "rviceConfigurationByIdResponse\"\000\022\204\001\n\037Get"
  "ServicesConfigurationsByName\022..config.Ge"
  "tServicesConfigurationsByNameRequest\032/.c"
  "onfig.GetServicesConfigurationsByNameRes"
  "ponse\"\000\022r\n\031GetServicesConfigurations\022(.c"
  "onfig.GetServicesConfigurationsRequest\032)"
  ".config.GetServicesConfigurationsRespons"
  "e\"\000B\021Z\017config/configpbb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_config_2eproto_deps[1] = {
  &::descriptor_table_google_2fprotobuf_2fstruct_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_config_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_config_2eproto = {
  false, false, 1310, descriptor_table_protodef_config_2eproto, "config.proto", 
  &descriptor_table_config_2eproto_once, descriptor_table_config_2eproto_deps, 1, 10,
  schemas, file_default_instances, TableStruct_config_2eproto::offsets,
  file_level_metadata_config_2eproto, file_level_enum_descriptors_config_2eproto, file_level_service_descriptors_config_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_config_2eproto_getter() {
  return &descriptor_table_config_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_config_2eproto(&descriptor_table_config_2eproto);
namespace config {

// ===================================================================

class SetServiceConfigurationRequest::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Struct& config(const SetServiceConfigurationRequest* msg);
};

const PROTOBUF_NAMESPACE_ID::Struct&
SetServiceConfigurationRequest::_Internal::config(const SetServiceConfigurationRequest* msg) {
  return *msg->config_;
}
void SetServiceConfigurationRequest::clear_config() {
  if (GetArena() == nullptr && config_ != nullptr) {
    delete config_;
  }
  config_ = nullptr;
}
SetServiceConfigurationRequest::SetServiceConfigurationRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:config.SetServiceConfigurationRequest)
}
SetServiceConfigurationRequest::SetServiceConfigurationRequest(const SetServiceConfigurationRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_config()) {
    config_ = new PROTOBUF_NAMESPACE_ID::Struct(*from.config_);
  } else {
    config_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:config.SetServiceConfigurationRequest)
}

void SetServiceConfigurationRequest::SharedCtor() {
config_ = nullptr;
}

SetServiceConfigurationRequest::~SetServiceConfigurationRequest() {
  // @@protoc_insertion_point(destructor:config.SetServiceConfigurationRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SetServiceConfigurationRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete config_;
}

void SetServiceConfigurationRequest::ArenaDtor(void* object) {
  SetServiceConfigurationRequest* _this = reinterpret_cast< SetServiceConfigurationRequest* >(object);
  (void)_this;
}
void SetServiceConfigurationRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetServiceConfigurationRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SetServiceConfigurationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:config.SetServiceConfigurationRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && config_ != nullptr) {
    delete config_;
  }
  config_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetServiceConfigurationRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .google.protobuf.Struct config = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_config(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetServiceConfigurationRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:config.SetServiceConfigurationRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Struct config = 1;
  if (this->has_config()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::config(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:config.SetServiceConfigurationRequest)
  return target;
}

size_t SetServiceConfigurationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:config.SetServiceConfigurationRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.Struct config = 1;
  if (this->has_config()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *config_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetServiceConfigurationRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:config.SetServiceConfigurationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SetServiceConfigurationRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetServiceConfigurationRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:config.SetServiceConfigurationRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:config.SetServiceConfigurationRequest)
    MergeFrom(*source);
  }
}

void SetServiceConfigurationRequest::MergeFrom(const SetServiceConfigurationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:config.SetServiceConfigurationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_config()) {
    _internal_mutable_config()->PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(from._internal_config());
  }
}

void SetServiceConfigurationRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:config.SetServiceConfigurationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetServiceConfigurationRequest::CopyFrom(const SetServiceConfigurationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:config.SetServiceConfigurationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetServiceConfigurationRequest::IsInitialized() const {
  return true;
}

void SetServiceConfigurationRequest::InternalSwap(SetServiceConfigurationRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(config_, other->config_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetServiceConfigurationRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_config_2eproto_getter, &descriptor_table_config_2eproto_once,
      file_level_metadata_config_2eproto[0]);
}

// ===================================================================

class SetServiceConfigurationResponse::_Internal {
 public:
};

SetServiceConfigurationResponse::SetServiceConfigurationResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:config.SetServiceConfigurationResponse)
}
SetServiceConfigurationResponse::SetServiceConfigurationResponse(const SetServiceConfigurationResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:config.SetServiceConfigurationResponse)
}

void SetServiceConfigurationResponse::SharedCtor() {
}

SetServiceConfigurationResponse::~SetServiceConfigurationResponse() {
  // @@protoc_insertion_point(destructor:config.SetServiceConfigurationResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SetServiceConfigurationResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SetServiceConfigurationResponse::ArenaDtor(void* object) {
  SetServiceConfigurationResponse* _this = reinterpret_cast< SetServiceConfigurationResponse* >(object);
  (void)_this;
}
void SetServiceConfigurationResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetServiceConfigurationResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SetServiceConfigurationResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:config.SetServiceConfigurationResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetServiceConfigurationResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetServiceConfigurationResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:config.SetServiceConfigurationResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:config.SetServiceConfigurationResponse)
  return target;
}

size_t SetServiceConfigurationResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:config.SetServiceConfigurationResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetServiceConfigurationResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:config.SetServiceConfigurationResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SetServiceConfigurationResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetServiceConfigurationResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:config.SetServiceConfigurationResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:config.SetServiceConfigurationResponse)
    MergeFrom(*source);
  }
}

void SetServiceConfigurationResponse::MergeFrom(const SetServiceConfigurationResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:config.SetServiceConfigurationResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void SetServiceConfigurationResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:config.SetServiceConfigurationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetServiceConfigurationResponse::CopyFrom(const SetServiceConfigurationResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:config.SetServiceConfigurationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetServiceConfigurationResponse::IsInitialized() const {
  return true;
}

void SetServiceConfigurationResponse::InternalSwap(SetServiceConfigurationResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetServiceConfigurationResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_config_2eproto_getter, &descriptor_table_config_2eproto_once,
      file_level_metadata_config_2eproto[1]);
}

// ===================================================================

class GetServiceConfigurationRequest::_Internal {
 public:
};

GetServiceConfigurationRequest::GetServiceConfigurationRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:config.GetServiceConfigurationRequest)
}
GetServiceConfigurationRequest::GetServiceConfigurationRequest(const GetServiceConfigurationRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_path().empty()) {
    path_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_path(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:config.GetServiceConfigurationRequest)
}

void GetServiceConfigurationRequest::SharedCtor() {
path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetServiceConfigurationRequest::~GetServiceConfigurationRequest() {
  // @@protoc_insertion_point(destructor:config.GetServiceConfigurationRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetServiceConfigurationRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetServiceConfigurationRequest::ArenaDtor(void* object) {
  GetServiceConfigurationRequest* _this = reinterpret_cast< GetServiceConfigurationRequest* >(object);
  (void)_this;
}
void GetServiceConfigurationRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetServiceConfigurationRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetServiceConfigurationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:config.GetServiceConfigurationRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  path_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetServiceConfigurationRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "config.GetServiceConfigurationRequest.path"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetServiceConfigurationRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:config.GetServiceConfigurationRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_path().data(), static_cast<int>(this->_internal_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "config.GetServiceConfigurationRequest.path");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_path(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:config.GetServiceConfigurationRequest)
  return target;
}

size_t GetServiceConfigurationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:config.GetServiceConfigurationRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_path());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetServiceConfigurationRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:config.GetServiceConfigurationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetServiceConfigurationRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetServiceConfigurationRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:config.GetServiceConfigurationRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:config.GetServiceConfigurationRequest)
    MergeFrom(*source);
  }
}

void GetServiceConfigurationRequest::MergeFrom(const GetServiceConfigurationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:config.GetServiceConfigurationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.path().size() > 0) {
    _internal_set_path(from._internal_path());
  }
}

void GetServiceConfigurationRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:config.GetServiceConfigurationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetServiceConfigurationRequest::CopyFrom(const GetServiceConfigurationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:config.GetServiceConfigurationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetServiceConfigurationRequest::IsInitialized() const {
  return true;
}

void GetServiceConfigurationRequest::InternalSwap(GetServiceConfigurationRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  path_.Swap(&other->path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetServiceConfigurationRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_config_2eproto_getter, &descriptor_table_config_2eproto_once,
      file_level_metadata_config_2eproto[2]);
}

// ===================================================================

class GetServiceConfigurationResponse::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Struct& config(const GetServiceConfigurationResponse* msg);
};

const PROTOBUF_NAMESPACE_ID::Struct&
GetServiceConfigurationResponse::_Internal::config(const GetServiceConfigurationResponse* msg) {
  return *msg->config_;
}
void GetServiceConfigurationResponse::clear_config() {
  if (GetArena() == nullptr && config_ != nullptr) {
    delete config_;
  }
  config_ = nullptr;
}
GetServiceConfigurationResponse::GetServiceConfigurationResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:config.GetServiceConfigurationResponse)
}
GetServiceConfigurationResponse::GetServiceConfigurationResponse(const GetServiceConfigurationResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_config()) {
    config_ = new PROTOBUF_NAMESPACE_ID::Struct(*from.config_);
  } else {
    config_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:config.GetServiceConfigurationResponse)
}

void GetServiceConfigurationResponse::SharedCtor() {
config_ = nullptr;
}

GetServiceConfigurationResponse::~GetServiceConfigurationResponse() {
  // @@protoc_insertion_point(destructor:config.GetServiceConfigurationResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetServiceConfigurationResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete config_;
}

void GetServiceConfigurationResponse::ArenaDtor(void* object) {
  GetServiceConfigurationResponse* _this = reinterpret_cast< GetServiceConfigurationResponse* >(object);
  (void)_this;
}
void GetServiceConfigurationResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetServiceConfigurationResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetServiceConfigurationResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:config.GetServiceConfigurationResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && config_ != nullptr) {
    delete config_;
  }
  config_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetServiceConfigurationResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .google.protobuf.Struct config = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_config(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetServiceConfigurationResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:config.GetServiceConfigurationResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Struct config = 1;
  if (this->has_config()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::config(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:config.GetServiceConfigurationResponse)
  return target;
}

size_t GetServiceConfigurationResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:config.GetServiceConfigurationResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.Struct config = 1;
  if (this->has_config()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *config_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetServiceConfigurationResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:config.GetServiceConfigurationResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetServiceConfigurationResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetServiceConfigurationResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:config.GetServiceConfigurationResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:config.GetServiceConfigurationResponse)
    MergeFrom(*source);
  }
}

void GetServiceConfigurationResponse::MergeFrom(const GetServiceConfigurationResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:config.GetServiceConfigurationResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_config()) {
    _internal_mutable_config()->PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(from._internal_config());
  }
}

void GetServiceConfigurationResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:config.GetServiceConfigurationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetServiceConfigurationResponse::CopyFrom(const GetServiceConfigurationResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:config.GetServiceConfigurationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetServiceConfigurationResponse::IsInitialized() const {
  return true;
}

void GetServiceConfigurationResponse::InternalSwap(GetServiceConfigurationResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(config_, other->config_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetServiceConfigurationResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_config_2eproto_getter, &descriptor_table_config_2eproto_once,
      file_level_metadata_config_2eproto[3]);
}

// ===================================================================

class GetServiceConfigurationByIdRequest::_Internal {
 public:
};

GetServiceConfigurationByIdRequest::GetServiceConfigurationByIdRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:config.GetServiceConfigurationByIdRequest)
}
GetServiceConfigurationByIdRequest::GetServiceConfigurationByIdRequest(const GetServiceConfigurationByIdRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:config.GetServiceConfigurationByIdRequest)
}

void GetServiceConfigurationByIdRequest::SharedCtor() {
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetServiceConfigurationByIdRequest::~GetServiceConfigurationByIdRequest() {
  // @@protoc_insertion_point(destructor:config.GetServiceConfigurationByIdRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetServiceConfigurationByIdRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetServiceConfigurationByIdRequest::ArenaDtor(void* object) {
  GetServiceConfigurationByIdRequest* _this = reinterpret_cast< GetServiceConfigurationByIdRequest* >(object);
  (void)_this;
}
void GetServiceConfigurationByIdRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetServiceConfigurationByIdRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetServiceConfigurationByIdRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:config.GetServiceConfigurationByIdRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetServiceConfigurationByIdRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "config.GetServiceConfigurationByIdRequest.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetServiceConfigurationByIdRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:config.GetServiceConfigurationByIdRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "config.GetServiceConfigurationByIdRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:config.GetServiceConfigurationByIdRequest)
  return target;
}

size_t GetServiceConfigurationByIdRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:config.GetServiceConfigurationByIdRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetServiceConfigurationByIdRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:config.GetServiceConfigurationByIdRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetServiceConfigurationByIdRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetServiceConfigurationByIdRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:config.GetServiceConfigurationByIdRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:config.GetServiceConfigurationByIdRequest)
    MergeFrom(*source);
  }
}

void GetServiceConfigurationByIdRequest::MergeFrom(const GetServiceConfigurationByIdRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:config.GetServiceConfigurationByIdRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
}

void GetServiceConfigurationByIdRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:config.GetServiceConfigurationByIdRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetServiceConfigurationByIdRequest::CopyFrom(const GetServiceConfigurationByIdRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:config.GetServiceConfigurationByIdRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetServiceConfigurationByIdRequest::IsInitialized() const {
  return true;
}

void GetServiceConfigurationByIdRequest::InternalSwap(GetServiceConfigurationByIdRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetServiceConfigurationByIdRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_config_2eproto_getter, &descriptor_table_config_2eproto_once,
      file_level_metadata_config_2eproto[4]);
}

// ===================================================================

class GetServiceConfigurationByIdResponse::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Struct& config(const GetServiceConfigurationByIdResponse* msg);
};

const PROTOBUF_NAMESPACE_ID::Struct&
GetServiceConfigurationByIdResponse::_Internal::config(const GetServiceConfigurationByIdResponse* msg) {
  return *msg->config_;
}
void GetServiceConfigurationByIdResponse::clear_config() {
  if (GetArena() == nullptr && config_ != nullptr) {
    delete config_;
  }
  config_ = nullptr;
}
GetServiceConfigurationByIdResponse::GetServiceConfigurationByIdResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:config.GetServiceConfigurationByIdResponse)
}
GetServiceConfigurationByIdResponse::GetServiceConfigurationByIdResponse(const GetServiceConfigurationByIdResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_config()) {
    config_ = new PROTOBUF_NAMESPACE_ID::Struct(*from.config_);
  } else {
    config_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:config.GetServiceConfigurationByIdResponse)
}

void GetServiceConfigurationByIdResponse::SharedCtor() {
config_ = nullptr;
}

GetServiceConfigurationByIdResponse::~GetServiceConfigurationByIdResponse() {
  // @@protoc_insertion_point(destructor:config.GetServiceConfigurationByIdResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetServiceConfigurationByIdResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete config_;
}

void GetServiceConfigurationByIdResponse::ArenaDtor(void* object) {
  GetServiceConfigurationByIdResponse* _this = reinterpret_cast< GetServiceConfigurationByIdResponse* >(object);
  (void)_this;
}
void GetServiceConfigurationByIdResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetServiceConfigurationByIdResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetServiceConfigurationByIdResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:config.GetServiceConfigurationByIdResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && config_ != nullptr) {
    delete config_;
  }
  config_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetServiceConfigurationByIdResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .google.protobuf.Struct config = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_config(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetServiceConfigurationByIdResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:config.GetServiceConfigurationByIdResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Struct config = 1;
  if (this->has_config()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::config(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:config.GetServiceConfigurationByIdResponse)
  return target;
}

size_t GetServiceConfigurationByIdResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:config.GetServiceConfigurationByIdResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.Struct config = 1;
  if (this->has_config()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *config_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetServiceConfigurationByIdResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:config.GetServiceConfigurationByIdResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetServiceConfigurationByIdResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetServiceConfigurationByIdResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:config.GetServiceConfigurationByIdResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:config.GetServiceConfigurationByIdResponse)
    MergeFrom(*source);
  }
}

void GetServiceConfigurationByIdResponse::MergeFrom(const GetServiceConfigurationByIdResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:config.GetServiceConfigurationByIdResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_config()) {
    _internal_mutable_config()->PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(from._internal_config());
  }
}

void GetServiceConfigurationByIdResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:config.GetServiceConfigurationByIdResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetServiceConfigurationByIdResponse::CopyFrom(const GetServiceConfigurationByIdResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:config.GetServiceConfigurationByIdResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetServiceConfigurationByIdResponse::IsInitialized() const {
  return true;
}

void GetServiceConfigurationByIdResponse::InternalSwap(GetServiceConfigurationByIdResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(config_, other->config_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetServiceConfigurationByIdResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_config_2eproto_getter, &descriptor_table_config_2eproto_once,
      file_level_metadata_config_2eproto[5]);
}

// ===================================================================

class GetServicesConfigurationsByNameRequest::_Internal {
 public:
};

GetServicesConfigurationsByNameRequest::GetServicesConfigurationsByNameRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:config.GetServicesConfigurationsByNameRequest)
}
GetServicesConfigurationsByNameRequest::GetServicesConfigurationsByNameRequest(const GetServicesConfigurationsByNameRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:config.GetServicesConfigurationsByNameRequest)
}

void GetServicesConfigurationsByNameRequest::SharedCtor() {
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetServicesConfigurationsByNameRequest::~GetServicesConfigurationsByNameRequest() {
  // @@protoc_insertion_point(destructor:config.GetServicesConfigurationsByNameRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetServicesConfigurationsByNameRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetServicesConfigurationsByNameRequest::ArenaDtor(void* object) {
  GetServicesConfigurationsByNameRequest* _this = reinterpret_cast< GetServicesConfigurationsByNameRequest* >(object);
  (void)_this;
}
void GetServicesConfigurationsByNameRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetServicesConfigurationsByNameRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetServicesConfigurationsByNameRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:config.GetServicesConfigurationsByNameRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetServicesConfigurationsByNameRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "config.GetServicesConfigurationsByNameRequest.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetServicesConfigurationsByNameRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:config.GetServicesConfigurationsByNameRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "config.GetServicesConfigurationsByNameRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:config.GetServicesConfigurationsByNameRequest)
  return target;
}

size_t GetServicesConfigurationsByNameRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:config.GetServicesConfigurationsByNameRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetServicesConfigurationsByNameRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:config.GetServicesConfigurationsByNameRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetServicesConfigurationsByNameRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetServicesConfigurationsByNameRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:config.GetServicesConfigurationsByNameRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:config.GetServicesConfigurationsByNameRequest)
    MergeFrom(*source);
  }
}

void GetServicesConfigurationsByNameRequest::MergeFrom(const GetServicesConfigurationsByNameRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:config.GetServicesConfigurationsByNameRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
}

void GetServicesConfigurationsByNameRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:config.GetServicesConfigurationsByNameRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetServicesConfigurationsByNameRequest::CopyFrom(const GetServicesConfigurationsByNameRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:config.GetServicesConfigurationsByNameRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetServicesConfigurationsByNameRequest::IsInitialized() const {
  return true;
}

void GetServicesConfigurationsByNameRequest::InternalSwap(GetServicesConfigurationsByNameRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetServicesConfigurationsByNameRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_config_2eproto_getter, &descriptor_table_config_2eproto_once,
      file_level_metadata_config_2eproto[6]);
}

// ===================================================================

class GetServicesConfigurationsByNameResponse::_Internal {
 public:
};

void GetServicesConfigurationsByNameResponse::clear_configs() {
  configs_.Clear();
}
GetServicesConfigurationsByNameResponse::GetServicesConfigurationsByNameResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  configs_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:config.GetServicesConfigurationsByNameResponse)
}
GetServicesConfigurationsByNameResponse::GetServicesConfigurationsByNameResponse(const GetServicesConfigurationsByNameResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      configs_(from.configs_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:config.GetServicesConfigurationsByNameResponse)
}

void GetServicesConfigurationsByNameResponse::SharedCtor() {
}

GetServicesConfigurationsByNameResponse::~GetServicesConfigurationsByNameResponse() {
  // @@protoc_insertion_point(destructor:config.GetServicesConfigurationsByNameResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetServicesConfigurationsByNameResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetServicesConfigurationsByNameResponse::ArenaDtor(void* object) {
  GetServicesConfigurationsByNameResponse* _this = reinterpret_cast< GetServicesConfigurationsByNameResponse* >(object);
  (void)_this;
}
void GetServicesConfigurationsByNameResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetServicesConfigurationsByNameResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetServicesConfigurationsByNameResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:config.GetServicesConfigurationsByNameResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  configs_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetServicesConfigurationsByNameResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .google.protobuf.Struct configs = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_configs(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetServicesConfigurationsByNameResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:config.GetServicesConfigurationsByNameResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.protobuf.Struct configs = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_configs_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_configs(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:config.GetServicesConfigurationsByNameResponse)
  return target;
}

size_t GetServicesConfigurationsByNameResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:config.GetServicesConfigurationsByNameResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.protobuf.Struct configs = 1;
  total_size += 1UL * this->_internal_configs_size();
  for (const auto& msg : this->configs_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetServicesConfigurationsByNameResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:config.GetServicesConfigurationsByNameResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetServicesConfigurationsByNameResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetServicesConfigurationsByNameResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:config.GetServicesConfigurationsByNameResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:config.GetServicesConfigurationsByNameResponse)
    MergeFrom(*source);
  }
}

void GetServicesConfigurationsByNameResponse::MergeFrom(const GetServicesConfigurationsByNameResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:config.GetServicesConfigurationsByNameResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  configs_.MergeFrom(from.configs_);
}

void GetServicesConfigurationsByNameResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:config.GetServicesConfigurationsByNameResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetServicesConfigurationsByNameResponse::CopyFrom(const GetServicesConfigurationsByNameResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:config.GetServicesConfigurationsByNameResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetServicesConfigurationsByNameResponse::IsInitialized() const {
  return true;
}

void GetServicesConfigurationsByNameResponse::InternalSwap(GetServicesConfigurationsByNameResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  configs_.InternalSwap(&other->configs_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetServicesConfigurationsByNameResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_config_2eproto_getter, &descriptor_table_config_2eproto_once,
      file_level_metadata_config_2eproto[7]);
}

// ===================================================================

class GetServicesConfigurationsRequest::_Internal {
 public:
};

GetServicesConfigurationsRequest::GetServicesConfigurationsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:config.GetServicesConfigurationsRequest)
}
GetServicesConfigurationsRequest::GetServicesConfigurationsRequest(const GetServicesConfigurationsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:config.GetServicesConfigurationsRequest)
}

void GetServicesConfigurationsRequest::SharedCtor() {
}

GetServicesConfigurationsRequest::~GetServicesConfigurationsRequest() {
  // @@protoc_insertion_point(destructor:config.GetServicesConfigurationsRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetServicesConfigurationsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetServicesConfigurationsRequest::ArenaDtor(void* object) {
  GetServicesConfigurationsRequest* _this = reinterpret_cast< GetServicesConfigurationsRequest* >(object);
  (void)_this;
}
void GetServicesConfigurationsRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetServicesConfigurationsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetServicesConfigurationsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:config.GetServicesConfigurationsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetServicesConfigurationsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetServicesConfigurationsRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:config.GetServicesConfigurationsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:config.GetServicesConfigurationsRequest)
  return target;
}

size_t GetServicesConfigurationsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:config.GetServicesConfigurationsRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetServicesConfigurationsRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:config.GetServicesConfigurationsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetServicesConfigurationsRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetServicesConfigurationsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:config.GetServicesConfigurationsRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:config.GetServicesConfigurationsRequest)
    MergeFrom(*source);
  }
}

void GetServicesConfigurationsRequest::MergeFrom(const GetServicesConfigurationsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:config.GetServicesConfigurationsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GetServicesConfigurationsRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:config.GetServicesConfigurationsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetServicesConfigurationsRequest::CopyFrom(const GetServicesConfigurationsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:config.GetServicesConfigurationsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetServicesConfigurationsRequest::IsInitialized() const {
  return true;
}

void GetServicesConfigurationsRequest::InternalSwap(GetServicesConfigurationsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetServicesConfigurationsRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_config_2eproto_getter, &descriptor_table_config_2eproto_once,
      file_level_metadata_config_2eproto[8]);
}

// ===================================================================

class GetServicesConfigurationsResponse::_Internal {
 public:
};

void GetServicesConfigurationsResponse::clear_configs() {
  configs_.Clear();
}
GetServicesConfigurationsResponse::GetServicesConfigurationsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  configs_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:config.GetServicesConfigurationsResponse)
}
GetServicesConfigurationsResponse::GetServicesConfigurationsResponse(const GetServicesConfigurationsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      configs_(from.configs_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:config.GetServicesConfigurationsResponse)
}

void GetServicesConfigurationsResponse::SharedCtor() {
}

GetServicesConfigurationsResponse::~GetServicesConfigurationsResponse() {
  // @@protoc_insertion_point(destructor:config.GetServicesConfigurationsResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetServicesConfigurationsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetServicesConfigurationsResponse::ArenaDtor(void* object) {
  GetServicesConfigurationsResponse* _this = reinterpret_cast< GetServicesConfigurationsResponse* >(object);
  (void)_this;
}
void GetServicesConfigurationsResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetServicesConfigurationsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetServicesConfigurationsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:config.GetServicesConfigurationsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  configs_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetServicesConfigurationsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .google.protobuf.Struct configs = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_configs(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetServicesConfigurationsResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:config.GetServicesConfigurationsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.protobuf.Struct configs = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_configs_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_configs(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:config.GetServicesConfigurationsResponse)
  return target;
}

size_t GetServicesConfigurationsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:config.GetServicesConfigurationsResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.protobuf.Struct configs = 1;
  total_size += 1UL * this->_internal_configs_size();
  for (const auto& msg : this->configs_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetServicesConfigurationsResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:config.GetServicesConfigurationsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetServicesConfigurationsResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetServicesConfigurationsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:config.GetServicesConfigurationsResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:config.GetServicesConfigurationsResponse)
    MergeFrom(*source);
  }
}

void GetServicesConfigurationsResponse::MergeFrom(const GetServicesConfigurationsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:config.GetServicesConfigurationsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  configs_.MergeFrom(from.configs_);
}

void GetServicesConfigurationsResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:config.GetServicesConfigurationsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetServicesConfigurationsResponse::CopyFrom(const GetServicesConfigurationsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:config.GetServicesConfigurationsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetServicesConfigurationsResponse::IsInitialized() const {
  return true;
}

void GetServicesConfigurationsResponse::InternalSwap(GetServicesConfigurationsResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  configs_.InternalSwap(&other->configs_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetServicesConfigurationsResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_config_2eproto_getter, &descriptor_table_config_2eproto_once,
      file_level_metadata_config_2eproto[9]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace config
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::config::SetServiceConfigurationRequest* Arena::CreateMaybeMessage< ::config::SetServiceConfigurationRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::config::SetServiceConfigurationRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::config::SetServiceConfigurationResponse* Arena::CreateMaybeMessage< ::config::SetServiceConfigurationResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::config::SetServiceConfigurationResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::config::GetServiceConfigurationRequest* Arena::CreateMaybeMessage< ::config::GetServiceConfigurationRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::config::GetServiceConfigurationRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::config::GetServiceConfigurationResponse* Arena::CreateMaybeMessage< ::config::GetServiceConfigurationResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::config::GetServiceConfigurationResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::config::GetServiceConfigurationByIdRequest* Arena::CreateMaybeMessage< ::config::GetServiceConfigurationByIdRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::config::GetServiceConfigurationByIdRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::config::GetServiceConfigurationByIdResponse* Arena::CreateMaybeMessage< ::config::GetServiceConfigurationByIdResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::config::GetServiceConfigurationByIdResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::config::GetServicesConfigurationsByNameRequest* Arena::CreateMaybeMessage< ::config::GetServicesConfigurationsByNameRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::config::GetServicesConfigurationsByNameRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::config::GetServicesConfigurationsByNameResponse* Arena::CreateMaybeMessage< ::config::GetServicesConfigurationsByNameResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::config::GetServicesConfigurationsByNameResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::config::GetServicesConfigurationsRequest* Arena::CreateMaybeMessage< ::config::GetServicesConfigurationsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::config::GetServicesConfigurationsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::config::GetServicesConfigurationsResponse* Arena::CreateMaybeMessage< ::config::GetServicesConfigurationsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::config::GetServicesConfigurationsResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
