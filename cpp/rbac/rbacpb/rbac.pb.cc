// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rbac.proto

#include "rbac.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fprotobuf_2fstruct_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2fstruct_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListValue;
}  // namespace protobuf_google_2fprotobuf_2fstruct_2eproto
namespace protobuf_rbac_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_rbac_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Permission;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_rbac_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ResourceInfos;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_rbac_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Share;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_rbac_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Permissions;
}  // namespace protobuf_rbac_2eproto
namespace rbac {
class PermissionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Permission>
      _instance;
} _Permission_default_instance_;
class PermissionsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Permissions>
      _instance;
} _Permissions_default_instance_;
class GetResourcePermissionsRqstDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetResourcePermissionsRqst>
      _instance;
} _GetResourcePermissionsRqst_default_instance_;
class GetResourcePermissionsRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetResourcePermissionsRsp>
      _instance;
} _GetResourcePermissionsRsp_default_instance_;
class DeleteResourcePermissionsRqstDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteResourcePermissionsRqst>
      _instance;
} _DeleteResourcePermissionsRqst_default_instance_;
class DeleteResourcePermissionsRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteResourcePermissionsRsp>
      _instance;
} _DeleteResourcePermissionsRsp_default_instance_;
class DeleteResourcePermissionRqstDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteResourcePermissionRqst>
      _instance;
} _DeleteResourcePermissionRqst_default_instance_;
class DeleteResourcePermissionRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteResourcePermissionRsp>
      _instance;
} _DeleteResourcePermissionRsp_default_instance_;
class SetResourcePermissionsRqstDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetResourcePermissionsRqst>
      _instance;
} _SetResourcePermissionsRqst_default_instance_;
class SetResourcePermissionsRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetResourcePermissionsRsp>
      _instance;
} _SetResourcePermissionsRsp_default_instance_;
class GetResourcePermissionRqstDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetResourcePermissionRqst>
      _instance;
} _GetResourcePermissionRqst_default_instance_;
class GetResourcePermissionRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetResourcePermissionRsp>
      _instance;
} _GetResourcePermissionRsp_default_instance_;
class SetResourcePermissionRqstDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetResourcePermissionRqst>
      _instance;
} _SetResourcePermissionRqst_default_instance_;
class SetResourcePermissionRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetResourcePermissionRsp>
      _instance;
} _SetResourcePermissionRsp_default_instance_;
class AddResourceOwnerRqstDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AddResourceOwnerRqst>
      _instance;
} _AddResourceOwnerRqst_default_instance_;
class AddResourceOwnerRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AddResourceOwnerRsp>
      _instance;
} _AddResourceOwnerRsp_default_instance_;
class RemoveResourceOwnerRqstDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RemoveResourceOwnerRqst>
      _instance;
} _RemoveResourceOwnerRqst_default_instance_;
class RemoveResourceOwnerRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RemoveResourceOwnerRsp>
      _instance;
} _RemoveResourceOwnerRsp_default_instance_;
class DeleteAllAccessRqstDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteAllAccessRqst>
      _instance;
} _DeleteAllAccessRqst_default_instance_;
class DeleteAllAccessRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteAllAccessRsp>
      _instance;
} _DeleteAllAccessRsp_default_instance_;
class ValidateAccessRqstDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ValidateAccessRqst>
      _instance;
} _ValidateAccessRqst_default_instance_;
class ValidateAccessRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ValidateAccessRsp>
      _instance;
} _ValidateAccessRsp_default_instance_;
class GetActionResourceInfosRqstDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetActionResourceInfosRqst>
      _instance;
} _GetActionResourceInfosRqst_default_instance_;
class ResourceInfosDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ResourceInfos>
      _instance;
} _ResourceInfos_default_instance_;
class GetActionResourceInfosRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetActionResourceInfosRsp>
      _instance;
} _GetActionResourceInfosRsp_default_instance_;
class ValidateActionRqstDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ValidateActionRqst>
      _instance;
} _ValidateActionRqst_default_instance_;
class ValidateActionRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ValidateActionRsp>
      _instance;
} _ValidateActionRsp_default_instance_;
class SetActionResourcesPermissionsRqstDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetActionResourcesPermissionsRqst>
      _instance;
} _SetActionResourcesPermissionsRqst_default_instance_;
class SetActionResourcesPermissionsRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetActionResourcesPermissionsRsp>
      _instance;
} _SetActionResourcesPermissionsRsp_default_instance_;
class ShareDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Share>
      _instance;
} _Share_default_instance_;
class ShareResourceRqstDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ShareResourceRqst>
      _instance;
} _ShareResourceRqst_default_instance_;
class ShareResourceRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ShareResourceRsp>
      _instance;
} _ShareResourceRsp_default_instance_;
class UnshareResourceRqstDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UnshareResourceRqst>
      _instance;
} _UnshareResourceRqst_default_instance_;
class UnshareResourceRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UnshareResourceRsp>
      _instance;
} _UnshareResourceRsp_default_instance_;
class GetSharedResourceRqstDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetSharedResourceRqst>
      _instance;
} _GetSharedResourceRqst_default_instance_;
class GetSharedResourceRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetSharedResourceRsp>
      _instance;
} _GetSharedResourceRsp_default_instance_;
class RemoveSubjectFromShareRqstDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RemoveSubjectFromShareRqst>
      _instance;
} _RemoveSubjectFromShareRqst_default_instance_;
class RemoveSubjectFromShareRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RemoveSubjectFromShareRsp>
      _instance;
} _RemoveSubjectFromShareRsp_default_instance_;
class DeleteSubjectShareRqstDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteSubjectShareRqst>
      _instance;
} _DeleteSubjectShareRqst_default_instance_;
class DeleteSubjectShareRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteSubjectShareRsp>
      _instance;
} _DeleteSubjectShareRsp_default_instance_;
}  // namespace rbac
namespace protobuf_rbac_2eproto {
static void InitDefaultsPermission() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rbac::_Permission_default_instance_;
    new (ptr) ::rbac::Permission();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rbac::Permission::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Permission =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPermission}, {}};

static void InitDefaultsPermissions() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rbac::_Permissions_default_instance_;
    new (ptr) ::rbac::Permissions();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rbac::Permissions::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Permissions =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPermissions}, {
      &protobuf_rbac_2eproto::scc_info_Permission.base,}};

static void InitDefaultsGetResourcePermissionsRqst() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rbac::_GetResourcePermissionsRqst_default_instance_;
    new (ptr) ::rbac::GetResourcePermissionsRqst();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rbac::GetResourcePermissionsRqst::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetResourcePermissionsRqst =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetResourcePermissionsRqst}, {}};

static void InitDefaultsGetResourcePermissionsRsp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rbac::_GetResourcePermissionsRsp_default_instance_;
    new (ptr) ::rbac::GetResourcePermissionsRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rbac::GetResourcePermissionsRsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GetResourcePermissionsRsp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGetResourcePermissionsRsp}, {
      &protobuf_rbac_2eproto::scc_info_Permissions.base,}};

static void InitDefaultsDeleteResourcePermissionsRqst() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rbac::_DeleteResourcePermissionsRqst_default_instance_;
    new (ptr) ::rbac::DeleteResourcePermissionsRqst();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rbac::DeleteResourcePermissionsRqst::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DeleteResourcePermissionsRqst =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeleteResourcePermissionsRqst}, {}};

static void InitDefaultsDeleteResourcePermissionsRsp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rbac::_DeleteResourcePermissionsRsp_default_instance_;
    new (ptr) ::rbac::DeleteResourcePermissionsRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rbac::DeleteResourcePermissionsRsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DeleteResourcePermissionsRsp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDeleteResourcePermissionsRsp}, {
      &protobuf_rbac_2eproto::scc_info_Permissions.base,}};

static void InitDefaultsDeleteResourcePermissionRqst() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rbac::_DeleteResourcePermissionRqst_default_instance_;
    new (ptr) ::rbac::DeleteResourcePermissionRqst();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rbac::DeleteResourcePermissionRqst::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DeleteResourcePermissionRqst =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeleteResourcePermissionRqst}, {}};

static void InitDefaultsDeleteResourcePermissionRsp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rbac::_DeleteResourcePermissionRsp_default_instance_;
    new (ptr) ::rbac::DeleteResourcePermissionRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rbac::DeleteResourcePermissionRsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DeleteResourcePermissionRsp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeleteResourcePermissionRsp}, {}};

static void InitDefaultsSetResourcePermissionsRqst() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rbac::_SetResourcePermissionsRqst_default_instance_;
    new (ptr) ::rbac::SetResourcePermissionsRqst();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rbac::SetResourcePermissionsRqst::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SetResourcePermissionsRqst =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSetResourcePermissionsRqst}, {
      &protobuf_rbac_2eproto::scc_info_Permissions.base,}};

static void InitDefaultsSetResourcePermissionsRsp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rbac::_SetResourcePermissionsRsp_default_instance_;
    new (ptr) ::rbac::SetResourcePermissionsRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rbac::SetResourcePermissionsRsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SetResourcePermissionsRsp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSetResourcePermissionsRsp}, {}};

static void InitDefaultsGetResourcePermissionRqst() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rbac::_GetResourcePermissionRqst_default_instance_;
    new (ptr) ::rbac::GetResourcePermissionRqst();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rbac::GetResourcePermissionRqst::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetResourcePermissionRqst =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetResourcePermissionRqst}, {}};

static void InitDefaultsGetResourcePermissionRsp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rbac::_GetResourcePermissionRsp_default_instance_;
    new (ptr) ::rbac::GetResourcePermissionRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rbac::GetResourcePermissionRsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GetResourcePermissionRsp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGetResourcePermissionRsp}, {
      &protobuf_rbac_2eproto::scc_info_Permission.base,}};

static void InitDefaultsSetResourcePermissionRqst() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rbac::_SetResourcePermissionRqst_default_instance_;
    new (ptr) ::rbac::SetResourcePermissionRqst();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rbac::SetResourcePermissionRqst::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SetResourcePermissionRqst =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSetResourcePermissionRqst}, {
      &protobuf_rbac_2eproto::scc_info_Permission.base,}};

static void InitDefaultsSetResourcePermissionRsp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rbac::_SetResourcePermissionRsp_default_instance_;
    new (ptr) ::rbac::SetResourcePermissionRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rbac::SetResourcePermissionRsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SetResourcePermissionRsp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSetResourcePermissionRsp}, {}};

static void InitDefaultsAddResourceOwnerRqst() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rbac::_AddResourceOwnerRqst_default_instance_;
    new (ptr) ::rbac::AddResourceOwnerRqst();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rbac::AddResourceOwnerRqst::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AddResourceOwnerRqst =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAddResourceOwnerRqst}, {}};

static void InitDefaultsAddResourceOwnerRsp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rbac::_AddResourceOwnerRsp_default_instance_;
    new (ptr) ::rbac::AddResourceOwnerRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rbac::AddResourceOwnerRsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AddResourceOwnerRsp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAddResourceOwnerRsp}, {}};

static void InitDefaultsRemoveResourceOwnerRqst() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rbac::_RemoveResourceOwnerRqst_default_instance_;
    new (ptr) ::rbac::RemoveResourceOwnerRqst();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rbac::RemoveResourceOwnerRqst::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RemoveResourceOwnerRqst =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRemoveResourceOwnerRqst}, {}};

static void InitDefaultsRemoveResourceOwnerRsp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rbac::_RemoveResourceOwnerRsp_default_instance_;
    new (ptr) ::rbac::RemoveResourceOwnerRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rbac::RemoveResourceOwnerRsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RemoveResourceOwnerRsp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRemoveResourceOwnerRsp}, {}};

static void InitDefaultsDeleteAllAccessRqst() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rbac::_DeleteAllAccessRqst_default_instance_;
    new (ptr) ::rbac::DeleteAllAccessRqst();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rbac::DeleteAllAccessRqst::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DeleteAllAccessRqst =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeleteAllAccessRqst}, {}};

static void InitDefaultsDeleteAllAccessRsp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rbac::_DeleteAllAccessRsp_default_instance_;
    new (ptr) ::rbac::DeleteAllAccessRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rbac::DeleteAllAccessRsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DeleteAllAccessRsp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeleteAllAccessRsp}, {}};

static void InitDefaultsValidateAccessRqst() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rbac::_ValidateAccessRqst_default_instance_;
    new (ptr) ::rbac::ValidateAccessRqst();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rbac::ValidateAccessRqst::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ValidateAccessRqst =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsValidateAccessRqst}, {}};

static void InitDefaultsValidateAccessRsp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rbac::_ValidateAccessRsp_default_instance_;
    new (ptr) ::rbac::ValidateAccessRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rbac::ValidateAccessRsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ValidateAccessRsp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsValidateAccessRsp}, {}};

static void InitDefaultsGetActionResourceInfosRqst() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rbac::_GetActionResourceInfosRqst_default_instance_;
    new (ptr) ::rbac::GetActionResourceInfosRqst();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rbac::GetActionResourceInfosRqst::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetActionResourceInfosRqst =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetActionResourceInfosRqst}, {}};

static void InitDefaultsResourceInfos() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rbac::_ResourceInfos_default_instance_;
    new (ptr) ::rbac::ResourceInfos();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rbac::ResourceInfos::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ResourceInfos =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsResourceInfos}, {}};

static void InitDefaultsGetActionResourceInfosRsp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rbac::_GetActionResourceInfosRsp_default_instance_;
    new (ptr) ::rbac::GetActionResourceInfosRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rbac::GetActionResourceInfosRsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GetActionResourceInfosRsp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGetActionResourceInfosRsp}, {
      &protobuf_rbac_2eproto::scc_info_ResourceInfos.base,}};

static void InitDefaultsValidateActionRqst() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rbac::_ValidateActionRqst_default_instance_;
    new (ptr) ::rbac::ValidateActionRqst();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rbac::ValidateActionRqst::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ValidateActionRqst =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsValidateActionRqst}, {
      &protobuf_rbac_2eproto::scc_info_ResourceInfos.base,}};

static void InitDefaultsValidateActionRsp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rbac::_ValidateActionRsp_default_instance_;
    new (ptr) ::rbac::ValidateActionRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rbac::ValidateActionRsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ValidateActionRsp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsValidateActionRsp}, {}};

static void InitDefaultsSetActionResourcesPermissionsRqst() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rbac::_SetActionResourcesPermissionsRqst_default_instance_;
    new (ptr) ::rbac::SetActionResourcesPermissionsRqst();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rbac::SetActionResourcesPermissionsRqst::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SetActionResourcesPermissionsRqst =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSetActionResourcesPermissionsRqst}, {
      &protobuf_google_2fprotobuf_2fstruct_2eproto::scc_info_ListValue.base,}};

static void InitDefaultsSetActionResourcesPermissionsRsp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rbac::_SetActionResourcesPermissionsRsp_default_instance_;
    new (ptr) ::rbac::SetActionResourcesPermissionsRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rbac::SetActionResourcesPermissionsRsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SetActionResourcesPermissionsRsp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSetActionResourcesPermissionsRsp}, {}};

static void InitDefaultsShare() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rbac::_Share_default_instance_;
    new (ptr) ::rbac::Share();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rbac::Share::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Share =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsShare}, {}};

static void InitDefaultsShareResourceRqst() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rbac::_ShareResourceRqst_default_instance_;
    new (ptr) ::rbac::ShareResourceRqst();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rbac::ShareResourceRqst::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ShareResourceRqst =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsShareResourceRqst}, {
      &protobuf_rbac_2eproto::scc_info_Share.base,}};

static void InitDefaultsShareResourceRsp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rbac::_ShareResourceRsp_default_instance_;
    new (ptr) ::rbac::ShareResourceRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rbac::ShareResourceRsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ShareResourceRsp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsShareResourceRsp}, {}};

static void InitDefaultsUnshareResourceRqst() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rbac::_UnshareResourceRqst_default_instance_;
    new (ptr) ::rbac::UnshareResourceRqst();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rbac::UnshareResourceRqst::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UnshareResourceRqst =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUnshareResourceRqst}, {
      &protobuf_rbac_2eproto::scc_info_Share.base,}};

static void InitDefaultsUnshareResourceRsp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rbac::_UnshareResourceRsp_default_instance_;
    new (ptr) ::rbac::UnshareResourceRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rbac::UnshareResourceRsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UnshareResourceRsp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUnshareResourceRsp}, {}};

static void InitDefaultsGetSharedResourceRqst() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rbac::_GetSharedResourceRqst_default_instance_;
    new (ptr) ::rbac::GetSharedResourceRqst();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rbac::GetSharedResourceRqst::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetSharedResourceRqst =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetSharedResourceRqst}, {}};

static void InitDefaultsGetSharedResourceRsp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rbac::_GetSharedResourceRsp_default_instance_;
    new (ptr) ::rbac::GetSharedResourceRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rbac::GetSharedResourceRsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GetSharedResourceRsp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGetSharedResourceRsp}, {
      &protobuf_rbac_2eproto::scc_info_Share.base,}};

static void InitDefaultsRemoveSubjectFromShareRqst() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rbac::_RemoveSubjectFromShareRqst_default_instance_;
    new (ptr) ::rbac::RemoveSubjectFromShareRqst();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rbac::RemoveSubjectFromShareRqst::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RemoveSubjectFromShareRqst =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRemoveSubjectFromShareRqst}, {}};

static void InitDefaultsRemoveSubjectFromShareRsp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rbac::_RemoveSubjectFromShareRsp_default_instance_;
    new (ptr) ::rbac::RemoveSubjectFromShareRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rbac::RemoveSubjectFromShareRsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RemoveSubjectFromShareRsp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRemoveSubjectFromShareRsp}, {}};

static void InitDefaultsDeleteSubjectShareRqst() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rbac::_DeleteSubjectShareRqst_default_instance_;
    new (ptr) ::rbac::DeleteSubjectShareRqst();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rbac::DeleteSubjectShareRqst::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DeleteSubjectShareRqst =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeleteSubjectShareRqst}, {}};

static void InitDefaultsDeleteSubjectShareRsp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rbac::_DeleteSubjectShareRsp_default_instance_;
    new (ptr) ::rbac::DeleteSubjectShareRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rbac::DeleteSubjectShareRsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DeleteSubjectShareRsp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeleteSubjectShareRsp}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Permission.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Permissions.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetResourcePermissionsRqst.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetResourcePermissionsRsp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeleteResourcePermissionsRqst.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeleteResourcePermissionsRsp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeleteResourcePermissionRqst.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeleteResourcePermissionRsp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SetResourcePermissionsRqst.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SetResourcePermissionsRsp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetResourcePermissionRqst.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetResourcePermissionRsp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SetResourcePermissionRqst.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SetResourcePermissionRsp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AddResourceOwnerRqst.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AddResourceOwnerRsp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RemoveResourceOwnerRqst.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RemoveResourceOwnerRsp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeleteAllAccessRqst.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeleteAllAccessRsp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ValidateAccessRqst.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ValidateAccessRsp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetActionResourceInfosRqst.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ResourceInfos.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetActionResourceInfosRsp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ValidateActionRqst.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ValidateActionRsp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SetActionResourcesPermissionsRqst.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SetActionResourcesPermissionsRsp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Share.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ShareResourceRqst.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ShareResourceRsp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UnshareResourceRqst.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UnshareResourceRsp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetSharedResourceRqst.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetSharedResourceRsp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RemoveSubjectFromShareRqst.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RemoveSubjectFromShareRsp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeleteSubjectShareRqst.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeleteSubjectShareRsp.base);
}

::google::protobuf::Metadata file_level_metadata[40];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbac::Permission, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbac::Permission, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbac::Permission, applications_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbac::Permission, peers_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbac::Permission, accounts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbac::Permission, groups_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbac::Permission, organizations_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbac::Permissions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbac::Permissions, owners_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbac::Permissions, allowed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbac::Permissions, denied_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbac::GetResourcePermissionsRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbac::GetResourcePermissionsRqst, path_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbac::GetResourcePermissionsRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbac::GetResourcePermissionsRsp, permissions_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbac::DeleteResourcePermissionsRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbac::DeleteResourcePermissionsRqst, path_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbac::DeleteResourcePermissionsRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbac::DeleteResourcePermissionsRsp, permissions_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbac::DeleteResourcePermissionRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbac::DeleteResourcePermissionRqst, path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbac::DeleteResourcePermissionRqst, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbac::DeleteResourcePermissionRqst, type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbac::DeleteResourcePermissionRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbac::SetResourcePermissionsRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbac::SetResourcePermissionsRqst, path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbac::SetResourcePermissionsRqst, permissions_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbac::SetResourcePermissionsRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbac::GetResourcePermissionRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbac::GetResourcePermissionRqst, path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbac::GetResourcePermissionRqst, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbac::GetResourcePermissionRqst, type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbac::GetResourcePermissionRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbac::GetResourcePermissionRsp, permission_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbac::SetResourcePermissionRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbac::SetResourcePermissionRqst, path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbac::SetResourcePermissionRqst, permission_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbac::SetResourcePermissionRqst, type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbac::SetResourcePermissionRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbac::AddResourceOwnerRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbac::AddResourceOwnerRqst, path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbac::AddResourceOwnerRqst, subject_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbac::AddResourceOwnerRqst, type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbac::AddResourceOwnerRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbac::RemoveResourceOwnerRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbac::RemoveResourceOwnerRqst, path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbac::RemoveResourceOwnerRqst, subject_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbac::RemoveResourceOwnerRqst, type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbac::RemoveResourceOwnerRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbac::DeleteAllAccessRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbac::DeleteAllAccessRqst, subject_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbac::DeleteAllAccessRqst, type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbac::DeleteAllAccessRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbac::ValidateAccessRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbac::ValidateAccessRqst, subject_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbac::ValidateAccessRqst, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbac::ValidateAccessRqst, path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbac::ValidateAccessRqst, permission_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbac::ValidateAccessRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbac::ValidateAccessRsp, hasaccess_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbac::ValidateAccessRsp, accessdenied_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbac::GetActionResourceInfosRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbac::GetActionResourceInfosRqst, action_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbac::ResourceInfos, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbac::ResourceInfos, index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbac::ResourceInfos, permission_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbac::ResourceInfos, path_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbac::GetActionResourceInfosRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbac::GetActionResourceInfosRsp, infos_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbac::ValidateActionRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbac::ValidateActionRqst, subject_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbac::ValidateActionRqst, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbac::ValidateActionRqst, action_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbac::ValidateActionRqst, infos_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbac::ValidateActionRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbac::ValidateActionRsp, result_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbac::SetActionResourcesPermissionsRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbac::SetActionResourcesPermissionsRqst, permissions_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbac::SetActionResourcesPermissionsRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbac::Share, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbac::Share, path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbac::Share, domain_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbac::Share, applications_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbac::Share, peers_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbac::Share, accounts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbac::Share, groups_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbac::Share, organizations_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbac::ShareResourceRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbac::ShareResourceRqst, share_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbac::ShareResourceRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbac::UnshareResourceRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbac::UnshareResourceRqst, share_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbac::UnshareResourceRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbac::GetSharedResourceRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbac::GetSharedResourceRqst, subject_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbac::GetSharedResourceRqst, type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbac::GetSharedResourceRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbac::GetSharedResourceRsp, sharedresource_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbac::RemoveSubjectFromShareRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbac::RemoveSubjectFromShareRqst, subject_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbac::RemoveSubjectFromShareRqst, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbac::RemoveSubjectFromShareRqst, domain_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbac::RemoveSubjectFromShareRqst, path_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbac::RemoveSubjectFromShareRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbac::DeleteSubjectShareRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbac::DeleteSubjectShareRqst, subject_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbac::DeleteSubjectShareRqst, type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbac::DeleteSubjectShareRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::rbac::Permission)},
  { 11, -1, sizeof(::rbac::Permissions)},
  { 19, -1, sizeof(::rbac::GetResourcePermissionsRqst)},
  { 25, -1, sizeof(::rbac::GetResourcePermissionsRsp)},
  { 31, -1, sizeof(::rbac::DeleteResourcePermissionsRqst)},
  { 37, -1, sizeof(::rbac::DeleteResourcePermissionsRsp)},
  { 43, -1, sizeof(::rbac::DeleteResourcePermissionRqst)},
  { 51, -1, sizeof(::rbac::DeleteResourcePermissionRsp)},
  { 56, -1, sizeof(::rbac::SetResourcePermissionsRqst)},
  { 63, -1, sizeof(::rbac::SetResourcePermissionsRsp)},
  { 68, -1, sizeof(::rbac::GetResourcePermissionRqst)},
  { 76, -1, sizeof(::rbac::GetResourcePermissionRsp)},
  { 82, -1, sizeof(::rbac::SetResourcePermissionRqst)},
  { 90, -1, sizeof(::rbac::SetResourcePermissionRsp)},
  { 95, -1, sizeof(::rbac::AddResourceOwnerRqst)},
  { 103, -1, sizeof(::rbac::AddResourceOwnerRsp)},
  { 108, -1, sizeof(::rbac::RemoveResourceOwnerRqst)},
  { 116, -1, sizeof(::rbac::RemoveResourceOwnerRsp)},
  { 121, -1, sizeof(::rbac::DeleteAllAccessRqst)},
  { 128, -1, sizeof(::rbac::DeleteAllAccessRsp)},
  { 133, -1, sizeof(::rbac::ValidateAccessRqst)},
  { 142, -1, sizeof(::rbac::ValidateAccessRsp)},
  { 149, -1, sizeof(::rbac::GetActionResourceInfosRqst)},
  { 155, -1, sizeof(::rbac::ResourceInfos)},
  { 163, -1, sizeof(::rbac::GetActionResourceInfosRsp)},
  { 169, -1, sizeof(::rbac::ValidateActionRqst)},
  { 178, -1, sizeof(::rbac::ValidateActionRsp)},
  { 184, -1, sizeof(::rbac::SetActionResourcesPermissionsRqst)},
  { 190, -1, sizeof(::rbac::SetActionResourcesPermissionsRsp)},
  { 195, -1, sizeof(::rbac::Share)},
  { 207, -1, sizeof(::rbac::ShareResourceRqst)},
  { 213, -1, sizeof(::rbac::ShareResourceRsp)},
  { 218, -1, sizeof(::rbac::UnshareResourceRqst)},
  { 224, -1, sizeof(::rbac::UnshareResourceRsp)},
  { 229, -1, sizeof(::rbac::GetSharedResourceRqst)},
  { 236, -1, sizeof(::rbac::GetSharedResourceRsp)},
  { 242, -1, sizeof(::rbac::RemoveSubjectFromShareRqst)},
  { 251, -1, sizeof(::rbac::RemoveSubjectFromShareRsp)},
  { 256, -1, sizeof(::rbac::DeleteSubjectShareRqst)},
  { 263, -1, sizeof(::rbac::DeleteSubjectShareRsp)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::rbac::_Permission_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rbac::_Permissions_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rbac::_GetResourcePermissionsRqst_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rbac::_GetResourcePermissionsRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rbac::_DeleteResourcePermissionsRqst_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rbac::_DeleteResourcePermissionsRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rbac::_DeleteResourcePermissionRqst_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rbac::_DeleteResourcePermissionRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rbac::_SetResourcePermissionsRqst_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rbac::_SetResourcePermissionsRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rbac::_GetResourcePermissionRqst_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rbac::_GetResourcePermissionRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rbac::_SetResourcePermissionRqst_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rbac::_SetResourcePermissionRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rbac::_AddResourceOwnerRqst_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rbac::_AddResourceOwnerRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rbac::_RemoveResourceOwnerRqst_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rbac::_RemoveResourceOwnerRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rbac::_DeleteAllAccessRqst_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rbac::_DeleteAllAccessRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rbac::_ValidateAccessRqst_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rbac::_ValidateAccessRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rbac::_GetActionResourceInfosRqst_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rbac::_ResourceInfos_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rbac::_GetActionResourceInfosRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rbac::_ValidateActionRqst_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rbac::_ValidateActionRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rbac::_SetActionResourcesPermissionsRqst_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rbac::_SetActionResourcesPermissionsRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rbac::_Share_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rbac::_ShareResourceRqst_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rbac::_ShareResourceRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rbac::_UnshareResourceRqst_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rbac::_UnshareResourceRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rbac::_GetSharedResourceRqst_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rbac::_GetSharedResourceRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rbac::_RemoveSubjectFromShareRqst_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rbac::_RemoveSubjectFromShareRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rbac::_DeleteSubjectShareRqst_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rbac::_DeleteSubjectShareRsp_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "rbac.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 40);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\nrbac.proto\022\004rbac\032\034google/protobuf/stru"
      "ct.proto\"x\n\nPermission\022\014\n\004name\030\001 \001(\t\022\024\n\014"
      "applications\030\002 \003(\t\022\r\n\005peers\030\003 \003(\t\022\020\n\010acc"
      "ounts\030\004 \003(\t\022\016\n\006groups\030\005 \003(\t\022\025\n\rorganizat"
      "ions\030\006 \003(\t\"t\n\013Permissions\022 \n\006owners\030\001 \001("
      "\0132\020.rbac.Permission\022!\n\007allowed\030\002 \003(\0132\020.r"
      "bac.Permission\022 \n\006denied\030\003 \003(\0132\020.rbac.Pe"
      "rmission\"*\n\032GetResourcePermissionsRqst\022\014"
      "\n\004path\030\001 \001(\t\"C\n\031GetResourcePermissionsRs"
      "p\022&\n\013permissions\030\001 \001(\0132\021.rbac.Permission"
      "s\"-\n\035DeleteResourcePermissionsRqst\022\014\n\004pa"
      "th\030\001 \001(\t\"F\n\034DeleteResourcePermissionsRsp"
      "\022&\n\013permissions\030\001 \001(\0132\021.rbac.Permissions"
      "\"^\n\034DeleteResourcePermissionRqst\022\014\n\004path"
      "\030\001 \001(\t\022\014\n\004name\030\002 \001(\t\022\"\n\004type\030\003 \001(\0162\024.rba"
      "c.PermissionType\"\035\n\033DeleteResourcePermis"
      "sionRsp\"R\n\032SetResourcePermissionsRqst\022\014\n"
      "\004path\030\001 \001(\t\022&\n\013permissions\030\002 \001(\0132\021.rbac."
      "Permissions\"\033\n\031SetResourcePermissionsRsp"
      "\"[\n\031GetResourcePermissionRqst\022\014\n\004path\030\001 "
      "\001(\t\022\014\n\004name\030\002 \001(\t\022\"\n\004type\030\003 \001(\0162\024.rbac.P"
      "ermissionType\"@\n\030GetResourcePermissionRs"
      "p\022$\n\npermission\030\001 \001(\0132\020.rbac.Permission\""
      "s\n\031SetResourcePermissionRqst\022\014\n\004path\030\001 \001"
      "(\t\022$\n\npermission\030\002 \001(\0132\020.rbac.Permission"
      "\022\"\n\004type\030\003 \001(\0162\024.rbac.PermissionType\"\032\n\030"
      "SetResourcePermissionRsp\"V\n\024AddResourceO"
      "wnerRqst\022\014\n\004path\030\001 \001(\t\022\017\n\007subject\030\002 \001(\t\022"
      "\037\n\004type\030\003 \001(\0162\021.rbac.SubjectType\"\025\n\023AddR"
      "esourceOwnerRsp\"Y\n\027RemoveResourceOwnerRq"
      "st\022\014\n\004path\030\001 \001(\t\022\017\n\007subject\030\002 \001(\t\022\037\n\004typ"
      "e\030\003 \001(\0162\021.rbac.SubjectType\"\030\n\026RemoveReso"
      "urceOwnerRsp\"G\n\023DeleteAllAccessRqst\022\017\n\007s"
      "ubject\030\001 \001(\t\022\037\n\004type\030\002 \001(\0162\021.rbac.Subjec"
      "tType\"\024\n\022DeleteAllAccessRsp\"h\n\022ValidateA"
      "ccessRqst\022\017\n\007subject\030\001 \001(\t\022\037\n\004type\030\002 \001(\016"
      "2\021.rbac.SubjectType\022\014\n\004path\030\003 \001(\t\022\022\n\nper"
      "mission\030\004 \001(\t\"<\n\021ValidateAccessRsp\022\021\n\tha"
      "sAccess\030\001 \001(\010\022\024\n\014accessDenied\030\002 \001(\010\",\n\032G"
      "etActionResourceInfosRqst\022\016\n\006action\030\001 \001("
      "\t\"@\n\rResourceInfos\022\r\n\005index\030\001 \001(\005\022\022\n\nper"
      "mission\030\002 \001(\t\022\014\n\004path\030\003 \001(\t\"\?\n\031GetAction"
      "ResourceInfosRsp\022\"\n\005infos\030\001 \003(\0132\023.rbac.R"
      "esourceInfos\"z\n\022ValidateActionRqst\022\017\n\007su"
      "bject\030\001 \001(\t\022\037\n\004type\030\002 \001(\0162\021.rbac.Subject"
      "Type\022\016\n\006action\030\003 \001(\t\022\"\n\005infos\030\004 \003(\0132\023.rb"
      "ac.ResourceInfos\"#\n\021ValidateActionRsp\022\016\n"
      "\006result\030\001 \001(\010\"Q\n!SetActionResourcesPermi"
      "ssionsRqst\022,\n\013permissions\030\001 \001(\0132\027.google"
      ".protobuf.Struct\"\"\n SetActionResourcesPe"
      "rmissionsRsp\"\203\001\n\005Share\022\014\n\004path\030\001 \001(\t\022\016\n\006"
      "domain\030\002 \001(\t\022\024\n\014applications\030\003 \003(\t\022\r\n\005pe"
      "ers\030\004 \003(\t\022\020\n\010accounts\030\005 \003(\t\022\016\n\006groups\030\006 "
      "\003(\t\022\025\n\rorganizations\030\007 \003(\t\"/\n\021ShareResou"
      "rceRqst\022\032\n\005share\030\001 \001(\0132\013.rbac.Share\"\022\n\020S"
      "hareResourceRsp\"1\n\023UnshareResourceRqst\022\032"
      "\n\005share\030\001 \001(\0132\013.rbac.Share\"\024\n\022UnshareRes"
      "ourceRsp\"I\n\025GetSharedResourceRqst\022\017\n\007sub"
      "ject\030\001 \001(\t\022\037\n\004type\030\002 \001(\0162\021.rbac.SubjectT"
      "ype\";\n\024GetSharedResourceRsp\022#\n\016sharedRes"
      "ource\030\001 \003(\0132\013.rbac.Share\"l\n\032RemoveSubjec"
      "tFromShareRqst\022\017\n\007subject\030\001 \001(\t\022\037\n\004type\030"
      "\002 \001(\0162\021.rbac.SubjectType\022\016\n\006domain\030\003 \001(\t"
      "\022\014\n\004path\030\004 \001(\t\"\033\n\031RemoveSubjectFromShare"
      "Rsp\"J\n\026DeleteSubjectShareRqst\022\017\n\007subject"
      "\030\001 \001(\t\022\037\n\004type\030\002 \001(\0162\021.rbac.SubjectType\""
      "\027\n\025DeleteSubjectShareRsp*)\n\016PermissionTy"
      "pe\022\n\n\006DENIED\020\000\022\013\n\007ALLOWED\020\001*\\\n\013SubjectTy"
      "pe\022\013\n\007ACCOUNT\020\000\022\010\n\004PEER\020\001\022\t\n\005GROUP\020\002\022\020\n\014"
      "ORGANIZATION\020\003\022\017\n\013APPLICATION\020\004\022\010\n\004ROLE\020"
      "\0052\214\014\n\013RbacService\022\\\n\026SetResourcePermissi"
      "ons\022 .rbac.SetResourcePermissionsRqst\032 ."
      "rbac.SetResourcePermissionsRqst\022e\n\031Delet"
      "eResourcePermissions\022#.rbac.DeleteResour"
      "cePermissionsRqst\032#.rbac.DeleteResourceP"
      "ermissionsRqst\022b\n\030DeleteResourcePermissi"
      "on\022\".rbac.DeleteResourcePermissionRqst\032\""
      ".rbac.DeleteResourcePermissionRqst\022X\n\025Ge"
      "tResourcePermission\022\037.rbac.GetResourcePe"
      "rmissionRqst\032\036.rbac.GetResourcePermissio"
      "nRsp\022X\n\025SetResourcePermission\022\037.rbac.Set"
      "ResourcePermissionRqst\032\036.rbac.SetResourc"
      "ePermissionRsp\022[\n\026GetResourcePermissions"
      "\022 .rbac.GetResourcePermissionsRqst\032\037.rba"
      "c.GetResourcePermissionsRsp\022I\n\020AddResour"
      "ceOwner\022\032.rbac.AddResourceOwnerRqst\032\031.rb"
      "ac.AddResourceOwnerRsp\022R\n\023RemoveResource"
      "Owner\022\035.rbac.RemoveResourceOwnerRqst\032\034.r"
      "bac.RemoveResourceOwnerRsp\022F\n\017DeleteAllA"
      "ccess\022\031.rbac.DeleteAllAccessRqst\032\030.rbac."
      "DeleteAllAccessRsp\022C\n\016ValidateAccess\022\030.r"
      "bac.ValidateAccessRqst\032\027.rbac.ValidateAc"
      "cessRsp\022p\n\035SetActionResourcesPermissions"
      "\022\'.rbac.SetActionResourcesPermissionsRqs"
      "t\032&.rbac.SetActionResourcesPermissionsRs"
      "p\022[\n\026GetActionResourceInfos\022 .rbac.GetAc"
      "tionResourceInfosRqst\032\037.rbac.GetActionRe"
      "sourceInfosRsp\022C\n\016ValidateAction\022\030.rbac."
      "ValidateActionRqst\032\027.rbac.ValidateAction"
      "Rsp\022@\n\rShareResource\022\027.rbac.ShareResourc"
      "eRqst\032\026.rbac.ShareResourceRsp\022E\n\016UshareR"
      "esource\022\031.rbac.UnshareResourceRqst\032\030.rba"
      "c.UnshareResourceRsp\022L\n\021GetSharedResourc"
      "e\022\033.rbac.GetSharedResourceRqst\032\032.rbac.Ge"
      "tSharedResourceRsp\022[\n\026RemoveSubjectFromS"
      "hare\022 .rbac.RemoveSubjectFromShareRqst\032\037"
      ".rbac.RemoveSubjectFromShareRsp\022O\n\022Delet"
      "eSubjectShare\022\034.rbac.DeleteSubjectShareR"
      "qst\032\033.rbac.DeleteSubjectShareRspB\rZ\013rbac"
      "/rbacpbb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 4375);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "rbac.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fprotobuf_2fstruct_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_rbac_2eproto
namespace rbac {
const ::google::protobuf::EnumDescriptor* PermissionType_descriptor() {
  protobuf_rbac_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_rbac_2eproto::file_level_enum_descriptors[0];
}
bool PermissionType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* SubjectType_descriptor() {
  protobuf_rbac_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_rbac_2eproto::file_level_enum_descriptors[1];
}
bool SubjectType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void Permission::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Permission::kNameFieldNumber;
const int Permission::kApplicationsFieldNumber;
const int Permission::kPeersFieldNumber;
const int Permission::kAccountsFieldNumber;
const int Permission::kGroupsFieldNumber;
const int Permission::kOrganizationsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Permission::Permission()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rbac_2eproto::scc_info_Permission.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rbac.Permission)
}
Permission::Permission(const Permission& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      applications_(from.applications_),
      peers_(from.peers_),
      accounts_(from.accounts_),
      groups_(from.groups_),
      organizations_(from.organizations_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:rbac.Permission)
}

void Permission::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Permission::~Permission() {
  // @@protoc_insertion_point(destructor:rbac.Permission)
  SharedDtor();
}

void Permission::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Permission::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Permission::descriptor() {
  ::protobuf_rbac_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rbac_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Permission& Permission::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rbac_2eproto::scc_info_Permission.base);
  return *internal_default_instance();
}


void Permission::Clear() {
// @@protoc_insertion_point(message_clear_start:rbac.Permission)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  applications_.Clear();
  peers_.Clear();
  accounts_.Clear();
  groups_.Clear();
  organizations_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Permission::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rbac.Permission)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rbac.Permission.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string applications = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_applications()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->applications(this->applications_size() - 1).data(),
            static_cast<int>(this->applications(this->applications_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rbac.Permission.applications"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string peers = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_peers()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->peers(this->peers_size() - 1).data(),
            static_cast<int>(this->peers(this->peers_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rbac.Permission.peers"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string accounts = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_accounts()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->accounts(this->accounts_size() - 1).data(),
            static_cast<int>(this->accounts(this->accounts_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rbac.Permission.accounts"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string groups = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_groups()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->groups(this->groups_size() - 1).data(),
            static_cast<int>(this->groups(this->groups_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rbac.Permission.groups"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string organizations = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_organizations()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->organizations(this->organizations_size() - 1).data(),
            static_cast<int>(this->organizations(this->organizations_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rbac.Permission.organizations"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rbac.Permission)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rbac.Permission)
  return false;
#undef DO_
}

void Permission::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rbac.Permission)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbac.Permission.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated string applications = 2;
  for (int i = 0, n = this->applications_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->applications(i).data(), static_cast<int>(this->applications(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbac.Permission.applications");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->applications(i), output);
  }

  // repeated string peers = 3;
  for (int i = 0, n = this->peers_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->peers(i).data(), static_cast<int>(this->peers(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbac.Permission.peers");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->peers(i), output);
  }

  // repeated string accounts = 4;
  for (int i = 0, n = this->accounts_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->accounts(i).data(), static_cast<int>(this->accounts(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbac.Permission.accounts");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->accounts(i), output);
  }

  // repeated string groups = 5;
  for (int i = 0, n = this->groups_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->groups(i).data(), static_cast<int>(this->groups(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbac.Permission.groups");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->groups(i), output);
  }

  // repeated string organizations = 6;
  for (int i = 0, n = this->organizations_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->organizations(i).data(), static_cast<int>(this->organizations(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbac.Permission.organizations");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->organizations(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rbac.Permission)
}

::google::protobuf::uint8* Permission::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rbac.Permission)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbac.Permission.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated string applications = 2;
  for (int i = 0, n = this->applications_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->applications(i).data(), static_cast<int>(this->applications(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbac.Permission.applications");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->applications(i), target);
  }

  // repeated string peers = 3;
  for (int i = 0, n = this->peers_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->peers(i).data(), static_cast<int>(this->peers(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbac.Permission.peers");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->peers(i), target);
  }

  // repeated string accounts = 4;
  for (int i = 0, n = this->accounts_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->accounts(i).data(), static_cast<int>(this->accounts(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbac.Permission.accounts");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->accounts(i), target);
  }

  // repeated string groups = 5;
  for (int i = 0, n = this->groups_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->groups(i).data(), static_cast<int>(this->groups(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbac.Permission.groups");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(5, this->groups(i), target);
  }

  // repeated string organizations = 6;
  for (int i = 0, n = this->organizations_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->organizations(i).data(), static_cast<int>(this->organizations(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbac.Permission.organizations");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(6, this->organizations(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rbac.Permission)
  return target;
}

size_t Permission::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rbac.Permission)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string applications = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->applications_size());
  for (int i = 0, n = this->applications_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->applications(i));
  }

  // repeated string peers = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->peers_size());
  for (int i = 0, n = this->peers_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->peers(i));
  }

  // repeated string accounts = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->accounts_size());
  for (int i = 0, n = this->accounts_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->accounts(i));
  }

  // repeated string groups = 5;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->groups_size());
  for (int i = 0, n = this->groups_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->groups(i));
  }

  // repeated string organizations = 6;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->organizations_size());
  for (int i = 0, n = this->organizations_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->organizations(i));
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Permission::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rbac.Permission)
  GOOGLE_DCHECK_NE(&from, this);
  const Permission* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Permission>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rbac.Permission)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rbac.Permission)
    MergeFrom(*source);
  }
}

void Permission::MergeFrom(const Permission& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rbac.Permission)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  applications_.MergeFrom(from.applications_);
  peers_.MergeFrom(from.peers_);
  accounts_.MergeFrom(from.accounts_);
  groups_.MergeFrom(from.groups_);
  organizations_.MergeFrom(from.organizations_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void Permission::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rbac.Permission)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Permission::CopyFrom(const Permission& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rbac.Permission)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Permission::IsInitialized() const {
  return true;
}

void Permission::Swap(Permission* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Permission::InternalSwap(Permission* other) {
  using std::swap;
  applications_.InternalSwap(CastToBase(&other->applications_));
  peers_.InternalSwap(CastToBase(&other->peers_));
  accounts_.InternalSwap(CastToBase(&other->accounts_));
  groups_.InternalSwap(CastToBase(&other->groups_));
  organizations_.InternalSwap(CastToBase(&other->organizations_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Permission::GetMetadata() const {
  protobuf_rbac_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rbac_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Permissions::InitAsDefaultInstance() {
  ::rbac::_Permissions_default_instance_._instance.get_mutable()->owners_ = const_cast< ::rbac::Permission*>(
      ::rbac::Permission::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Permissions::kOwnersFieldNumber;
const int Permissions::kAllowedFieldNumber;
const int Permissions::kDeniedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Permissions::Permissions()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rbac_2eproto::scc_info_Permissions.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rbac.Permissions)
}
Permissions::Permissions(const Permissions& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      allowed_(from.allowed_),
      denied_(from.denied_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_owners()) {
    owners_ = new ::rbac::Permission(*from.owners_);
  } else {
    owners_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:rbac.Permissions)
}

void Permissions::SharedCtor() {
  owners_ = NULL;
}

Permissions::~Permissions() {
  // @@protoc_insertion_point(destructor:rbac.Permissions)
  SharedDtor();
}

void Permissions::SharedDtor() {
  if (this != internal_default_instance()) delete owners_;
}

void Permissions::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Permissions::descriptor() {
  ::protobuf_rbac_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rbac_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Permissions& Permissions::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rbac_2eproto::scc_info_Permissions.base);
  return *internal_default_instance();
}


void Permissions::Clear() {
// @@protoc_insertion_point(message_clear_start:rbac.Permissions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  allowed_.Clear();
  denied_.Clear();
  if (GetArenaNoVirtual() == NULL && owners_ != NULL) {
    delete owners_;
  }
  owners_ = NULL;
  _internal_metadata_.Clear();
}

bool Permissions::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rbac.Permissions)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .rbac.Permission owners = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_owners()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .rbac.Permission allowed = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_allowed()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .rbac.Permission denied = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_denied()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rbac.Permissions)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rbac.Permissions)
  return false;
#undef DO_
}

void Permissions::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rbac.Permissions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .rbac.Permission owners = 1;
  if (this->has_owners()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_owners(), output);
  }

  // repeated .rbac.Permission allowed = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->allowed_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->allowed(static_cast<int>(i)),
      output);
  }

  // repeated .rbac.Permission denied = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->denied_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->denied(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rbac.Permissions)
}

::google::protobuf::uint8* Permissions::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rbac.Permissions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .rbac.Permission owners = 1;
  if (this->has_owners()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_owners(), deterministic, target);
  }

  // repeated .rbac.Permission allowed = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->allowed_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->allowed(static_cast<int>(i)), deterministic, target);
  }

  // repeated .rbac.Permission denied = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->denied_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->denied(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rbac.Permissions)
  return target;
}

size_t Permissions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rbac.Permissions)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .rbac.Permission allowed = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->allowed_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->allowed(static_cast<int>(i)));
    }
  }

  // repeated .rbac.Permission denied = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->denied_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->denied(static_cast<int>(i)));
    }
  }

  // .rbac.Permission owners = 1;
  if (this->has_owners()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *owners_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Permissions::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rbac.Permissions)
  GOOGLE_DCHECK_NE(&from, this);
  const Permissions* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Permissions>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rbac.Permissions)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rbac.Permissions)
    MergeFrom(*source);
  }
}

void Permissions::MergeFrom(const Permissions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rbac.Permissions)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  allowed_.MergeFrom(from.allowed_);
  denied_.MergeFrom(from.denied_);
  if (from.has_owners()) {
    mutable_owners()->::rbac::Permission::MergeFrom(from.owners());
  }
}

void Permissions::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rbac.Permissions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Permissions::CopyFrom(const Permissions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rbac.Permissions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Permissions::IsInitialized() const {
  return true;
}

void Permissions::Swap(Permissions* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Permissions::InternalSwap(Permissions* other) {
  using std::swap;
  CastToBase(&allowed_)->InternalSwap(CastToBase(&other->allowed_));
  CastToBase(&denied_)->InternalSwap(CastToBase(&other->denied_));
  swap(owners_, other->owners_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Permissions::GetMetadata() const {
  protobuf_rbac_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rbac_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetResourcePermissionsRqst::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetResourcePermissionsRqst::kPathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetResourcePermissionsRqst::GetResourcePermissionsRqst()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rbac_2eproto::scc_info_GetResourcePermissionsRqst.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rbac.GetResourcePermissionsRqst)
}
GetResourcePermissionsRqst::GetResourcePermissionsRqst(const GetResourcePermissionsRqst& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.path().size() > 0) {
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  // @@protoc_insertion_point(copy_constructor:rbac.GetResourcePermissionsRqst)
}

void GetResourcePermissionsRqst::SharedCtor() {
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetResourcePermissionsRqst::~GetResourcePermissionsRqst() {
  // @@protoc_insertion_point(destructor:rbac.GetResourcePermissionsRqst)
  SharedDtor();
}

void GetResourcePermissionsRqst::SharedDtor() {
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetResourcePermissionsRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetResourcePermissionsRqst::descriptor() {
  ::protobuf_rbac_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rbac_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetResourcePermissionsRqst& GetResourcePermissionsRqst::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rbac_2eproto::scc_info_GetResourcePermissionsRqst.base);
  return *internal_default_instance();
}


void GetResourcePermissionsRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:rbac.GetResourcePermissionsRqst)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GetResourcePermissionsRqst::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rbac.GetResourcePermissionsRqst)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string path = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->path().data(), static_cast<int>(this->path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rbac.GetResourcePermissionsRqst.path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rbac.GetResourcePermissionsRqst)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rbac.GetResourcePermissionsRqst)
  return false;
#undef DO_
}

void GetResourcePermissionsRqst::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rbac.GetResourcePermissionsRqst)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbac.GetResourcePermissionsRqst.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->path(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rbac.GetResourcePermissionsRqst)
}

::google::protobuf::uint8* GetResourcePermissionsRqst::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rbac.GetResourcePermissionsRqst)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbac.GetResourcePermissionsRqst.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->path(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rbac.GetResourcePermissionsRqst)
  return target;
}

size_t GetResourcePermissionsRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rbac.GetResourcePermissionsRqst)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string path = 1;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetResourcePermissionsRqst::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rbac.GetResourcePermissionsRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const GetResourcePermissionsRqst* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetResourcePermissionsRqst>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rbac.GetResourcePermissionsRqst)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rbac.GetResourcePermissionsRqst)
    MergeFrom(*source);
  }
}

void GetResourcePermissionsRqst::MergeFrom(const GetResourcePermissionsRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rbac.GetResourcePermissionsRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.path().size() > 0) {

    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
}

void GetResourcePermissionsRqst::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rbac.GetResourcePermissionsRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetResourcePermissionsRqst::CopyFrom(const GetResourcePermissionsRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rbac.GetResourcePermissionsRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetResourcePermissionsRqst::IsInitialized() const {
  return true;
}

void GetResourcePermissionsRqst::Swap(GetResourcePermissionsRqst* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetResourcePermissionsRqst::InternalSwap(GetResourcePermissionsRqst* other) {
  using std::swap;
  path_.Swap(&other->path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetResourcePermissionsRqst::GetMetadata() const {
  protobuf_rbac_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rbac_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetResourcePermissionsRsp::InitAsDefaultInstance() {
  ::rbac::_GetResourcePermissionsRsp_default_instance_._instance.get_mutable()->permissions_ = const_cast< ::rbac::Permissions*>(
      ::rbac::Permissions::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetResourcePermissionsRsp::kPermissionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetResourcePermissionsRsp::GetResourcePermissionsRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rbac_2eproto::scc_info_GetResourcePermissionsRsp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rbac.GetResourcePermissionsRsp)
}
GetResourcePermissionsRsp::GetResourcePermissionsRsp(const GetResourcePermissionsRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_permissions()) {
    permissions_ = new ::rbac::Permissions(*from.permissions_);
  } else {
    permissions_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:rbac.GetResourcePermissionsRsp)
}

void GetResourcePermissionsRsp::SharedCtor() {
  permissions_ = NULL;
}

GetResourcePermissionsRsp::~GetResourcePermissionsRsp() {
  // @@protoc_insertion_point(destructor:rbac.GetResourcePermissionsRsp)
  SharedDtor();
}

void GetResourcePermissionsRsp::SharedDtor() {
  if (this != internal_default_instance()) delete permissions_;
}

void GetResourcePermissionsRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetResourcePermissionsRsp::descriptor() {
  ::protobuf_rbac_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rbac_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetResourcePermissionsRsp& GetResourcePermissionsRsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rbac_2eproto::scc_info_GetResourcePermissionsRsp.base);
  return *internal_default_instance();
}


void GetResourcePermissionsRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:rbac.GetResourcePermissionsRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && permissions_ != NULL) {
    delete permissions_;
  }
  permissions_ = NULL;
  _internal_metadata_.Clear();
}

bool GetResourcePermissionsRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rbac.GetResourcePermissionsRsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .rbac.Permissions permissions = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_permissions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rbac.GetResourcePermissionsRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rbac.GetResourcePermissionsRsp)
  return false;
#undef DO_
}

void GetResourcePermissionsRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rbac.GetResourcePermissionsRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .rbac.Permissions permissions = 1;
  if (this->has_permissions()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_permissions(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rbac.GetResourcePermissionsRsp)
}

::google::protobuf::uint8* GetResourcePermissionsRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rbac.GetResourcePermissionsRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .rbac.Permissions permissions = 1;
  if (this->has_permissions()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_permissions(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rbac.GetResourcePermissionsRsp)
  return target;
}

size_t GetResourcePermissionsRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rbac.GetResourcePermissionsRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .rbac.Permissions permissions = 1;
  if (this->has_permissions()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *permissions_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetResourcePermissionsRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rbac.GetResourcePermissionsRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetResourcePermissionsRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetResourcePermissionsRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rbac.GetResourcePermissionsRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rbac.GetResourcePermissionsRsp)
    MergeFrom(*source);
  }
}

void GetResourcePermissionsRsp::MergeFrom(const GetResourcePermissionsRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rbac.GetResourcePermissionsRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_permissions()) {
    mutable_permissions()->::rbac::Permissions::MergeFrom(from.permissions());
  }
}

void GetResourcePermissionsRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rbac.GetResourcePermissionsRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetResourcePermissionsRsp::CopyFrom(const GetResourcePermissionsRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rbac.GetResourcePermissionsRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetResourcePermissionsRsp::IsInitialized() const {
  return true;
}

void GetResourcePermissionsRsp::Swap(GetResourcePermissionsRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetResourcePermissionsRsp::InternalSwap(GetResourcePermissionsRsp* other) {
  using std::swap;
  swap(permissions_, other->permissions_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetResourcePermissionsRsp::GetMetadata() const {
  protobuf_rbac_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rbac_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeleteResourcePermissionsRqst::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteResourcePermissionsRqst::kPathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteResourcePermissionsRqst::DeleteResourcePermissionsRqst()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rbac_2eproto::scc_info_DeleteResourcePermissionsRqst.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rbac.DeleteResourcePermissionsRqst)
}
DeleteResourcePermissionsRqst::DeleteResourcePermissionsRqst(const DeleteResourcePermissionsRqst& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.path().size() > 0) {
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  // @@protoc_insertion_point(copy_constructor:rbac.DeleteResourcePermissionsRqst)
}

void DeleteResourcePermissionsRqst::SharedCtor() {
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DeleteResourcePermissionsRqst::~DeleteResourcePermissionsRqst() {
  // @@protoc_insertion_point(destructor:rbac.DeleteResourcePermissionsRqst)
  SharedDtor();
}

void DeleteResourcePermissionsRqst::SharedDtor() {
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeleteResourcePermissionsRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeleteResourcePermissionsRqst::descriptor() {
  ::protobuf_rbac_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rbac_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteResourcePermissionsRqst& DeleteResourcePermissionsRqst::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rbac_2eproto::scc_info_DeleteResourcePermissionsRqst.base);
  return *internal_default_instance();
}


void DeleteResourcePermissionsRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:rbac.DeleteResourcePermissionsRqst)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool DeleteResourcePermissionsRqst::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rbac.DeleteResourcePermissionsRqst)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string path = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->path().data(), static_cast<int>(this->path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rbac.DeleteResourcePermissionsRqst.path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rbac.DeleteResourcePermissionsRqst)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rbac.DeleteResourcePermissionsRqst)
  return false;
#undef DO_
}

void DeleteResourcePermissionsRqst::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rbac.DeleteResourcePermissionsRqst)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbac.DeleteResourcePermissionsRqst.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->path(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rbac.DeleteResourcePermissionsRqst)
}

::google::protobuf::uint8* DeleteResourcePermissionsRqst::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rbac.DeleteResourcePermissionsRqst)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbac.DeleteResourcePermissionsRqst.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->path(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rbac.DeleteResourcePermissionsRqst)
  return target;
}

size_t DeleteResourcePermissionsRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rbac.DeleteResourcePermissionsRqst)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string path = 1;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteResourcePermissionsRqst::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rbac.DeleteResourcePermissionsRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteResourcePermissionsRqst* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteResourcePermissionsRqst>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rbac.DeleteResourcePermissionsRqst)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rbac.DeleteResourcePermissionsRqst)
    MergeFrom(*source);
  }
}

void DeleteResourcePermissionsRqst::MergeFrom(const DeleteResourcePermissionsRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rbac.DeleteResourcePermissionsRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.path().size() > 0) {

    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
}

void DeleteResourcePermissionsRqst::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rbac.DeleteResourcePermissionsRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteResourcePermissionsRqst::CopyFrom(const DeleteResourcePermissionsRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rbac.DeleteResourcePermissionsRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteResourcePermissionsRqst::IsInitialized() const {
  return true;
}

void DeleteResourcePermissionsRqst::Swap(DeleteResourcePermissionsRqst* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteResourcePermissionsRqst::InternalSwap(DeleteResourcePermissionsRqst* other) {
  using std::swap;
  path_.Swap(&other->path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeleteResourcePermissionsRqst::GetMetadata() const {
  protobuf_rbac_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rbac_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeleteResourcePermissionsRsp::InitAsDefaultInstance() {
  ::rbac::_DeleteResourcePermissionsRsp_default_instance_._instance.get_mutable()->permissions_ = const_cast< ::rbac::Permissions*>(
      ::rbac::Permissions::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteResourcePermissionsRsp::kPermissionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteResourcePermissionsRsp::DeleteResourcePermissionsRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rbac_2eproto::scc_info_DeleteResourcePermissionsRsp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rbac.DeleteResourcePermissionsRsp)
}
DeleteResourcePermissionsRsp::DeleteResourcePermissionsRsp(const DeleteResourcePermissionsRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_permissions()) {
    permissions_ = new ::rbac::Permissions(*from.permissions_);
  } else {
    permissions_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:rbac.DeleteResourcePermissionsRsp)
}

void DeleteResourcePermissionsRsp::SharedCtor() {
  permissions_ = NULL;
}

DeleteResourcePermissionsRsp::~DeleteResourcePermissionsRsp() {
  // @@protoc_insertion_point(destructor:rbac.DeleteResourcePermissionsRsp)
  SharedDtor();
}

void DeleteResourcePermissionsRsp::SharedDtor() {
  if (this != internal_default_instance()) delete permissions_;
}

void DeleteResourcePermissionsRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeleteResourcePermissionsRsp::descriptor() {
  ::protobuf_rbac_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rbac_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteResourcePermissionsRsp& DeleteResourcePermissionsRsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rbac_2eproto::scc_info_DeleteResourcePermissionsRsp.base);
  return *internal_default_instance();
}


void DeleteResourcePermissionsRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:rbac.DeleteResourcePermissionsRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && permissions_ != NULL) {
    delete permissions_;
  }
  permissions_ = NULL;
  _internal_metadata_.Clear();
}

bool DeleteResourcePermissionsRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rbac.DeleteResourcePermissionsRsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .rbac.Permissions permissions = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_permissions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rbac.DeleteResourcePermissionsRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rbac.DeleteResourcePermissionsRsp)
  return false;
#undef DO_
}

void DeleteResourcePermissionsRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rbac.DeleteResourcePermissionsRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .rbac.Permissions permissions = 1;
  if (this->has_permissions()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_permissions(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rbac.DeleteResourcePermissionsRsp)
}

::google::protobuf::uint8* DeleteResourcePermissionsRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rbac.DeleteResourcePermissionsRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .rbac.Permissions permissions = 1;
  if (this->has_permissions()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_permissions(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rbac.DeleteResourcePermissionsRsp)
  return target;
}

size_t DeleteResourcePermissionsRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rbac.DeleteResourcePermissionsRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .rbac.Permissions permissions = 1;
  if (this->has_permissions()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *permissions_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteResourcePermissionsRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rbac.DeleteResourcePermissionsRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteResourcePermissionsRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteResourcePermissionsRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rbac.DeleteResourcePermissionsRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rbac.DeleteResourcePermissionsRsp)
    MergeFrom(*source);
  }
}

void DeleteResourcePermissionsRsp::MergeFrom(const DeleteResourcePermissionsRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rbac.DeleteResourcePermissionsRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_permissions()) {
    mutable_permissions()->::rbac::Permissions::MergeFrom(from.permissions());
  }
}

void DeleteResourcePermissionsRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rbac.DeleteResourcePermissionsRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteResourcePermissionsRsp::CopyFrom(const DeleteResourcePermissionsRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rbac.DeleteResourcePermissionsRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteResourcePermissionsRsp::IsInitialized() const {
  return true;
}

void DeleteResourcePermissionsRsp::Swap(DeleteResourcePermissionsRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteResourcePermissionsRsp::InternalSwap(DeleteResourcePermissionsRsp* other) {
  using std::swap;
  swap(permissions_, other->permissions_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeleteResourcePermissionsRsp::GetMetadata() const {
  protobuf_rbac_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rbac_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeleteResourcePermissionRqst::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteResourcePermissionRqst::kPathFieldNumber;
const int DeleteResourcePermissionRqst::kNameFieldNumber;
const int DeleteResourcePermissionRqst::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteResourcePermissionRqst::DeleteResourcePermissionRqst()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rbac_2eproto::scc_info_DeleteResourcePermissionRqst.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rbac.DeleteResourcePermissionRqst)
}
DeleteResourcePermissionRqst::DeleteResourcePermissionRqst(const DeleteResourcePermissionRqst& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.path().size() > 0) {
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:rbac.DeleteResourcePermissionRqst)
}

void DeleteResourcePermissionRqst::SharedCtor() {
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
}

DeleteResourcePermissionRqst::~DeleteResourcePermissionRqst() {
  // @@protoc_insertion_point(destructor:rbac.DeleteResourcePermissionRqst)
  SharedDtor();
}

void DeleteResourcePermissionRqst::SharedDtor() {
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeleteResourcePermissionRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeleteResourcePermissionRqst::descriptor() {
  ::protobuf_rbac_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rbac_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteResourcePermissionRqst& DeleteResourcePermissionRqst::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rbac_2eproto::scc_info_DeleteResourcePermissionRqst.base);
  return *internal_default_instance();
}


void DeleteResourcePermissionRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:rbac.DeleteResourcePermissionRqst)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
  _internal_metadata_.Clear();
}

bool DeleteResourcePermissionRqst::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rbac.DeleteResourcePermissionRqst)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string path = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->path().data(), static_cast<int>(this->path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rbac.DeleteResourcePermissionRqst.path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rbac.DeleteResourcePermissionRqst.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .rbac.PermissionType type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::rbac::PermissionType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rbac.DeleteResourcePermissionRqst)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rbac.DeleteResourcePermissionRqst)
  return false;
#undef DO_
}

void DeleteResourcePermissionRqst::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rbac.DeleteResourcePermissionRqst)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbac.DeleteResourcePermissionRqst.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->path(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbac.DeleteResourcePermissionRqst.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // .rbac.PermissionType type = 3;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rbac.DeleteResourcePermissionRqst)
}

::google::protobuf::uint8* DeleteResourcePermissionRqst::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rbac.DeleteResourcePermissionRqst)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbac.DeleteResourcePermissionRqst.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->path(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbac.DeleteResourcePermissionRqst.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // .rbac.PermissionType type = 3;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rbac.DeleteResourcePermissionRqst)
  return target;
}

size_t DeleteResourcePermissionRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rbac.DeleteResourcePermissionRqst)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string path = 1;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .rbac.PermissionType type = 3;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteResourcePermissionRqst::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rbac.DeleteResourcePermissionRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteResourcePermissionRqst* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteResourcePermissionRqst>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rbac.DeleteResourcePermissionRqst)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rbac.DeleteResourcePermissionRqst)
    MergeFrom(*source);
  }
}

void DeleteResourcePermissionRqst::MergeFrom(const DeleteResourcePermissionRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rbac.DeleteResourcePermissionRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.path().size() > 0) {

    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void DeleteResourcePermissionRqst::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rbac.DeleteResourcePermissionRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteResourcePermissionRqst::CopyFrom(const DeleteResourcePermissionRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rbac.DeleteResourcePermissionRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteResourcePermissionRqst::IsInitialized() const {
  return true;
}

void DeleteResourcePermissionRqst::Swap(DeleteResourcePermissionRqst* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteResourcePermissionRqst::InternalSwap(DeleteResourcePermissionRqst* other) {
  using std::swap;
  path_.Swap(&other->path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeleteResourcePermissionRqst::GetMetadata() const {
  protobuf_rbac_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rbac_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeleteResourcePermissionRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteResourcePermissionRsp::DeleteResourcePermissionRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rbac_2eproto::scc_info_DeleteResourcePermissionRsp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rbac.DeleteResourcePermissionRsp)
}
DeleteResourcePermissionRsp::DeleteResourcePermissionRsp(const DeleteResourcePermissionRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:rbac.DeleteResourcePermissionRsp)
}

void DeleteResourcePermissionRsp::SharedCtor() {
}

DeleteResourcePermissionRsp::~DeleteResourcePermissionRsp() {
  // @@protoc_insertion_point(destructor:rbac.DeleteResourcePermissionRsp)
  SharedDtor();
}

void DeleteResourcePermissionRsp::SharedDtor() {
}

void DeleteResourcePermissionRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeleteResourcePermissionRsp::descriptor() {
  ::protobuf_rbac_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rbac_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteResourcePermissionRsp& DeleteResourcePermissionRsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rbac_2eproto::scc_info_DeleteResourcePermissionRsp.base);
  return *internal_default_instance();
}


void DeleteResourcePermissionRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:rbac.DeleteResourcePermissionRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool DeleteResourcePermissionRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rbac.DeleteResourcePermissionRsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:rbac.DeleteResourcePermissionRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rbac.DeleteResourcePermissionRsp)
  return false;
#undef DO_
}

void DeleteResourcePermissionRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rbac.DeleteResourcePermissionRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rbac.DeleteResourcePermissionRsp)
}

::google::protobuf::uint8* DeleteResourcePermissionRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rbac.DeleteResourcePermissionRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rbac.DeleteResourcePermissionRsp)
  return target;
}

size_t DeleteResourcePermissionRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rbac.DeleteResourcePermissionRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteResourcePermissionRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rbac.DeleteResourcePermissionRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteResourcePermissionRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteResourcePermissionRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rbac.DeleteResourcePermissionRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rbac.DeleteResourcePermissionRsp)
    MergeFrom(*source);
  }
}

void DeleteResourcePermissionRsp::MergeFrom(const DeleteResourcePermissionRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rbac.DeleteResourcePermissionRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void DeleteResourcePermissionRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rbac.DeleteResourcePermissionRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteResourcePermissionRsp::CopyFrom(const DeleteResourcePermissionRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rbac.DeleteResourcePermissionRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteResourcePermissionRsp::IsInitialized() const {
  return true;
}

void DeleteResourcePermissionRsp::Swap(DeleteResourcePermissionRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteResourcePermissionRsp::InternalSwap(DeleteResourcePermissionRsp* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeleteResourcePermissionRsp::GetMetadata() const {
  protobuf_rbac_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rbac_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SetResourcePermissionsRqst::InitAsDefaultInstance() {
  ::rbac::_SetResourcePermissionsRqst_default_instance_._instance.get_mutable()->permissions_ = const_cast< ::rbac::Permissions*>(
      ::rbac::Permissions::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetResourcePermissionsRqst::kPathFieldNumber;
const int SetResourcePermissionsRqst::kPermissionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetResourcePermissionsRqst::SetResourcePermissionsRqst()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rbac_2eproto::scc_info_SetResourcePermissionsRqst.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rbac.SetResourcePermissionsRqst)
}
SetResourcePermissionsRqst::SetResourcePermissionsRqst(const SetResourcePermissionsRqst& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.path().size() > 0) {
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  if (from.has_permissions()) {
    permissions_ = new ::rbac::Permissions(*from.permissions_);
  } else {
    permissions_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:rbac.SetResourcePermissionsRqst)
}

void SetResourcePermissionsRqst::SharedCtor() {
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  permissions_ = NULL;
}

SetResourcePermissionsRqst::~SetResourcePermissionsRqst() {
  // @@protoc_insertion_point(destructor:rbac.SetResourcePermissionsRqst)
  SharedDtor();
}

void SetResourcePermissionsRqst::SharedDtor() {
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete permissions_;
}

void SetResourcePermissionsRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SetResourcePermissionsRqst::descriptor() {
  ::protobuf_rbac_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rbac_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetResourcePermissionsRqst& SetResourcePermissionsRqst::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rbac_2eproto::scc_info_SetResourcePermissionsRqst.base);
  return *internal_default_instance();
}


void SetResourcePermissionsRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:rbac.SetResourcePermissionsRqst)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && permissions_ != NULL) {
    delete permissions_;
  }
  permissions_ = NULL;
  _internal_metadata_.Clear();
}

bool SetResourcePermissionsRqst::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rbac.SetResourcePermissionsRqst)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string path = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->path().data(), static_cast<int>(this->path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rbac.SetResourcePermissionsRqst.path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .rbac.Permissions permissions = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_permissions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rbac.SetResourcePermissionsRqst)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rbac.SetResourcePermissionsRqst)
  return false;
#undef DO_
}

void SetResourcePermissionsRqst::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rbac.SetResourcePermissionsRqst)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbac.SetResourcePermissionsRqst.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->path(), output);
  }

  // .rbac.Permissions permissions = 2;
  if (this->has_permissions()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_permissions(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rbac.SetResourcePermissionsRqst)
}

::google::protobuf::uint8* SetResourcePermissionsRqst::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rbac.SetResourcePermissionsRqst)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbac.SetResourcePermissionsRqst.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->path(), target);
  }

  // .rbac.Permissions permissions = 2;
  if (this->has_permissions()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_permissions(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rbac.SetResourcePermissionsRqst)
  return target;
}

size_t SetResourcePermissionsRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rbac.SetResourcePermissionsRqst)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string path = 1;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  // .rbac.Permissions permissions = 2;
  if (this->has_permissions()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *permissions_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetResourcePermissionsRqst::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rbac.SetResourcePermissionsRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const SetResourcePermissionsRqst* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetResourcePermissionsRqst>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rbac.SetResourcePermissionsRqst)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rbac.SetResourcePermissionsRqst)
    MergeFrom(*source);
  }
}

void SetResourcePermissionsRqst::MergeFrom(const SetResourcePermissionsRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rbac.SetResourcePermissionsRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.path().size() > 0) {

    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  if (from.has_permissions()) {
    mutable_permissions()->::rbac::Permissions::MergeFrom(from.permissions());
  }
}

void SetResourcePermissionsRqst::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rbac.SetResourcePermissionsRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetResourcePermissionsRqst::CopyFrom(const SetResourcePermissionsRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rbac.SetResourcePermissionsRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetResourcePermissionsRqst::IsInitialized() const {
  return true;
}

void SetResourcePermissionsRqst::Swap(SetResourcePermissionsRqst* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetResourcePermissionsRqst::InternalSwap(SetResourcePermissionsRqst* other) {
  using std::swap;
  path_.Swap(&other->path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(permissions_, other->permissions_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SetResourcePermissionsRqst::GetMetadata() const {
  protobuf_rbac_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rbac_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SetResourcePermissionsRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetResourcePermissionsRsp::SetResourcePermissionsRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rbac_2eproto::scc_info_SetResourcePermissionsRsp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rbac.SetResourcePermissionsRsp)
}
SetResourcePermissionsRsp::SetResourcePermissionsRsp(const SetResourcePermissionsRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:rbac.SetResourcePermissionsRsp)
}

void SetResourcePermissionsRsp::SharedCtor() {
}

SetResourcePermissionsRsp::~SetResourcePermissionsRsp() {
  // @@protoc_insertion_point(destructor:rbac.SetResourcePermissionsRsp)
  SharedDtor();
}

void SetResourcePermissionsRsp::SharedDtor() {
}

void SetResourcePermissionsRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SetResourcePermissionsRsp::descriptor() {
  ::protobuf_rbac_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rbac_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetResourcePermissionsRsp& SetResourcePermissionsRsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rbac_2eproto::scc_info_SetResourcePermissionsRsp.base);
  return *internal_default_instance();
}


void SetResourcePermissionsRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:rbac.SetResourcePermissionsRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool SetResourcePermissionsRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rbac.SetResourcePermissionsRsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:rbac.SetResourcePermissionsRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rbac.SetResourcePermissionsRsp)
  return false;
#undef DO_
}

void SetResourcePermissionsRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rbac.SetResourcePermissionsRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rbac.SetResourcePermissionsRsp)
}

::google::protobuf::uint8* SetResourcePermissionsRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rbac.SetResourcePermissionsRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rbac.SetResourcePermissionsRsp)
  return target;
}

size_t SetResourcePermissionsRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rbac.SetResourcePermissionsRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetResourcePermissionsRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rbac.SetResourcePermissionsRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SetResourcePermissionsRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetResourcePermissionsRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rbac.SetResourcePermissionsRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rbac.SetResourcePermissionsRsp)
    MergeFrom(*source);
  }
}

void SetResourcePermissionsRsp::MergeFrom(const SetResourcePermissionsRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rbac.SetResourcePermissionsRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void SetResourcePermissionsRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rbac.SetResourcePermissionsRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetResourcePermissionsRsp::CopyFrom(const SetResourcePermissionsRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rbac.SetResourcePermissionsRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetResourcePermissionsRsp::IsInitialized() const {
  return true;
}

void SetResourcePermissionsRsp::Swap(SetResourcePermissionsRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetResourcePermissionsRsp::InternalSwap(SetResourcePermissionsRsp* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SetResourcePermissionsRsp::GetMetadata() const {
  protobuf_rbac_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rbac_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetResourcePermissionRqst::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetResourcePermissionRqst::kPathFieldNumber;
const int GetResourcePermissionRqst::kNameFieldNumber;
const int GetResourcePermissionRqst::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetResourcePermissionRqst::GetResourcePermissionRqst()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rbac_2eproto::scc_info_GetResourcePermissionRqst.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rbac.GetResourcePermissionRqst)
}
GetResourcePermissionRqst::GetResourcePermissionRqst(const GetResourcePermissionRqst& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.path().size() > 0) {
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:rbac.GetResourcePermissionRqst)
}

void GetResourcePermissionRqst::SharedCtor() {
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
}

GetResourcePermissionRqst::~GetResourcePermissionRqst() {
  // @@protoc_insertion_point(destructor:rbac.GetResourcePermissionRqst)
  SharedDtor();
}

void GetResourcePermissionRqst::SharedDtor() {
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetResourcePermissionRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetResourcePermissionRqst::descriptor() {
  ::protobuf_rbac_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rbac_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetResourcePermissionRqst& GetResourcePermissionRqst::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rbac_2eproto::scc_info_GetResourcePermissionRqst.base);
  return *internal_default_instance();
}


void GetResourcePermissionRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:rbac.GetResourcePermissionRqst)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
  _internal_metadata_.Clear();
}

bool GetResourcePermissionRqst::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rbac.GetResourcePermissionRqst)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string path = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->path().data(), static_cast<int>(this->path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rbac.GetResourcePermissionRqst.path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rbac.GetResourcePermissionRqst.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .rbac.PermissionType type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::rbac::PermissionType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rbac.GetResourcePermissionRqst)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rbac.GetResourcePermissionRqst)
  return false;
#undef DO_
}

void GetResourcePermissionRqst::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rbac.GetResourcePermissionRqst)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbac.GetResourcePermissionRqst.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->path(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbac.GetResourcePermissionRqst.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // .rbac.PermissionType type = 3;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rbac.GetResourcePermissionRqst)
}

::google::protobuf::uint8* GetResourcePermissionRqst::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rbac.GetResourcePermissionRqst)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbac.GetResourcePermissionRqst.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->path(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbac.GetResourcePermissionRqst.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // .rbac.PermissionType type = 3;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rbac.GetResourcePermissionRqst)
  return target;
}

size_t GetResourcePermissionRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rbac.GetResourcePermissionRqst)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string path = 1;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .rbac.PermissionType type = 3;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetResourcePermissionRqst::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rbac.GetResourcePermissionRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const GetResourcePermissionRqst* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetResourcePermissionRqst>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rbac.GetResourcePermissionRqst)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rbac.GetResourcePermissionRqst)
    MergeFrom(*source);
  }
}

void GetResourcePermissionRqst::MergeFrom(const GetResourcePermissionRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rbac.GetResourcePermissionRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.path().size() > 0) {

    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void GetResourcePermissionRqst::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rbac.GetResourcePermissionRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetResourcePermissionRqst::CopyFrom(const GetResourcePermissionRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rbac.GetResourcePermissionRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetResourcePermissionRqst::IsInitialized() const {
  return true;
}

void GetResourcePermissionRqst::Swap(GetResourcePermissionRqst* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetResourcePermissionRqst::InternalSwap(GetResourcePermissionRqst* other) {
  using std::swap;
  path_.Swap(&other->path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetResourcePermissionRqst::GetMetadata() const {
  protobuf_rbac_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rbac_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetResourcePermissionRsp::InitAsDefaultInstance() {
  ::rbac::_GetResourcePermissionRsp_default_instance_._instance.get_mutable()->permission_ = const_cast< ::rbac::Permission*>(
      ::rbac::Permission::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetResourcePermissionRsp::kPermissionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetResourcePermissionRsp::GetResourcePermissionRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rbac_2eproto::scc_info_GetResourcePermissionRsp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rbac.GetResourcePermissionRsp)
}
GetResourcePermissionRsp::GetResourcePermissionRsp(const GetResourcePermissionRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_permission()) {
    permission_ = new ::rbac::Permission(*from.permission_);
  } else {
    permission_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:rbac.GetResourcePermissionRsp)
}

void GetResourcePermissionRsp::SharedCtor() {
  permission_ = NULL;
}

GetResourcePermissionRsp::~GetResourcePermissionRsp() {
  // @@protoc_insertion_point(destructor:rbac.GetResourcePermissionRsp)
  SharedDtor();
}

void GetResourcePermissionRsp::SharedDtor() {
  if (this != internal_default_instance()) delete permission_;
}

void GetResourcePermissionRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetResourcePermissionRsp::descriptor() {
  ::protobuf_rbac_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rbac_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetResourcePermissionRsp& GetResourcePermissionRsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rbac_2eproto::scc_info_GetResourcePermissionRsp.base);
  return *internal_default_instance();
}


void GetResourcePermissionRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:rbac.GetResourcePermissionRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && permission_ != NULL) {
    delete permission_;
  }
  permission_ = NULL;
  _internal_metadata_.Clear();
}

bool GetResourcePermissionRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rbac.GetResourcePermissionRsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .rbac.Permission permission = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_permission()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rbac.GetResourcePermissionRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rbac.GetResourcePermissionRsp)
  return false;
#undef DO_
}

void GetResourcePermissionRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rbac.GetResourcePermissionRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .rbac.Permission permission = 1;
  if (this->has_permission()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_permission(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rbac.GetResourcePermissionRsp)
}

::google::protobuf::uint8* GetResourcePermissionRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rbac.GetResourcePermissionRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .rbac.Permission permission = 1;
  if (this->has_permission()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_permission(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rbac.GetResourcePermissionRsp)
  return target;
}

size_t GetResourcePermissionRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rbac.GetResourcePermissionRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .rbac.Permission permission = 1;
  if (this->has_permission()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *permission_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetResourcePermissionRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rbac.GetResourcePermissionRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetResourcePermissionRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetResourcePermissionRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rbac.GetResourcePermissionRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rbac.GetResourcePermissionRsp)
    MergeFrom(*source);
  }
}

void GetResourcePermissionRsp::MergeFrom(const GetResourcePermissionRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rbac.GetResourcePermissionRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_permission()) {
    mutable_permission()->::rbac::Permission::MergeFrom(from.permission());
  }
}

void GetResourcePermissionRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rbac.GetResourcePermissionRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetResourcePermissionRsp::CopyFrom(const GetResourcePermissionRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rbac.GetResourcePermissionRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetResourcePermissionRsp::IsInitialized() const {
  return true;
}

void GetResourcePermissionRsp::Swap(GetResourcePermissionRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetResourcePermissionRsp::InternalSwap(GetResourcePermissionRsp* other) {
  using std::swap;
  swap(permission_, other->permission_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetResourcePermissionRsp::GetMetadata() const {
  protobuf_rbac_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rbac_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SetResourcePermissionRqst::InitAsDefaultInstance() {
  ::rbac::_SetResourcePermissionRqst_default_instance_._instance.get_mutable()->permission_ = const_cast< ::rbac::Permission*>(
      ::rbac::Permission::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetResourcePermissionRqst::kPathFieldNumber;
const int SetResourcePermissionRqst::kPermissionFieldNumber;
const int SetResourcePermissionRqst::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetResourcePermissionRqst::SetResourcePermissionRqst()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rbac_2eproto::scc_info_SetResourcePermissionRqst.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rbac.SetResourcePermissionRqst)
}
SetResourcePermissionRqst::SetResourcePermissionRqst(const SetResourcePermissionRqst& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.path().size() > 0) {
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  if (from.has_permission()) {
    permission_ = new ::rbac::Permission(*from.permission_);
  } else {
    permission_ = NULL;
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:rbac.SetResourcePermissionRqst)
}

void SetResourcePermissionRqst::SharedCtor() {
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&permission_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&permission_)) + sizeof(type_));
}

SetResourcePermissionRqst::~SetResourcePermissionRqst() {
  // @@protoc_insertion_point(destructor:rbac.SetResourcePermissionRqst)
  SharedDtor();
}

void SetResourcePermissionRqst::SharedDtor() {
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete permission_;
}

void SetResourcePermissionRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SetResourcePermissionRqst::descriptor() {
  ::protobuf_rbac_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rbac_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetResourcePermissionRqst& SetResourcePermissionRqst::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rbac_2eproto::scc_info_SetResourcePermissionRqst.base);
  return *internal_default_instance();
}


void SetResourcePermissionRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:rbac.SetResourcePermissionRqst)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && permission_ != NULL) {
    delete permission_;
  }
  permission_ = NULL;
  type_ = 0;
  _internal_metadata_.Clear();
}

bool SetResourcePermissionRqst::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rbac.SetResourcePermissionRqst)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string path = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->path().data(), static_cast<int>(this->path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rbac.SetResourcePermissionRqst.path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .rbac.Permission permission = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_permission()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .rbac.PermissionType type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::rbac::PermissionType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rbac.SetResourcePermissionRqst)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rbac.SetResourcePermissionRqst)
  return false;
#undef DO_
}

void SetResourcePermissionRqst::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rbac.SetResourcePermissionRqst)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbac.SetResourcePermissionRqst.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->path(), output);
  }

  // .rbac.Permission permission = 2;
  if (this->has_permission()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_permission(), output);
  }

  // .rbac.PermissionType type = 3;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rbac.SetResourcePermissionRqst)
}

::google::protobuf::uint8* SetResourcePermissionRqst::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rbac.SetResourcePermissionRqst)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbac.SetResourcePermissionRqst.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->path(), target);
  }

  // .rbac.Permission permission = 2;
  if (this->has_permission()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_permission(), deterministic, target);
  }

  // .rbac.PermissionType type = 3;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rbac.SetResourcePermissionRqst)
  return target;
}

size_t SetResourcePermissionRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rbac.SetResourcePermissionRqst)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string path = 1;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  // .rbac.Permission permission = 2;
  if (this->has_permission()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *permission_);
  }

  // .rbac.PermissionType type = 3;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetResourcePermissionRqst::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rbac.SetResourcePermissionRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const SetResourcePermissionRqst* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetResourcePermissionRqst>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rbac.SetResourcePermissionRqst)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rbac.SetResourcePermissionRqst)
    MergeFrom(*source);
  }
}

void SetResourcePermissionRqst::MergeFrom(const SetResourcePermissionRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rbac.SetResourcePermissionRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.path().size() > 0) {

    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  if (from.has_permission()) {
    mutable_permission()->::rbac::Permission::MergeFrom(from.permission());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void SetResourcePermissionRqst::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rbac.SetResourcePermissionRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetResourcePermissionRqst::CopyFrom(const SetResourcePermissionRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rbac.SetResourcePermissionRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetResourcePermissionRqst::IsInitialized() const {
  return true;
}

void SetResourcePermissionRqst::Swap(SetResourcePermissionRqst* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetResourcePermissionRqst::InternalSwap(SetResourcePermissionRqst* other) {
  using std::swap;
  path_.Swap(&other->path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(permission_, other->permission_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SetResourcePermissionRqst::GetMetadata() const {
  protobuf_rbac_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rbac_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SetResourcePermissionRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetResourcePermissionRsp::SetResourcePermissionRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rbac_2eproto::scc_info_SetResourcePermissionRsp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rbac.SetResourcePermissionRsp)
}
SetResourcePermissionRsp::SetResourcePermissionRsp(const SetResourcePermissionRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:rbac.SetResourcePermissionRsp)
}

void SetResourcePermissionRsp::SharedCtor() {
}

SetResourcePermissionRsp::~SetResourcePermissionRsp() {
  // @@protoc_insertion_point(destructor:rbac.SetResourcePermissionRsp)
  SharedDtor();
}

void SetResourcePermissionRsp::SharedDtor() {
}

void SetResourcePermissionRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SetResourcePermissionRsp::descriptor() {
  ::protobuf_rbac_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rbac_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetResourcePermissionRsp& SetResourcePermissionRsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rbac_2eproto::scc_info_SetResourcePermissionRsp.base);
  return *internal_default_instance();
}


void SetResourcePermissionRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:rbac.SetResourcePermissionRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool SetResourcePermissionRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rbac.SetResourcePermissionRsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:rbac.SetResourcePermissionRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rbac.SetResourcePermissionRsp)
  return false;
#undef DO_
}

void SetResourcePermissionRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rbac.SetResourcePermissionRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rbac.SetResourcePermissionRsp)
}

::google::protobuf::uint8* SetResourcePermissionRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rbac.SetResourcePermissionRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rbac.SetResourcePermissionRsp)
  return target;
}

size_t SetResourcePermissionRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rbac.SetResourcePermissionRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetResourcePermissionRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rbac.SetResourcePermissionRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SetResourcePermissionRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetResourcePermissionRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rbac.SetResourcePermissionRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rbac.SetResourcePermissionRsp)
    MergeFrom(*source);
  }
}

void SetResourcePermissionRsp::MergeFrom(const SetResourcePermissionRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rbac.SetResourcePermissionRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void SetResourcePermissionRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rbac.SetResourcePermissionRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetResourcePermissionRsp::CopyFrom(const SetResourcePermissionRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rbac.SetResourcePermissionRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetResourcePermissionRsp::IsInitialized() const {
  return true;
}

void SetResourcePermissionRsp::Swap(SetResourcePermissionRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetResourcePermissionRsp::InternalSwap(SetResourcePermissionRsp* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SetResourcePermissionRsp::GetMetadata() const {
  protobuf_rbac_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rbac_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AddResourceOwnerRqst::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddResourceOwnerRqst::kPathFieldNumber;
const int AddResourceOwnerRqst::kSubjectFieldNumber;
const int AddResourceOwnerRqst::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddResourceOwnerRqst::AddResourceOwnerRqst()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rbac_2eproto::scc_info_AddResourceOwnerRqst.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rbac.AddResourceOwnerRqst)
}
AddResourceOwnerRqst::AddResourceOwnerRqst(const AddResourceOwnerRqst& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.path().size() > 0) {
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  subject_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.subject().size() > 0) {
    subject_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.subject_);
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:rbac.AddResourceOwnerRqst)
}

void AddResourceOwnerRqst::SharedCtor() {
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subject_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
}

AddResourceOwnerRqst::~AddResourceOwnerRqst() {
  // @@protoc_insertion_point(destructor:rbac.AddResourceOwnerRqst)
  SharedDtor();
}

void AddResourceOwnerRqst::SharedDtor() {
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subject_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AddResourceOwnerRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AddResourceOwnerRqst::descriptor() {
  ::protobuf_rbac_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rbac_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AddResourceOwnerRqst& AddResourceOwnerRqst::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rbac_2eproto::scc_info_AddResourceOwnerRqst.base);
  return *internal_default_instance();
}


void AddResourceOwnerRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:rbac.AddResourceOwnerRqst)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subject_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
  _internal_metadata_.Clear();
}

bool AddResourceOwnerRqst::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rbac.AddResourceOwnerRqst)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string path = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->path().data(), static_cast<int>(this->path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rbac.AddResourceOwnerRqst.path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string subject = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_subject()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->subject().data(), static_cast<int>(this->subject().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rbac.AddResourceOwnerRqst.subject"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .rbac.SubjectType type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::rbac::SubjectType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rbac.AddResourceOwnerRqst)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rbac.AddResourceOwnerRqst)
  return false;
#undef DO_
}

void AddResourceOwnerRqst::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rbac.AddResourceOwnerRqst)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbac.AddResourceOwnerRqst.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->path(), output);
  }

  // string subject = 2;
  if (this->subject().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->subject().data(), static_cast<int>(this->subject().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbac.AddResourceOwnerRqst.subject");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->subject(), output);
  }

  // .rbac.SubjectType type = 3;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rbac.AddResourceOwnerRqst)
}

::google::protobuf::uint8* AddResourceOwnerRqst::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rbac.AddResourceOwnerRqst)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbac.AddResourceOwnerRqst.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->path(), target);
  }

  // string subject = 2;
  if (this->subject().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->subject().data(), static_cast<int>(this->subject().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbac.AddResourceOwnerRqst.subject");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->subject(), target);
  }

  // .rbac.SubjectType type = 3;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rbac.AddResourceOwnerRqst)
  return target;
}

size_t AddResourceOwnerRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rbac.AddResourceOwnerRqst)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string path = 1;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  // string subject = 2;
  if (this->subject().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->subject());
  }

  // .rbac.SubjectType type = 3;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddResourceOwnerRqst::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rbac.AddResourceOwnerRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const AddResourceOwnerRqst* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddResourceOwnerRqst>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rbac.AddResourceOwnerRqst)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rbac.AddResourceOwnerRqst)
    MergeFrom(*source);
  }
}

void AddResourceOwnerRqst::MergeFrom(const AddResourceOwnerRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rbac.AddResourceOwnerRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.path().size() > 0) {

    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  if (from.subject().size() > 0) {

    subject_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.subject_);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void AddResourceOwnerRqst::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rbac.AddResourceOwnerRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddResourceOwnerRqst::CopyFrom(const AddResourceOwnerRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rbac.AddResourceOwnerRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddResourceOwnerRqst::IsInitialized() const {
  return true;
}

void AddResourceOwnerRqst::Swap(AddResourceOwnerRqst* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddResourceOwnerRqst::InternalSwap(AddResourceOwnerRqst* other) {
  using std::swap;
  path_.Swap(&other->path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  subject_.Swap(&other->subject_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AddResourceOwnerRqst::GetMetadata() const {
  protobuf_rbac_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rbac_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AddResourceOwnerRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddResourceOwnerRsp::AddResourceOwnerRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rbac_2eproto::scc_info_AddResourceOwnerRsp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rbac.AddResourceOwnerRsp)
}
AddResourceOwnerRsp::AddResourceOwnerRsp(const AddResourceOwnerRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:rbac.AddResourceOwnerRsp)
}

void AddResourceOwnerRsp::SharedCtor() {
}

AddResourceOwnerRsp::~AddResourceOwnerRsp() {
  // @@protoc_insertion_point(destructor:rbac.AddResourceOwnerRsp)
  SharedDtor();
}

void AddResourceOwnerRsp::SharedDtor() {
}

void AddResourceOwnerRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AddResourceOwnerRsp::descriptor() {
  ::protobuf_rbac_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rbac_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AddResourceOwnerRsp& AddResourceOwnerRsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rbac_2eproto::scc_info_AddResourceOwnerRsp.base);
  return *internal_default_instance();
}


void AddResourceOwnerRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:rbac.AddResourceOwnerRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool AddResourceOwnerRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rbac.AddResourceOwnerRsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:rbac.AddResourceOwnerRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rbac.AddResourceOwnerRsp)
  return false;
#undef DO_
}

void AddResourceOwnerRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rbac.AddResourceOwnerRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rbac.AddResourceOwnerRsp)
}

::google::protobuf::uint8* AddResourceOwnerRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rbac.AddResourceOwnerRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rbac.AddResourceOwnerRsp)
  return target;
}

size_t AddResourceOwnerRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rbac.AddResourceOwnerRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddResourceOwnerRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rbac.AddResourceOwnerRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const AddResourceOwnerRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddResourceOwnerRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rbac.AddResourceOwnerRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rbac.AddResourceOwnerRsp)
    MergeFrom(*source);
  }
}

void AddResourceOwnerRsp::MergeFrom(const AddResourceOwnerRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rbac.AddResourceOwnerRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void AddResourceOwnerRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rbac.AddResourceOwnerRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddResourceOwnerRsp::CopyFrom(const AddResourceOwnerRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rbac.AddResourceOwnerRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddResourceOwnerRsp::IsInitialized() const {
  return true;
}

void AddResourceOwnerRsp::Swap(AddResourceOwnerRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddResourceOwnerRsp::InternalSwap(AddResourceOwnerRsp* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AddResourceOwnerRsp::GetMetadata() const {
  protobuf_rbac_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rbac_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RemoveResourceOwnerRqst::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RemoveResourceOwnerRqst::kPathFieldNumber;
const int RemoveResourceOwnerRqst::kSubjectFieldNumber;
const int RemoveResourceOwnerRqst::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RemoveResourceOwnerRqst::RemoveResourceOwnerRqst()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rbac_2eproto::scc_info_RemoveResourceOwnerRqst.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rbac.RemoveResourceOwnerRqst)
}
RemoveResourceOwnerRqst::RemoveResourceOwnerRqst(const RemoveResourceOwnerRqst& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.path().size() > 0) {
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  subject_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.subject().size() > 0) {
    subject_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.subject_);
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:rbac.RemoveResourceOwnerRqst)
}

void RemoveResourceOwnerRqst::SharedCtor() {
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subject_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
}

RemoveResourceOwnerRqst::~RemoveResourceOwnerRqst() {
  // @@protoc_insertion_point(destructor:rbac.RemoveResourceOwnerRqst)
  SharedDtor();
}

void RemoveResourceOwnerRqst::SharedDtor() {
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subject_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RemoveResourceOwnerRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RemoveResourceOwnerRqst::descriptor() {
  ::protobuf_rbac_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rbac_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RemoveResourceOwnerRqst& RemoveResourceOwnerRqst::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rbac_2eproto::scc_info_RemoveResourceOwnerRqst.base);
  return *internal_default_instance();
}


void RemoveResourceOwnerRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:rbac.RemoveResourceOwnerRqst)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subject_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
  _internal_metadata_.Clear();
}

bool RemoveResourceOwnerRqst::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rbac.RemoveResourceOwnerRqst)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string path = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->path().data(), static_cast<int>(this->path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rbac.RemoveResourceOwnerRqst.path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string subject = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_subject()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->subject().data(), static_cast<int>(this->subject().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rbac.RemoveResourceOwnerRqst.subject"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .rbac.SubjectType type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::rbac::SubjectType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rbac.RemoveResourceOwnerRqst)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rbac.RemoveResourceOwnerRqst)
  return false;
#undef DO_
}

void RemoveResourceOwnerRqst::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rbac.RemoveResourceOwnerRqst)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbac.RemoveResourceOwnerRqst.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->path(), output);
  }

  // string subject = 2;
  if (this->subject().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->subject().data(), static_cast<int>(this->subject().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbac.RemoveResourceOwnerRqst.subject");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->subject(), output);
  }

  // .rbac.SubjectType type = 3;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rbac.RemoveResourceOwnerRqst)
}

::google::protobuf::uint8* RemoveResourceOwnerRqst::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rbac.RemoveResourceOwnerRqst)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbac.RemoveResourceOwnerRqst.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->path(), target);
  }

  // string subject = 2;
  if (this->subject().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->subject().data(), static_cast<int>(this->subject().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbac.RemoveResourceOwnerRqst.subject");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->subject(), target);
  }

  // .rbac.SubjectType type = 3;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rbac.RemoveResourceOwnerRqst)
  return target;
}

size_t RemoveResourceOwnerRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rbac.RemoveResourceOwnerRqst)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string path = 1;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  // string subject = 2;
  if (this->subject().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->subject());
  }

  // .rbac.SubjectType type = 3;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveResourceOwnerRqst::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rbac.RemoveResourceOwnerRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveResourceOwnerRqst* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RemoveResourceOwnerRqst>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rbac.RemoveResourceOwnerRqst)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rbac.RemoveResourceOwnerRqst)
    MergeFrom(*source);
  }
}

void RemoveResourceOwnerRqst::MergeFrom(const RemoveResourceOwnerRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rbac.RemoveResourceOwnerRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.path().size() > 0) {

    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  if (from.subject().size() > 0) {

    subject_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.subject_);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void RemoveResourceOwnerRqst::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rbac.RemoveResourceOwnerRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveResourceOwnerRqst::CopyFrom(const RemoveResourceOwnerRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rbac.RemoveResourceOwnerRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveResourceOwnerRqst::IsInitialized() const {
  return true;
}

void RemoveResourceOwnerRqst::Swap(RemoveResourceOwnerRqst* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RemoveResourceOwnerRqst::InternalSwap(RemoveResourceOwnerRqst* other) {
  using std::swap;
  path_.Swap(&other->path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  subject_.Swap(&other->subject_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RemoveResourceOwnerRqst::GetMetadata() const {
  protobuf_rbac_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rbac_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RemoveResourceOwnerRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RemoveResourceOwnerRsp::RemoveResourceOwnerRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rbac_2eproto::scc_info_RemoveResourceOwnerRsp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rbac.RemoveResourceOwnerRsp)
}
RemoveResourceOwnerRsp::RemoveResourceOwnerRsp(const RemoveResourceOwnerRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:rbac.RemoveResourceOwnerRsp)
}

void RemoveResourceOwnerRsp::SharedCtor() {
}

RemoveResourceOwnerRsp::~RemoveResourceOwnerRsp() {
  // @@protoc_insertion_point(destructor:rbac.RemoveResourceOwnerRsp)
  SharedDtor();
}

void RemoveResourceOwnerRsp::SharedDtor() {
}

void RemoveResourceOwnerRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RemoveResourceOwnerRsp::descriptor() {
  ::protobuf_rbac_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rbac_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RemoveResourceOwnerRsp& RemoveResourceOwnerRsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rbac_2eproto::scc_info_RemoveResourceOwnerRsp.base);
  return *internal_default_instance();
}


void RemoveResourceOwnerRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:rbac.RemoveResourceOwnerRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool RemoveResourceOwnerRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rbac.RemoveResourceOwnerRsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:rbac.RemoveResourceOwnerRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rbac.RemoveResourceOwnerRsp)
  return false;
#undef DO_
}

void RemoveResourceOwnerRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rbac.RemoveResourceOwnerRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rbac.RemoveResourceOwnerRsp)
}

::google::protobuf::uint8* RemoveResourceOwnerRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rbac.RemoveResourceOwnerRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rbac.RemoveResourceOwnerRsp)
  return target;
}

size_t RemoveResourceOwnerRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rbac.RemoveResourceOwnerRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveResourceOwnerRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rbac.RemoveResourceOwnerRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveResourceOwnerRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RemoveResourceOwnerRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rbac.RemoveResourceOwnerRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rbac.RemoveResourceOwnerRsp)
    MergeFrom(*source);
  }
}

void RemoveResourceOwnerRsp::MergeFrom(const RemoveResourceOwnerRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rbac.RemoveResourceOwnerRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void RemoveResourceOwnerRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rbac.RemoveResourceOwnerRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveResourceOwnerRsp::CopyFrom(const RemoveResourceOwnerRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rbac.RemoveResourceOwnerRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveResourceOwnerRsp::IsInitialized() const {
  return true;
}

void RemoveResourceOwnerRsp::Swap(RemoveResourceOwnerRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RemoveResourceOwnerRsp::InternalSwap(RemoveResourceOwnerRsp* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RemoveResourceOwnerRsp::GetMetadata() const {
  protobuf_rbac_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rbac_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeleteAllAccessRqst::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteAllAccessRqst::kSubjectFieldNumber;
const int DeleteAllAccessRqst::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteAllAccessRqst::DeleteAllAccessRqst()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rbac_2eproto::scc_info_DeleteAllAccessRqst.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rbac.DeleteAllAccessRqst)
}
DeleteAllAccessRqst::DeleteAllAccessRqst(const DeleteAllAccessRqst& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  subject_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.subject().size() > 0) {
    subject_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.subject_);
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:rbac.DeleteAllAccessRqst)
}

void DeleteAllAccessRqst::SharedCtor() {
  subject_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
}

DeleteAllAccessRqst::~DeleteAllAccessRqst() {
  // @@protoc_insertion_point(destructor:rbac.DeleteAllAccessRqst)
  SharedDtor();
}

void DeleteAllAccessRqst::SharedDtor() {
  subject_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeleteAllAccessRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeleteAllAccessRqst::descriptor() {
  ::protobuf_rbac_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rbac_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteAllAccessRqst& DeleteAllAccessRqst::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rbac_2eproto::scc_info_DeleteAllAccessRqst.base);
  return *internal_default_instance();
}


void DeleteAllAccessRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:rbac.DeleteAllAccessRqst)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  subject_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
  _internal_metadata_.Clear();
}

bool DeleteAllAccessRqst::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rbac.DeleteAllAccessRqst)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string subject = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_subject()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->subject().data(), static_cast<int>(this->subject().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rbac.DeleteAllAccessRqst.subject"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .rbac.SubjectType type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::rbac::SubjectType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rbac.DeleteAllAccessRqst)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rbac.DeleteAllAccessRqst)
  return false;
#undef DO_
}

void DeleteAllAccessRqst::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rbac.DeleteAllAccessRqst)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string subject = 1;
  if (this->subject().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->subject().data(), static_cast<int>(this->subject().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbac.DeleteAllAccessRqst.subject");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->subject(), output);
  }

  // .rbac.SubjectType type = 2;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rbac.DeleteAllAccessRqst)
}

::google::protobuf::uint8* DeleteAllAccessRqst::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rbac.DeleteAllAccessRqst)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string subject = 1;
  if (this->subject().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->subject().data(), static_cast<int>(this->subject().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbac.DeleteAllAccessRqst.subject");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->subject(), target);
  }

  // .rbac.SubjectType type = 2;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rbac.DeleteAllAccessRqst)
  return target;
}

size_t DeleteAllAccessRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rbac.DeleteAllAccessRqst)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string subject = 1;
  if (this->subject().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->subject());
  }

  // .rbac.SubjectType type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteAllAccessRqst::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rbac.DeleteAllAccessRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteAllAccessRqst* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteAllAccessRqst>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rbac.DeleteAllAccessRqst)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rbac.DeleteAllAccessRqst)
    MergeFrom(*source);
  }
}

void DeleteAllAccessRqst::MergeFrom(const DeleteAllAccessRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rbac.DeleteAllAccessRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.subject().size() > 0) {

    subject_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.subject_);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void DeleteAllAccessRqst::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rbac.DeleteAllAccessRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteAllAccessRqst::CopyFrom(const DeleteAllAccessRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rbac.DeleteAllAccessRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteAllAccessRqst::IsInitialized() const {
  return true;
}

void DeleteAllAccessRqst::Swap(DeleteAllAccessRqst* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteAllAccessRqst::InternalSwap(DeleteAllAccessRqst* other) {
  using std::swap;
  subject_.Swap(&other->subject_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeleteAllAccessRqst::GetMetadata() const {
  protobuf_rbac_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rbac_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeleteAllAccessRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteAllAccessRsp::DeleteAllAccessRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rbac_2eproto::scc_info_DeleteAllAccessRsp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rbac.DeleteAllAccessRsp)
}
DeleteAllAccessRsp::DeleteAllAccessRsp(const DeleteAllAccessRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:rbac.DeleteAllAccessRsp)
}

void DeleteAllAccessRsp::SharedCtor() {
}

DeleteAllAccessRsp::~DeleteAllAccessRsp() {
  // @@protoc_insertion_point(destructor:rbac.DeleteAllAccessRsp)
  SharedDtor();
}

void DeleteAllAccessRsp::SharedDtor() {
}

void DeleteAllAccessRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeleteAllAccessRsp::descriptor() {
  ::protobuf_rbac_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rbac_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteAllAccessRsp& DeleteAllAccessRsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rbac_2eproto::scc_info_DeleteAllAccessRsp.base);
  return *internal_default_instance();
}


void DeleteAllAccessRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:rbac.DeleteAllAccessRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool DeleteAllAccessRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rbac.DeleteAllAccessRsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:rbac.DeleteAllAccessRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rbac.DeleteAllAccessRsp)
  return false;
#undef DO_
}

void DeleteAllAccessRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rbac.DeleteAllAccessRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rbac.DeleteAllAccessRsp)
}

::google::protobuf::uint8* DeleteAllAccessRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rbac.DeleteAllAccessRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rbac.DeleteAllAccessRsp)
  return target;
}

size_t DeleteAllAccessRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rbac.DeleteAllAccessRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteAllAccessRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rbac.DeleteAllAccessRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteAllAccessRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteAllAccessRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rbac.DeleteAllAccessRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rbac.DeleteAllAccessRsp)
    MergeFrom(*source);
  }
}

void DeleteAllAccessRsp::MergeFrom(const DeleteAllAccessRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rbac.DeleteAllAccessRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void DeleteAllAccessRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rbac.DeleteAllAccessRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteAllAccessRsp::CopyFrom(const DeleteAllAccessRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rbac.DeleteAllAccessRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteAllAccessRsp::IsInitialized() const {
  return true;
}

void DeleteAllAccessRsp::Swap(DeleteAllAccessRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteAllAccessRsp::InternalSwap(DeleteAllAccessRsp* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeleteAllAccessRsp::GetMetadata() const {
  protobuf_rbac_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rbac_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ValidateAccessRqst::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ValidateAccessRqst::kSubjectFieldNumber;
const int ValidateAccessRqst::kTypeFieldNumber;
const int ValidateAccessRqst::kPathFieldNumber;
const int ValidateAccessRqst::kPermissionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ValidateAccessRqst::ValidateAccessRqst()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rbac_2eproto::scc_info_ValidateAccessRqst.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rbac.ValidateAccessRqst)
}
ValidateAccessRqst::ValidateAccessRqst(const ValidateAccessRqst& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  subject_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.subject().size() > 0) {
    subject_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.subject_);
  }
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.path().size() > 0) {
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  permission_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.permission().size() > 0) {
    permission_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.permission_);
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:rbac.ValidateAccessRqst)
}

void ValidateAccessRqst::SharedCtor() {
  subject_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  permission_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
}

ValidateAccessRqst::~ValidateAccessRqst() {
  // @@protoc_insertion_point(destructor:rbac.ValidateAccessRqst)
  SharedDtor();
}

void ValidateAccessRqst::SharedDtor() {
  subject_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  permission_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ValidateAccessRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ValidateAccessRqst::descriptor() {
  ::protobuf_rbac_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rbac_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ValidateAccessRqst& ValidateAccessRqst::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rbac_2eproto::scc_info_ValidateAccessRqst.base);
  return *internal_default_instance();
}


void ValidateAccessRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:rbac.ValidateAccessRqst)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  subject_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  permission_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
  _internal_metadata_.Clear();
}

bool ValidateAccessRqst::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rbac.ValidateAccessRqst)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string subject = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_subject()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->subject().data(), static_cast<int>(this->subject().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rbac.ValidateAccessRqst.subject"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .rbac.SubjectType type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::rbac::SubjectType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string path = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->path().data(), static_cast<int>(this->path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rbac.ValidateAccessRqst.path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string permission = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_permission()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->permission().data(), static_cast<int>(this->permission().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rbac.ValidateAccessRqst.permission"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rbac.ValidateAccessRqst)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rbac.ValidateAccessRqst)
  return false;
#undef DO_
}

void ValidateAccessRqst::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rbac.ValidateAccessRqst)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string subject = 1;
  if (this->subject().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->subject().data(), static_cast<int>(this->subject().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbac.ValidateAccessRqst.subject");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->subject(), output);
  }

  // .rbac.SubjectType type = 2;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  // string path = 3;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbac.ValidateAccessRqst.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->path(), output);
  }

  // string permission = 4;
  if (this->permission().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->permission().data(), static_cast<int>(this->permission().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbac.ValidateAccessRqst.permission");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->permission(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rbac.ValidateAccessRqst)
}

::google::protobuf::uint8* ValidateAccessRqst::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rbac.ValidateAccessRqst)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string subject = 1;
  if (this->subject().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->subject().data(), static_cast<int>(this->subject().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbac.ValidateAccessRqst.subject");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->subject(), target);
  }

  // .rbac.SubjectType type = 2;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }

  // string path = 3;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbac.ValidateAccessRqst.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->path(), target);
  }

  // string permission = 4;
  if (this->permission().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->permission().data(), static_cast<int>(this->permission().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbac.ValidateAccessRqst.permission");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->permission(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rbac.ValidateAccessRqst)
  return target;
}

size_t ValidateAccessRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rbac.ValidateAccessRqst)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string subject = 1;
  if (this->subject().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->subject());
  }

  // string path = 3;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  // string permission = 4;
  if (this->permission().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->permission());
  }

  // .rbac.SubjectType type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ValidateAccessRqst::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rbac.ValidateAccessRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const ValidateAccessRqst* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ValidateAccessRqst>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rbac.ValidateAccessRqst)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rbac.ValidateAccessRqst)
    MergeFrom(*source);
  }
}

void ValidateAccessRqst::MergeFrom(const ValidateAccessRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rbac.ValidateAccessRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.subject().size() > 0) {

    subject_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.subject_);
  }
  if (from.path().size() > 0) {

    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  if (from.permission().size() > 0) {

    permission_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.permission_);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void ValidateAccessRqst::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rbac.ValidateAccessRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ValidateAccessRqst::CopyFrom(const ValidateAccessRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rbac.ValidateAccessRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ValidateAccessRqst::IsInitialized() const {
  return true;
}

void ValidateAccessRqst::Swap(ValidateAccessRqst* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ValidateAccessRqst::InternalSwap(ValidateAccessRqst* other) {
  using std::swap;
  subject_.Swap(&other->subject_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  path_.Swap(&other->path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  permission_.Swap(&other->permission_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ValidateAccessRqst::GetMetadata() const {
  protobuf_rbac_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rbac_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ValidateAccessRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ValidateAccessRsp::kHasAccessFieldNumber;
const int ValidateAccessRsp::kAccessDeniedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ValidateAccessRsp::ValidateAccessRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rbac_2eproto::scc_info_ValidateAccessRsp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rbac.ValidateAccessRsp)
}
ValidateAccessRsp::ValidateAccessRsp(const ValidateAccessRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&hasaccess_, &from.hasaccess_,
    static_cast<size_t>(reinterpret_cast<char*>(&accessdenied_) -
    reinterpret_cast<char*>(&hasaccess_)) + sizeof(accessdenied_));
  // @@protoc_insertion_point(copy_constructor:rbac.ValidateAccessRsp)
}

void ValidateAccessRsp::SharedCtor() {
  ::memset(&hasaccess_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&accessdenied_) -
      reinterpret_cast<char*>(&hasaccess_)) + sizeof(accessdenied_));
}

ValidateAccessRsp::~ValidateAccessRsp() {
  // @@protoc_insertion_point(destructor:rbac.ValidateAccessRsp)
  SharedDtor();
}

void ValidateAccessRsp::SharedDtor() {
}

void ValidateAccessRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ValidateAccessRsp::descriptor() {
  ::protobuf_rbac_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rbac_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ValidateAccessRsp& ValidateAccessRsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rbac_2eproto::scc_info_ValidateAccessRsp.base);
  return *internal_default_instance();
}


void ValidateAccessRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:rbac.ValidateAccessRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&hasaccess_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&accessdenied_) -
      reinterpret_cast<char*>(&hasaccess_)) + sizeof(accessdenied_));
  _internal_metadata_.Clear();
}

bool ValidateAccessRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rbac.ValidateAccessRsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool hasAccess = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &hasaccess_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool accessDenied = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &accessdenied_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rbac.ValidateAccessRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rbac.ValidateAccessRsp)
  return false;
#undef DO_
}

void ValidateAccessRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rbac.ValidateAccessRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool hasAccess = 1;
  if (this->hasaccess() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->hasaccess(), output);
  }

  // bool accessDenied = 2;
  if (this->accessdenied() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->accessdenied(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rbac.ValidateAccessRsp)
}

::google::protobuf::uint8* ValidateAccessRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rbac.ValidateAccessRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool hasAccess = 1;
  if (this->hasaccess() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->hasaccess(), target);
  }

  // bool accessDenied = 2;
  if (this->accessdenied() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->accessdenied(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rbac.ValidateAccessRsp)
  return target;
}

size_t ValidateAccessRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rbac.ValidateAccessRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool hasAccess = 1;
  if (this->hasaccess() != 0) {
    total_size += 1 + 1;
  }

  // bool accessDenied = 2;
  if (this->accessdenied() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ValidateAccessRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rbac.ValidateAccessRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ValidateAccessRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ValidateAccessRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rbac.ValidateAccessRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rbac.ValidateAccessRsp)
    MergeFrom(*source);
  }
}

void ValidateAccessRsp::MergeFrom(const ValidateAccessRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rbac.ValidateAccessRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.hasaccess() != 0) {
    set_hasaccess(from.hasaccess());
  }
  if (from.accessdenied() != 0) {
    set_accessdenied(from.accessdenied());
  }
}

void ValidateAccessRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rbac.ValidateAccessRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ValidateAccessRsp::CopyFrom(const ValidateAccessRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rbac.ValidateAccessRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ValidateAccessRsp::IsInitialized() const {
  return true;
}

void ValidateAccessRsp::Swap(ValidateAccessRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ValidateAccessRsp::InternalSwap(ValidateAccessRsp* other) {
  using std::swap;
  swap(hasaccess_, other->hasaccess_);
  swap(accessdenied_, other->accessdenied_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ValidateAccessRsp::GetMetadata() const {
  protobuf_rbac_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rbac_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetActionResourceInfosRqst::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetActionResourceInfosRqst::kActionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetActionResourceInfosRqst::GetActionResourceInfosRqst()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rbac_2eproto::scc_info_GetActionResourceInfosRqst.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rbac.GetActionResourceInfosRqst)
}
GetActionResourceInfosRqst::GetActionResourceInfosRqst(const GetActionResourceInfosRqst& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  action_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.action().size() > 0) {
    action_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.action_);
  }
  // @@protoc_insertion_point(copy_constructor:rbac.GetActionResourceInfosRqst)
}

void GetActionResourceInfosRqst::SharedCtor() {
  action_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetActionResourceInfosRqst::~GetActionResourceInfosRqst() {
  // @@protoc_insertion_point(destructor:rbac.GetActionResourceInfosRqst)
  SharedDtor();
}

void GetActionResourceInfosRqst::SharedDtor() {
  action_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetActionResourceInfosRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetActionResourceInfosRqst::descriptor() {
  ::protobuf_rbac_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rbac_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetActionResourceInfosRqst& GetActionResourceInfosRqst::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rbac_2eproto::scc_info_GetActionResourceInfosRqst.base);
  return *internal_default_instance();
}


void GetActionResourceInfosRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:rbac.GetActionResourceInfosRqst)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  action_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GetActionResourceInfosRqst::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rbac.GetActionResourceInfosRqst)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string action = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_action()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->action().data(), static_cast<int>(this->action().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rbac.GetActionResourceInfosRqst.action"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rbac.GetActionResourceInfosRqst)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rbac.GetActionResourceInfosRqst)
  return false;
#undef DO_
}

void GetActionResourceInfosRqst::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rbac.GetActionResourceInfosRqst)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string action = 1;
  if (this->action().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->action().data(), static_cast<int>(this->action().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbac.GetActionResourceInfosRqst.action");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->action(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rbac.GetActionResourceInfosRqst)
}

::google::protobuf::uint8* GetActionResourceInfosRqst::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rbac.GetActionResourceInfosRqst)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string action = 1;
  if (this->action().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->action().data(), static_cast<int>(this->action().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbac.GetActionResourceInfosRqst.action");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->action(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rbac.GetActionResourceInfosRqst)
  return target;
}

size_t GetActionResourceInfosRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rbac.GetActionResourceInfosRqst)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string action = 1;
  if (this->action().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->action());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetActionResourceInfosRqst::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rbac.GetActionResourceInfosRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const GetActionResourceInfosRqst* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetActionResourceInfosRqst>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rbac.GetActionResourceInfosRqst)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rbac.GetActionResourceInfosRqst)
    MergeFrom(*source);
  }
}

void GetActionResourceInfosRqst::MergeFrom(const GetActionResourceInfosRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rbac.GetActionResourceInfosRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.action().size() > 0) {

    action_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.action_);
  }
}

void GetActionResourceInfosRqst::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rbac.GetActionResourceInfosRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetActionResourceInfosRqst::CopyFrom(const GetActionResourceInfosRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rbac.GetActionResourceInfosRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetActionResourceInfosRqst::IsInitialized() const {
  return true;
}

void GetActionResourceInfosRqst::Swap(GetActionResourceInfosRqst* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetActionResourceInfosRqst::InternalSwap(GetActionResourceInfosRqst* other) {
  using std::swap;
  action_.Swap(&other->action_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetActionResourceInfosRqst::GetMetadata() const {
  protobuf_rbac_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rbac_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ResourceInfos::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResourceInfos::kIndexFieldNumber;
const int ResourceInfos::kPermissionFieldNumber;
const int ResourceInfos::kPathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResourceInfos::ResourceInfos()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rbac_2eproto::scc_info_ResourceInfos.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rbac.ResourceInfos)
}
ResourceInfos::ResourceInfos(const ResourceInfos& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  permission_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.permission().size() > 0) {
    permission_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.permission_);
  }
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.path().size() > 0) {
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  index_ = from.index_;
  // @@protoc_insertion_point(copy_constructor:rbac.ResourceInfos)
}

void ResourceInfos::SharedCtor() {
  permission_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  index_ = 0;
}

ResourceInfos::~ResourceInfos() {
  // @@protoc_insertion_point(destructor:rbac.ResourceInfos)
  SharedDtor();
}

void ResourceInfos::SharedDtor() {
  permission_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ResourceInfos::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ResourceInfos::descriptor() {
  ::protobuf_rbac_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rbac_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ResourceInfos& ResourceInfos::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rbac_2eproto::scc_info_ResourceInfos.base);
  return *internal_default_instance();
}


void ResourceInfos::Clear() {
// @@protoc_insertion_point(message_clear_start:rbac.ResourceInfos)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  permission_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  index_ = 0;
  _internal_metadata_.Clear();
}

bool ResourceInfos::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rbac.ResourceInfos)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 index = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string permission = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_permission()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->permission().data(), static_cast<int>(this->permission().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rbac.ResourceInfos.permission"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string path = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->path().data(), static_cast<int>(this->path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rbac.ResourceInfos.path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rbac.ResourceInfos)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rbac.ResourceInfos)
  return false;
#undef DO_
}

void ResourceInfos::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rbac.ResourceInfos)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 index = 1;
  if (this->index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->index(), output);
  }

  // string permission = 2;
  if (this->permission().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->permission().data(), static_cast<int>(this->permission().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbac.ResourceInfos.permission");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->permission(), output);
  }

  // string path = 3;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbac.ResourceInfos.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->path(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rbac.ResourceInfos)
}

::google::protobuf::uint8* ResourceInfos::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rbac.ResourceInfos)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 index = 1;
  if (this->index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->index(), target);
  }

  // string permission = 2;
  if (this->permission().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->permission().data(), static_cast<int>(this->permission().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbac.ResourceInfos.permission");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->permission(), target);
  }

  // string path = 3;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbac.ResourceInfos.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->path(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rbac.ResourceInfos)
  return target;
}

size_t ResourceInfos::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rbac.ResourceInfos)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string permission = 2;
  if (this->permission().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->permission());
  }

  // string path = 3;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  // int32 index = 1;
  if (this->index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->index());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResourceInfos::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rbac.ResourceInfos)
  GOOGLE_DCHECK_NE(&from, this);
  const ResourceInfos* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ResourceInfos>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rbac.ResourceInfos)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rbac.ResourceInfos)
    MergeFrom(*source);
  }
}

void ResourceInfos::MergeFrom(const ResourceInfos& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rbac.ResourceInfos)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.permission().size() > 0) {

    permission_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.permission_);
  }
  if (from.path().size() > 0) {

    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  if (from.index() != 0) {
    set_index(from.index());
  }
}

void ResourceInfos::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rbac.ResourceInfos)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResourceInfos::CopyFrom(const ResourceInfos& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rbac.ResourceInfos)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResourceInfos::IsInitialized() const {
  return true;
}

void ResourceInfos::Swap(ResourceInfos* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResourceInfos::InternalSwap(ResourceInfos* other) {
  using std::swap;
  permission_.Swap(&other->permission_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  path_.Swap(&other->path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(index_, other->index_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ResourceInfos::GetMetadata() const {
  protobuf_rbac_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rbac_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetActionResourceInfosRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetActionResourceInfosRsp::kInfosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetActionResourceInfosRsp::GetActionResourceInfosRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rbac_2eproto::scc_info_GetActionResourceInfosRsp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rbac.GetActionResourceInfosRsp)
}
GetActionResourceInfosRsp::GetActionResourceInfosRsp(const GetActionResourceInfosRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      infos_(from.infos_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:rbac.GetActionResourceInfosRsp)
}

void GetActionResourceInfosRsp::SharedCtor() {
}

GetActionResourceInfosRsp::~GetActionResourceInfosRsp() {
  // @@protoc_insertion_point(destructor:rbac.GetActionResourceInfosRsp)
  SharedDtor();
}

void GetActionResourceInfosRsp::SharedDtor() {
}

void GetActionResourceInfosRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetActionResourceInfosRsp::descriptor() {
  ::protobuf_rbac_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rbac_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetActionResourceInfosRsp& GetActionResourceInfosRsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rbac_2eproto::scc_info_GetActionResourceInfosRsp.base);
  return *internal_default_instance();
}


void GetActionResourceInfosRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:rbac.GetActionResourceInfosRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  infos_.Clear();
  _internal_metadata_.Clear();
}

bool GetActionResourceInfosRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rbac.GetActionResourceInfosRsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .rbac.ResourceInfos infos = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_infos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rbac.GetActionResourceInfosRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rbac.GetActionResourceInfosRsp)
  return false;
#undef DO_
}

void GetActionResourceInfosRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rbac.GetActionResourceInfosRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .rbac.ResourceInfos infos = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->infos_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->infos(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rbac.GetActionResourceInfosRsp)
}

::google::protobuf::uint8* GetActionResourceInfosRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rbac.GetActionResourceInfosRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .rbac.ResourceInfos infos = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->infos_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->infos(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rbac.GetActionResourceInfosRsp)
  return target;
}

size_t GetActionResourceInfosRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rbac.GetActionResourceInfosRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .rbac.ResourceInfos infos = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->infos_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->infos(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetActionResourceInfosRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rbac.GetActionResourceInfosRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetActionResourceInfosRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetActionResourceInfosRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rbac.GetActionResourceInfosRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rbac.GetActionResourceInfosRsp)
    MergeFrom(*source);
  }
}

void GetActionResourceInfosRsp::MergeFrom(const GetActionResourceInfosRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rbac.GetActionResourceInfosRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  infos_.MergeFrom(from.infos_);
}

void GetActionResourceInfosRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rbac.GetActionResourceInfosRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetActionResourceInfosRsp::CopyFrom(const GetActionResourceInfosRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rbac.GetActionResourceInfosRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetActionResourceInfosRsp::IsInitialized() const {
  return true;
}

void GetActionResourceInfosRsp::Swap(GetActionResourceInfosRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetActionResourceInfosRsp::InternalSwap(GetActionResourceInfosRsp* other) {
  using std::swap;
  CastToBase(&infos_)->InternalSwap(CastToBase(&other->infos_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetActionResourceInfosRsp::GetMetadata() const {
  protobuf_rbac_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rbac_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ValidateActionRqst::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ValidateActionRqst::kSubjectFieldNumber;
const int ValidateActionRqst::kTypeFieldNumber;
const int ValidateActionRqst::kActionFieldNumber;
const int ValidateActionRqst::kInfosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ValidateActionRqst::ValidateActionRqst()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rbac_2eproto::scc_info_ValidateActionRqst.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rbac.ValidateActionRqst)
}
ValidateActionRqst::ValidateActionRqst(const ValidateActionRqst& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      infos_(from.infos_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  subject_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.subject().size() > 0) {
    subject_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.subject_);
  }
  action_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.action().size() > 0) {
    action_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.action_);
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:rbac.ValidateActionRqst)
}

void ValidateActionRqst::SharedCtor() {
  subject_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  action_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
}

ValidateActionRqst::~ValidateActionRqst() {
  // @@protoc_insertion_point(destructor:rbac.ValidateActionRqst)
  SharedDtor();
}

void ValidateActionRqst::SharedDtor() {
  subject_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  action_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ValidateActionRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ValidateActionRqst::descriptor() {
  ::protobuf_rbac_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rbac_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ValidateActionRqst& ValidateActionRqst::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rbac_2eproto::scc_info_ValidateActionRqst.base);
  return *internal_default_instance();
}


void ValidateActionRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:rbac.ValidateActionRqst)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  infos_.Clear();
  subject_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  action_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
  _internal_metadata_.Clear();
}

bool ValidateActionRqst::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rbac.ValidateActionRqst)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string subject = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_subject()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->subject().data(), static_cast<int>(this->subject().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rbac.ValidateActionRqst.subject"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .rbac.SubjectType type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::rbac::SubjectType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string action = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_action()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->action().data(), static_cast<int>(this->action().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rbac.ValidateActionRqst.action"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .rbac.ResourceInfos infos = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_infos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rbac.ValidateActionRqst)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rbac.ValidateActionRqst)
  return false;
#undef DO_
}

void ValidateActionRqst::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rbac.ValidateActionRqst)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string subject = 1;
  if (this->subject().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->subject().data(), static_cast<int>(this->subject().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbac.ValidateActionRqst.subject");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->subject(), output);
  }

  // .rbac.SubjectType type = 2;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  // string action = 3;
  if (this->action().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->action().data(), static_cast<int>(this->action().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbac.ValidateActionRqst.action");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->action(), output);
  }

  // repeated .rbac.ResourceInfos infos = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->infos_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->infos(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rbac.ValidateActionRqst)
}

::google::protobuf::uint8* ValidateActionRqst::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rbac.ValidateActionRqst)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string subject = 1;
  if (this->subject().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->subject().data(), static_cast<int>(this->subject().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbac.ValidateActionRqst.subject");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->subject(), target);
  }

  // .rbac.SubjectType type = 2;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }

  // string action = 3;
  if (this->action().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->action().data(), static_cast<int>(this->action().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbac.ValidateActionRqst.action");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->action(), target);
  }

  // repeated .rbac.ResourceInfos infos = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->infos_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->infos(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rbac.ValidateActionRqst)
  return target;
}

size_t ValidateActionRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rbac.ValidateActionRqst)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .rbac.ResourceInfos infos = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->infos_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->infos(static_cast<int>(i)));
    }
  }

  // string subject = 1;
  if (this->subject().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->subject());
  }

  // string action = 3;
  if (this->action().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->action());
  }

  // .rbac.SubjectType type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ValidateActionRqst::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rbac.ValidateActionRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const ValidateActionRqst* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ValidateActionRqst>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rbac.ValidateActionRqst)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rbac.ValidateActionRqst)
    MergeFrom(*source);
  }
}

void ValidateActionRqst::MergeFrom(const ValidateActionRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rbac.ValidateActionRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  infos_.MergeFrom(from.infos_);
  if (from.subject().size() > 0) {

    subject_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.subject_);
  }
  if (from.action().size() > 0) {

    action_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.action_);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void ValidateActionRqst::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rbac.ValidateActionRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ValidateActionRqst::CopyFrom(const ValidateActionRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rbac.ValidateActionRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ValidateActionRqst::IsInitialized() const {
  return true;
}

void ValidateActionRqst::Swap(ValidateActionRqst* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ValidateActionRqst::InternalSwap(ValidateActionRqst* other) {
  using std::swap;
  CastToBase(&infos_)->InternalSwap(CastToBase(&other->infos_));
  subject_.Swap(&other->subject_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  action_.Swap(&other->action_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ValidateActionRqst::GetMetadata() const {
  protobuf_rbac_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rbac_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ValidateActionRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ValidateActionRsp::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ValidateActionRsp::ValidateActionRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rbac_2eproto::scc_info_ValidateActionRsp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rbac.ValidateActionRsp)
}
ValidateActionRsp::ValidateActionRsp(const ValidateActionRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:rbac.ValidateActionRsp)
}

void ValidateActionRsp::SharedCtor() {
  result_ = false;
}

ValidateActionRsp::~ValidateActionRsp() {
  // @@protoc_insertion_point(destructor:rbac.ValidateActionRsp)
  SharedDtor();
}

void ValidateActionRsp::SharedDtor() {
}

void ValidateActionRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ValidateActionRsp::descriptor() {
  ::protobuf_rbac_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rbac_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ValidateActionRsp& ValidateActionRsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rbac_2eproto::scc_info_ValidateActionRsp.base);
  return *internal_default_instance();
}


void ValidateActionRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:rbac.ValidateActionRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear();
}

bool ValidateActionRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rbac.ValidateActionRsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rbac.ValidateActionRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rbac.ValidateActionRsp)
  return false;
#undef DO_
}

void ValidateActionRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rbac.ValidateActionRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->result(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rbac.ValidateActionRsp)
}

::google::protobuf::uint8* ValidateActionRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rbac.ValidateActionRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->result(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rbac.ValidateActionRsp)
  return target;
}

size_t ValidateActionRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rbac.ValidateActionRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ValidateActionRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rbac.ValidateActionRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ValidateActionRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ValidateActionRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rbac.ValidateActionRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rbac.ValidateActionRsp)
    MergeFrom(*source);
  }
}

void ValidateActionRsp::MergeFrom(const ValidateActionRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rbac.ValidateActionRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    set_result(from.result());
  }
}

void ValidateActionRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rbac.ValidateActionRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ValidateActionRsp::CopyFrom(const ValidateActionRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rbac.ValidateActionRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ValidateActionRsp::IsInitialized() const {
  return true;
}

void ValidateActionRsp::Swap(ValidateActionRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ValidateActionRsp::InternalSwap(ValidateActionRsp* other) {
  using std::swap;
  swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ValidateActionRsp::GetMetadata() const {
  protobuf_rbac_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rbac_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SetActionResourcesPermissionsRqst::InitAsDefaultInstance() {
  ::rbac::_SetActionResourcesPermissionsRqst_default_instance_._instance.get_mutable()->permissions_ = const_cast< ::google::protobuf::Struct*>(
      ::google::protobuf::Struct::internal_default_instance());
}
void SetActionResourcesPermissionsRqst::clear_permissions() {
  if (GetArenaNoVirtual() == NULL && permissions_ != NULL) {
    delete permissions_;
  }
  permissions_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetActionResourcesPermissionsRqst::kPermissionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetActionResourcesPermissionsRqst::SetActionResourcesPermissionsRqst()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rbac_2eproto::scc_info_SetActionResourcesPermissionsRqst.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rbac.SetActionResourcesPermissionsRqst)
}
SetActionResourcesPermissionsRqst::SetActionResourcesPermissionsRqst(const SetActionResourcesPermissionsRqst& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_permissions()) {
    permissions_ = new ::google::protobuf::Struct(*from.permissions_);
  } else {
    permissions_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:rbac.SetActionResourcesPermissionsRqst)
}

void SetActionResourcesPermissionsRqst::SharedCtor() {
  permissions_ = NULL;
}

SetActionResourcesPermissionsRqst::~SetActionResourcesPermissionsRqst() {
  // @@protoc_insertion_point(destructor:rbac.SetActionResourcesPermissionsRqst)
  SharedDtor();
}

void SetActionResourcesPermissionsRqst::SharedDtor() {
  if (this != internal_default_instance()) delete permissions_;
}

void SetActionResourcesPermissionsRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SetActionResourcesPermissionsRqst::descriptor() {
  ::protobuf_rbac_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rbac_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetActionResourcesPermissionsRqst& SetActionResourcesPermissionsRqst::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rbac_2eproto::scc_info_SetActionResourcesPermissionsRqst.base);
  return *internal_default_instance();
}


void SetActionResourcesPermissionsRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:rbac.SetActionResourcesPermissionsRqst)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && permissions_ != NULL) {
    delete permissions_;
  }
  permissions_ = NULL;
  _internal_metadata_.Clear();
}

bool SetActionResourcesPermissionsRqst::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rbac.SetActionResourcesPermissionsRqst)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.Struct permissions = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_permissions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rbac.SetActionResourcesPermissionsRqst)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rbac.SetActionResourcesPermissionsRqst)
  return false;
#undef DO_
}

void SetActionResourcesPermissionsRqst::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rbac.SetActionResourcesPermissionsRqst)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Struct permissions = 1;
  if (this->has_permissions()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_permissions(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rbac.SetActionResourcesPermissionsRqst)
}

::google::protobuf::uint8* SetActionResourcesPermissionsRqst::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rbac.SetActionResourcesPermissionsRqst)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Struct permissions = 1;
  if (this->has_permissions()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_permissions(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rbac.SetActionResourcesPermissionsRqst)
  return target;
}

size_t SetActionResourcesPermissionsRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rbac.SetActionResourcesPermissionsRqst)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.protobuf.Struct permissions = 1;
  if (this->has_permissions()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *permissions_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetActionResourcesPermissionsRqst::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rbac.SetActionResourcesPermissionsRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const SetActionResourcesPermissionsRqst* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetActionResourcesPermissionsRqst>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rbac.SetActionResourcesPermissionsRqst)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rbac.SetActionResourcesPermissionsRqst)
    MergeFrom(*source);
  }
}

void SetActionResourcesPermissionsRqst::MergeFrom(const SetActionResourcesPermissionsRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rbac.SetActionResourcesPermissionsRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_permissions()) {
    mutable_permissions()->::google::protobuf::Struct::MergeFrom(from.permissions());
  }
}

void SetActionResourcesPermissionsRqst::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rbac.SetActionResourcesPermissionsRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetActionResourcesPermissionsRqst::CopyFrom(const SetActionResourcesPermissionsRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rbac.SetActionResourcesPermissionsRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetActionResourcesPermissionsRqst::IsInitialized() const {
  return true;
}

void SetActionResourcesPermissionsRqst::Swap(SetActionResourcesPermissionsRqst* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetActionResourcesPermissionsRqst::InternalSwap(SetActionResourcesPermissionsRqst* other) {
  using std::swap;
  swap(permissions_, other->permissions_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SetActionResourcesPermissionsRqst::GetMetadata() const {
  protobuf_rbac_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rbac_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SetActionResourcesPermissionsRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetActionResourcesPermissionsRsp::SetActionResourcesPermissionsRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rbac_2eproto::scc_info_SetActionResourcesPermissionsRsp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rbac.SetActionResourcesPermissionsRsp)
}
SetActionResourcesPermissionsRsp::SetActionResourcesPermissionsRsp(const SetActionResourcesPermissionsRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:rbac.SetActionResourcesPermissionsRsp)
}

void SetActionResourcesPermissionsRsp::SharedCtor() {
}

SetActionResourcesPermissionsRsp::~SetActionResourcesPermissionsRsp() {
  // @@protoc_insertion_point(destructor:rbac.SetActionResourcesPermissionsRsp)
  SharedDtor();
}

void SetActionResourcesPermissionsRsp::SharedDtor() {
}

void SetActionResourcesPermissionsRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SetActionResourcesPermissionsRsp::descriptor() {
  ::protobuf_rbac_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rbac_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetActionResourcesPermissionsRsp& SetActionResourcesPermissionsRsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rbac_2eproto::scc_info_SetActionResourcesPermissionsRsp.base);
  return *internal_default_instance();
}


void SetActionResourcesPermissionsRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:rbac.SetActionResourcesPermissionsRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool SetActionResourcesPermissionsRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rbac.SetActionResourcesPermissionsRsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:rbac.SetActionResourcesPermissionsRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rbac.SetActionResourcesPermissionsRsp)
  return false;
#undef DO_
}

void SetActionResourcesPermissionsRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rbac.SetActionResourcesPermissionsRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rbac.SetActionResourcesPermissionsRsp)
}

::google::protobuf::uint8* SetActionResourcesPermissionsRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rbac.SetActionResourcesPermissionsRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rbac.SetActionResourcesPermissionsRsp)
  return target;
}

size_t SetActionResourcesPermissionsRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rbac.SetActionResourcesPermissionsRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetActionResourcesPermissionsRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rbac.SetActionResourcesPermissionsRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SetActionResourcesPermissionsRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetActionResourcesPermissionsRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rbac.SetActionResourcesPermissionsRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rbac.SetActionResourcesPermissionsRsp)
    MergeFrom(*source);
  }
}

void SetActionResourcesPermissionsRsp::MergeFrom(const SetActionResourcesPermissionsRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rbac.SetActionResourcesPermissionsRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void SetActionResourcesPermissionsRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rbac.SetActionResourcesPermissionsRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetActionResourcesPermissionsRsp::CopyFrom(const SetActionResourcesPermissionsRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rbac.SetActionResourcesPermissionsRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetActionResourcesPermissionsRsp::IsInitialized() const {
  return true;
}

void SetActionResourcesPermissionsRsp::Swap(SetActionResourcesPermissionsRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetActionResourcesPermissionsRsp::InternalSwap(SetActionResourcesPermissionsRsp* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SetActionResourcesPermissionsRsp::GetMetadata() const {
  protobuf_rbac_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rbac_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Share::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Share::kPathFieldNumber;
const int Share::kDomainFieldNumber;
const int Share::kApplicationsFieldNumber;
const int Share::kPeersFieldNumber;
const int Share::kAccountsFieldNumber;
const int Share::kGroupsFieldNumber;
const int Share::kOrganizationsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Share::Share()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rbac_2eproto::scc_info_Share.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rbac.Share)
}
Share::Share(const Share& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      applications_(from.applications_),
      peers_(from.peers_),
      accounts_(from.accounts_),
      groups_(from.groups_),
      organizations_(from.organizations_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.path().size() > 0) {
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  domain_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.domain().size() > 0) {
    domain_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.domain_);
  }
  // @@protoc_insertion_point(copy_constructor:rbac.Share)
}

void Share::SharedCtor() {
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  domain_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Share::~Share() {
  // @@protoc_insertion_point(destructor:rbac.Share)
  SharedDtor();
}

void Share::SharedDtor() {
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  domain_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Share::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Share::descriptor() {
  ::protobuf_rbac_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rbac_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Share& Share::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rbac_2eproto::scc_info_Share.base);
  return *internal_default_instance();
}


void Share::Clear() {
// @@protoc_insertion_point(message_clear_start:rbac.Share)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  applications_.Clear();
  peers_.Clear();
  accounts_.Clear();
  groups_.Clear();
  organizations_.Clear();
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  domain_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Share::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rbac.Share)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string path = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->path().data(), static_cast<int>(this->path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rbac.Share.path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string domain = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_domain()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->domain().data(), static_cast<int>(this->domain().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rbac.Share.domain"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string applications = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_applications()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->applications(this->applications_size() - 1).data(),
            static_cast<int>(this->applications(this->applications_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rbac.Share.applications"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string peers = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_peers()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->peers(this->peers_size() - 1).data(),
            static_cast<int>(this->peers(this->peers_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rbac.Share.peers"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string accounts = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_accounts()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->accounts(this->accounts_size() - 1).data(),
            static_cast<int>(this->accounts(this->accounts_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rbac.Share.accounts"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string groups = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_groups()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->groups(this->groups_size() - 1).data(),
            static_cast<int>(this->groups(this->groups_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rbac.Share.groups"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string organizations = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_organizations()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->organizations(this->organizations_size() - 1).data(),
            static_cast<int>(this->organizations(this->organizations_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rbac.Share.organizations"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rbac.Share)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rbac.Share)
  return false;
#undef DO_
}

void Share::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rbac.Share)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbac.Share.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->path(), output);
  }

  // string domain = 2;
  if (this->domain().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->domain().data(), static_cast<int>(this->domain().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbac.Share.domain");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->domain(), output);
  }

  // repeated string applications = 3;
  for (int i = 0, n = this->applications_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->applications(i).data(), static_cast<int>(this->applications(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbac.Share.applications");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->applications(i), output);
  }

  // repeated string peers = 4;
  for (int i = 0, n = this->peers_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->peers(i).data(), static_cast<int>(this->peers(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbac.Share.peers");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->peers(i), output);
  }

  // repeated string accounts = 5;
  for (int i = 0, n = this->accounts_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->accounts(i).data(), static_cast<int>(this->accounts(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbac.Share.accounts");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->accounts(i), output);
  }

  // repeated string groups = 6;
  for (int i = 0, n = this->groups_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->groups(i).data(), static_cast<int>(this->groups(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbac.Share.groups");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->groups(i), output);
  }

  // repeated string organizations = 7;
  for (int i = 0, n = this->organizations_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->organizations(i).data(), static_cast<int>(this->organizations(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbac.Share.organizations");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->organizations(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rbac.Share)
}

::google::protobuf::uint8* Share::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rbac.Share)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbac.Share.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->path(), target);
  }

  // string domain = 2;
  if (this->domain().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->domain().data(), static_cast<int>(this->domain().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbac.Share.domain");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->domain(), target);
  }

  // repeated string applications = 3;
  for (int i = 0, n = this->applications_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->applications(i).data(), static_cast<int>(this->applications(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbac.Share.applications");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->applications(i), target);
  }

  // repeated string peers = 4;
  for (int i = 0, n = this->peers_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->peers(i).data(), static_cast<int>(this->peers(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbac.Share.peers");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->peers(i), target);
  }

  // repeated string accounts = 5;
  for (int i = 0, n = this->accounts_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->accounts(i).data(), static_cast<int>(this->accounts(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbac.Share.accounts");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(5, this->accounts(i), target);
  }

  // repeated string groups = 6;
  for (int i = 0, n = this->groups_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->groups(i).data(), static_cast<int>(this->groups(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbac.Share.groups");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(6, this->groups(i), target);
  }

  // repeated string organizations = 7;
  for (int i = 0, n = this->organizations_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->organizations(i).data(), static_cast<int>(this->organizations(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbac.Share.organizations");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(7, this->organizations(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rbac.Share)
  return target;
}

size_t Share::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rbac.Share)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string applications = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->applications_size());
  for (int i = 0, n = this->applications_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->applications(i));
  }

  // repeated string peers = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->peers_size());
  for (int i = 0, n = this->peers_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->peers(i));
  }

  // repeated string accounts = 5;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->accounts_size());
  for (int i = 0, n = this->accounts_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->accounts(i));
  }

  // repeated string groups = 6;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->groups_size());
  for (int i = 0, n = this->groups_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->groups(i));
  }

  // repeated string organizations = 7;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->organizations_size());
  for (int i = 0, n = this->organizations_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->organizations(i));
  }

  // string path = 1;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  // string domain = 2;
  if (this->domain().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->domain());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Share::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rbac.Share)
  GOOGLE_DCHECK_NE(&from, this);
  const Share* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Share>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rbac.Share)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rbac.Share)
    MergeFrom(*source);
  }
}

void Share::MergeFrom(const Share& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rbac.Share)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  applications_.MergeFrom(from.applications_);
  peers_.MergeFrom(from.peers_);
  accounts_.MergeFrom(from.accounts_);
  groups_.MergeFrom(from.groups_);
  organizations_.MergeFrom(from.organizations_);
  if (from.path().size() > 0) {

    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  if (from.domain().size() > 0) {

    domain_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.domain_);
  }
}

void Share::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rbac.Share)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Share::CopyFrom(const Share& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rbac.Share)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Share::IsInitialized() const {
  return true;
}

void Share::Swap(Share* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Share::InternalSwap(Share* other) {
  using std::swap;
  applications_.InternalSwap(CastToBase(&other->applications_));
  peers_.InternalSwap(CastToBase(&other->peers_));
  accounts_.InternalSwap(CastToBase(&other->accounts_));
  groups_.InternalSwap(CastToBase(&other->groups_));
  organizations_.InternalSwap(CastToBase(&other->organizations_));
  path_.Swap(&other->path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  domain_.Swap(&other->domain_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Share::GetMetadata() const {
  protobuf_rbac_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rbac_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ShareResourceRqst::InitAsDefaultInstance() {
  ::rbac::_ShareResourceRqst_default_instance_._instance.get_mutable()->share_ = const_cast< ::rbac::Share*>(
      ::rbac::Share::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShareResourceRqst::kShareFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShareResourceRqst::ShareResourceRqst()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rbac_2eproto::scc_info_ShareResourceRqst.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rbac.ShareResourceRqst)
}
ShareResourceRqst::ShareResourceRqst(const ShareResourceRqst& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_share()) {
    share_ = new ::rbac::Share(*from.share_);
  } else {
    share_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:rbac.ShareResourceRqst)
}

void ShareResourceRqst::SharedCtor() {
  share_ = NULL;
}

ShareResourceRqst::~ShareResourceRqst() {
  // @@protoc_insertion_point(destructor:rbac.ShareResourceRqst)
  SharedDtor();
}

void ShareResourceRqst::SharedDtor() {
  if (this != internal_default_instance()) delete share_;
}

void ShareResourceRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ShareResourceRqst::descriptor() {
  ::protobuf_rbac_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rbac_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ShareResourceRqst& ShareResourceRqst::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rbac_2eproto::scc_info_ShareResourceRqst.base);
  return *internal_default_instance();
}


void ShareResourceRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:rbac.ShareResourceRqst)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && share_ != NULL) {
    delete share_;
  }
  share_ = NULL;
  _internal_metadata_.Clear();
}

bool ShareResourceRqst::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rbac.ShareResourceRqst)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .rbac.Share share = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_share()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rbac.ShareResourceRqst)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rbac.ShareResourceRqst)
  return false;
#undef DO_
}

void ShareResourceRqst::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rbac.ShareResourceRqst)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .rbac.Share share = 1;
  if (this->has_share()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_share(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rbac.ShareResourceRqst)
}

::google::protobuf::uint8* ShareResourceRqst::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rbac.ShareResourceRqst)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .rbac.Share share = 1;
  if (this->has_share()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_share(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rbac.ShareResourceRqst)
  return target;
}

size_t ShareResourceRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rbac.ShareResourceRqst)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .rbac.Share share = 1;
  if (this->has_share()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *share_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ShareResourceRqst::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rbac.ShareResourceRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const ShareResourceRqst* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ShareResourceRqst>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rbac.ShareResourceRqst)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rbac.ShareResourceRqst)
    MergeFrom(*source);
  }
}

void ShareResourceRqst::MergeFrom(const ShareResourceRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rbac.ShareResourceRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_share()) {
    mutable_share()->::rbac::Share::MergeFrom(from.share());
  }
}

void ShareResourceRqst::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rbac.ShareResourceRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShareResourceRqst::CopyFrom(const ShareResourceRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rbac.ShareResourceRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShareResourceRqst::IsInitialized() const {
  return true;
}

void ShareResourceRqst::Swap(ShareResourceRqst* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShareResourceRqst::InternalSwap(ShareResourceRqst* other) {
  using std::swap;
  swap(share_, other->share_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ShareResourceRqst::GetMetadata() const {
  protobuf_rbac_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rbac_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ShareResourceRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShareResourceRsp::ShareResourceRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rbac_2eproto::scc_info_ShareResourceRsp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rbac.ShareResourceRsp)
}
ShareResourceRsp::ShareResourceRsp(const ShareResourceRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:rbac.ShareResourceRsp)
}

void ShareResourceRsp::SharedCtor() {
}

ShareResourceRsp::~ShareResourceRsp() {
  // @@protoc_insertion_point(destructor:rbac.ShareResourceRsp)
  SharedDtor();
}

void ShareResourceRsp::SharedDtor() {
}

void ShareResourceRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ShareResourceRsp::descriptor() {
  ::protobuf_rbac_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rbac_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ShareResourceRsp& ShareResourceRsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rbac_2eproto::scc_info_ShareResourceRsp.base);
  return *internal_default_instance();
}


void ShareResourceRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:rbac.ShareResourceRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool ShareResourceRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rbac.ShareResourceRsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:rbac.ShareResourceRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rbac.ShareResourceRsp)
  return false;
#undef DO_
}

void ShareResourceRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rbac.ShareResourceRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rbac.ShareResourceRsp)
}

::google::protobuf::uint8* ShareResourceRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rbac.ShareResourceRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rbac.ShareResourceRsp)
  return target;
}

size_t ShareResourceRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rbac.ShareResourceRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ShareResourceRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rbac.ShareResourceRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ShareResourceRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ShareResourceRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rbac.ShareResourceRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rbac.ShareResourceRsp)
    MergeFrom(*source);
  }
}

void ShareResourceRsp::MergeFrom(const ShareResourceRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rbac.ShareResourceRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ShareResourceRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rbac.ShareResourceRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShareResourceRsp::CopyFrom(const ShareResourceRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rbac.ShareResourceRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShareResourceRsp::IsInitialized() const {
  return true;
}

void ShareResourceRsp::Swap(ShareResourceRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShareResourceRsp::InternalSwap(ShareResourceRsp* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ShareResourceRsp::GetMetadata() const {
  protobuf_rbac_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rbac_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UnshareResourceRqst::InitAsDefaultInstance() {
  ::rbac::_UnshareResourceRqst_default_instance_._instance.get_mutable()->share_ = const_cast< ::rbac::Share*>(
      ::rbac::Share::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UnshareResourceRqst::kShareFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UnshareResourceRqst::UnshareResourceRqst()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rbac_2eproto::scc_info_UnshareResourceRqst.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rbac.UnshareResourceRqst)
}
UnshareResourceRqst::UnshareResourceRqst(const UnshareResourceRqst& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_share()) {
    share_ = new ::rbac::Share(*from.share_);
  } else {
    share_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:rbac.UnshareResourceRqst)
}

void UnshareResourceRqst::SharedCtor() {
  share_ = NULL;
}

UnshareResourceRqst::~UnshareResourceRqst() {
  // @@protoc_insertion_point(destructor:rbac.UnshareResourceRqst)
  SharedDtor();
}

void UnshareResourceRqst::SharedDtor() {
  if (this != internal_default_instance()) delete share_;
}

void UnshareResourceRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UnshareResourceRqst::descriptor() {
  ::protobuf_rbac_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rbac_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UnshareResourceRqst& UnshareResourceRqst::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rbac_2eproto::scc_info_UnshareResourceRqst.base);
  return *internal_default_instance();
}


void UnshareResourceRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:rbac.UnshareResourceRqst)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && share_ != NULL) {
    delete share_;
  }
  share_ = NULL;
  _internal_metadata_.Clear();
}

bool UnshareResourceRqst::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rbac.UnshareResourceRqst)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .rbac.Share share = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_share()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rbac.UnshareResourceRqst)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rbac.UnshareResourceRqst)
  return false;
#undef DO_
}

void UnshareResourceRqst::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rbac.UnshareResourceRqst)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .rbac.Share share = 1;
  if (this->has_share()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_share(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rbac.UnshareResourceRqst)
}

::google::protobuf::uint8* UnshareResourceRqst::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rbac.UnshareResourceRqst)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .rbac.Share share = 1;
  if (this->has_share()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_share(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rbac.UnshareResourceRqst)
  return target;
}

size_t UnshareResourceRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rbac.UnshareResourceRqst)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .rbac.Share share = 1;
  if (this->has_share()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *share_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UnshareResourceRqst::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rbac.UnshareResourceRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const UnshareResourceRqst* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UnshareResourceRqst>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rbac.UnshareResourceRqst)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rbac.UnshareResourceRqst)
    MergeFrom(*source);
  }
}

void UnshareResourceRqst::MergeFrom(const UnshareResourceRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rbac.UnshareResourceRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_share()) {
    mutable_share()->::rbac::Share::MergeFrom(from.share());
  }
}

void UnshareResourceRqst::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rbac.UnshareResourceRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnshareResourceRqst::CopyFrom(const UnshareResourceRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rbac.UnshareResourceRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnshareResourceRqst::IsInitialized() const {
  return true;
}

void UnshareResourceRqst::Swap(UnshareResourceRqst* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UnshareResourceRqst::InternalSwap(UnshareResourceRqst* other) {
  using std::swap;
  swap(share_, other->share_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UnshareResourceRqst::GetMetadata() const {
  protobuf_rbac_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rbac_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UnshareResourceRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UnshareResourceRsp::UnshareResourceRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rbac_2eproto::scc_info_UnshareResourceRsp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rbac.UnshareResourceRsp)
}
UnshareResourceRsp::UnshareResourceRsp(const UnshareResourceRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:rbac.UnshareResourceRsp)
}

void UnshareResourceRsp::SharedCtor() {
}

UnshareResourceRsp::~UnshareResourceRsp() {
  // @@protoc_insertion_point(destructor:rbac.UnshareResourceRsp)
  SharedDtor();
}

void UnshareResourceRsp::SharedDtor() {
}

void UnshareResourceRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UnshareResourceRsp::descriptor() {
  ::protobuf_rbac_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rbac_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UnshareResourceRsp& UnshareResourceRsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rbac_2eproto::scc_info_UnshareResourceRsp.base);
  return *internal_default_instance();
}


void UnshareResourceRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:rbac.UnshareResourceRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool UnshareResourceRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rbac.UnshareResourceRsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:rbac.UnshareResourceRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rbac.UnshareResourceRsp)
  return false;
#undef DO_
}

void UnshareResourceRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rbac.UnshareResourceRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rbac.UnshareResourceRsp)
}

::google::protobuf::uint8* UnshareResourceRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rbac.UnshareResourceRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rbac.UnshareResourceRsp)
  return target;
}

size_t UnshareResourceRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rbac.UnshareResourceRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UnshareResourceRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rbac.UnshareResourceRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const UnshareResourceRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UnshareResourceRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rbac.UnshareResourceRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rbac.UnshareResourceRsp)
    MergeFrom(*source);
  }
}

void UnshareResourceRsp::MergeFrom(const UnshareResourceRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rbac.UnshareResourceRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void UnshareResourceRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rbac.UnshareResourceRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnshareResourceRsp::CopyFrom(const UnshareResourceRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rbac.UnshareResourceRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnshareResourceRsp::IsInitialized() const {
  return true;
}

void UnshareResourceRsp::Swap(UnshareResourceRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UnshareResourceRsp::InternalSwap(UnshareResourceRsp* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UnshareResourceRsp::GetMetadata() const {
  protobuf_rbac_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rbac_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetSharedResourceRqst::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetSharedResourceRqst::kSubjectFieldNumber;
const int GetSharedResourceRqst::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetSharedResourceRqst::GetSharedResourceRqst()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rbac_2eproto::scc_info_GetSharedResourceRqst.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rbac.GetSharedResourceRqst)
}
GetSharedResourceRqst::GetSharedResourceRqst(const GetSharedResourceRqst& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  subject_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.subject().size() > 0) {
    subject_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.subject_);
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:rbac.GetSharedResourceRqst)
}

void GetSharedResourceRqst::SharedCtor() {
  subject_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
}

GetSharedResourceRqst::~GetSharedResourceRqst() {
  // @@protoc_insertion_point(destructor:rbac.GetSharedResourceRqst)
  SharedDtor();
}

void GetSharedResourceRqst::SharedDtor() {
  subject_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetSharedResourceRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetSharedResourceRqst::descriptor() {
  ::protobuf_rbac_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rbac_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetSharedResourceRqst& GetSharedResourceRqst::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rbac_2eproto::scc_info_GetSharedResourceRqst.base);
  return *internal_default_instance();
}


void GetSharedResourceRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:rbac.GetSharedResourceRqst)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  subject_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
  _internal_metadata_.Clear();
}

bool GetSharedResourceRqst::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rbac.GetSharedResourceRqst)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string subject = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_subject()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->subject().data(), static_cast<int>(this->subject().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rbac.GetSharedResourceRqst.subject"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .rbac.SubjectType type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::rbac::SubjectType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rbac.GetSharedResourceRqst)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rbac.GetSharedResourceRqst)
  return false;
#undef DO_
}

void GetSharedResourceRqst::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rbac.GetSharedResourceRqst)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string subject = 1;
  if (this->subject().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->subject().data(), static_cast<int>(this->subject().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbac.GetSharedResourceRqst.subject");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->subject(), output);
  }

  // .rbac.SubjectType type = 2;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rbac.GetSharedResourceRqst)
}

::google::protobuf::uint8* GetSharedResourceRqst::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rbac.GetSharedResourceRqst)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string subject = 1;
  if (this->subject().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->subject().data(), static_cast<int>(this->subject().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbac.GetSharedResourceRqst.subject");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->subject(), target);
  }

  // .rbac.SubjectType type = 2;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rbac.GetSharedResourceRqst)
  return target;
}

size_t GetSharedResourceRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rbac.GetSharedResourceRqst)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string subject = 1;
  if (this->subject().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->subject());
  }

  // .rbac.SubjectType type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetSharedResourceRqst::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rbac.GetSharedResourceRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const GetSharedResourceRqst* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetSharedResourceRqst>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rbac.GetSharedResourceRqst)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rbac.GetSharedResourceRqst)
    MergeFrom(*source);
  }
}

void GetSharedResourceRqst::MergeFrom(const GetSharedResourceRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rbac.GetSharedResourceRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.subject().size() > 0) {

    subject_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.subject_);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void GetSharedResourceRqst::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rbac.GetSharedResourceRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetSharedResourceRqst::CopyFrom(const GetSharedResourceRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rbac.GetSharedResourceRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSharedResourceRqst::IsInitialized() const {
  return true;
}

void GetSharedResourceRqst::Swap(GetSharedResourceRqst* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetSharedResourceRqst::InternalSwap(GetSharedResourceRqst* other) {
  using std::swap;
  subject_.Swap(&other->subject_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetSharedResourceRqst::GetMetadata() const {
  protobuf_rbac_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rbac_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetSharedResourceRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetSharedResourceRsp::kSharedResourceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetSharedResourceRsp::GetSharedResourceRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rbac_2eproto::scc_info_GetSharedResourceRsp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rbac.GetSharedResourceRsp)
}
GetSharedResourceRsp::GetSharedResourceRsp(const GetSharedResourceRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      sharedresource_(from.sharedresource_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:rbac.GetSharedResourceRsp)
}

void GetSharedResourceRsp::SharedCtor() {
}

GetSharedResourceRsp::~GetSharedResourceRsp() {
  // @@protoc_insertion_point(destructor:rbac.GetSharedResourceRsp)
  SharedDtor();
}

void GetSharedResourceRsp::SharedDtor() {
}

void GetSharedResourceRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetSharedResourceRsp::descriptor() {
  ::protobuf_rbac_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rbac_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetSharedResourceRsp& GetSharedResourceRsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rbac_2eproto::scc_info_GetSharedResourceRsp.base);
  return *internal_default_instance();
}


void GetSharedResourceRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:rbac.GetSharedResourceRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sharedresource_.Clear();
  _internal_metadata_.Clear();
}

bool GetSharedResourceRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rbac.GetSharedResourceRsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .rbac.Share sharedResource = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_sharedresource()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rbac.GetSharedResourceRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rbac.GetSharedResourceRsp)
  return false;
#undef DO_
}

void GetSharedResourceRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rbac.GetSharedResourceRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .rbac.Share sharedResource = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sharedresource_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->sharedresource(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rbac.GetSharedResourceRsp)
}

::google::protobuf::uint8* GetSharedResourceRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rbac.GetSharedResourceRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .rbac.Share sharedResource = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sharedresource_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->sharedresource(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rbac.GetSharedResourceRsp)
  return target;
}

size_t GetSharedResourceRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rbac.GetSharedResourceRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .rbac.Share sharedResource = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->sharedresource_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->sharedresource(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetSharedResourceRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rbac.GetSharedResourceRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetSharedResourceRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetSharedResourceRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rbac.GetSharedResourceRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rbac.GetSharedResourceRsp)
    MergeFrom(*source);
  }
}

void GetSharedResourceRsp::MergeFrom(const GetSharedResourceRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rbac.GetSharedResourceRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  sharedresource_.MergeFrom(from.sharedresource_);
}

void GetSharedResourceRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rbac.GetSharedResourceRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetSharedResourceRsp::CopyFrom(const GetSharedResourceRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rbac.GetSharedResourceRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSharedResourceRsp::IsInitialized() const {
  return true;
}

void GetSharedResourceRsp::Swap(GetSharedResourceRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetSharedResourceRsp::InternalSwap(GetSharedResourceRsp* other) {
  using std::swap;
  CastToBase(&sharedresource_)->InternalSwap(CastToBase(&other->sharedresource_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetSharedResourceRsp::GetMetadata() const {
  protobuf_rbac_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rbac_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RemoveSubjectFromShareRqst::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RemoveSubjectFromShareRqst::kSubjectFieldNumber;
const int RemoveSubjectFromShareRqst::kTypeFieldNumber;
const int RemoveSubjectFromShareRqst::kDomainFieldNumber;
const int RemoveSubjectFromShareRqst::kPathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RemoveSubjectFromShareRqst::RemoveSubjectFromShareRqst()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rbac_2eproto::scc_info_RemoveSubjectFromShareRqst.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rbac.RemoveSubjectFromShareRqst)
}
RemoveSubjectFromShareRqst::RemoveSubjectFromShareRqst(const RemoveSubjectFromShareRqst& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  subject_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.subject().size() > 0) {
    subject_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.subject_);
  }
  domain_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.domain().size() > 0) {
    domain_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.domain_);
  }
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.path().size() > 0) {
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:rbac.RemoveSubjectFromShareRqst)
}

void RemoveSubjectFromShareRqst::SharedCtor() {
  subject_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  domain_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
}

RemoveSubjectFromShareRqst::~RemoveSubjectFromShareRqst() {
  // @@protoc_insertion_point(destructor:rbac.RemoveSubjectFromShareRqst)
  SharedDtor();
}

void RemoveSubjectFromShareRqst::SharedDtor() {
  subject_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  domain_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RemoveSubjectFromShareRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RemoveSubjectFromShareRqst::descriptor() {
  ::protobuf_rbac_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rbac_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RemoveSubjectFromShareRqst& RemoveSubjectFromShareRqst::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rbac_2eproto::scc_info_RemoveSubjectFromShareRqst.base);
  return *internal_default_instance();
}


void RemoveSubjectFromShareRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:rbac.RemoveSubjectFromShareRqst)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  subject_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  domain_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
  _internal_metadata_.Clear();
}

bool RemoveSubjectFromShareRqst::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rbac.RemoveSubjectFromShareRqst)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string subject = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_subject()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->subject().data(), static_cast<int>(this->subject().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rbac.RemoveSubjectFromShareRqst.subject"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .rbac.SubjectType type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::rbac::SubjectType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string domain = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_domain()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->domain().data(), static_cast<int>(this->domain().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rbac.RemoveSubjectFromShareRqst.domain"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string path = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->path().data(), static_cast<int>(this->path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rbac.RemoveSubjectFromShareRqst.path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rbac.RemoveSubjectFromShareRqst)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rbac.RemoveSubjectFromShareRqst)
  return false;
#undef DO_
}

void RemoveSubjectFromShareRqst::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rbac.RemoveSubjectFromShareRqst)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string subject = 1;
  if (this->subject().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->subject().data(), static_cast<int>(this->subject().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbac.RemoveSubjectFromShareRqst.subject");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->subject(), output);
  }

  // .rbac.SubjectType type = 2;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  // string domain = 3;
  if (this->domain().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->domain().data(), static_cast<int>(this->domain().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbac.RemoveSubjectFromShareRqst.domain");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->domain(), output);
  }

  // string path = 4;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbac.RemoveSubjectFromShareRqst.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->path(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rbac.RemoveSubjectFromShareRqst)
}

::google::protobuf::uint8* RemoveSubjectFromShareRqst::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rbac.RemoveSubjectFromShareRqst)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string subject = 1;
  if (this->subject().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->subject().data(), static_cast<int>(this->subject().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbac.RemoveSubjectFromShareRqst.subject");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->subject(), target);
  }

  // .rbac.SubjectType type = 2;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }

  // string domain = 3;
  if (this->domain().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->domain().data(), static_cast<int>(this->domain().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbac.RemoveSubjectFromShareRqst.domain");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->domain(), target);
  }

  // string path = 4;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbac.RemoveSubjectFromShareRqst.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->path(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rbac.RemoveSubjectFromShareRqst)
  return target;
}

size_t RemoveSubjectFromShareRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rbac.RemoveSubjectFromShareRqst)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string subject = 1;
  if (this->subject().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->subject());
  }

  // string domain = 3;
  if (this->domain().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->domain());
  }

  // string path = 4;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  // .rbac.SubjectType type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveSubjectFromShareRqst::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rbac.RemoveSubjectFromShareRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveSubjectFromShareRqst* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RemoveSubjectFromShareRqst>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rbac.RemoveSubjectFromShareRqst)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rbac.RemoveSubjectFromShareRqst)
    MergeFrom(*source);
  }
}

void RemoveSubjectFromShareRqst::MergeFrom(const RemoveSubjectFromShareRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rbac.RemoveSubjectFromShareRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.subject().size() > 0) {

    subject_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.subject_);
  }
  if (from.domain().size() > 0) {

    domain_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.domain_);
  }
  if (from.path().size() > 0) {

    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void RemoveSubjectFromShareRqst::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rbac.RemoveSubjectFromShareRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveSubjectFromShareRqst::CopyFrom(const RemoveSubjectFromShareRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rbac.RemoveSubjectFromShareRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveSubjectFromShareRqst::IsInitialized() const {
  return true;
}

void RemoveSubjectFromShareRqst::Swap(RemoveSubjectFromShareRqst* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RemoveSubjectFromShareRqst::InternalSwap(RemoveSubjectFromShareRqst* other) {
  using std::swap;
  subject_.Swap(&other->subject_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  domain_.Swap(&other->domain_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  path_.Swap(&other->path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RemoveSubjectFromShareRqst::GetMetadata() const {
  protobuf_rbac_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rbac_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RemoveSubjectFromShareRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RemoveSubjectFromShareRsp::RemoveSubjectFromShareRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rbac_2eproto::scc_info_RemoveSubjectFromShareRsp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rbac.RemoveSubjectFromShareRsp)
}
RemoveSubjectFromShareRsp::RemoveSubjectFromShareRsp(const RemoveSubjectFromShareRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:rbac.RemoveSubjectFromShareRsp)
}

void RemoveSubjectFromShareRsp::SharedCtor() {
}

RemoveSubjectFromShareRsp::~RemoveSubjectFromShareRsp() {
  // @@protoc_insertion_point(destructor:rbac.RemoveSubjectFromShareRsp)
  SharedDtor();
}

void RemoveSubjectFromShareRsp::SharedDtor() {
}

void RemoveSubjectFromShareRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RemoveSubjectFromShareRsp::descriptor() {
  ::protobuf_rbac_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rbac_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RemoveSubjectFromShareRsp& RemoveSubjectFromShareRsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rbac_2eproto::scc_info_RemoveSubjectFromShareRsp.base);
  return *internal_default_instance();
}


void RemoveSubjectFromShareRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:rbac.RemoveSubjectFromShareRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool RemoveSubjectFromShareRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rbac.RemoveSubjectFromShareRsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:rbac.RemoveSubjectFromShareRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rbac.RemoveSubjectFromShareRsp)
  return false;
#undef DO_
}

void RemoveSubjectFromShareRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rbac.RemoveSubjectFromShareRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rbac.RemoveSubjectFromShareRsp)
}

::google::protobuf::uint8* RemoveSubjectFromShareRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rbac.RemoveSubjectFromShareRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rbac.RemoveSubjectFromShareRsp)
  return target;
}

size_t RemoveSubjectFromShareRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rbac.RemoveSubjectFromShareRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveSubjectFromShareRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rbac.RemoveSubjectFromShareRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveSubjectFromShareRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RemoveSubjectFromShareRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rbac.RemoveSubjectFromShareRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rbac.RemoveSubjectFromShareRsp)
    MergeFrom(*source);
  }
}

void RemoveSubjectFromShareRsp::MergeFrom(const RemoveSubjectFromShareRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rbac.RemoveSubjectFromShareRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void RemoveSubjectFromShareRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rbac.RemoveSubjectFromShareRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveSubjectFromShareRsp::CopyFrom(const RemoveSubjectFromShareRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rbac.RemoveSubjectFromShareRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveSubjectFromShareRsp::IsInitialized() const {
  return true;
}

void RemoveSubjectFromShareRsp::Swap(RemoveSubjectFromShareRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RemoveSubjectFromShareRsp::InternalSwap(RemoveSubjectFromShareRsp* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RemoveSubjectFromShareRsp::GetMetadata() const {
  protobuf_rbac_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rbac_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeleteSubjectShareRqst::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteSubjectShareRqst::kSubjectFieldNumber;
const int DeleteSubjectShareRqst::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteSubjectShareRqst::DeleteSubjectShareRqst()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rbac_2eproto::scc_info_DeleteSubjectShareRqst.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rbac.DeleteSubjectShareRqst)
}
DeleteSubjectShareRqst::DeleteSubjectShareRqst(const DeleteSubjectShareRqst& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  subject_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.subject().size() > 0) {
    subject_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.subject_);
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:rbac.DeleteSubjectShareRqst)
}

void DeleteSubjectShareRqst::SharedCtor() {
  subject_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
}

DeleteSubjectShareRqst::~DeleteSubjectShareRqst() {
  // @@protoc_insertion_point(destructor:rbac.DeleteSubjectShareRqst)
  SharedDtor();
}

void DeleteSubjectShareRqst::SharedDtor() {
  subject_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeleteSubjectShareRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeleteSubjectShareRqst::descriptor() {
  ::protobuf_rbac_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rbac_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteSubjectShareRqst& DeleteSubjectShareRqst::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rbac_2eproto::scc_info_DeleteSubjectShareRqst.base);
  return *internal_default_instance();
}


void DeleteSubjectShareRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:rbac.DeleteSubjectShareRqst)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  subject_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
  _internal_metadata_.Clear();
}

bool DeleteSubjectShareRqst::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rbac.DeleteSubjectShareRqst)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string subject = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_subject()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->subject().data(), static_cast<int>(this->subject().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rbac.DeleteSubjectShareRqst.subject"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .rbac.SubjectType type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::rbac::SubjectType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rbac.DeleteSubjectShareRqst)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rbac.DeleteSubjectShareRqst)
  return false;
#undef DO_
}

void DeleteSubjectShareRqst::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rbac.DeleteSubjectShareRqst)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string subject = 1;
  if (this->subject().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->subject().data(), static_cast<int>(this->subject().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbac.DeleteSubjectShareRqst.subject");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->subject(), output);
  }

  // .rbac.SubjectType type = 2;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rbac.DeleteSubjectShareRqst)
}

::google::protobuf::uint8* DeleteSubjectShareRqst::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rbac.DeleteSubjectShareRqst)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string subject = 1;
  if (this->subject().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->subject().data(), static_cast<int>(this->subject().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbac.DeleteSubjectShareRqst.subject");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->subject(), target);
  }

  // .rbac.SubjectType type = 2;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rbac.DeleteSubjectShareRqst)
  return target;
}

size_t DeleteSubjectShareRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rbac.DeleteSubjectShareRqst)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string subject = 1;
  if (this->subject().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->subject());
  }

  // .rbac.SubjectType type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteSubjectShareRqst::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rbac.DeleteSubjectShareRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteSubjectShareRqst* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteSubjectShareRqst>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rbac.DeleteSubjectShareRqst)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rbac.DeleteSubjectShareRqst)
    MergeFrom(*source);
  }
}

void DeleteSubjectShareRqst::MergeFrom(const DeleteSubjectShareRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rbac.DeleteSubjectShareRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.subject().size() > 0) {

    subject_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.subject_);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void DeleteSubjectShareRqst::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rbac.DeleteSubjectShareRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteSubjectShareRqst::CopyFrom(const DeleteSubjectShareRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rbac.DeleteSubjectShareRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteSubjectShareRqst::IsInitialized() const {
  return true;
}

void DeleteSubjectShareRqst::Swap(DeleteSubjectShareRqst* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteSubjectShareRqst::InternalSwap(DeleteSubjectShareRqst* other) {
  using std::swap;
  subject_.Swap(&other->subject_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeleteSubjectShareRqst::GetMetadata() const {
  protobuf_rbac_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rbac_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeleteSubjectShareRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteSubjectShareRsp::DeleteSubjectShareRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rbac_2eproto::scc_info_DeleteSubjectShareRsp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rbac.DeleteSubjectShareRsp)
}
DeleteSubjectShareRsp::DeleteSubjectShareRsp(const DeleteSubjectShareRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:rbac.DeleteSubjectShareRsp)
}

void DeleteSubjectShareRsp::SharedCtor() {
}

DeleteSubjectShareRsp::~DeleteSubjectShareRsp() {
  // @@protoc_insertion_point(destructor:rbac.DeleteSubjectShareRsp)
  SharedDtor();
}

void DeleteSubjectShareRsp::SharedDtor() {
}

void DeleteSubjectShareRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeleteSubjectShareRsp::descriptor() {
  ::protobuf_rbac_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rbac_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteSubjectShareRsp& DeleteSubjectShareRsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rbac_2eproto::scc_info_DeleteSubjectShareRsp.base);
  return *internal_default_instance();
}


void DeleteSubjectShareRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:rbac.DeleteSubjectShareRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool DeleteSubjectShareRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rbac.DeleteSubjectShareRsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:rbac.DeleteSubjectShareRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rbac.DeleteSubjectShareRsp)
  return false;
#undef DO_
}

void DeleteSubjectShareRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rbac.DeleteSubjectShareRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rbac.DeleteSubjectShareRsp)
}

::google::protobuf::uint8* DeleteSubjectShareRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rbac.DeleteSubjectShareRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rbac.DeleteSubjectShareRsp)
  return target;
}

size_t DeleteSubjectShareRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rbac.DeleteSubjectShareRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteSubjectShareRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rbac.DeleteSubjectShareRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteSubjectShareRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteSubjectShareRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rbac.DeleteSubjectShareRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rbac.DeleteSubjectShareRsp)
    MergeFrom(*source);
  }
}

void DeleteSubjectShareRsp::MergeFrom(const DeleteSubjectShareRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rbac.DeleteSubjectShareRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void DeleteSubjectShareRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rbac.DeleteSubjectShareRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteSubjectShareRsp::CopyFrom(const DeleteSubjectShareRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rbac.DeleteSubjectShareRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteSubjectShareRsp::IsInitialized() const {
  return true;
}

void DeleteSubjectShareRsp::Swap(DeleteSubjectShareRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteSubjectShareRsp::InternalSwap(DeleteSubjectShareRsp* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeleteSubjectShareRsp::GetMetadata() const {
  protobuf_rbac_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rbac_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace rbac
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rbac::Permission* Arena::CreateMaybeMessage< ::rbac::Permission >(Arena* arena) {
  return Arena::CreateInternal< ::rbac::Permission >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rbac::Permissions* Arena::CreateMaybeMessage< ::rbac::Permissions >(Arena* arena) {
  return Arena::CreateInternal< ::rbac::Permissions >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rbac::GetResourcePermissionsRqst* Arena::CreateMaybeMessage< ::rbac::GetResourcePermissionsRqst >(Arena* arena) {
  return Arena::CreateInternal< ::rbac::GetResourcePermissionsRqst >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rbac::GetResourcePermissionsRsp* Arena::CreateMaybeMessage< ::rbac::GetResourcePermissionsRsp >(Arena* arena) {
  return Arena::CreateInternal< ::rbac::GetResourcePermissionsRsp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rbac::DeleteResourcePermissionsRqst* Arena::CreateMaybeMessage< ::rbac::DeleteResourcePermissionsRqst >(Arena* arena) {
  return Arena::CreateInternal< ::rbac::DeleteResourcePermissionsRqst >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rbac::DeleteResourcePermissionsRsp* Arena::CreateMaybeMessage< ::rbac::DeleteResourcePermissionsRsp >(Arena* arena) {
  return Arena::CreateInternal< ::rbac::DeleteResourcePermissionsRsp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rbac::DeleteResourcePermissionRqst* Arena::CreateMaybeMessage< ::rbac::DeleteResourcePermissionRqst >(Arena* arena) {
  return Arena::CreateInternal< ::rbac::DeleteResourcePermissionRqst >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rbac::DeleteResourcePermissionRsp* Arena::CreateMaybeMessage< ::rbac::DeleteResourcePermissionRsp >(Arena* arena) {
  return Arena::CreateInternal< ::rbac::DeleteResourcePermissionRsp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rbac::SetResourcePermissionsRqst* Arena::CreateMaybeMessage< ::rbac::SetResourcePermissionsRqst >(Arena* arena) {
  return Arena::CreateInternal< ::rbac::SetResourcePermissionsRqst >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rbac::SetResourcePermissionsRsp* Arena::CreateMaybeMessage< ::rbac::SetResourcePermissionsRsp >(Arena* arena) {
  return Arena::CreateInternal< ::rbac::SetResourcePermissionsRsp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rbac::GetResourcePermissionRqst* Arena::CreateMaybeMessage< ::rbac::GetResourcePermissionRqst >(Arena* arena) {
  return Arena::CreateInternal< ::rbac::GetResourcePermissionRqst >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rbac::GetResourcePermissionRsp* Arena::CreateMaybeMessage< ::rbac::GetResourcePermissionRsp >(Arena* arena) {
  return Arena::CreateInternal< ::rbac::GetResourcePermissionRsp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rbac::SetResourcePermissionRqst* Arena::CreateMaybeMessage< ::rbac::SetResourcePermissionRqst >(Arena* arena) {
  return Arena::CreateInternal< ::rbac::SetResourcePermissionRqst >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rbac::SetResourcePermissionRsp* Arena::CreateMaybeMessage< ::rbac::SetResourcePermissionRsp >(Arena* arena) {
  return Arena::CreateInternal< ::rbac::SetResourcePermissionRsp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rbac::AddResourceOwnerRqst* Arena::CreateMaybeMessage< ::rbac::AddResourceOwnerRqst >(Arena* arena) {
  return Arena::CreateInternal< ::rbac::AddResourceOwnerRqst >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rbac::AddResourceOwnerRsp* Arena::CreateMaybeMessage< ::rbac::AddResourceOwnerRsp >(Arena* arena) {
  return Arena::CreateInternal< ::rbac::AddResourceOwnerRsp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rbac::RemoveResourceOwnerRqst* Arena::CreateMaybeMessage< ::rbac::RemoveResourceOwnerRqst >(Arena* arena) {
  return Arena::CreateInternal< ::rbac::RemoveResourceOwnerRqst >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rbac::RemoveResourceOwnerRsp* Arena::CreateMaybeMessage< ::rbac::RemoveResourceOwnerRsp >(Arena* arena) {
  return Arena::CreateInternal< ::rbac::RemoveResourceOwnerRsp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rbac::DeleteAllAccessRqst* Arena::CreateMaybeMessage< ::rbac::DeleteAllAccessRqst >(Arena* arena) {
  return Arena::CreateInternal< ::rbac::DeleteAllAccessRqst >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rbac::DeleteAllAccessRsp* Arena::CreateMaybeMessage< ::rbac::DeleteAllAccessRsp >(Arena* arena) {
  return Arena::CreateInternal< ::rbac::DeleteAllAccessRsp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rbac::ValidateAccessRqst* Arena::CreateMaybeMessage< ::rbac::ValidateAccessRqst >(Arena* arena) {
  return Arena::CreateInternal< ::rbac::ValidateAccessRqst >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rbac::ValidateAccessRsp* Arena::CreateMaybeMessage< ::rbac::ValidateAccessRsp >(Arena* arena) {
  return Arena::CreateInternal< ::rbac::ValidateAccessRsp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rbac::GetActionResourceInfosRqst* Arena::CreateMaybeMessage< ::rbac::GetActionResourceInfosRqst >(Arena* arena) {
  return Arena::CreateInternal< ::rbac::GetActionResourceInfosRqst >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rbac::ResourceInfos* Arena::CreateMaybeMessage< ::rbac::ResourceInfos >(Arena* arena) {
  return Arena::CreateInternal< ::rbac::ResourceInfos >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rbac::GetActionResourceInfosRsp* Arena::CreateMaybeMessage< ::rbac::GetActionResourceInfosRsp >(Arena* arena) {
  return Arena::CreateInternal< ::rbac::GetActionResourceInfosRsp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rbac::ValidateActionRqst* Arena::CreateMaybeMessage< ::rbac::ValidateActionRqst >(Arena* arena) {
  return Arena::CreateInternal< ::rbac::ValidateActionRqst >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rbac::ValidateActionRsp* Arena::CreateMaybeMessage< ::rbac::ValidateActionRsp >(Arena* arena) {
  return Arena::CreateInternal< ::rbac::ValidateActionRsp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rbac::SetActionResourcesPermissionsRqst* Arena::CreateMaybeMessage< ::rbac::SetActionResourcesPermissionsRqst >(Arena* arena) {
  return Arena::CreateInternal< ::rbac::SetActionResourcesPermissionsRqst >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rbac::SetActionResourcesPermissionsRsp* Arena::CreateMaybeMessage< ::rbac::SetActionResourcesPermissionsRsp >(Arena* arena) {
  return Arena::CreateInternal< ::rbac::SetActionResourcesPermissionsRsp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rbac::Share* Arena::CreateMaybeMessage< ::rbac::Share >(Arena* arena) {
  return Arena::CreateInternal< ::rbac::Share >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rbac::ShareResourceRqst* Arena::CreateMaybeMessage< ::rbac::ShareResourceRqst >(Arena* arena) {
  return Arena::CreateInternal< ::rbac::ShareResourceRqst >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rbac::ShareResourceRsp* Arena::CreateMaybeMessage< ::rbac::ShareResourceRsp >(Arena* arena) {
  return Arena::CreateInternal< ::rbac::ShareResourceRsp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rbac::UnshareResourceRqst* Arena::CreateMaybeMessage< ::rbac::UnshareResourceRqst >(Arena* arena) {
  return Arena::CreateInternal< ::rbac::UnshareResourceRqst >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rbac::UnshareResourceRsp* Arena::CreateMaybeMessage< ::rbac::UnshareResourceRsp >(Arena* arena) {
  return Arena::CreateInternal< ::rbac::UnshareResourceRsp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rbac::GetSharedResourceRqst* Arena::CreateMaybeMessage< ::rbac::GetSharedResourceRqst >(Arena* arena) {
  return Arena::CreateInternal< ::rbac::GetSharedResourceRqst >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rbac::GetSharedResourceRsp* Arena::CreateMaybeMessage< ::rbac::GetSharedResourceRsp >(Arena* arena) {
  return Arena::CreateInternal< ::rbac::GetSharedResourceRsp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rbac::RemoveSubjectFromShareRqst* Arena::CreateMaybeMessage< ::rbac::RemoveSubjectFromShareRqst >(Arena* arena) {
  return Arena::CreateInternal< ::rbac::RemoveSubjectFromShareRqst >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rbac::RemoveSubjectFromShareRsp* Arena::CreateMaybeMessage< ::rbac::RemoveSubjectFromShareRsp >(Arena* arena) {
  return Arena::CreateInternal< ::rbac::RemoveSubjectFromShareRsp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rbac::DeleteSubjectShareRqst* Arena::CreateMaybeMessage< ::rbac::DeleteSubjectShareRqst >(Arena* arena) {
  return Arena::CreateInternal< ::rbac::DeleteSubjectShareRqst >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rbac::DeleteSubjectShareRsp* Arena::CreateMaybeMessage< ::rbac::DeleteSubjectShareRsp >(Arena* arena) {
  return Arena::CreateInternal< ::rbac::DeleteSubjectShareRsp >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
