// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: resource.proto

#include "resource.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace resource {
constexpr PackageBundle::PackageBundle(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : checksum_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , plaform_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , binairies_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , mac_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , packagedescriptor_(nullptr)
  , modified_(PROTOBUF_LONGLONG(0))
  , size_(0){}
struct PackageBundleDefaultTypeInternal {
  constexpr PackageBundleDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PackageBundleDefaultTypeInternal() {}
  union {
    PackageBundle _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PackageBundleDefaultTypeInternal _PackageBundle_default_instance_;
constexpr SetPackageBundleRequest::SetPackageBundleRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : bundle_(nullptr){}
struct SetPackageBundleRequestDefaultTypeInternal {
  constexpr SetPackageBundleRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SetPackageBundleRequestDefaultTypeInternal() {}
  union {
    SetPackageBundleRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SetPackageBundleRequestDefaultTypeInternal _SetPackageBundleRequest_default_instance_;
constexpr SetPackageBundleResponse::SetPackageBundleResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : result_(false){}
struct SetPackageBundleResponseDefaultTypeInternal {
  constexpr SetPackageBundleResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SetPackageBundleResponseDefaultTypeInternal() {}
  union {
    SetPackageBundleResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SetPackageBundleResponseDefaultTypeInternal _SetPackageBundleResponse_default_instance_;
constexpr GetPackageBundleChecksumRequest::GetPackageBundleChecksumRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct GetPackageBundleChecksumRequestDefaultTypeInternal {
  constexpr GetPackageBundleChecksumRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetPackageBundleChecksumRequestDefaultTypeInternal() {}
  union {
    GetPackageBundleChecksumRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetPackageBundleChecksumRequestDefaultTypeInternal _GetPackageBundleChecksumRequest_default_instance_;
constexpr GetPackageBundleChecksumResponse::GetPackageBundleChecksumResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : checksum_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct GetPackageBundleChecksumResponseDefaultTypeInternal {
  constexpr GetPackageBundleChecksumResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetPackageBundleChecksumResponseDefaultTypeInternal() {}
  union {
    GetPackageBundleChecksumResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetPackageBundleChecksumResponseDefaultTypeInternal _GetPackageBundleChecksumResponse_default_instance_;
constexpr PackageDescriptor::PackageDescriptor(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : repositories_()
  , discoveries_()
  , keywords_()
  , actions_()
  , roles_()
  , groups_()
  , id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , publisherid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , version_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , description_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , icon_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , alias_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , type_(0)
{}
struct PackageDescriptorDefaultTypeInternal {
  constexpr PackageDescriptorDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PackageDescriptorDefaultTypeInternal() {}
  union {
    PackageDescriptor _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PackageDescriptorDefaultTypeInternal _PackageDescriptor_default_instance_;
constexpr GetPackageDescriptorRequest::GetPackageDescriptorRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : serviceid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , publisherid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct GetPackageDescriptorRequestDefaultTypeInternal {
  constexpr GetPackageDescriptorRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetPackageDescriptorRequestDefaultTypeInternal() {}
  union {
    GetPackageDescriptorRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetPackageDescriptorRequestDefaultTypeInternal _GetPackageDescriptorRequest_default_instance_;
constexpr GetPackageDescriptorResponse::GetPackageDescriptorResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : results_(){}
struct GetPackageDescriptorResponseDefaultTypeInternal {
  constexpr GetPackageDescriptorResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetPackageDescriptorResponseDefaultTypeInternal() {}
  union {
    GetPackageDescriptorResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetPackageDescriptorResponseDefaultTypeInternal _GetPackageDescriptorResponse_default_instance_;
constexpr GetPackagesDescriptorRequest::GetPackagesDescriptorRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : query_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , options_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct GetPackagesDescriptorRequestDefaultTypeInternal {
  constexpr GetPackagesDescriptorRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetPackagesDescriptorRequestDefaultTypeInternal() {}
  union {
    GetPackagesDescriptorRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetPackagesDescriptorRequestDefaultTypeInternal _GetPackagesDescriptorRequest_default_instance_;
constexpr GetPackagesDescriptorResponse::GetPackagesDescriptorResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : results_(){}
struct GetPackagesDescriptorResponseDefaultTypeInternal {
  constexpr GetPackagesDescriptorResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetPackagesDescriptorResponseDefaultTypeInternal() {}
  union {
    GetPackagesDescriptorResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetPackagesDescriptorResponseDefaultTypeInternal _GetPackagesDescriptorResponse_default_instance_;
constexpr SetPackageDescriptorRequest::SetPackageDescriptorRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : packagedescriptor_(nullptr){}
struct SetPackageDescriptorRequestDefaultTypeInternal {
  constexpr SetPackageDescriptorRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SetPackageDescriptorRequestDefaultTypeInternal() {}
  union {
    SetPackageDescriptorRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SetPackageDescriptorRequestDefaultTypeInternal _SetPackageDescriptorRequest_default_instance_;
constexpr SetPackageDescriptorResponse::SetPackageDescriptorResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : result_(false){}
struct SetPackageDescriptorResponseDefaultTypeInternal {
  constexpr SetPackageDescriptorResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SetPackageDescriptorResponseDefaultTypeInternal() {}
  union {
    SetPackageDescriptorResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SetPackageDescriptorResponseDefaultTypeInternal _SetPackageDescriptorResponse_default_instance_;
constexpr FindPackagesDescriptorRequest::FindPackagesDescriptorRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : keywords_(){}
struct FindPackagesDescriptorRequestDefaultTypeInternal {
  constexpr FindPackagesDescriptorRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~FindPackagesDescriptorRequestDefaultTypeInternal() {}
  union {
    FindPackagesDescriptorRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT FindPackagesDescriptorRequestDefaultTypeInternal _FindPackagesDescriptorRequest_default_instance_;
constexpr FindPackagesDescriptorResponse::FindPackagesDescriptorResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : results_(){}
struct FindPackagesDescriptorResponseDefaultTypeInternal {
  constexpr FindPackagesDescriptorResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~FindPackagesDescriptorResponseDefaultTypeInternal() {}
  union {
    FindPackagesDescriptorResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT FindPackagesDescriptorResponseDefaultTypeInternal _FindPackagesDescriptorResponse_default_instance_;
constexpr Role::Role(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : actions_()
  , members_()
  , organizations_()
  , id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , domain_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , description_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct RoleDefaultTypeInternal {
  constexpr RoleDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RoleDefaultTypeInternal() {}
  union {
    Role _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RoleDefaultTypeInternal _Role_default_instance_;
constexpr AddRoleActionsRqst::AddRoleActionsRqst(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : actions_()
  , roleid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct AddRoleActionsRqstDefaultTypeInternal {
  constexpr AddRoleActionsRqstDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AddRoleActionsRqstDefaultTypeInternal() {}
  union {
    AddRoleActionsRqst _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AddRoleActionsRqstDefaultTypeInternal _AddRoleActionsRqst_default_instance_;
constexpr AddRoleActionsRsp::AddRoleActionsRsp(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : result_(false){}
struct AddRoleActionsRspDefaultTypeInternal {
  constexpr AddRoleActionsRspDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AddRoleActionsRspDefaultTypeInternal() {}
  union {
    AddRoleActionsRsp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AddRoleActionsRspDefaultTypeInternal _AddRoleActionsRsp_default_instance_;
constexpr RemoveRoleActionRqst::RemoveRoleActionRqst(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : roleid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , action_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct RemoveRoleActionRqstDefaultTypeInternal {
  constexpr RemoveRoleActionRqstDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RemoveRoleActionRqstDefaultTypeInternal() {}
  union {
    RemoveRoleActionRqst _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RemoveRoleActionRqstDefaultTypeInternal _RemoveRoleActionRqst_default_instance_;
constexpr RemoveRoleActionRsp::RemoveRoleActionRsp(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : result_(false){}
struct RemoveRoleActionRspDefaultTypeInternal {
  constexpr RemoveRoleActionRspDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RemoveRoleActionRspDefaultTypeInternal() {}
  union {
    RemoveRoleActionRsp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RemoveRoleActionRspDefaultTypeInternal _RemoveRoleActionRsp_default_instance_;
constexpr RemoveRolesActionRqst::RemoveRolesActionRqst(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : action_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct RemoveRolesActionRqstDefaultTypeInternal {
  constexpr RemoveRolesActionRqstDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RemoveRolesActionRqstDefaultTypeInternal() {}
  union {
    RemoveRolesActionRqst _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RemoveRolesActionRqstDefaultTypeInternal _RemoveRolesActionRqst_default_instance_;
constexpr RemoveRolesActionRsp::RemoveRolesActionRsp(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : result_(false){}
struct RemoveRolesActionRspDefaultTypeInternal {
  constexpr RemoveRolesActionRspDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RemoveRolesActionRspDefaultTypeInternal() {}
  union {
    RemoveRolesActionRsp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RemoveRolesActionRspDefaultTypeInternal _RemoveRolesActionRsp_default_instance_;
constexpr Account::Account(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : organizations_()
  , groups_()
  , roles_()
  , id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , email_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , password_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , domain_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct AccountDefaultTypeInternal {
  constexpr AccountDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AccountDefaultTypeInternal() {}
  union {
    Account _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AccountDefaultTypeInternal _Account_default_instance_;
constexpr RegisterAccountRqst::RegisterAccountRqst(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : confirm_password_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , account_(nullptr){}
struct RegisterAccountRqstDefaultTypeInternal {
  constexpr RegisterAccountRqstDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RegisterAccountRqstDefaultTypeInternal() {}
  union {
    RegisterAccountRqst _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RegisterAccountRqstDefaultTypeInternal _RegisterAccountRqst_default_instance_;
constexpr RegisterAccountRsp::RegisterAccountRsp(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : result_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct RegisterAccountRspDefaultTypeInternal {
  constexpr RegisterAccountRspDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RegisterAccountRspDefaultTypeInternal() {}
  union {
    RegisterAccountRsp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RegisterAccountRspDefaultTypeInternal _RegisterAccountRsp_default_instance_;
constexpr AccountExistRqst::AccountExistRqst(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct AccountExistRqstDefaultTypeInternal {
  constexpr AccountExistRqstDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AccountExistRqstDefaultTypeInternal() {}
  union {
    AccountExistRqst _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AccountExistRqstDefaultTypeInternal _AccountExistRqst_default_instance_;
constexpr AccountExistRsp::AccountExistRsp(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : result_(false){}
struct AccountExistRspDefaultTypeInternal {
  constexpr AccountExistRspDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AccountExistRspDefaultTypeInternal() {}
  union {
    AccountExistRsp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AccountExistRspDefaultTypeInternal _AccountExistRsp_default_instance_;
constexpr GetAccountsRqst::GetAccountsRqst(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : query_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , options_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct GetAccountsRqstDefaultTypeInternal {
  constexpr GetAccountsRqstDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetAccountsRqstDefaultTypeInternal() {}
  union {
    GetAccountsRqst _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetAccountsRqstDefaultTypeInternal _GetAccountsRqst_default_instance_;
constexpr GetAccountsRsp::GetAccountsRsp(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : accounts_(){}
struct GetAccountsRspDefaultTypeInternal {
  constexpr GetAccountsRspDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetAccountsRspDefaultTypeInternal() {}
  union {
    GetAccountsRsp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetAccountsRspDefaultTypeInternal _GetAccountsRsp_default_instance_;
constexpr GetAccountRqst::GetAccountRqst(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : accountid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct GetAccountRqstDefaultTypeInternal {
  constexpr GetAccountRqstDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetAccountRqstDefaultTypeInternal() {}
  union {
    GetAccountRqst _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetAccountRqstDefaultTypeInternal _GetAccountRqst_default_instance_;
constexpr GetAccountRsp::GetAccountRsp(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : account_(nullptr){}
struct GetAccountRspDefaultTypeInternal {
  constexpr GetAccountRspDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetAccountRspDefaultTypeInternal() {}
  union {
    GetAccountRsp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetAccountRspDefaultTypeInternal _GetAccountRsp_default_instance_;
constexpr SetAccountPasswordRqst::SetAccountPasswordRqst(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : accountid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , old_password_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , new_password_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct SetAccountPasswordRqstDefaultTypeInternal {
  constexpr SetAccountPasswordRqstDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SetAccountPasswordRqstDefaultTypeInternal() {}
  union {
    SetAccountPasswordRqst _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SetAccountPasswordRqstDefaultTypeInternal _SetAccountPasswordRqst_default_instance_;
constexpr SetAccountPasswordRsp::SetAccountPasswordRsp(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct SetAccountPasswordRspDefaultTypeInternal {
  constexpr SetAccountPasswordRspDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SetAccountPasswordRspDefaultTypeInternal() {}
  union {
    SetAccountPasswordRsp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SetAccountPasswordRspDefaultTypeInternal _SetAccountPasswordRsp_default_instance_;
constexpr SetEmailRequest::SetEmailRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : accountid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , oldemail_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , newemail_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct SetEmailRequestDefaultTypeInternal {
  constexpr SetEmailRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SetEmailRequestDefaultTypeInternal() {}
  union {
    SetEmailRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SetEmailRequestDefaultTypeInternal _SetEmailRequest_default_instance_;
constexpr SetEmailResponse::SetEmailResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct SetEmailResponseDefaultTypeInternal {
  constexpr SetEmailResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SetEmailResponseDefaultTypeInternal() {}
  union {
    SetEmailResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SetEmailResponseDefaultTypeInternal _SetEmailResponse_default_instance_;
constexpr DeleteAccountRqst::DeleteAccountRqst(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct DeleteAccountRqstDefaultTypeInternal {
  constexpr DeleteAccountRqstDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DeleteAccountRqstDefaultTypeInternal() {}
  union {
    DeleteAccountRqst _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DeleteAccountRqstDefaultTypeInternal _DeleteAccountRqst_default_instance_;
constexpr DeleteAccountRsp::DeleteAccountRsp(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : result_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct DeleteAccountRspDefaultTypeInternal {
  constexpr DeleteAccountRspDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DeleteAccountRspDefaultTypeInternal() {}
  union {
    DeleteAccountRsp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DeleteAccountRspDefaultTypeInternal _DeleteAccountRsp_default_instance_;
constexpr AddAccountRoleRqst::AddAccountRoleRqst(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : accountid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , roleid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct AddAccountRoleRqstDefaultTypeInternal {
  constexpr AddAccountRoleRqstDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AddAccountRoleRqstDefaultTypeInternal() {}
  union {
    AddAccountRoleRqst _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AddAccountRoleRqstDefaultTypeInternal _AddAccountRoleRqst_default_instance_;
constexpr AddAccountRoleRsp::AddAccountRoleRsp(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : result_(false){}
struct AddAccountRoleRspDefaultTypeInternal {
  constexpr AddAccountRoleRspDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AddAccountRoleRspDefaultTypeInternal() {}
  union {
    AddAccountRoleRsp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AddAccountRoleRspDefaultTypeInternal _AddAccountRoleRsp_default_instance_;
constexpr RemoveAccountRoleRqst::RemoveAccountRoleRqst(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : accountid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , roleid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct RemoveAccountRoleRqstDefaultTypeInternal {
  constexpr RemoveAccountRoleRqstDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RemoveAccountRoleRqstDefaultTypeInternal() {}
  union {
    RemoveAccountRoleRqst _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RemoveAccountRoleRqstDefaultTypeInternal _RemoveAccountRoleRqst_default_instance_;
constexpr RemoveAccountRoleRsp::RemoveAccountRoleRsp(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : result_(false){}
struct RemoveAccountRoleRspDefaultTypeInternal {
  constexpr RemoveAccountRoleRspDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RemoveAccountRoleRspDefaultTypeInternal() {}
  union {
    RemoveAccountRoleRsp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RemoveAccountRoleRspDefaultTypeInternal _RemoveAccountRoleRsp_default_instance_;
constexpr Contact::Contact(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , status_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , invitationtime_(PROTOBUF_LONGLONG(0)){}
struct ContactDefaultTypeInternal {
  constexpr ContactDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ContactDefaultTypeInternal() {}
  union {
    Contact _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ContactDefaultTypeInternal _Contact_default_instance_;
constexpr SetAccountContactRqst::SetAccountContactRqst(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : accountid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , contact_(nullptr){}
struct SetAccountContactRqstDefaultTypeInternal {
  constexpr SetAccountContactRqstDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SetAccountContactRqstDefaultTypeInternal() {}
  union {
    SetAccountContactRqst _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SetAccountContactRqstDefaultTypeInternal _SetAccountContactRqst_default_instance_;
constexpr SetAccountContactRsp::SetAccountContactRsp(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : result_(false){}
struct SetAccountContactRspDefaultTypeInternal {
  constexpr SetAccountContactRspDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SetAccountContactRspDefaultTypeInternal() {}
  union {
    SetAccountContactRsp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SetAccountContactRspDefaultTypeInternal _SetAccountContactRsp_default_instance_;
constexpr CreateRoleRqst::CreateRoleRqst(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : role_(nullptr){}
struct CreateRoleRqstDefaultTypeInternal {
  constexpr CreateRoleRqstDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CreateRoleRqstDefaultTypeInternal() {}
  union {
    CreateRoleRqst _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CreateRoleRqstDefaultTypeInternal _CreateRoleRqst_default_instance_;
constexpr CreateRoleRsp::CreateRoleRsp(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : result_(false){}
struct CreateRoleRspDefaultTypeInternal {
  constexpr CreateRoleRspDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CreateRoleRspDefaultTypeInternal() {}
  union {
    CreateRoleRsp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CreateRoleRspDefaultTypeInternal _CreateRoleRsp_default_instance_;
constexpr GetRolesRqst::GetRolesRqst(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : query_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , options_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct GetRolesRqstDefaultTypeInternal {
  constexpr GetRolesRqstDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetRolesRqstDefaultTypeInternal() {}
  union {
    GetRolesRqst _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetRolesRqstDefaultTypeInternal _GetRolesRqst_default_instance_;
constexpr GetRolesRsp::GetRolesRsp(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : roles_(){}
struct GetRolesRspDefaultTypeInternal {
  constexpr GetRolesRspDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetRolesRspDefaultTypeInternal() {}
  union {
    GetRolesRsp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetRolesRspDefaultTypeInternal _GetRolesRsp_default_instance_;
constexpr DeleteRoleRqst::DeleteRoleRqst(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : roleid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct DeleteRoleRqstDefaultTypeInternal {
  constexpr DeleteRoleRqstDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DeleteRoleRqstDefaultTypeInternal() {}
  union {
    DeleteRoleRqst _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DeleteRoleRqstDefaultTypeInternal _DeleteRoleRqst_default_instance_;
constexpr DeleteRoleRsp::DeleteRoleRsp(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : result_(false){}
struct DeleteRoleRspDefaultTypeInternal {
  constexpr DeleteRoleRspDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DeleteRoleRspDefaultTypeInternal() {}
  union {
    DeleteRoleRsp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DeleteRoleRspDefaultTypeInternal _DeleteRoleRsp_default_instance_;
constexpr Application::Application(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : actions_()
  , keywords_()
  , id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , domain_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , password_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , path_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , version_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , description_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , icon_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , alias_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , publisherid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , creation_date_(PROTOBUF_LONGLONG(0))
  , last_deployed_(PROTOBUF_LONGLONG(0)){}
struct ApplicationDefaultTypeInternal {
  constexpr ApplicationDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ApplicationDefaultTypeInternal() {}
  union {
    Application _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ApplicationDefaultTypeInternal _Application_default_instance_;
constexpr CreateApplicationRqst::CreateApplicationRqst(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : application_(nullptr){}
struct CreateApplicationRqstDefaultTypeInternal {
  constexpr CreateApplicationRqstDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CreateApplicationRqstDefaultTypeInternal() {}
  union {
    CreateApplicationRqst _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CreateApplicationRqstDefaultTypeInternal _CreateApplicationRqst_default_instance_;
constexpr CreateApplicationRsp::CreateApplicationRsp(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct CreateApplicationRspDefaultTypeInternal {
  constexpr CreateApplicationRspDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CreateApplicationRspDefaultTypeInternal() {}
  union {
    CreateApplicationRsp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CreateApplicationRspDefaultTypeInternal _CreateApplicationRsp_default_instance_;
constexpr UpdateApplicationRqst::UpdateApplicationRqst(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : applicationid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , values_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct UpdateApplicationRqstDefaultTypeInternal {
  constexpr UpdateApplicationRqstDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UpdateApplicationRqstDefaultTypeInternal() {}
  union {
    UpdateApplicationRqst _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UpdateApplicationRqstDefaultTypeInternal _UpdateApplicationRqst_default_instance_;
constexpr UpdateApplicationRsp::UpdateApplicationRsp(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : result_(false){}
struct UpdateApplicationRspDefaultTypeInternal {
  constexpr UpdateApplicationRspDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UpdateApplicationRspDefaultTypeInternal() {}
  union {
    UpdateApplicationRsp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UpdateApplicationRspDefaultTypeInternal _UpdateApplicationRsp_default_instance_;
constexpr DeleteApplicationRqst::DeleteApplicationRqst(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : applicationid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct DeleteApplicationRqstDefaultTypeInternal {
  constexpr DeleteApplicationRqstDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DeleteApplicationRqstDefaultTypeInternal() {}
  union {
    DeleteApplicationRqst _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DeleteApplicationRqstDefaultTypeInternal _DeleteApplicationRqst_default_instance_;
constexpr DeleteApplicationRsp::DeleteApplicationRsp(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : result_(false){}
struct DeleteApplicationRspDefaultTypeInternal {
  constexpr DeleteApplicationRspDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DeleteApplicationRspDefaultTypeInternal() {}
  union {
    DeleteApplicationRsp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DeleteApplicationRspDefaultTypeInternal _DeleteApplicationRsp_default_instance_;
constexpr AddApplicationActionsRqst::AddApplicationActionsRqst(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : actions_()
  , applicationid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct AddApplicationActionsRqstDefaultTypeInternal {
  constexpr AddApplicationActionsRqstDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AddApplicationActionsRqstDefaultTypeInternal() {}
  union {
    AddApplicationActionsRqst _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AddApplicationActionsRqstDefaultTypeInternal _AddApplicationActionsRqst_default_instance_;
constexpr AddApplicationActionsRsp::AddApplicationActionsRsp(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : result_(false){}
struct AddApplicationActionsRspDefaultTypeInternal {
  constexpr AddApplicationActionsRspDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AddApplicationActionsRspDefaultTypeInternal() {}
  union {
    AddApplicationActionsRsp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AddApplicationActionsRspDefaultTypeInternal _AddApplicationActionsRsp_default_instance_;
constexpr RemoveApplicationActionRqst::RemoveApplicationActionRqst(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : applicationid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , action_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct RemoveApplicationActionRqstDefaultTypeInternal {
  constexpr RemoveApplicationActionRqstDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RemoveApplicationActionRqstDefaultTypeInternal() {}
  union {
    RemoveApplicationActionRqst _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RemoveApplicationActionRqstDefaultTypeInternal _RemoveApplicationActionRqst_default_instance_;
constexpr RemoveApplicationActionRsp::RemoveApplicationActionRsp(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : result_(false){}
struct RemoveApplicationActionRspDefaultTypeInternal {
  constexpr RemoveApplicationActionRspDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RemoveApplicationActionRspDefaultTypeInternal() {}
  union {
    RemoveApplicationActionRsp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RemoveApplicationActionRspDefaultTypeInternal _RemoveApplicationActionRsp_default_instance_;
constexpr RemoveApplicationsActionRqst::RemoveApplicationsActionRqst(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : action_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct RemoveApplicationsActionRqstDefaultTypeInternal {
  constexpr RemoveApplicationsActionRqstDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RemoveApplicationsActionRqstDefaultTypeInternal() {}
  union {
    RemoveApplicationsActionRqst _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RemoveApplicationsActionRqstDefaultTypeInternal _RemoveApplicationsActionRqst_default_instance_;
constexpr RemoveApplicationsActionRsp::RemoveApplicationsActionRsp(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : result_(false){}
struct RemoveApplicationsActionRspDefaultTypeInternal {
  constexpr RemoveApplicationsActionRspDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RemoveApplicationsActionRspDefaultTypeInternal() {}
  union {
    RemoveApplicationsActionRsp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RemoveApplicationsActionRspDefaultTypeInternal _RemoveApplicationsActionRsp_default_instance_;
constexpr GetApplicationsRqst::GetApplicationsRqst(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : query_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , options_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct GetApplicationsRqstDefaultTypeInternal {
  constexpr GetApplicationsRqstDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetApplicationsRqstDefaultTypeInternal() {}
  union {
    GetApplicationsRqst _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetApplicationsRqstDefaultTypeInternal _GetApplicationsRqst_default_instance_;
constexpr GetApplicationsRsp::GetApplicationsRsp(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : applications_(){}
struct GetApplicationsRspDefaultTypeInternal {
  constexpr GetApplicationsRspDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetApplicationsRspDefaultTypeInternal() {}
  union {
    GetApplicationsRsp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetApplicationsRspDefaultTypeInternal _GetApplicationsRsp_default_instance_;
constexpr GetApplicationVersionRqst::GetApplicationVersionRqst(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct GetApplicationVersionRqstDefaultTypeInternal {
  constexpr GetApplicationVersionRqstDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetApplicationVersionRqstDefaultTypeInternal() {}
  union {
    GetApplicationVersionRqst _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetApplicationVersionRqstDefaultTypeInternal _GetApplicationVersionRqst_default_instance_;
constexpr GetApplicationVersionRsp::GetApplicationVersionRsp(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : version_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct GetApplicationVersionRspDefaultTypeInternal {
  constexpr GetApplicationVersionRspDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetApplicationVersionRspDefaultTypeInternal() {}
  union {
    GetApplicationVersionRsp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetApplicationVersionRspDefaultTypeInternal _GetApplicationVersionRsp_default_instance_;
constexpr GetApplicationIconRqst::GetApplicationIconRqst(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct GetApplicationIconRqstDefaultTypeInternal {
  constexpr GetApplicationIconRqstDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetApplicationIconRqstDefaultTypeInternal() {}
  union {
    GetApplicationIconRqst _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetApplicationIconRqstDefaultTypeInternal _GetApplicationIconRqst_default_instance_;
constexpr GetApplicationIconRsp::GetApplicationIconRsp(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : icon_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct GetApplicationIconRspDefaultTypeInternal {
  constexpr GetApplicationIconRspDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetApplicationIconRspDefaultTypeInternal() {}
  union {
    GetApplicationIconRsp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetApplicationIconRspDefaultTypeInternal _GetApplicationIconRsp_default_instance_;
constexpr GetApplicationAliasRqst::GetApplicationAliasRqst(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct GetApplicationAliasRqstDefaultTypeInternal {
  constexpr GetApplicationAliasRqstDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetApplicationAliasRqstDefaultTypeInternal() {}
  union {
    GetApplicationAliasRqst _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetApplicationAliasRqstDefaultTypeInternal _GetApplicationAliasRqst_default_instance_;
constexpr GetApplicationAliasRsp::GetApplicationAliasRsp(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : alias_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct GetApplicationAliasRspDefaultTypeInternal {
  constexpr GetApplicationAliasRspDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetApplicationAliasRspDefaultTypeInternal() {}
  union {
    GetApplicationAliasRsp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetApplicationAliasRspDefaultTypeInternal _GetApplicationAliasRsp_default_instance_;
constexpr Group::Group(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : members_()
  , organizations_()
  , id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , domain_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , description_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct GroupDefaultTypeInternal {
  constexpr GroupDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GroupDefaultTypeInternal() {}
  union {
    Group _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GroupDefaultTypeInternal _Group_default_instance_;
constexpr CreateGroupRqst::CreateGroupRqst(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : group_(nullptr){}
struct CreateGroupRqstDefaultTypeInternal {
  constexpr CreateGroupRqstDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CreateGroupRqstDefaultTypeInternal() {}
  union {
    CreateGroupRqst _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CreateGroupRqstDefaultTypeInternal _CreateGroupRqst_default_instance_;
constexpr CreateGroupRsp::CreateGroupRsp(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : result_(false){}
struct CreateGroupRspDefaultTypeInternal {
  constexpr CreateGroupRspDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CreateGroupRspDefaultTypeInternal() {}
  union {
    CreateGroupRsp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CreateGroupRspDefaultTypeInternal _CreateGroupRsp_default_instance_;
constexpr UpdateGroupRqst::UpdateGroupRqst(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : groupid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , values_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct UpdateGroupRqstDefaultTypeInternal {
  constexpr UpdateGroupRqstDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UpdateGroupRqstDefaultTypeInternal() {}
  union {
    UpdateGroupRqst _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UpdateGroupRqstDefaultTypeInternal _UpdateGroupRqst_default_instance_;
constexpr UpdateGroupRsp::UpdateGroupRsp(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : result_(false){}
struct UpdateGroupRspDefaultTypeInternal {
  constexpr UpdateGroupRspDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UpdateGroupRspDefaultTypeInternal() {}
  union {
    UpdateGroupRsp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UpdateGroupRspDefaultTypeInternal _UpdateGroupRsp_default_instance_;
constexpr GetGroupsRqst::GetGroupsRqst(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : query_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , options_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct GetGroupsRqstDefaultTypeInternal {
  constexpr GetGroupsRqstDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetGroupsRqstDefaultTypeInternal() {}
  union {
    GetGroupsRqst _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetGroupsRqstDefaultTypeInternal _GetGroupsRqst_default_instance_;
constexpr GetGroupsRsp::GetGroupsRsp(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : groups_(){}
struct GetGroupsRspDefaultTypeInternal {
  constexpr GetGroupsRspDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetGroupsRspDefaultTypeInternal() {}
  union {
    GetGroupsRsp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetGroupsRspDefaultTypeInternal _GetGroupsRsp_default_instance_;
constexpr DeleteGroupRqst::DeleteGroupRqst(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : group_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct DeleteGroupRqstDefaultTypeInternal {
  constexpr DeleteGroupRqstDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DeleteGroupRqstDefaultTypeInternal() {}
  union {
    DeleteGroupRqst _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DeleteGroupRqstDefaultTypeInternal _DeleteGroupRqst_default_instance_;
constexpr DeleteGroupRsp::DeleteGroupRsp(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : result_(false){}
struct DeleteGroupRspDefaultTypeInternal {
  constexpr DeleteGroupRspDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DeleteGroupRspDefaultTypeInternal() {}
  union {
    DeleteGroupRsp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DeleteGroupRspDefaultTypeInternal _DeleteGroupRsp_default_instance_;
constexpr AddGroupMemberAccountRqst::AddGroupMemberAccountRqst(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : groupid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , accountid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct AddGroupMemberAccountRqstDefaultTypeInternal {
  constexpr AddGroupMemberAccountRqstDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AddGroupMemberAccountRqstDefaultTypeInternal() {}
  union {
    AddGroupMemberAccountRqst _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AddGroupMemberAccountRqstDefaultTypeInternal _AddGroupMemberAccountRqst_default_instance_;
constexpr AddGroupMemberAccountRsp::AddGroupMemberAccountRsp(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : result_(false){}
struct AddGroupMemberAccountRspDefaultTypeInternal {
  constexpr AddGroupMemberAccountRspDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AddGroupMemberAccountRspDefaultTypeInternal() {}
  union {
    AddGroupMemberAccountRsp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AddGroupMemberAccountRspDefaultTypeInternal _AddGroupMemberAccountRsp_default_instance_;
constexpr RemoveGroupMemberAccountRqst::RemoveGroupMemberAccountRqst(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : groupid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , accountid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct RemoveGroupMemberAccountRqstDefaultTypeInternal {
  constexpr RemoveGroupMemberAccountRqstDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RemoveGroupMemberAccountRqstDefaultTypeInternal() {}
  union {
    RemoveGroupMemberAccountRqst _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RemoveGroupMemberAccountRqstDefaultTypeInternal _RemoveGroupMemberAccountRqst_default_instance_;
constexpr RemoveGroupMemberAccountRsp::RemoveGroupMemberAccountRsp(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : result_(false){}
struct RemoveGroupMemberAccountRspDefaultTypeInternal {
  constexpr RemoveGroupMemberAccountRspDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RemoveGroupMemberAccountRspDefaultTypeInternal() {}
  union {
    RemoveGroupMemberAccountRsp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RemoveGroupMemberAccountRspDefaultTypeInternal _RemoveGroupMemberAccountRsp_default_instance_;
constexpr Organization::Organization(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : accounts_()
  , groups_()
  , roles_()
  , applications_()
  , id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , domain_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , email_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , icon_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , description_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct OrganizationDefaultTypeInternal {
  constexpr OrganizationDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~OrganizationDefaultTypeInternal() {}
  union {
    Organization _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT OrganizationDefaultTypeInternal _Organization_default_instance_;
constexpr CreateOrganizationRqst::CreateOrganizationRqst(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : organization_(nullptr){}
struct CreateOrganizationRqstDefaultTypeInternal {
  constexpr CreateOrganizationRqstDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CreateOrganizationRqstDefaultTypeInternal() {}
  union {
    CreateOrganizationRqst _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CreateOrganizationRqstDefaultTypeInternal _CreateOrganizationRqst_default_instance_;
constexpr CreateOrganizationRsp::CreateOrganizationRsp(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : result_(false){}
struct CreateOrganizationRspDefaultTypeInternal {
  constexpr CreateOrganizationRspDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CreateOrganizationRspDefaultTypeInternal() {}
  union {
    CreateOrganizationRsp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CreateOrganizationRspDefaultTypeInternal _CreateOrganizationRsp_default_instance_;
constexpr UpdateOrganizationRqst::UpdateOrganizationRqst(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : organizationid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , values_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct UpdateOrganizationRqstDefaultTypeInternal {
  constexpr UpdateOrganizationRqstDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UpdateOrganizationRqstDefaultTypeInternal() {}
  union {
    UpdateOrganizationRqst _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UpdateOrganizationRqstDefaultTypeInternal _UpdateOrganizationRqst_default_instance_;
constexpr UpdateOrganizationRsp::UpdateOrganizationRsp(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : result_(false){}
struct UpdateOrganizationRspDefaultTypeInternal {
  constexpr UpdateOrganizationRspDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UpdateOrganizationRspDefaultTypeInternal() {}
  union {
    UpdateOrganizationRsp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UpdateOrganizationRspDefaultTypeInternal _UpdateOrganizationRsp_default_instance_;
constexpr GetOrganizationsRqst::GetOrganizationsRqst(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : query_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , options_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct GetOrganizationsRqstDefaultTypeInternal {
  constexpr GetOrganizationsRqstDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetOrganizationsRqstDefaultTypeInternal() {}
  union {
    GetOrganizationsRqst _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetOrganizationsRqstDefaultTypeInternal _GetOrganizationsRqst_default_instance_;
constexpr GetOrganizationsRsp::GetOrganizationsRsp(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : organizations_(){}
struct GetOrganizationsRspDefaultTypeInternal {
  constexpr GetOrganizationsRspDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetOrganizationsRspDefaultTypeInternal() {}
  union {
    GetOrganizationsRsp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetOrganizationsRspDefaultTypeInternal _GetOrganizationsRsp_default_instance_;
constexpr AddOrganizationAccountRqst::AddOrganizationAccountRqst(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : organizationid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , accountid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct AddOrganizationAccountRqstDefaultTypeInternal {
  constexpr AddOrganizationAccountRqstDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AddOrganizationAccountRqstDefaultTypeInternal() {}
  union {
    AddOrganizationAccountRqst _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AddOrganizationAccountRqstDefaultTypeInternal _AddOrganizationAccountRqst_default_instance_;
constexpr AddOrganizationAccountRsp::AddOrganizationAccountRsp(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : result_(false){}
struct AddOrganizationAccountRspDefaultTypeInternal {
  constexpr AddOrganizationAccountRspDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AddOrganizationAccountRspDefaultTypeInternal() {}
  union {
    AddOrganizationAccountRsp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AddOrganizationAccountRspDefaultTypeInternal _AddOrganizationAccountRsp_default_instance_;
constexpr AddOrganizationGroupRqst::AddOrganizationGroupRqst(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : organizationid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , groupid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct AddOrganizationGroupRqstDefaultTypeInternal {
  constexpr AddOrganizationGroupRqstDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AddOrganizationGroupRqstDefaultTypeInternal() {}
  union {
    AddOrganizationGroupRqst _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AddOrganizationGroupRqstDefaultTypeInternal _AddOrganizationGroupRqst_default_instance_;
constexpr AddOrganizationGroupRsp::AddOrganizationGroupRsp(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : result_(false){}
struct AddOrganizationGroupRspDefaultTypeInternal {
  constexpr AddOrganizationGroupRspDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AddOrganizationGroupRspDefaultTypeInternal() {}
  union {
    AddOrganizationGroupRsp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AddOrganizationGroupRspDefaultTypeInternal _AddOrganizationGroupRsp_default_instance_;
constexpr AddOrganizationRoleRqst::AddOrganizationRoleRqst(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : organizationid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , roleid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct AddOrganizationRoleRqstDefaultTypeInternal {
  constexpr AddOrganizationRoleRqstDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AddOrganizationRoleRqstDefaultTypeInternal() {}
  union {
    AddOrganizationRoleRqst _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AddOrganizationRoleRqstDefaultTypeInternal _AddOrganizationRoleRqst_default_instance_;
constexpr AddOrganizationRoleRsp::AddOrganizationRoleRsp(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : result_(false){}
struct AddOrganizationRoleRspDefaultTypeInternal {
  constexpr AddOrganizationRoleRspDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AddOrganizationRoleRspDefaultTypeInternal() {}
  union {
    AddOrganizationRoleRsp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AddOrganizationRoleRspDefaultTypeInternal _AddOrganizationRoleRsp_default_instance_;
constexpr AddOrganizationApplicationRqst::AddOrganizationApplicationRqst(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : organizationid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , applicationid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct AddOrganizationApplicationRqstDefaultTypeInternal {
  constexpr AddOrganizationApplicationRqstDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AddOrganizationApplicationRqstDefaultTypeInternal() {}
  union {
    AddOrganizationApplicationRqst _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AddOrganizationApplicationRqstDefaultTypeInternal _AddOrganizationApplicationRqst_default_instance_;
constexpr AddOrganizationApplicationRsp::AddOrganizationApplicationRsp(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : result_(false){}
struct AddOrganizationApplicationRspDefaultTypeInternal {
  constexpr AddOrganizationApplicationRspDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AddOrganizationApplicationRspDefaultTypeInternal() {}
  union {
    AddOrganizationApplicationRsp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AddOrganizationApplicationRspDefaultTypeInternal _AddOrganizationApplicationRsp_default_instance_;
constexpr RemoveOrganizationGroupRqst::RemoveOrganizationGroupRqst(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : organizationid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , groupid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct RemoveOrganizationGroupRqstDefaultTypeInternal {
  constexpr RemoveOrganizationGroupRqstDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RemoveOrganizationGroupRqstDefaultTypeInternal() {}
  union {
    RemoveOrganizationGroupRqst _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RemoveOrganizationGroupRqstDefaultTypeInternal _RemoveOrganizationGroupRqst_default_instance_;
constexpr RemoveOrganizationGroupRsp::RemoveOrganizationGroupRsp(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : result_(false){}
struct RemoveOrganizationGroupRspDefaultTypeInternal {
  constexpr RemoveOrganizationGroupRspDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RemoveOrganizationGroupRspDefaultTypeInternal() {}
  union {
    RemoveOrganizationGroupRsp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RemoveOrganizationGroupRspDefaultTypeInternal _RemoveOrganizationGroupRsp_default_instance_;
constexpr RemoveOrganizationRoleRqst::RemoveOrganizationRoleRqst(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : organizationid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , roleid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct RemoveOrganizationRoleRqstDefaultTypeInternal {
  constexpr RemoveOrganizationRoleRqstDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RemoveOrganizationRoleRqstDefaultTypeInternal() {}
  union {
    RemoveOrganizationRoleRqst _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RemoveOrganizationRoleRqstDefaultTypeInternal _RemoveOrganizationRoleRqst_default_instance_;
constexpr RemoveOrganizationRoleRsp::RemoveOrganizationRoleRsp(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : result_(false){}
struct RemoveOrganizationRoleRspDefaultTypeInternal {
  constexpr RemoveOrganizationRoleRspDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RemoveOrganizationRoleRspDefaultTypeInternal() {}
  union {
    RemoveOrganizationRoleRsp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RemoveOrganizationRoleRspDefaultTypeInternal _RemoveOrganizationRoleRsp_default_instance_;
constexpr RemoveOrganizationApplicationRqst::RemoveOrganizationApplicationRqst(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : organizationid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , applicationid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct RemoveOrganizationApplicationRqstDefaultTypeInternal {
  constexpr RemoveOrganizationApplicationRqstDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RemoveOrganizationApplicationRqstDefaultTypeInternal() {}
  union {
    RemoveOrganizationApplicationRqst _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RemoveOrganizationApplicationRqstDefaultTypeInternal _RemoveOrganizationApplicationRqst_default_instance_;
constexpr RemoveOrganizationApplicationRsp::RemoveOrganizationApplicationRsp(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : result_(false){}
struct RemoveOrganizationApplicationRspDefaultTypeInternal {
  constexpr RemoveOrganizationApplicationRspDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RemoveOrganizationApplicationRspDefaultTypeInternal() {}
  union {
    RemoveOrganizationApplicationRsp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RemoveOrganizationApplicationRspDefaultTypeInternal _RemoveOrganizationApplicationRsp_default_instance_;
constexpr RemoveOrganizationAccountRqst::RemoveOrganizationAccountRqst(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : organizationid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , accountid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct RemoveOrganizationAccountRqstDefaultTypeInternal {
  constexpr RemoveOrganizationAccountRqstDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RemoveOrganizationAccountRqstDefaultTypeInternal() {}
  union {
    RemoveOrganizationAccountRqst _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RemoveOrganizationAccountRqstDefaultTypeInternal _RemoveOrganizationAccountRqst_default_instance_;
constexpr RemoveOrganizationAccountRsp::RemoveOrganizationAccountRsp(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : result_(false){}
struct RemoveOrganizationAccountRspDefaultTypeInternal {
  constexpr RemoveOrganizationAccountRspDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RemoveOrganizationAccountRspDefaultTypeInternal() {}
  union {
    RemoveOrganizationAccountRsp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RemoveOrganizationAccountRspDefaultTypeInternal _RemoveOrganizationAccountRsp_default_instance_;
constexpr IsOrgnanizationMemberRqst::IsOrgnanizationMemberRqst(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : organizationid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , accountid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct IsOrgnanizationMemberRqstDefaultTypeInternal {
  constexpr IsOrgnanizationMemberRqstDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~IsOrgnanizationMemberRqstDefaultTypeInternal() {}
  union {
    IsOrgnanizationMemberRqst _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT IsOrgnanizationMemberRqstDefaultTypeInternal _IsOrgnanizationMemberRqst_default_instance_;
constexpr IsOrgnanizationMemberRsp::IsOrgnanizationMemberRsp(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : result_(false){}
struct IsOrgnanizationMemberRspDefaultTypeInternal {
  constexpr IsOrgnanizationMemberRspDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~IsOrgnanizationMemberRspDefaultTypeInternal() {}
  union {
    IsOrgnanizationMemberRsp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT IsOrgnanizationMemberRspDefaultTypeInternal _IsOrgnanizationMemberRsp_default_instance_;
constexpr DeleteOrganizationRqst::DeleteOrganizationRqst(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : organization_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct DeleteOrganizationRqstDefaultTypeInternal {
  constexpr DeleteOrganizationRqstDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DeleteOrganizationRqstDefaultTypeInternal() {}
  union {
    DeleteOrganizationRqst _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DeleteOrganizationRqstDefaultTypeInternal _DeleteOrganizationRqst_default_instance_;
constexpr DeleteOrganizationRsp::DeleteOrganizationRsp(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : result_(false){}
struct DeleteOrganizationRspDefaultTypeInternal {
  constexpr DeleteOrganizationRspDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DeleteOrganizationRspDefaultTypeInternal() {}
  union {
    DeleteOrganizationRsp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DeleteOrganizationRspDefaultTypeInternal _DeleteOrganizationRsp_default_instance_;
constexpr Peer::Peer(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : actions_()
  , hostname_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , address_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , domain_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , external_ip_address_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , local_ip_address_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , mac_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , state_(0)
{}
struct PeerDefaultTypeInternal {
  constexpr PeerDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PeerDefaultTypeInternal() {}
  union {
    Peer _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PeerDefaultTypeInternal _Peer_default_instance_;
constexpr GetPeerApprovalStateRqst::GetPeerApprovalStateRqst(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : mac_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , remote_peer_address_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct GetPeerApprovalStateRqstDefaultTypeInternal {
  constexpr GetPeerApprovalStateRqstDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetPeerApprovalStateRqstDefaultTypeInternal() {}
  union {
    GetPeerApprovalStateRqst _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetPeerApprovalStateRqstDefaultTypeInternal _GetPeerApprovalStateRqst_default_instance_;
constexpr GetPeerApprovalStateRsp::GetPeerApprovalStateRsp(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : state_(0)
{}
struct GetPeerApprovalStateRspDefaultTypeInternal {
  constexpr GetPeerApprovalStateRspDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetPeerApprovalStateRspDefaultTypeInternal() {}
  union {
    GetPeerApprovalStateRsp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetPeerApprovalStateRspDefaultTypeInternal _GetPeerApprovalStateRsp_default_instance_;
constexpr GetPeerPublicKeyRqst::GetPeerPublicKeyRqst(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : mac_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , remote_peer_address_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct GetPeerPublicKeyRqstDefaultTypeInternal {
  constexpr GetPeerPublicKeyRqstDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetPeerPublicKeyRqstDefaultTypeInternal() {}
  union {
    GetPeerPublicKeyRqst _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetPeerPublicKeyRqstDefaultTypeInternal _GetPeerPublicKeyRqst_default_instance_;
constexpr GetPeerPublicKeyRsp::GetPeerPublicKeyRsp(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : public_key_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct GetPeerPublicKeyRspDefaultTypeInternal {
  constexpr GetPeerPublicKeyRspDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetPeerPublicKeyRspDefaultTypeInternal() {}
  union {
    GetPeerPublicKeyRsp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetPeerPublicKeyRspDefaultTypeInternal _GetPeerPublicKeyRsp_default_instance_;
constexpr RegisterPeerRqst::RegisterPeerRqst(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : public_key_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , peer_(nullptr){}
struct RegisterPeerRqstDefaultTypeInternal {
  constexpr RegisterPeerRqstDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RegisterPeerRqstDefaultTypeInternal() {}
  union {
    RegisterPeerRqst _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RegisterPeerRqstDefaultTypeInternal _RegisterPeerRqst_default_instance_;
constexpr RegisterPeerRsp::RegisterPeerRsp(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : public_key_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , peer_(nullptr){}
struct RegisterPeerRspDefaultTypeInternal {
  constexpr RegisterPeerRspDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RegisterPeerRspDefaultTypeInternal() {}
  union {
    RegisterPeerRsp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RegisterPeerRspDefaultTypeInternal _RegisterPeerRsp_default_instance_;
constexpr GetPeersRqst::GetPeersRqst(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : query_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , options_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct GetPeersRqstDefaultTypeInternal {
  constexpr GetPeersRqstDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetPeersRqstDefaultTypeInternal() {}
  union {
    GetPeersRqst _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetPeersRqstDefaultTypeInternal _GetPeersRqst_default_instance_;
constexpr GetPeersRsp::GetPeersRsp(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : peers_(){}
struct GetPeersRspDefaultTypeInternal {
  constexpr GetPeersRspDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetPeersRspDefaultTypeInternal() {}
  union {
    GetPeersRsp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetPeersRspDefaultTypeInternal _GetPeersRsp_default_instance_;
constexpr DeletePeerRqst::DeletePeerRqst(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : peer_(nullptr){}
struct DeletePeerRqstDefaultTypeInternal {
  constexpr DeletePeerRqstDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DeletePeerRqstDefaultTypeInternal() {}
  union {
    DeletePeerRqst _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DeletePeerRqstDefaultTypeInternal _DeletePeerRqst_default_instance_;
constexpr DeletePeerRsp::DeletePeerRsp(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : result_(false){}
struct DeletePeerRspDefaultTypeInternal {
  constexpr DeletePeerRspDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DeletePeerRspDefaultTypeInternal() {}
  union {
    DeletePeerRsp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DeletePeerRspDefaultTypeInternal _DeletePeerRsp_default_instance_;
constexpr AddPeerActionsRqst::AddPeerActionsRqst(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : actions_()
  , mac_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct AddPeerActionsRqstDefaultTypeInternal {
  constexpr AddPeerActionsRqstDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AddPeerActionsRqstDefaultTypeInternal() {}
  union {
    AddPeerActionsRqst _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AddPeerActionsRqstDefaultTypeInternal _AddPeerActionsRqst_default_instance_;
constexpr AddPeerActionsRsp::AddPeerActionsRsp(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : result_(false){}
struct AddPeerActionsRspDefaultTypeInternal {
  constexpr AddPeerActionsRspDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AddPeerActionsRspDefaultTypeInternal() {}
  union {
    AddPeerActionsRsp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AddPeerActionsRspDefaultTypeInternal _AddPeerActionsRsp_default_instance_;
constexpr RemovePeerActionRqst::RemovePeerActionRqst(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : mac_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , action_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct RemovePeerActionRqstDefaultTypeInternal {
  constexpr RemovePeerActionRqstDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RemovePeerActionRqstDefaultTypeInternal() {}
  union {
    RemovePeerActionRqst _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RemovePeerActionRqstDefaultTypeInternal _RemovePeerActionRqst_default_instance_;
constexpr RemovePeerActionRsp::RemovePeerActionRsp(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : result_(false){}
struct RemovePeerActionRspDefaultTypeInternal {
  constexpr RemovePeerActionRspDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RemovePeerActionRspDefaultTypeInternal() {}
  union {
    RemovePeerActionRsp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RemovePeerActionRspDefaultTypeInternal _RemovePeerActionRsp_default_instance_;
constexpr RemovePeersActionRqst::RemovePeersActionRqst(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : action_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct RemovePeersActionRqstDefaultTypeInternal {
  constexpr RemovePeersActionRqstDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RemovePeersActionRqstDefaultTypeInternal() {}
  union {
    RemovePeersActionRqst _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RemovePeersActionRqstDefaultTypeInternal _RemovePeersActionRqst_default_instance_;
constexpr RemovePeersActionRsp::RemovePeersActionRsp(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : result_(false){}
struct RemovePeersActionRspDefaultTypeInternal {
  constexpr RemovePeersActionRspDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RemovePeersActionRspDefaultTypeInternal() {}
  union {
    RemovePeersActionRsp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RemovePeersActionRspDefaultTypeInternal _RemovePeersActionRsp_default_instance_;
constexpr AcceptPeerRqst::AcceptPeerRqst(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : peer_(nullptr){}
struct AcceptPeerRqstDefaultTypeInternal {
  constexpr AcceptPeerRqstDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AcceptPeerRqstDefaultTypeInternal() {}
  union {
    AcceptPeerRqst _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AcceptPeerRqstDefaultTypeInternal _AcceptPeerRqst_default_instance_;
constexpr AcceptPeerRsp::AcceptPeerRsp(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : result_(false){}
struct AcceptPeerRspDefaultTypeInternal {
  constexpr AcceptPeerRspDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AcceptPeerRspDefaultTypeInternal() {}
  union {
    AcceptPeerRsp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AcceptPeerRspDefaultTypeInternal _AcceptPeerRsp_default_instance_;
constexpr RejectPeerRqst::RejectPeerRqst(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : peer_(nullptr){}
struct RejectPeerRqstDefaultTypeInternal {
  constexpr RejectPeerRqstDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RejectPeerRqstDefaultTypeInternal() {}
  union {
    RejectPeerRqst _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RejectPeerRqstDefaultTypeInternal _RejectPeerRqst_default_instance_;
constexpr RejectPeerRsp::RejectPeerRsp(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : result_(false){}
struct RejectPeerRspDefaultTypeInternal {
  constexpr RejectPeerRspDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RejectPeerRspDefaultTypeInternal() {}
  union {
    RejectPeerRsp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RejectPeerRspDefaultTypeInternal _RejectPeerRsp_default_instance_;
constexpr Notification::Notification(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , message_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , recipient_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , sender_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , date_(PROTOBUF_LONGLONG(0))
  , notification_type_(0)
{}
struct NotificationDefaultTypeInternal {
  constexpr NotificationDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~NotificationDefaultTypeInternal() {}
  union {
    Notification _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT NotificationDefaultTypeInternal _Notification_default_instance_;
constexpr CreateNotificationRqst::CreateNotificationRqst(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : notification_(nullptr){}
struct CreateNotificationRqstDefaultTypeInternal {
  constexpr CreateNotificationRqstDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CreateNotificationRqstDefaultTypeInternal() {}
  union {
    CreateNotificationRqst _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CreateNotificationRqstDefaultTypeInternal _CreateNotificationRqst_default_instance_;
constexpr CreateNotificationRsp::CreateNotificationRsp(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct CreateNotificationRspDefaultTypeInternal {
  constexpr CreateNotificationRspDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CreateNotificationRspDefaultTypeInternal() {}
  union {
    CreateNotificationRsp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CreateNotificationRspDefaultTypeInternal _CreateNotificationRsp_default_instance_;
constexpr GetNotificationsRqst::GetNotificationsRqst(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : recipient_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct GetNotificationsRqstDefaultTypeInternal {
  constexpr GetNotificationsRqstDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetNotificationsRqstDefaultTypeInternal() {}
  union {
    GetNotificationsRqst _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetNotificationsRqstDefaultTypeInternal _GetNotificationsRqst_default_instance_;
constexpr GetNotificationsRsp::GetNotificationsRsp(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : notifications_(){}
struct GetNotificationsRspDefaultTypeInternal {
  constexpr GetNotificationsRspDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetNotificationsRspDefaultTypeInternal() {}
  union {
    GetNotificationsRsp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetNotificationsRspDefaultTypeInternal _GetNotificationsRsp_default_instance_;
constexpr DeleteNotificationRqst::DeleteNotificationRqst(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , recipient_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct DeleteNotificationRqstDefaultTypeInternal {
  constexpr DeleteNotificationRqstDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DeleteNotificationRqstDefaultTypeInternal() {}
  union {
    DeleteNotificationRqst _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DeleteNotificationRqstDefaultTypeInternal _DeleteNotificationRqst_default_instance_;
constexpr DeleteNotificationRsp::DeleteNotificationRsp(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct DeleteNotificationRspDefaultTypeInternal {
  constexpr DeleteNotificationRspDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DeleteNotificationRspDefaultTypeInternal() {}
  union {
    DeleteNotificationRsp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DeleteNotificationRspDefaultTypeInternal _DeleteNotificationRsp_default_instance_;
constexpr ClearAllNotificationsRqst::ClearAllNotificationsRqst(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : recipient_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct ClearAllNotificationsRqstDefaultTypeInternal {
  constexpr ClearAllNotificationsRqstDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ClearAllNotificationsRqstDefaultTypeInternal() {}
  union {
    ClearAllNotificationsRqst _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ClearAllNotificationsRqstDefaultTypeInternal _ClearAllNotificationsRqst_default_instance_;
constexpr ClearAllNotificationsRsp::ClearAllNotificationsRsp(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct ClearAllNotificationsRspDefaultTypeInternal {
  constexpr ClearAllNotificationsRspDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ClearAllNotificationsRspDefaultTypeInternal() {}
  union {
    ClearAllNotificationsRsp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ClearAllNotificationsRspDefaultTypeInternal _ClearAllNotificationsRsp_default_instance_;
constexpr ClearNotificationsByTypeRqst::ClearNotificationsByTypeRqst(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : recipient_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , notification_type_(0)
{}
struct ClearNotificationsByTypeRqstDefaultTypeInternal {
  constexpr ClearNotificationsByTypeRqstDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ClearNotificationsByTypeRqstDefaultTypeInternal() {}
  union {
    ClearNotificationsByTypeRqst _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ClearNotificationsByTypeRqstDefaultTypeInternal _ClearNotificationsByTypeRqst_default_instance_;
constexpr ClearNotificationsByTypeRsp::ClearNotificationsByTypeRsp(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct ClearNotificationsByTypeRspDefaultTypeInternal {
  constexpr ClearNotificationsByTypeRspDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ClearNotificationsByTypeRspDefaultTypeInternal() {}
  union {
    ClearNotificationsByTypeRsp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ClearNotificationsByTypeRspDefaultTypeInternal _ClearNotificationsByTypeRsp_default_instance_;
constexpr Session::Session(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : accountid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , last_state_time_(PROTOBUF_LONGLONG(0))
  , expire_at_(PROTOBUF_LONGLONG(0))
  , state_(0)
{}
struct SessionDefaultTypeInternal {
  constexpr SessionDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SessionDefaultTypeInternal() {}
  union {
    Session _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SessionDefaultTypeInternal _Session_default_instance_;
constexpr UpdateSessionRequest::UpdateSessionRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : session_(nullptr){}
struct UpdateSessionRequestDefaultTypeInternal {
  constexpr UpdateSessionRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UpdateSessionRequestDefaultTypeInternal() {}
  union {
    UpdateSessionRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UpdateSessionRequestDefaultTypeInternal _UpdateSessionRequest_default_instance_;
constexpr UpdateSessionResponse::UpdateSessionResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct UpdateSessionResponseDefaultTypeInternal {
  constexpr UpdateSessionResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UpdateSessionResponseDefaultTypeInternal() {}
  union {
    UpdateSessionResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UpdateSessionResponseDefaultTypeInternal _UpdateSessionResponse_default_instance_;
constexpr RemoveSessionRequest::RemoveSessionRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : accountid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct RemoveSessionRequestDefaultTypeInternal {
  constexpr RemoveSessionRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RemoveSessionRequestDefaultTypeInternal() {}
  union {
    RemoveSessionRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RemoveSessionRequestDefaultTypeInternal _RemoveSessionRequest_default_instance_;
constexpr RemoveSessionResponse::RemoveSessionResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct RemoveSessionResponseDefaultTypeInternal {
  constexpr RemoveSessionResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RemoveSessionResponseDefaultTypeInternal() {}
  union {
    RemoveSessionResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RemoveSessionResponseDefaultTypeInternal _RemoveSessionResponse_default_instance_;
constexpr GetSessionsRequest::GetSessionsRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : query_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , options_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct GetSessionsRequestDefaultTypeInternal {
  constexpr GetSessionsRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetSessionsRequestDefaultTypeInternal() {}
  union {
    GetSessionsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetSessionsRequestDefaultTypeInternal _GetSessionsRequest_default_instance_;
constexpr GetSessionsResponse::GetSessionsResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : sessions_(){}
struct GetSessionsResponseDefaultTypeInternal {
  constexpr GetSessionsResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetSessionsResponseDefaultTypeInternal() {}
  union {
    GetSessionsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetSessionsResponseDefaultTypeInternal _GetSessionsResponse_default_instance_;
constexpr GetSessionRequest::GetSessionRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : accountid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct GetSessionRequestDefaultTypeInternal {
  constexpr GetSessionRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetSessionRequestDefaultTypeInternal() {}
  union {
    GetSessionRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetSessionRequestDefaultTypeInternal _GetSessionRequest_default_instance_;
constexpr GetSessionResponse::GetSessionResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : session_(nullptr){}
struct GetSessionResponseDefaultTypeInternal {
  constexpr GetSessionResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetSessionResponseDefaultTypeInternal() {}
  union {
    GetSessionResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetSessionResponseDefaultTypeInternal _GetSessionResponse_default_instance_;
}  // namespace resource
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_resource_2eproto[151];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_resource_2eproto[4];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_resource_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_resource_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::PackageBundle, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::PackageBundle, packagedescriptor_),
  PROTOBUF_FIELD_OFFSET(::resource::PackageBundle, checksum_),
  PROTOBUF_FIELD_OFFSET(::resource::PackageBundle, plaform_),
  PROTOBUF_FIELD_OFFSET(::resource::PackageBundle, size_),
  PROTOBUF_FIELD_OFFSET(::resource::PackageBundle, modified_),
  PROTOBUF_FIELD_OFFSET(::resource::PackageBundle, binairies_),
  PROTOBUF_FIELD_OFFSET(::resource::PackageBundle, mac_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::SetPackageBundleRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::SetPackageBundleRequest, bundle_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::SetPackageBundleResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::SetPackageBundleResponse, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::GetPackageBundleChecksumRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::GetPackageBundleChecksumRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::GetPackageBundleChecksumResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::GetPackageBundleChecksumResponse, checksum_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::PackageDescriptor, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::PackageDescriptor, id_),
  PROTOBUF_FIELD_OFFSET(::resource::PackageDescriptor, name_),
  PROTOBUF_FIELD_OFFSET(::resource::PackageDescriptor, type_),
  PROTOBUF_FIELD_OFFSET(::resource::PackageDescriptor, publisherid_),
  PROTOBUF_FIELD_OFFSET(::resource::PackageDescriptor, version_),
  PROTOBUF_FIELD_OFFSET(::resource::PackageDescriptor, description_),
  PROTOBUF_FIELD_OFFSET(::resource::PackageDescriptor, repositories_),
  PROTOBUF_FIELD_OFFSET(::resource::PackageDescriptor, discoveries_),
  PROTOBUF_FIELD_OFFSET(::resource::PackageDescriptor, keywords_),
  PROTOBUF_FIELD_OFFSET(::resource::PackageDescriptor, actions_),
  PROTOBUF_FIELD_OFFSET(::resource::PackageDescriptor, roles_),
  PROTOBUF_FIELD_OFFSET(::resource::PackageDescriptor, groups_),
  PROTOBUF_FIELD_OFFSET(::resource::PackageDescriptor, icon_),
  PROTOBUF_FIELD_OFFSET(::resource::PackageDescriptor, alias_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::GetPackageDescriptorRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::GetPackageDescriptorRequest, serviceid_),
  PROTOBUF_FIELD_OFFSET(::resource::GetPackageDescriptorRequest, publisherid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::GetPackageDescriptorResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::GetPackageDescriptorResponse, results_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::GetPackagesDescriptorRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::GetPackagesDescriptorRequest, query_),
  PROTOBUF_FIELD_OFFSET(::resource::GetPackagesDescriptorRequest, options_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::GetPackagesDescriptorResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::GetPackagesDescriptorResponse, results_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::SetPackageDescriptorRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::SetPackageDescriptorRequest, packagedescriptor_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::SetPackageDescriptorResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::SetPackageDescriptorResponse, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::FindPackagesDescriptorRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::FindPackagesDescriptorRequest, keywords_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::FindPackagesDescriptorResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::FindPackagesDescriptorResponse, results_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::Role, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::Role, id_),
  PROTOBUF_FIELD_OFFSET(::resource::Role, name_),
  PROTOBUF_FIELD_OFFSET(::resource::Role, domain_),
  PROTOBUF_FIELD_OFFSET(::resource::Role, description_),
  PROTOBUF_FIELD_OFFSET(::resource::Role, actions_),
  PROTOBUF_FIELD_OFFSET(::resource::Role, members_),
  PROTOBUF_FIELD_OFFSET(::resource::Role, organizations_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::AddRoleActionsRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::AddRoleActionsRqst, roleid_),
  PROTOBUF_FIELD_OFFSET(::resource::AddRoleActionsRqst, actions_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::AddRoleActionsRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::AddRoleActionsRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveRoleActionRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveRoleActionRqst, roleid_),
  PROTOBUF_FIELD_OFFSET(::resource::RemoveRoleActionRqst, action_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveRoleActionRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveRoleActionRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveRolesActionRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveRolesActionRqst, action_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveRolesActionRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveRolesActionRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::Account, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::Account, id_),
  PROTOBUF_FIELD_OFFSET(::resource::Account, name_),
  PROTOBUF_FIELD_OFFSET(::resource::Account, email_),
  PROTOBUF_FIELD_OFFSET(::resource::Account, password_),
  PROTOBUF_FIELD_OFFSET(::resource::Account, domain_),
  PROTOBUF_FIELD_OFFSET(::resource::Account, organizations_),
  PROTOBUF_FIELD_OFFSET(::resource::Account, groups_),
  PROTOBUF_FIELD_OFFSET(::resource::Account, roles_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::RegisterAccountRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::RegisterAccountRqst, account_),
  PROTOBUF_FIELD_OFFSET(::resource::RegisterAccountRqst, confirm_password_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::RegisterAccountRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::RegisterAccountRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::AccountExistRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::AccountExistRqst, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::AccountExistRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::AccountExistRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::GetAccountsRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::GetAccountsRqst, query_),
  PROTOBUF_FIELD_OFFSET(::resource::GetAccountsRqst, options_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::GetAccountsRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::GetAccountsRsp, accounts_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::GetAccountRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::GetAccountRqst, accountid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::GetAccountRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::GetAccountRsp, account_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::SetAccountPasswordRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::SetAccountPasswordRqst, accountid_),
  PROTOBUF_FIELD_OFFSET(::resource::SetAccountPasswordRqst, old_password_),
  PROTOBUF_FIELD_OFFSET(::resource::SetAccountPasswordRqst, new_password_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::SetAccountPasswordRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::SetEmailRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::SetEmailRequest, accountid_),
  PROTOBUF_FIELD_OFFSET(::resource::SetEmailRequest, oldemail_),
  PROTOBUF_FIELD_OFFSET(::resource::SetEmailRequest, newemail_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::SetEmailResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::DeleteAccountRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::DeleteAccountRqst, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::DeleteAccountRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::DeleteAccountRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::AddAccountRoleRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::AddAccountRoleRqst, accountid_),
  PROTOBUF_FIELD_OFFSET(::resource::AddAccountRoleRqst, roleid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::AddAccountRoleRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::AddAccountRoleRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveAccountRoleRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveAccountRoleRqst, accountid_),
  PROTOBUF_FIELD_OFFSET(::resource::RemoveAccountRoleRqst, roleid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveAccountRoleRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveAccountRoleRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::Contact, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::Contact, id_),
  PROTOBUF_FIELD_OFFSET(::resource::Contact, invitationtime_),
  PROTOBUF_FIELD_OFFSET(::resource::Contact, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::SetAccountContactRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::SetAccountContactRqst, accountid_),
  PROTOBUF_FIELD_OFFSET(::resource::SetAccountContactRqst, contact_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::SetAccountContactRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::SetAccountContactRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::CreateRoleRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::CreateRoleRqst, role_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::CreateRoleRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::CreateRoleRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::GetRolesRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::GetRolesRqst, query_),
  PROTOBUF_FIELD_OFFSET(::resource::GetRolesRqst, options_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::GetRolesRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::GetRolesRsp, roles_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::DeleteRoleRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::DeleteRoleRqst, roleid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::DeleteRoleRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::DeleteRoleRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::Application, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::Application, id_),
  PROTOBUF_FIELD_OFFSET(::resource::Application, name_),
  PROTOBUF_FIELD_OFFSET(::resource::Application, domain_),
  PROTOBUF_FIELD_OFFSET(::resource::Application, password_),
  PROTOBUF_FIELD_OFFSET(::resource::Application, path_),
  PROTOBUF_FIELD_OFFSET(::resource::Application, version_),
  PROTOBUF_FIELD_OFFSET(::resource::Application, description_),
  PROTOBUF_FIELD_OFFSET(::resource::Application, actions_),
  PROTOBUF_FIELD_OFFSET(::resource::Application, keywords_),
  PROTOBUF_FIELD_OFFSET(::resource::Application, icon_),
  PROTOBUF_FIELD_OFFSET(::resource::Application, alias_),
  PROTOBUF_FIELD_OFFSET(::resource::Application, publisherid_),
  PROTOBUF_FIELD_OFFSET(::resource::Application, creation_date_),
  PROTOBUF_FIELD_OFFSET(::resource::Application, last_deployed_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::CreateApplicationRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::CreateApplicationRqst, application_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::CreateApplicationRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::UpdateApplicationRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::UpdateApplicationRqst, applicationid_),
  PROTOBUF_FIELD_OFFSET(::resource::UpdateApplicationRqst, values_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::UpdateApplicationRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::UpdateApplicationRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::DeleteApplicationRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::DeleteApplicationRqst, applicationid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::DeleteApplicationRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::DeleteApplicationRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::AddApplicationActionsRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::AddApplicationActionsRqst, applicationid_),
  PROTOBUF_FIELD_OFFSET(::resource::AddApplicationActionsRqst, actions_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::AddApplicationActionsRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::AddApplicationActionsRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveApplicationActionRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveApplicationActionRqst, applicationid_),
  PROTOBUF_FIELD_OFFSET(::resource::RemoveApplicationActionRqst, action_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveApplicationActionRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveApplicationActionRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveApplicationsActionRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveApplicationsActionRqst, action_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveApplicationsActionRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveApplicationsActionRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::GetApplicationsRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::GetApplicationsRqst, query_),
  PROTOBUF_FIELD_OFFSET(::resource::GetApplicationsRqst, options_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::GetApplicationsRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::GetApplicationsRsp, applications_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::GetApplicationVersionRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::GetApplicationVersionRqst, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::GetApplicationVersionRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::GetApplicationVersionRsp, version_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::GetApplicationIconRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::GetApplicationIconRqst, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::GetApplicationIconRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::GetApplicationIconRsp, icon_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::GetApplicationAliasRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::GetApplicationAliasRqst, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::GetApplicationAliasRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::GetApplicationAliasRsp, alias_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::Group, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::Group, id_),
  PROTOBUF_FIELD_OFFSET(::resource::Group, name_),
  PROTOBUF_FIELD_OFFSET(::resource::Group, domain_),
  PROTOBUF_FIELD_OFFSET(::resource::Group, description_),
  PROTOBUF_FIELD_OFFSET(::resource::Group, members_),
  PROTOBUF_FIELD_OFFSET(::resource::Group, organizations_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::CreateGroupRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::CreateGroupRqst, group_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::CreateGroupRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::CreateGroupRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::UpdateGroupRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::UpdateGroupRqst, groupid_),
  PROTOBUF_FIELD_OFFSET(::resource::UpdateGroupRqst, values_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::UpdateGroupRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::UpdateGroupRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::GetGroupsRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::GetGroupsRqst, query_),
  PROTOBUF_FIELD_OFFSET(::resource::GetGroupsRqst, options_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::GetGroupsRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::GetGroupsRsp, groups_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::DeleteGroupRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::DeleteGroupRqst, group_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::DeleteGroupRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::DeleteGroupRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::AddGroupMemberAccountRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::AddGroupMemberAccountRqst, groupid_),
  PROTOBUF_FIELD_OFFSET(::resource::AddGroupMemberAccountRqst, accountid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::AddGroupMemberAccountRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::AddGroupMemberAccountRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveGroupMemberAccountRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveGroupMemberAccountRqst, groupid_),
  PROTOBUF_FIELD_OFFSET(::resource::RemoveGroupMemberAccountRqst, accountid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveGroupMemberAccountRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveGroupMemberAccountRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::Organization, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::Organization, id_),
  PROTOBUF_FIELD_OFFSET(::resource::Organization, domain_),
  PROTOBUF_FIELD_OFFSET(::resource::Organization, name_),
  PROTOBUF_FIELD_OFFSET(::resource::Organization, email_),
  PROTOBUF_FIELD_OFFSET(::resource::Organization, icon_),
  PROTOBUF_FIELD_OFFSET(::resource::Organization, description_),
  PROTOBUF_FIELD_OFFSET(::resource::Organization, accounts_),
  PROTOBUF_FIELD_OFFSET(::resource::Organization, groups_),
  PROTOBUF_FIELD_OFFSET(::resource::Organization, roles_),
  PROTOBUF_FIELD_OFFSET(::resource::Organization, applications_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::CreateOrganizationRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::CreateOrganizationRqst, organization_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::CreateOrganizationRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::CreateOrganizationRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::UpdateOrganizationRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::UpdateOrganizationRqst, organizationid_),
  PROTOBUF_FIELD_OFFSET(::resource::UpdateOrganizationRqst, values_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::UpdateOrganizationRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::UpdateOrganizationRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::GetOrganizationsRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::GetOrganizationsRqst, query_),
  PROTOBUF_FIELD_OFFSET(::resource::GetOrganizationsRqst, options_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::GetOrganizationsRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::GetOrganizationsRsp, organizations_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::AddOrganizationAccountRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::AddOrganizationAccountRqst, organizationid_),
  PROTOBUF_FIELD_OFFSET(::resource::AddOrganizationAccountRqst, accountid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::AddOrganizationAccountRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::AddOrganizationAccountRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::AddOrganizationGroupRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::AddOrganizationGroupRqst, organizationid_),
  PROTOBUF_FIELD_OFFSET(::resource::AddOrganizationGroupRqst, groupid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::AddOrganizationGroupRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::AddOrganizationGroupRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::AddOrganizationRoleRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::AddOrganizationRoleRqst, organizationid_),
  PROTOBUF_FIELD_OFFSET(::resource::AddOrganizationRoleRqst, roleid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::AddOrganizationRoleRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::AddOrganizationRoleRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::AddOrganizationApplicationRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::AddOrganizationApplicationRqst, organizationid_),
  PROTOBUF_FIELD_OFFSET(::resource::AddOrganizationApplicationRqst, applicationid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::AddOrganizationApplicationRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::AddOrganizationApplicationRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveOrganizationGroupRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveOrganizationGroupRqst, organizationid_),
  PROTOBUF_FIELD_OFFSET(::resource::RemoveOrganizationGroupRqst, groupid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveOrganizationGroupRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveOrganizationGroupRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveOrganizationRoleRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveOrganizationRoleRqst, organizationid_),
  PROTOBUF_FIELD_OFFSET(::resource::RemoveOrganizationRoleRqst, roleid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveOrganizationRoleRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveOrganizationRoleRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveOrganizationApplicationRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveOrganizationApplicationRqst, organizationid_),
  PROTOBUF_FIELD_OFFSET(::resource::RemoveOrganizationApplicationRqst, applicationid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveOrganizationApplicationRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveOrganizationApplicationRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveOrganizationAccountRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveOrganizationAccountRqst, organizationid_),
  PROTOBUF_FIELD_OFFSET(::resource::RemoveOrganizationAccountRqst, accountid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveOrganizationAccountRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveOrganizationAccountRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::IsOrgnanizationMemberRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::IsOrgnanizationMemberRqst, organizationid_),
  PROTOBUF_FIELD_OFFSET(::resource::IsOrgnanizationMemberRqst, accountid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::IsOrgnanizationMemberRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::IsOrgnanizationMemberRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::DeleteOrganizationRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::DeleteOrganizationRqst, organization_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::DeleteOrganizationRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::DeleteOrganizationRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::Peer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::Peer, hostname_),
  PROTOBUF_FIELD_OFFSET(::resource::Peer, address_),
  PROTOBUF_FIELD_OFFSET(::resource::Peer, domain_),
  PROTOBUF_FIELD_OFFSET(::resource::Peer, external_ip_address_),
  PROTOBUF_FIELD_OFFSET(::resource::Peer, local_ip_address_),
  PROTOBUF_FIELD_OFFSET(::resource::Peer, mac_),
  PROTOBUF_FIELD_OFFSET(::resource::Peer, state_),
  PROTOBUF_FIELD_OFFSET(::resource::Peer, actions_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::GetPeerApprovalStateRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::GetPeerApprovalStateRqst, mac_),
  PROTOBUF_FIELD_OFFSET(::resource::GetPeerApprovalStateRqst, remote_peer_address_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::GetPeerApprovalStateRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::GetPeerApprovalStateRsp, state_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::GetPeerPublicKeyRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::GetPeerPublicKeyRqst, mac_),
  PROTOBUF_FIELD_OFFSET(::resource::GetPeerPublicKeyRqst, remote_peer_address_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::GetPeerPublicKeyRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::GetPeerPublicKeyRsp, public_key_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::RegisterPeerRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::RegisterPeerRqst, peer_),
  PROTOBUF_FIELD_OFFSET(::resource::RegisterPeerRqst, public_key_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::RegisterPeerRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::RegisterPeerRsp, peer_),
  PROTOBUF_FIELD_OFFSET(::resource::RegisterPeerRsp, public_key_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::GetPeersRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::GetPeersRqst, query_),
  PROTOBUF_FIELD_OFFSET(::resource::GetPeersRqst, options_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::GetPeersRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::GetPeersRsp, peers_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::DeletePeerRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::DeletePeerRqst, peer_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::DeletePeerRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::DeletePeerRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::AddPeerActionsRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::AddPeerActionsRqst, mac_),
  PROTOBUF_FIELD_OFFSET(::resource::AddPeerActionsRqst, actions_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::AddPeerActionsRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::AddPeerActionsRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::RemovePeerActionRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::RemovePeerActionRqst, mac_),
  PROTOBUF_FIELD_OFFSET(::resource::RemovePeerActionRqst, action_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::RemovePeerActionRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::RemovePeerActionRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::RemovePeersActionRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::RemovePeersActionRqst, action_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::RemovePeersActionRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::RemovePeersActionRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::AcceptPeerRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::AcceptPeerRqst, peer_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::AcceptPeerRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::AcceptPeerRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::RejectPeerRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::RejectPeerRqst, peer_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::RejectPeerRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::RejectPeerRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::Notification, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::Notification, id_),
  PROTOBUF_FIELD_OFFSET(::resource::Notification, date_),
  PROTOBUF_FIELD_OFFSET(::resource::Notification, message_),
  PROTOBUF_FIELD_OFFSET(::resource::Notification, recipient_),
  PROTOBUF_FIELD_OFFSET(::resource::Notification, sender_),
  PROTOBUF_FIELD_OFFSET(::resource::Notification, notification_type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::CreateNotificationRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::CreateNotificationRqst, notification_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::CreateNotificationRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::GetNotificationsRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::GetNotificationsRqst, recipient_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::GetNotificationsRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::GetNotificationsRsp, notifications_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::DeleteNotificationRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::DeleteNotificationRqst, id_),
  PROTOBUF_FIELD_OFFSET(::resource::DeleteNotificationRqst, recipient_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::DeleteNotificationRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::ClearAllNotificationsRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::ClearAllNotificationsRqst, recipient_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::ClearAllNotificationsRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::ClearNotificationsByTypeRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::ClearNotificationsByTypeRqst, recipient_),
  PROTOBUF_FIELD_OFFSET(::resource::ClearNotificationsByTypeRqst, notification_type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::ClearNotificationsByTypeRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::Session, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::Session, accountid_),
  PROTOBUF_FIELD_OFFSET(::resource::Session, state_),
  PROTOBUF_FIELD_OFFSET(::resource::Session, last_state_time_),
  PROTOBUF_FIELD_OFFSET(::resource::Session, expire_at_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::UpdateSessionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::UpdateSessionRequest, session_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::UpdateSessionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveSessionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveSessionRequest, accountid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveSessionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::GetSessionsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::GetSessionsRequest, query_),
  PROTOBUF_FIELD_OFFSET(::resource::GetSessionsRequest, options_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::GetSessionsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::GetSessionsResponse, sessions_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::GetSessionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::GetSessionRequest, accountid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::GetSessionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::GetSessionResponse, session_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::resource::PackageBundle)},
  { 12, -1, sizeof(::resource::SetPackageBundleRequest)},
  { 18, -1, sizeof(::resource::SetPackageBundleResponse)},
  { 24, -1, sizeof(::resource::GetPackageBundleChecksumRequest)},
  { 30, -1, sizeof(::resource::GetPackageBundleChecksumResponse)},
  { 36, -1, sizeof(::resource::PackageDescriptor)},
  { 55, -1, sizeof(::resource::GetPackageDescriptorRequest)},
  { 62, -1, sizeof(::resource::GetPackageDescriptorResponse)},
  { 68, -1, sizeof(::resource::GetPackagesDescriptorRequest)},
  { 75, -1, sizeof(::resource::GetPackagesDescriptorResponse)},
  { 81, -1, sizeof(::resource::SetPackageDescriptorRequest)},
  { 87, -1, sizeof(::resource::SetPackageDescriptorResponse)},
  { 93, -1, sizeof(::resource::FindPackagesDescriptorRequest)},
  { 99, -1, sizeof(::resource::FindPackagesDescriptorResponse)},
  { 105, -1, sizeof(::resource::Role)},
  { 117, -1, sizeof(::resource::AddRoleActionsRqst)},
  { 124, -1, sizeof(::resource::AddRoleActionsRsp)},
  { 130, -1, sizeof(::resource::RemoveRoleActionRqst)},
  { 137, -1, sizeof(::resource::RemoveRoleActionRsp)},
  { 143, -1, sizeof(::resource::RemoveRolesActionRqst)},
  { 149, -1, sizeof(::resource::RemoveRolesActionRsp)},
  { 155, -1, sizeof(::resource::Account)},
  { 168, -1, sizeof(::resource::RegisterAccountRqst)},
  { 175, -1, sizeof(::resource::RegisterAccountRsp)},
  { 181, -1, sizeof(::resource::AccountExistRqst)},
  { 187, -1, sizeof(::resource::AccountExistRsp)},
  { 193, -1, sizeof(::resource::GetAccountsRqst)},
  { 200, -1, sizeof(::resource::GetAccountsRsp)},
  { 206, -1, sizeof(::resource::GetAccountRqst)},
  { 212, -1, sizeof(::resource::GetAccountRsp)},
  { 218, -1, sizeof(::resource::SetAccountPasswordRqst)},
  { 226, -1, sizeof(::resource::SetAccountPasswordRsp)},
  { 231, -1, sizeof(::resource::SetEmailRequest)},
  { 239, -1, sizeof(::resource::SetEmailResponse)},
  { 244, -1, sizeof(::resource::DeleteAccountRqst)},
  { 250, -1, sizeof(::resource::DeleteAccountRsp)},
  { 256, -1, sizeof(::resource::AddAccountRoleRqst)},
  { 263, -1, sizeof(::resource::AddAccountRoleRsp)},
  { 269, -1, sizeof(::resource::RemoveAccountRoleRqst)},
  { 276, -1, sizeof(::resource::RemoveAccountRoleRsp)},
  { 282, -1, sizeof(::resource::Contact)},
  { 290, -1, sizeof(::resource::SetAccountContactRqst)},
  { 297, -1, sizeof(::resource::SetAccountContactRsp)},
  { 303, -1, sizeof(::resource::CreateRoleRqst)},
  { 309, -1, sizeof(::resource::CreateRoleRsp)},
  { 315, -1, sizeof(::resource::GetRolesRqst)},
  { 322, -1, sizeof(::resource::GetRolesRsp)},
  { 328, -1, sizeof(::resource::DeleteRoleRqst)},
  { 334, -1, sizeof(::resource::DeleteRoleRsp)},
  { 340, -1, sizeof(::resource::Application)},
  { 359, -1, sizeof(::resource::CreateApplicationRqst)},
  { 365, -1, sizeof(::resource::CreateApplicationRsp)},
  { 370, -1, sizeof(::resource::UpdateApplicationRqst)},
  { 377, -1, sizeof(::resource::UpdateApplicationRsp)},
  { 383, -1, sizeof(::resource::DeleteApplicationRqst)},
  { 389, -1, sizeof(::resource::DeleteApplicationRsp)},
  { 395, -1, sizeof(::resource::AddApplicationActionsRqst)},
  { 402, -1, sizeof(::resource::AddApplicationActionsRsp)},
  { 408, -1, sizeof(::resource::RemoveApplicationActionRqst)},
  { 415, -1, sizeof(::resource::RemoveApplicationActionRsp)},
  { 421, -1, sizeof(::resource::RemoveApplicationsActionRqst)},
  { 427, -1, sizeof(::resource::RemoveApplicationsActionRsp)},
  { 433, -1, sizeof(::resource::GetApplicationsRqst)},
  { 440, -1, sizeof(::resource::GetApplicationsRsp)},
  { 446, -1, sizeof(::resource::GetApplicationVersionRqst)},
  { 452, -1, sizeof(::resource::GetApplicationVersionRsp)},
  { 458, -1, sizeof(::resource::GetApplicationIconRqst)},
  { 464, -1, sizeof(::resource::GetApplicationIconRsp)},
  { 470, -1, sizeof(::resource::GetApplicationAliasRqst)},
  { 476, -1, sizeof(::resource::GetApplicationAliasRsp)},
  { 482, -1, sizeof(::resource::Group)},
  { 493, -1, sizeof(::resource::CreateGroupRqst)},
  { 499, -1, sizeof(::resource::CreateGroupRsp)},
  { 505, -1, sizeof(::resource::UpdateGroupRqst)},
  { 512, -1, sizeof(::resource::UpdateGroupRsp)},
  { 518, -1, sizeof(::resource::GetGroupsRqst)},
  { 525, -1, sizeof(::resource::GetGroupsRsp)},
  { 531, -1, sizeof(::resource::DeleteGroupRqst)},
  { 537, -1, sizeof(::resource::DeleteGroupRsp)},
  { 543, -1, sizeof(::resource::AddGroupMemberAccountRqst)},
  { 550, -1, sizeof(::resource::AddGroupMemberAccountRsp)},
  { 556, -1, sizeof(::resource::RemoveGroupMemberAccountRqst)},
  { 563, -1, sizeof(::resource::RemoveGroupMemberAccountRsp)},
  { 569, -1, sizeof(::resource::Organization)},
  { 584, -1, sizeof(::resource::CreateOrganizationRqst)},
  { 590, -1, sizeof(::resource::CreateOrganizationRsp)},
  { 596, -1, sizeof(::resource::UpdateOrganizationRqst)},
  { 603, -1, sizeof(::resource::UpdateOrganizationRsp)},
  { 609, -1, sizeof(::resource::GetOrganizationsRqst)},
  { 616, -1, sizeof(::resource::GetOrganizationsRsp)},
  { 622, -1, sizeof(::resource::AddOrganizationAccountRqst)},
  { 629, -1, sizeof(::resource::AddOrganizationAccountRsp)},
  { 635, -1, sizeof(::resource::AddOrganizationGroupRqst)},
  { 642, -1, sizeof(::resource::AddOrganizationGroupRsp)},
  { 648, -1, sizeof(::resource::AddOrganizationRoleRqst)},
  { 655, -1, sizeof(::resource::AddOrganizationRoleRsp)},
  { 661, -1, sizeof(::resource::AddOrganizationApplicationRqst)},
  { 668, -1, sizeof(::resource::AddOrganizationApplicationRsp)},
  { 674, -1, sizeof(::resource::RemoveOrganizationGroupRqst)},
  { 681, -1, sizeof(::resource::RemoveOrganizationGroupRsp)},
  { 687, -1, sizeof(::resource::RemoveOrganizationRoleRqst)},
  { 694, -1, sizeof(::resource::RemoveOrganizationRoleRsp)},
  { 700, -1, sizeof(::resource::RemoveOrganizationApplicationRqst)},
  { 707, -1, sizeof(::resource::RemoveOrganizationApplicationRsp)},
  { 713, -1, sizeof(::resource::RemoveOrganizationAccountRqst)},
  { 720, -1, sizeof(::resource::RemoveOrganizationAccountRsp)},
  { 726, -1, sizeof(::resource::IsOrgnanizationMemberRqst)},
  { 733, -1, sizeof(::resource::IsOrgnanizationMemberRsp)},
  { 739, -1, sizeof(::resource::DeleteOrganizationRqst)},
  { 745, -1, sizeof(::resource::DeleteOrganizationRsp)},
  { 751, -1, sizeof(::resource::Peer)},
  { 764, -1, sizeof(::resource::GetPeerApprovalStateRqst)},
  { 771, -1, sizeof(::resource::GetPeerApprovalStateRsp)},
  { 777, -1, sizeof(::resource::GetPeerPublicKeyRqst)},
  { 784, -1, sizeof(::resource::GetPeerPublicKeyRsp)},
  { 790, -1, sizeof(::resource::RegisterPeerRqst)},
  { 797, -1, sizeof(::resource::RegisterPeerRsp)},
  { 804, -1, sizeof(::resource::GetPeersRqst)},
  { 811, -1, sizeof(::resource::GetPeersRsp)},
  { 817, -1, sizeof(::resource::DeletePeerRqst)},
  { 823, -1, sizeof(::resource::DeletePeerRsp)},
  { 829, -1, sizeof(::resource::AddPeerActionsRqst)},
  { 836, -1, sizeof(::resource::AddPeerActionsRsp)},
  { 842, -1, sizeof(::resource::RemovePeerActionRqst)},
  { 849, -1, sizeof(::resource::RemovePeerActionRsp)},
  { 855, -1, sizeof(::resource::RemovePeersActionRqst)},
  { 861, -1, sizeof(::resource::RemovePeersActionRsp)},
  { 867, -1, sizeof(::resource::AcceptPeerRqst)},
  { 873, -1, sizeof(::resource::AcceptPeerRsp)},
  { 879, -1, sizeof(::resource::RejectPeerRqst)},
  { 885, -1, sizeof(::resource::RejectPeerRsp)},
  { 891, -1, sizeof(::resource::Notification)},
  { 902, -1, sizeof(::resource::CreateNotificationRqst)},
  { 908, -1, sizeof(::resource::CreateNotificationRsp)},
  { 913, -1, sizeof(::resource::GetNotificationsRqst)},
  { 919, -1, sizeof(::resource::GetNotificationsRsp)},
  { 925, -1, sizeof(::resource::DeleteNotificationRqst)},
  { 932, -1, sizeof(::resource::DeleteNotificationRsp)},
  { 937, -1, sizeof(::resource::ClearAllNotificationsRqst)},
  { 943, -1, sizeof(::resource::ClearAllNotificationsRsp)},
  { 948, -1, sizeof(::resource::ClearNotificationsByTypeRqst)},
  { 955, -1, sizeof(::resource::ClearNotificationsByTypeRsp)},
  { 960, -1, sizeof(::resource::Session)},
  { 969, -1, sizeof(::resource::UpdateSessionRequest)},
  { 975, -1, sizeof(::resource::UpdateSessionResponse)},
  { 980, -1, sizeof(::resource::RemoveSessionRequest)},
  { 986, -1, sizeof(::resource::RemoveSessionResponse)},
  { 991, -1, sizeof(::resource::GetSessionsRequest)},
  { 998, -1, sizeof(::resource::GetSessionsResponse)},
  { 1004, -1, sizeof(::resource::GetSessionRequest)},
  { 1010, -1, sizeof(::resource::GetSessionResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_PackageBundle_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_SetPackageBundleRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_SetPackageBundleResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_GetPackageBundleChecksumRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_GetPackageBundleChecksumResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_PackageDescriptor_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_GetPackageDescriptorRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_GetPackageDescriptorResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_GetPackagesDescriptorRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_GetPackagesDescriptorResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_SetPackageDescriptorRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_SetPackageDescriptorResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_FindPackagesDescriptorRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_FindPackagesDescriptorResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_Role_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_AddRoleActionsRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_AddRoleActionsRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_RemoveRoleActionRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_RemoveRoleActionRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_RemoveRolesActionRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_RemoveRolesActionRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_Account_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_RegisterAccountRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_RegisterAccountRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_AccountExistRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_AccountExistRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_GetAccountsRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_GetAccountsRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_GetAccountRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_GetAccountRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_SetAccountPasswordRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_SetAccountPasswordRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_SetEmailRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_SetEmailResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_DeleteAccountRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_DeleteAccountRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_AddAccountRoleRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_AddAccountRoleRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_RemoveAccountRoleRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_RemoveAccountRoleRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_Contact_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_SetAccountContactRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_SetAccountContactRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_CreateRoleRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_CreateRoleRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_GetRolesRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_GetRolesRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_DeleteRoleRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_DeleteRoleRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_Application_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_CreateApplicationRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_CreateApplicationRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_UpdateApplicationRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_UpdateApplicationRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_DeleteApplicationRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_DeleteApplicationRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_AddApplicationActionsRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_AddApplicationActionsRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_RemoveApplicationActionRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_RemoveApplicationActionRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_RemoveApplicationsActionRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_RemoveApplicationsActionRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_GetApplicationsRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_GetApplicationsRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_GetApplicationVersionRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_GetApplicationVersionRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_GetApplicationIconRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_GetApplicationIconRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_GetApplicationAliasRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_GetApplicationAliasRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_Group_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_CreateGroupRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_CreateGroupRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_UpdateGroupRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_UpdateGroupRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_GetGroupsRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_GetGroupsRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_DeleteGroupRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_DeleteGroupRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_AddGroupMemberAccountRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_AddGroupMemberAccountRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_RemoveGroupMemberAccountRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_RemoveGroupMemberAccountRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_Organization_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_CreateOrganizationRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_CreateOrganizationRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_UpdateOrganizationRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_UpdateOrganizationRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_GetOrganizationsRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_GetOrganizationsRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_AddOrganizationAccountRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_AddOrganizationAccountRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_AddOrganizationGroupRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_AddOrganizationGroupRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_AddOrganizationRoleRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_AddOrganizationRoleRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_AddOrganizationApplicationRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_AddOrganizationApplicationRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_RemoveOrganizationGroupRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_RemoveOrganizationGroupRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_RemoveOrganizationRoleRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_RemoveOrganizationRoleRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_RemoveOrganizationApplicationRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_RemoveOrganizationApplicationRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_RemoveOrganizationAccountRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_RemoveOrganizationAccountRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_IsOrgnanizationMemberRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_IsOrgnanizationMemberRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_DeleteOrganizationRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_DeleteOrganizationRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_Peer_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_GetPeerApprovalStateRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_GetPeerApprovalStateRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_GetPeerPublicKeyRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_GetPeerPublicKeyRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_RegisterPeerRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_RegisterPeerRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_GetPeersRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_GetPeersRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_DeletePeerRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_DeletePeerRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_AddPeerActionsRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_AddPeerActionsRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_RemovePeerActionRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_RemovePeerActionRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_RemovePeersActionRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_RemovePeersActionRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_AcceptPeerRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_AcceptPeerRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_RejectPeerRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_RejectPeerRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_Notification_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_CreateNotificationRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_CreateNotificationRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_GetNotificationsRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_GetNotificationsRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_DeleteNotificationRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_DeleteNotificationRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_ClearAllNotificationsRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_ClearAllNotificationsRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_ClearNotificationsByTypeRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_ClearNotificationsByTypeRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_Session_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_UpdateSessionRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_UpdateSessionResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_RemoveSessionRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_RemoveSessionResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_GetSessionsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_GetSessionsResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_GetSessionRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_GetSessionResponse_default_instance_),
};

const char descriptor_table_protodef_resource_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\016resource.proto\022\010resource\"\252\001\n\rPackageBu"
  "ndle\0226\n\021packageDescriptor\030\001 \001(\0132\033.resour"
  "ce.PackageDescriptor\022\020\n\010checksum\030\002 \001(\t\022\017"
  "\n\007plaform\030\003 \001(\t\022\014\n\004size\030\004 \001(\005\022\020\n\010modifie"
  "d\030\005 \001(\003\022\021\n\tBinairies\030\006 \001(\014\022\013\n\003mac\030\007 \001(\t\""
  "B\n\027SetPackageBundleRequest\022\'\n\006bundle\030\001 \001"
  "(\0132\027.resource.PackageBundle\"*\n\030SetPackag"
  "eBundleResponse\022\016\n\006result\030\001 \001(\010\"-\n\037GetPa"
  "ckageBundleChecksumRequest\022\n\n\002id\030\001 \001(\t\"4"
  "\n GetPackageBundleChecksumResponse\022\020\n\010ch"
  "ecksum\030\001 \001(\t\"\270\002\n\021PackageDescriptor\022\n\n\002id"
  "\030\001 \001(\t\022\014\n\004name\030\002 \001(\t\022#\n\004type\030\003 \001(\0162\025.res"
  "ource.PackageType\022\023\n\013publisherId\030\004 \001(\t\022\017"
  "\n\007version\030\006 \001(\t\022\023\n\013description\030\007 \001(\t\022\024\n\014"
  "repositories\030\010 \003(\t\022\023\n\013discoveries\030\t \003(\t\022"
  "\020\n\010keywords\030\n \003(\t\022\017\n\007actions\030\013 \003(\t\022\035\n\005ro"
  "les\030\014 \003(\0132\016.resource.Role\022\037\n\006groups\030\r \003("
  "\0132\017.resource.Group\022\014\n\004icon\030\016 \001(\t\022\r\n\005alia"
  "s\030\017 \001(\t\"E\n\033GetPackageDescriptorRequest\022\021"
  "\n\tserviceId\030\001 \001(\t\022\023\n\013publisherId\030\002 \001(\t\"L"
  "\n\034GetPackageDescriptorResponse\022,\n\007result"
  "s\030\001 \003(\0132\033.resource.PackageDescriptor\">\n\034"
  "GetPackagesDescriptorRequest\022\r\n\005query\030\001 "
  "\001(\t\022\017\n\007options\030\002 \001(\t\"M\n\035GetPackagesDescr"
  "iptorResponse\022,\n\007results\030\001 \003(\0132\033.resourc"
  "e.PackageDescriptor\"U\n\033SetPackageDescrip"
  "torRequest\0226\n\021packageDescriptor\030\001 \001(\0132\033."
  "resource.PackageDescriptor\".\n\034SetPackage"
  "DescriptorResponse\022\016\n\006result\030\001 \001(\010\"1\n\035Fi"
  "ndPackagesDescriptorRequest\022\020\n\010keywords\030"
  "\001 \003(\t\"N\n\036FindPackagesDescriptorResponse\022"
  ",\n\007results\030\001 \003(\0132\033.resource.PackageDescr"
  "iptor\"~\n\004Role\022\n\n\002id\030\001 \001(\t\022\014\n\004name\030\002 \001(\t\022"
  "\016\n\006domain\030\003 \001(\t\022\023\n\013description\030\004 \001(\t\022\017\n\007"
  "actions\030\005 \003(\t\022\017\n\007members\030\006 \003(\t\022\025\n\rorgani"
  "zations\030\007 \003(\t\"5\n\022AddRoleActionsRqst\022\016\n\006r"
  "oleId\030\001 \001(\t\022\017\n\007actions\030\002 \003(\t\"#\n\021AddRoleA"
  "ctionsRsp\022\016\n\006result\030\001 \001(\010\"6\n\024RemoveRoleA"
  "ctionRqst\022\016\n\006roleId\030\001 \001(\t\022\016\n\006action\030\002 \001("
  "\t\"%\n\023RemoveRoleActionRsp\022\016\n\006result\030\001 \001(\010"
  "\"\'\n\025RemoveRolesActionRqst\022\016\n\006action\030\002 \001("
  "\t\"&\n\024RemoveRolesActionRsp\022\016\n\006result\030\001 \001("
  "\010\"\212\001\n\007Account\022\n\n\002id\030\001 \001(\t\022\014\n\004name\030\002 \001(\t\022"
  "\r\n\005email\030\003 \001(\t\022\020\n\010password\030\004 \001(\t\022\016\n\006doma"
  "in\030\005 \001(\t\022\025\n\rorganizations\030\006 \003(\t\022\016\n\006group"
  "s\030\007 \003(\t\022\r\n\005roles\030\010 \003(\t\"S\n\023RegisterAccoun"
  "tRqst\022\"\n\007account\030\001 \001(\0132\021.resource.Accoun"
  "t\022\030\n\020confirm_password\030\003 \001(\t\"$\n\022RegisterA"
  "ccountRsp\022\016\n\006result\030\001 \001(\t\"\036\n\020AccountExis"
  "tRqst\022\n\n\002id\030\001 \001(\t\"!\n\017AccountExistRsp\022\016\n\006"
  "result\030\001 \001(\010\"1\n\017GetAccountsRqst\022\r\n\005query"
  "\030\001 \001(\t\022\017\n\007options\030\002 \001(\t\"5\n\016GetAccountsRs"
  "p\022#\n\010accounts\030\001 \003(\0132\021.resource.Account\"#"
  "\n\016GetAccountRqst\022\021\n\taccountId\030\001 \001(\t\"3\n\rG"
  "etAccountRsp\022\"\n\007account\030\001 \001(\0132\021.resource"
  ".Account\"W\n\026SetAccountPasswordRqst\022\021\n\tac"
  "countId\030\001 \001(\t\022\024\n\014old_password\030\002 \001(\t\022\024\n\014n"
  "ew_password\030\003 \001(\t\"\027\n\025SetAccountPasswordR"
  "sp\"H\n\017SetEmailRequest\022\021\n\taccountId\030\001 \001(\t"
  "\022\020\n\010oldEmail\030\002 \001(\t\022\020\n\010newEmail\030\003 \001(\t\"\022\n\020"
  "SetEmailResponse\"\037\n\021DeleteAccountRqst\022\n\n"
  "\002id\030\001 \001(\t\"\"\n\020DeleteAccountRsp\022\016\n\006result\030"
  "\001 \001(\t\"7\n\022AddAccountRoleRqst\022\021\n\taccountId"
  "\030\001 \001(\t\022\016\n\006roleId\030\002 \001(\t\"#\n\021AddAccountRole"
  "Rsp\022\016\n\006result\030\001 \001(\010\":\n\025RemoveAccountRole"
  "Rqst\022\021\n\taccountId\030\001 \001(\t\022\016\n\006roleId\030\002 \001(\t\""
  "&\n\024RemoveAccountRoleRsp\022\016\n\006result\030\001 \001(\010\""
  "=\n\007Contact\022\n\n\002id\030\001 \001(\t\022\026\n\016invitationTime"
  "\030\002 \001(\003\022\016\n\006status\030\003 \001(\t\"N\n\025SetAccountCont"
  "actRqst\022\021\n\taccountId\030\001 \001(\t\022\"\n\007contact\030\002 "
  "\001(\0132\021.resource.Contact\"&\n\024SetAccountCont"
  "actRsp\022\016\n\006result\030\001 \001(\010\".\n\016CreateRoleRqst"
  "\022\034\n\004role\030\001 \001(\0132\016.resource.Role\"\037\n\rCreate"
  "RoleRsp\022\016\n\006result\030\001 \001(\010\".\n\014GetRolesRqst\022"
  "\r\n\005query\030\001 \001(\t\022\017\n\007options\030\002 \001(\t\",\n\013GetRo"
  "lesRsp\022\035\n\005roles\030\001 \003(\0132\016.resource.Role\" \n"
  "\016DeleteRoleRqst\022\016\n\006roleId\030\001 \001(\t\"\037\n\rDelet"
  "eRoleRsp\022\016\n\006result\030\001 \001(\010\"\200\002\n\013Application"
  "\022\n\n\002id\030\001 \001(\t\022\014\n\004name\030\002 \001(\t\022\016\n\006domain\030\003 \001"
  "(\t\022\020\n\010password\030\004 \001(\t\022\014\n\004path\030\005 \001(\t\022\017\n\007ve"
  "rsion\030\006 \001(\t\022\023\n\013description\030\007 \001(\t\022\017\n\007acti"
  "ons\030\010 \003(\t\022\020\n\010keywords\030\t \003(\t\022\014\n\004icon\030\n \001("
  "\t\022\r\n\005alias\030\013 \001(\t\022\023\n\013publisherid\030\014 \001(\t\022\025\n"
  "\rcreation_date\030\r \001(\003\022\025\n\rlast_deployed\030\016 "
  "\001(\003\"C\n\025CreateApplicationRqst\022*\n\013applicat"
  "ion\030\001 \001(\0132\025.resource.Application\"\026\n\024Crea"
  "teApplicationRsp\">\n\025UpdateApplicationRqs"
  "t\022\025\n\rapplicationId\030\001 \001(\t\022\016\n\006values\030\002 \001(\t"
  "\"&\n\024UpdateApplicationRsp\022\016\n\006result\030\001 \001(\010"
  "\".\n\025DeleteApplicationRqst\022\025\n\rapplication"
  "Id\030\001 \001(\t\"&\n\024DeleteApplicationRsp\022\016\n\006resu"
  "lt\030\001 \001(\010\"C\n\031AddApplicationActionsRqst\022\025\n"
  "\rapplicationId\030\001 \001(\t\022\017\n\007actions\030\002 \003(\t\"*\n"
  "\030AddApplicationActionsRsp\022\016\n\006result\030\001 \001("
  "\010\"D\n\033RemoveApplicationActionRqst\022\025\n\rappl"
  "icationId\030\001 \001(\t\022\016\n\006action\030\002 \001(\t\",\n\032Remov"
  "eApplicationActionRsp\022\016\n\006result\030\001 \001(\010\".\n"
  "\034RemoveApplicationsActionRqst\022\016\n\006action\030"
  "\002 \001(\t\"-\n\033RemoveApplicationsActionRsp\022\016\n\006"
  "result\030\001 \001(\010\"5\n\023GetApplicationsRqst\022\r\n\005q"
  "uery\030\001 \001(\t\022\017\n\007options\030\002 \001(\t\"A\n\022GetApplic"
  "ationsRsp\022+\n\014applications\030\001 \003(\0132\025.resour"
  "ce.Application\"\'\n\031GetApplicationVersionR"
  "qst\022\n\n\002id\030\001 \001(\t\"+\n\030GetApplicationVersion"
  "Rsp\022\017\n\007version\030\001 \001(\t\"$\n\026GetApplicationIc"
  "onRqst\022\n\n\002id\030\001 \001(\t\"%\n\025GetApplicationIcon"
  "Rsp\022\014\n\004icon\030\001 \001(\t\"%\n\027GetApplicationAlias"
  "Rqst\022\n\n\002id\030\001 \001(\t\"\'\n\026GetApplicationAliasR"
  "sp\022\r\n\005alias\030\001 \001(\t\"n\n\005Group\022\n\n\002id\030\001 \001(\t\022\014"
  "\n\004name\030\002 \001(\t\022\016\n\006domain\030\003 \001(\t\022\023\n\013descript"
  "ion\030\004 \001(\t\022\017\n\007members\030\005 \003(\t\022\025\n\rorganizati"
  "ons\030\006 \003(\t\"1\n\017CreateGroupRqst\022\036\n\005group\030\001 "
  "\001(\0132\017.resource.Group\" \n\016CreateGroupRsp\022\016"
  "\n\006result\030\001 \001(\010\"2\n\017UpdateGroupRqst\022\017\n\007gro"
  "upId\030\001 \001(\t\022\016\n\006values\030\002 \001(\t\" \n\016UpdateGrou"
  "pRsp\022\016\n\006result\030\001 \001(\010\"/\n\rGetGroupsRqst\022\r\n"
  "\005query\030\001 \001(\t\022\017\n\007options\030\002 \001(\t\"/\n\014GetGrou"
  "psRsp\022\037\n\006groups\030\001 \003(\0132\017.resource.Group\" "
  "\n\017DeleteGroupRqst\022\r\n\005group\030\001 \001(\t\" \n\016Dele"
  "teGroupRsp\022\016\n\006result\030\001 \001(\010\"\?\n\031AddGroupMe"
  "mberAccountRqst\022\017\n\007groupId\030\001 \001(\t\022\021\n\tacco"
  "untId\030\002 \001(\t\"*\n\030AddGroupMemberAccountRsp\022"
  "\016\n\006result\030\001 \001(\010\"B\n\034RemoveGroupMemberAcco"
  "untRqst\022\017\n\007groupId\030\001 \001(\t\022\021\n\taccountId\030\002 "
  "\001(\t\"-\n\033RemoveGroupMemberAccountRsp\022\016\n\006re"
  "sult\030\001 \001(\010\"\261\001\n\014Organization\022\n\n\002id\030\001 \001(\t\022"
  "\016\n\006domain\030\002 \001(\t\022\014\n\004name\030\003 \001(\t\022\r\n\005email\030\004"
  " \001(\t\022\014\n\004icon\030\005 \001(\t\022\023\n\013description\030\006 \001(\t\022"
  "\020\n\010accounts\030\007 \003(\t\022\016\n\006groups\030\010 \003(\t\022\r\n\005rol"
  "es\030\t \003(\t\022\024\n\014applications\030\n \003(\t\"F\n\026Create"
  "OrganizationRqst\022,\n\014organization\030\001 \001(\0132\026"
  ".resource.Organization\"\'\n\025CreateOrganiza"
  "tionRsp\022\016\n\006result\030\001 \001(\010\"@\n\026UpdateOrganiz"
  "ationRqst\022\026\n\016organizationId\030\001 \001(\t\022\016\n\006val"
  "ues\030\002 \001(\t\"\'\n\025UpdateOrganizationRsp\022\016\n\006re"
  "sult\030\001 \001(\010\"6\n\024GetOrganizationsRqst\022\r\n\005qu"
  "ery\030\001 \001(\t\022\017\n\007options\030\002 \001(\t\"D\n\023GetOrganiz"
  "ationsRsp\022-\n\rorganizations\030\001 \003(\0132\026.resou"
  "rce.Organization\"G\n\032AddOrganizationAccou"
  "ntRqst\022\026\n\016organizationId\030\001 \001(\t\022\021\n\taccoun"
  "tId\030\002 \001(\t\"+\n\031AddOrganizationAccountRsp\022\016"
  "\n\006result\030\001 \001(\010\"C\n\030AddOrganizationGroupRq"
  "st\022\026\n\016organizationId\030\001 \001(\t\022\017\n\007groupId\030\002 "
  "\001(\t\")\n\027AddOrganizationGroupRsp\022\016\n\006result"
  "\030\001 \001(\010\"A\n\027AddOrganizationRoleRqst\022\026\n\016org"
  "anizationId\030\001 \001(\t\022\016\n\006roleId\030\002 \001(\t\"(\n\026Add"
  "OrganizationRoleRsp\022\016\n\006result\030\001 \001(\010\"O\n\036A"
  "ddOrganizationApplicationRqst\022\026\n\016organiz"
  "ationId\030\001 \001(\t\022\025\n\rapplicationId\030\002 \001(\t\"/\n\035"
  "AddOrganizationApplicationRsp\022\016\n\006result\030"
  "\001 \001(\010\"F\n\033RemoveOrganizationGroupRqst\022\026\n\016"
  "organizationId\030\001 \001(\t\022\017\n\007groupId\030\002 \001(\t\",\n"
  "\032RemoveOrganizationGroupRsp\022\016\n\006result\030\001 "
  "\001(\010\"D\n\032RemoveOrganizationRoleRqst\022\026\n\016org"
  "anizationId\030\001 \001(\t\022\016\n\006roleId\030\002 \001(\t\"+\n\031Rem"
  "oveOrganizationRoleRsp\022\016\n\006result\030\001 \001(\010\"R"
  "\n!RemoveOrganizationApplicationRqst\022\026\n\016o"
  "rganizationId\030\001 \001(\t\022\025\n\rapplicationId\030\002 \001"
  "(\t\"2\n RemoveOrganizationApplicationRsp\022\016"
  "\n\006result\030\001 \001(\010\"J\n\035RemoveOrganizationAcco"
  "untRqst\022\026\n\016organizationId\030\001 \001(\t\022\021\n\taccou"
  "ntId\030\002 \001(\t\".\n\034RemoveOrganizationAccountR"
  "sp\022\016\n\006result\030\001 \001(\010\"F\n\031IsOrgnanizationMem"
  "berRqst\022\026\n\016organizationId\030\001 \001(\t\022\021\n\taccou"
  "ntId\030\002 \001(\t\"*\n\030IsOrgnanizationMemberRsp\022\016"
  "\n\006result\030\001 \001(\010\".\n\026DeleteOrganizationRqst"
  "\022\024\n\014organization\030\001 \001(\t\"\'\n\025DeleteOrganiza"
  "tionRsp\022\016\n\006result\030\001 \001(\010\"\272\001\n\004Peer\022\020\n\010host"
  "name\030\001 \001(\t\022\017\n\007address\030\002 \001(\t\022\016\n\006domain\030\003 "
  "\001(\t\022\033\n\023external_ip_address\030\004 \001(\t\022\030\n\020loca"
  "l_ip_address\030\005 \001(\t\022\013\n\003mac\030\006 \001(\t\022*\n\005state"
  "\030\007 \001(\0162\033.resource.PeerApprovalState\022\017\n\007a"
  "ctions\030\010 \003(\t\"D\n\030GetPeerApprovalStateRqst"
  "\022\013\n\003mac\030\001 \001(\t\022\033\n\023remote_peer_address\030\002 \001"
  "(\t\"E\n\027GetPeerApprovalStateRsp\022*\n\005state\030\001"
  " \001(\0162\033.resource.PeerApprovalState\"@\n\024Get"
  "PeerPublicKeyRqst\022\013\n\003mac\030\001 \001(\t\022\033\n\023remote"
  "_peer_address\030\002 \001(\t\")\n\023GetPeerPublicKeyR"
  "sp\022\022\n\npublic_key\030\001 \001(\t\"D\n\020RegisterPeerRq"
  "st\022\034\n\004peer\030\001 \001(\0132\016.resource.Peer\022\022\n\npubl"
  "ic_key\030\002 \001(\t\"C\n\017RegisterPeerRsp\022\034\n\004peer\030"
  "\001 \001(\0132\016.resource.Peer\022\022\n\npublic_key\030\002 \001("
  "\t\".\n\014GetPeersRqst\022\r\n\005query\030\001 \001(\t\022\017\n\007opti"
  "ons\030\002 \001(\t\",\n\013GetPeersRsp\022\035\n\005peers\030\001 \003(\0132"
  "\016.resource.Peer\".\n\016DeletePeerRqst\022\034\n\004pee"
  "r\030\001 \001(\0132\016.resource.Peer\"\037\n\rDeletePeerRsp"
  "\022\016\n\006result\030\001 \001(\010\"2\n\022AddPeerActionsRqst\022\013"
  "\n\003mac\030\001 \001(\t\022\017\n\007actions\030\002 \003(\t\"#\n\021AddPeerA"
  "ctionsRsp\022\016\n\006result\030\001 \001(\010\"3\n\024RemovePeerA"
  "ctionRqst\022\013\n\003mac\030\001 \001(\t\022\016\n\006action\030\002 \001(\t\"%"
  "\n\023RemovePeerActionRsp\022\016\n\006result\030\001 \001(\010\"\'\n"
  "\025RemovePeersActionRqst\022\016\n\006action\030\002 \001(\t\"&"
  "\n\024RemovePeersActionRsp\022\016\n\006result\030\001 \001(\010\"."
  "\n\016AcceptPeerRqst\022\034\n\004peer\030\001 \001(\0132\016.resourc"
  "e.Peer\"\037\n\rAcceptPeerRsp\022\016\n\006result\030\001 \001(\010\""
  ".\n\016RejectPeerRqst\022\034\n\004peer\030\001 \001(\0132\016.resour"
  "ce.Peer\"\037\n\rRejectPeerRsp\022\016\n\006result\030\001 \001(\010"
  "\"\223\001\n\014Notification\022\n\n\002id\030\001 \001(\t\022\014\n\004date\030\002 "
  "\001(\003\022\017\n\007message\030\003 \001(\t\022\021\n\trecipient\030\004 \001(\t\022"
  "\016\n\006sender\030\005 \001(\t\0225\n\021notification_type\030\006 \001"
  "(\0162\032.resource.NotificationType\"F\n\026Create"
  "NotificationRqst\022,\n\014notification\030\001 \001(\0132\026"
  ".resource.Notification\"\027\n\025CreateNotifica"
  "tionRsp\")\n\024GetNotificationsRqst\022\021\n\trecip"
  "ient\030\001 \001(\t\"D\n\023GetNotificationsRsp\022-\n\rnot"
  "ifications\030\001 \003(\0132\026.resource.Notification"
  "\"7\n\026DeleteNotificationRqst\022\n\n\002id\030\001 \001(\t\022\021"
  "\n\trecipient\030\002 \001(\t\"\027\n\025DeleteNotificationR"
  "sp\".\n\031ClearAllNotificationsRqst\022\021\n\trecip"
  "ient\030\001 \001(\t\"\032\n\030ClearAllNotificationsRsp\"h"
  "\n\034ClearNotificationsByTypeRqst\022\021\n\trecipi"
  "ent\030\001 \001(\t\0225\n\021notification_type\030\002 \001(\0162\032.r"
  "esource.NotificationType\"\035\n\033ClearNotific"
  "ationsByTypeRsp\"o\n\007Session\022\021\n\taccountId\030"
  "\001 \001(\t\022%\n\005state\030\002 \001(\0162\026.resource.SessionS"
  "tate\022\027\n\017last_state_time\030\003 \001(\003\022\021\n\texpire_"
  "at\030\004 \001(\003\":\n\024UpdateSessionRequest\022\"\n\007sess"
  "ion\030\001 \001(\0132\021.resource.Session\"\027\n\025UpdateSe"
  "ssionResponse\")\n\024RemoveSessionRequest\022\021\n"
  "\taccountId\030\001 \001(\t\"\027\n\025RemoveSessionRespons"
  "e\"4\n\022GetSessionsRequest\022\r\n\005query\030\001 \001(\t\022\017"
  "\n\007options\030\002 \001(\t\":\n\023GetSessionsResponse\022#"
  "\n\010sessions\030\001 \003(\0132\021.resource.Session\"&\n\021G"
  "etSessionRequest\022\021\n\taccountId\030\001 \001(\t\"8\n\022G"
  "etSessionResponse\022\"\n\007session\030\001 \001(\0132\021.res"
  "ource.Session*F\n\013PackageType\022\017\n\013UNKNOW_T"
  "YPE\020\000\022\020\n\014SERVICE_TYPE\020\001\022\024\n\020APPLICATION_T"
  "YPE\020\002*J\n\021PeerApprovalState\022\020\n\014PEER_PENDI"
  "NG\020\000\022\020\n\014PEER_ACCETEP\020\001\022\021\n\rPEER_REJECTED\020"
  "\002*`\n\020NotificationType\022\025\n\021USER_NOTIFICATI"
  "ON\020\000\022\034\n\030APPLICATION_NOTIFICATION\020\001\022\027\n\023SY"
  "STEM_NOTIFICATION\020\002*1\n\014SessionState\022\n\n\006O"
  "NLINE\020\000\022\013\n\007OFFLINE\020\001\022\010\n\004AWAY\020\0022\344.\n\017Resou"
  "rceService\022W\n\022CreateOrganization\022 .resou"
  "rce.CreateOrganizationRqst\032\037.resource.Cr"
  "eateOrganizationRsp\022W\n\022UpdateOrganizatio"
  "n\022 .resource.UpdateOrganizationRqst\032\037.re"
  "source.UpdateOrganizationRsp\022S\n\020GetOrgan"
  "izations\022\036.resource.GetOrganizationsRqst"
  "\032\035.resource.GetOrganizationsRsp0\001\022W\n\022Del"
  "eteOrganization\022 .resource.DeleteOrganiz"
  "ationRqst\032\037.resource.DeleteOrganizationR"
  "sp\022c\n\026AddOrganizationAccount\022$.resource."
  "AddOrganizationAccountRqst\032#.resource.Ad"
  "dOrganizationAccountRsp\022]\n\024AddOrganizati"
  "onGroup\022\".resource.AddOrganizationGroupR"
  "qst\032!.resource.AddOrganizationGroupRsp\022Z"
  "\n\023AddOrganizationRole\022!.resource.AddOrga"
  "nizationRoleRqst\032 .resource.AddOrganizat"
  "ionRoleRsp\022o\n\032AddOrganizationApplication"
  "\022(.resource.AddOrganizationApplicationRq"
  "st\032\'.resource.AddOrganizationApplication"
  "Rsp\022l\n\031RemoveOrganizationAccount\022\'.resou"
  "rce.RemoveOrganizationAccountRqst\032&.reso"
  "urce.RemoveOrganizationAccountRsp\022f\n\027Rem"
  "oveOrganizationGroup\022%.resource.RemoveOr"
  "ganizationGroupRqst\032$.resource.RemoveOrg"
  "anizationGroupRsp\022c\n\026RemoveOrganizationR"
  "ole\022$.resource.RemoveOrganizationRoleRqs"
  "t\032#.resource.RemoveOrganizationRoleRsp\022x"
  "\n\035RemoveOrganizationApplication\022+.resour"
  "ce.RemoveOrganizationApplicationRqst\032*.r"
  "esource.RemoveOrganizationApplicationRsp"
  "\022B\n\013CreateGroup\022\031.resource.CreateGroupRq"
  "st\032\030.resource.CreateGroupRsp\022B\n\013UpdateGr"
  "oup\022\031.resource.UpdateGroupRqst\032\030.resourc"
  "e.UpdateGroupRsp\022>\n\tGetGroups\022\027.resource"
  ".GetGroupsRqst\032\026.resource.GetGroupsRsp0\001"
  "\022B\n\013DeleteGroup\022\031.resource.DeleteGroupRq"
  "st\032\030.resource.DeleteGroupRsp\022`\n\025AddGroup"
  "MemberAccount\022#.resource.AddGroupMemberA"
  "ccountRqst\032\".resource.AddGroupMemberAcco"
  "untRsp\022i\n\030RemoveGroupMemberAccount\022&.res"
  "ource.RemoveGroupMemberAccountRqst\032%.res"
  "ource.RemoveGroupMemberAccountRsp\022N\n\017Reg"
  "isterAccount\022\035.resource.RegisterAccountR"
  "qst\032\034.resource.RegisterAccountRsp\022H\n\rDel"
  "eteAccount\022\033.resource.DeleteAccountRqst\032"
  "\032.resource.DeleteAccountRsp\022\?\n\nGetAccoun"
  "t\022\030.resource.GetAccountRqst\032\027.resource.G"
  "etAccountRsp\022W\n\022SetAccountPassword\022 .res"
  "ource.SetAccountPasswordRqst\032\037.resource."
  "SetAccountPasswordRsp\022D\n\013GetAccounts\022\031.r"
  "esource.GetAccountsRqst\032\030.resource.GetAc"
  "countsRsp0\001\022K\n\016AddAccountRole\022\034.resource"
  ".AddAccountRoleRqst\032\033.resource.AddAccoun"
  "tRoleRsp\022T\n\021RemoveAccountRole\022\037.resource"
  ".RemoveAccountRoleRqst\032\036.resource.Remove"
  "AccountRoleRsp\022T\n\021SetAccountContact\022\037.re"
  "source.SetAccountContactRqst\032\036.resource."
  "SetAccountContactRsp\022A\n\010SetEmail\022\031.resou"
  "rce.SetEmailRequest\032\032.resource.SetEmailR"
  "esponse\022`\n\025IsOrgnanizationMember\022#.resou"
  "rce.IsOrgnanizationMemberRqst\032\".resource"
  ".IsOrgnanizationMemberRsp\022\?\n\nCreateRole\022"
  "\030.resource.CreateRoleRqst\032\027.resource.Cre"
  "ateRoleRsp\022;\n\010GetRoles\022\026.resource.GetRol"
  "esRqst\032\025.resource.GetRolesRsp0\001\022\?\n\nDelet"
  "eRole\022\030.resource.DeleteRoleRqst\032\027.resour"
  "ce.DeleteRoleRsp\022K\n\016AddRoleActions\022\034.res"
  "ource.AddRoleActionsRqst\032\033.resource.AddR"
  "oleActionsRsp\022Q\n\020RemoveRoleAction\022\036.reso"
  "urce.RemoveRoleActionRqst\032\035.resource.Rem"
  "oveRoleActionRsp\022T\n\021RemoveRolesAction\022\037."
  "resource.RemoveRolesActionRqst\032\036.resourc"
  "e.RemoveRolesActionRsp\022T\n\021CreateApplicat"
  "ion\022\037.resource.CreateApplicationRqst\032\036.r"
  "esource.CreateApplicationRsp\022T\n\021UpdateAp"
  "plication\022\037.resource.UpdateApplicationRq"
  "st\032\036.resource.UpdateApplicationRsp\022P\n\017Ge"
  "tApplications\022\035.resource.GetApplications"
  "Rqst\032\034.resource.GetApplicationsRsp0\001\022T\n\021"
  "DeleteApplication\022\037.resource.DeleteAppli"
  "cationRqst\032\036.resource.DeleteApplicationR"
  "sp\022`\n\025AddApplicationActions\022#.resource.A"
  "ddApplicationActionsRqst\032\".resource.AddA"
  "pplicationActionsRsp\022f\n\027RemoveApplicatio"
  "nAction\022%.resource.RemoveApplicationActi"
  "onRqst\032$.resource.RemoveApplicationActio"
  "nRsp\022i\n\030RemoveApplicationsAction\022&.resou"
  "rce.RemoveApplicationsActionRqst\032%.resou"
  "rce.RemoveApplicationsActionRsp\022`\n\025GetAp"
  "plicationVersion\022#.resource.GetApplicati"
  "onVersionRqst\032\".resource.GetApplicationV"
  "ersionRsp\022Z\n\023GetApplicationAlias\022!.resou"
  "rce.GetApplicationAliasRqst\032 .resource.G"
  "etApplicationAliasRsp\022W\n\022GetApplicationI"
  "con\022 .resource.GetApplicationIconRqst\032\037."
  "resource.GetApplicationIconRsp\022E\n\014Regist"
  "erPeer\022\032.resource.RegisterPeerRqst\032\031.res"
  "ource.RegisterPeerRsp\022;\n\010GetPeers\022\026.reso"
  "urce.GetPeersRqst\032\025.resource.GetPeersRsp"
  "0\001\022]\n\024GetPeerApprovalState\022\".resource.Ge"
  "tPeerApprovalStateRqst\032!.resource.GetPee"
  "rApprovalStateRsp\022\?\n\nDeletePeer\022\030.resour"
  "ce.DeletePeerRqst\032\027.resource.DeletePeerR"
  "sp\022K\n\016AddPeerActions\022\034.resource.AddPeerA"
  "ctionsRqst\032\033.resource.AddPeerActionsRsp\022"
  "Q\n\020RemovePeerAction\022\036.resource.RemovePee"
  "rActionRqst\032\035.resource.RemovePeerActionR"
  "sp\022T\n\021RemovePeersAction\022\037.resource.Remov"
  "ePeersActionRqst\032\036.resource.RemovePeersA"
  "ctionRsp\022\?\n\nAcceptPeer\022\030.resource.Accept"
  "PeerRqst\032\027.resource.AcceptPeerRsp\022\?\n\nRej"
  "ectPeer\022\030.resource.RejectPeerRqst\032\027.reso"
  "urce.RejectPeerRsp\022Q\n\020GetPeerPublicKey\022\036"
  ".resource.GetPeerPublicKeyRqst\032\035.resourc"
  "e.GetPeerPublicKeyRsp\022W\n\022CreateNotificat"
  "ion\022 .resource.CreateNotificationRqst\032\037."
  "resource.CreateNotificationRsp\022S\n\020GetNot"
  "ifications\022\036.resource.GetNotificationsRq"
  "st\032\035.resource.GetNotificationsRsp0\001\022W\n\022D"
  "eleteNotification\022 .resource.DeleteNotif"
  "icationRqst\032\037.resource.DeleteNotificatio"
  "nRsp\022`\n\025ClearAllNotifications\022#.resource"
  ".ClearAllNotificationsRqst\032\".resource.Cl"
  "earAllNotificationsRsp\022i\n\030ClearNotificat"
  "ionsByType\022&.resource.ClearNotifications"
  "ByTypeRqst\032%.resource.ClearNotifications"
  "ByTypeRsp\022a\n\014FindPackages\022\'.resource.Fin"
  "dPackagesDescriptorRequest\032(.resource.Fi"
  "ndPackagesDescriptorResponse\022e\n\024GetPacka"
  "geDescriptor\022%.resource.GetPackageDescri"
  "ptorRequest\032&.resource.GetPackageDescrip"
  "torResponse\022j\n\025GetPackagesDescriptor\022&.r"
  "esource.GetPackagesDescriptorRequest\032\'.r"
  "esource.GetPackagesDescriptorResponse0\001\022"
  "e\n\024SetPackageDescriptor\022%.resource.SetPa"
  "ckageDescriptorRequest\032&.resource.SetPac"
  "kageDescriptorResponse\022Y\n\020SetPackageBund"
  "le\022!.resource.SetPackageBundleRequest\032\"."
  "resource.SetPackageBundleResponse\022q\n\030Get"
  "PackageBundleChecksum\022).resource.GetPack"
  "ageBundleChecksumRequest\032*.resource.GetP"
  "ackageBundleChecksumResponse\022P\n\rUpdateSe"
  "ssion\022\036.resource.UpdateSessionRequest\032\037."
  "resource.UpdateSessionResponse\022J\n\013GetSes"
  "sions\022\034.resource.GetSessionsRequest\032\035.re"
  "source.GetSessionsResponse\022P\n\rRemoveSess"
  "ion\022\036.resource.RemoveSessionRequest\032\037.re"
  "source.RemoveSessionResponse\022G\n\nGetSessi"
  "on\022\033.resource.GetSessionRequest\032\034.resour"
  "ce.GetSessionResponseB\025Z\023resource/resour"
  "cepbb\006proto3"
  ;
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_resource_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_resource_2eproto = {
  false, false, 15332, descriptor_table_protodef_resource_2eproto, "resource.proto", 
  &descriptor_table_resource_2eproto_once, nullptr, 0, 151,
  schemas, file_default_instances, TableStruct_resource_2eproto::offsets,
  file_level_metadata_resource_2eproto, file_level_enum_descriptors_resource_2eproto, file_level_service_descriptors_resource_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_resource_2eproto_getter() {
  return &descriptor_table_resource_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_resource_2eproto(&descriptor_table_resource_2eproto);
namespace resource {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* PackageType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_resource_2eproto);
  return file_level_enum_descriptors_resource_2eproto[0];
}
bool PackageType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* PeerApprovalState_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_resource_2eproto);
  return file_level_enum_descriptors_resource_2eproto[1];
}
bool PeerApprovalState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* NotificationType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_resource_2eproto);
  return file_level_enum_descriptors_resource_2eproto[2];
}
bool NotificationType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* SessionState_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_resource_2eproto);
  return file_level_enum_descriptors_resource_2eproto[3];
}
bool SessionState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class PackageBundle::_Internal {
 public:
  static const ::resource::PackageDescriptor& packagedescriptor(const PackageBundle* msg);
};

const ::resource::PackageDescriptor&
PackageBundle::_Internal::packagedescriptor(const PackageBundle* msg) {
  return *msg->packagedescriptor_;
}
PackageBundle::PackageBundle(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.PackageBundle)
}
PackageBundle::PackageBundle(const PackageBundle& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  checksum_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_checksum().empty()) {
    checksum_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_checksum(), 
      GetArena());
  }
  plaform_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_plaform().empty()) {
    plaform_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_plaform(), 
      GetArena());
  }
  binairies_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_binairies().empty()) {
    binairies_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_binairies(), 
      GetArena());
  }
  mac_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_mac().empty()) {
    mac_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_mac(), 
      GetArena());
  }
  if (from._internal_has_packagedescriptor()) {
    packagedescriptor_ = new ::resource::PackageDescriptor(*from.packagedescriptor_);
  } else {
    packagedescriptor_ = nullptr;
  }
  ::memcpy(&modified_, &from.modified_,
    static_cast<size_t>(reinterpret_cast<char*>(&size_) -
    reinterpret_cast<char*>(&modified_)) + sizeof(size_));
  // @@protoc_insertion_point(copy_constructor:resource.PackageBundle)
}

void PackageBundle::SharedCtor() {
checksum_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
plaform_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
binairies_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
mac_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&packagedescriptor_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&size_) -
    reinterpret_cast<char*>(&packagedescriptor_)) + sizeof(size_));
}

PackageBundle::~PackageBundle() {
  // @@protoc_insertion_point(destructor:resource.PackageBundle)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PackageBundle::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  checksum_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  plaform_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  binairies_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  mac_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete packagedescriptor_;
}

void PackageBundle::ArenaDtor(void* object) {
  PackageBundle* _this = reinterpret_cast< PackageBundle* >(object);
  (void)_this;
}
void PackageBundle::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PackageBundle::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PackageBundle::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.PackageBundle)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  checksum_.ClearToEmpty();
  plaform_.ClearToEmpty();
  binairies_.ClearToEmpty();
  mac_.ClearToEmpty();
  if (GetArena() == nullptr && packagedescriptor_ != nullptr) {
    delete packagedescriptor_;
  }
  packagedescriptor_ = nullptr;
  ::memset(&modified_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&size_) -
      reinterpret_cast<char*>(&modified_)) + sizeof(size_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PackageBundle::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .resource.PackageDescriptor packageDescriptor = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_packagedescriptor(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string checksum = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_checksum();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.PackageBundle.checksum"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string plaform = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_plaform();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.PackageBundle.plaform"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 size = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 modified = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          modified_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes Binairies = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_binairies();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string mac = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_mac();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.PackageBundle.mac"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PackageBundle::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.PackageBundle)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .resource.PackageDescriptor packageDescriptor = 1;
  if (this->has_packagedescriptor()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::packagedescriptor(this), target, stream);
  }

  // string checksum = 2;
  if (this->checksum().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_checksum().data(), static_cast<int>(this->_internal_checksum().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.PackageBundle.checksum");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_checksum(), target);
  }

  // string plaform = 3;
  if (this->plaform().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_plaform().data(), static_cast<int>(this->_internal_plaform().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.PackageBundle.plaform");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_plaform(), target);
  }

  // int32 size = 4;
  if (this->size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_size(), target);
  }

  // int64 modified = 5;
  if (this->modified() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(5, this->_internal_modified(), target);
  }

  // bytes Binairies = 6;
  if (this->binairies().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        6, this->_internal_binairies(), target);
  }

  // string mac = 7;
  if (this->mac().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_mac().data(), static_cast<int>(this->_internal_mac().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.PackageBundle.mac");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_mac(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.PackageBundle)
  return target;
}

size_t PackageBundle::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.PackageBundle)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string checksum = 2;
  if (this->checksum().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_checksum());
  }

  // string plaform = 3;
  if (this->plaform().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_plaform());
  }

  // bytes Binairies = 6;
  if (this->binairies().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_binairies());
  }

  // string mac = 7;
  if (this->mac().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_mac());
  }

  // .resource.PackageDescriptor packageDescriptor = 1;
  if (this->has_packagedescriptor()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *packagedescriptor_);
  }

  // int64 modified = 5;
  if (this->modified() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_modified());
  }

  // int32 size = 4;
  if (this->size() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_size());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PackageBundle::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.PackageBundle)
  GOOGLE_DCHECK_NE(&from, this);
  const PackageBundle* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PackageBundle>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.PackageBundle)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.PackageBundle)
    MergeFrom(*source);
  }
}

void PackageBundle::MergeFrom(const PackageBundle& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.PackageBundle)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.checksum().size() > 0) {
    _internal_set_checksum(from._internal_checksum());
  }
  if (from.plaform().size() > 0) {
    _internal_set_plaform(from._internal_plaform());
  }
  if (from.binairies().size() > 0) {
    _internal_set_binairies(from._internal_binairies());
  }
  if (from.mac().size() > 0) {
    _internal_set_mac(from._internal_mac());
  }
  if (from.has_packagedescriptor()) {
    _internal_mutable_packagedescriptor()->::resource::PackageDescriptor::MergeFrom(from._internal_packagedescriptor());
  }
  if (from.modified() != 0) {
    _internal_set_modified(from._internal_modified());
  }
  if (from.size() != 0) {
    _internal_set_size(from._internal_size());
  }
}

void PackageBundle::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.PackageBundle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PackageBundle::CopyFrom(const PackageBundle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.PackageBundle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PackageBundle::IsInitialized() const {
  return true;
}

void PackageBundle::InternalSwap(PackageBundle* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  checksum_.Swap(&other->checksum_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  plaform_.Swap(&other->plaform_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  binairies_.Swap(&other->binairies_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  mac_.Swap(&other->mac_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PackageBundle, size_)
      + sizeof(PackageBundle::size_)
      - PROTOBUF_FIELD_OFFSET(PackageBundle, packagedescriptor_)>(
          reinterpret_cast<char*>(&packagedescriptor_),
          reinterpret_cast<char*>(&other->packagedescriptor_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PackageBundle::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[0]);
}

// ===================================================================

class SetPackageBundleRequest::_Internal {
 public:
  static const ::resource::PackageBundle& bundle(const SetPackageBundleRequest* msg);
};

const ::resource::PackageBundle&
SetPackageBundleRequest::_Internal::bundle(const SetPackageBundleRequest* msg) {
  return *msg->bundle_;
}
SetPackageBundleRequest::SetPackageBundleRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.SetPackageBundleRequest)
}
SetPackageBundleRequest::SetPackageBundleRequest(const SetPackageBundleRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_bundle()) {
    bundle_ = new ::resource::PackageBundle(*from.bundle_);
  } else {
    bundle_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:resource.SetPackageBundleRequest)
}

void SetPackageBundleRequest::SharedCtor() {
bundle_ = nullptr;
}

SetPackageBundleRequest::~SetPackageBundleRequest() {
  // @@protoc_insertion_point(destructor:resource.SetPackageBundleRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SetPackageBundleRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete bundle_;
}

void SetPackageBundleRequest::ArenaDtor(void* object) {
  SetPackageBundleRequest* _this = reinterpret_cast< SetPackageBundleRequest* >(object);
  (void)_this;
}
void SetPackageBundleRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetPackageBundleRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SetPackageBundleRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.SetPackageBundleRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && bundle_ != nullptr) {
    delete bundle_;
  }
  bundle_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetPackageBundleRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .resource.PackageBundle bundle = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_bundle(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetPackageBundleRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.SetPackageBundleRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .resource.PackageBundle bundle = 1;
  if (this->has_bundle()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::bundle(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.SetPackageBundleRequest)
  return target;
}

size_t SetPackageBundleRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.SetPackageBundleRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .resource.PackageBundle bundle = 1;
  if (this->has_bundle()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *bundle_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetPackageBundleRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.SetPackageBundleRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SetPackageBundleRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetPackageBundleRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.SetPackageBundleRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.SetPackageBundleRequest)
    MergeFrom(*source);
  }
}

void SetPackageBundleRequest::MergeFrom(const SetPackageBundleRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.SetPackageBundleRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_bundle()) {
    _internal_mutable_bundle()->::resource::PackageBundle::MergeFrom(from._internal_bundle());
  }
}

void SetPackageBundleRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.SetPackageBundleRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetPackageBundleRequest::CopyFrom(const SetPackageBundleRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.SetPackageBundleRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetPackageBundleRequest::IsInitialized() const {
  return true;
}

void SetPackageBundleRequest::InternalSwap(SetPackageBundleRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(bundle_, other->bundle_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetPackageBundleRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[1]);
}

// ===================================================================

class SetPackageBundleResponse::_Internal {
 public:
};

SetPackageBundleResponse::SetPackageBundleResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.SetPackageBundleResponse)
}
SetPackageBundleResponse::SetPackageBundleResponse(const SetPackageBundleResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.SetPackageBundleResponse)
}

void SetPackageBundleResponse::SharedCtor() {
result_ = false;
}

SetPackageBundleResponse::~SetPackageBundleResponse() {
  // @@protoc_insertion_point(destructor:resource.SetPackageBundleResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SetPackageBundleResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SetPackageBundleResponse::ArenaDtor(void* object) {
  SetPackageBundleResponse* _this = reinterpret_cast< SetPackageBundleResponse* >(object);
  (void)_this;
}
void SetPackageBundleResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetPackageBundleResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SetPackageBundleResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.SetPackageBundleResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetPackageBundleResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetPackageBundleResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.SetPackageBundleResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.SetPackageBundleResponse)
  return target;
}

size_t SetPackageBundleResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.SetPackageBundleResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetPackageBundleResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.SetPackageBundleResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SetPackageBundleResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetPackageBundleResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.SetPackageBundleResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.SetPackageBundleResponse)
    MergeFrom(*source);
  }
}

void SetPackageBundleResponse::MergeFrom(const SetPackageBundleResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.SetPackageBundleResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void SetPackageBundleResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.SetPackageBundleResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetPackageBundleResponse::CopyFrom(const SetPackageBundleResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.SetPackageBundleResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetPackageBundleResponse::IsInitialized() const {
  return true;
}

void SetPackageBundleResponse::InternalSwap(SetPackageBundleResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetPackageBundleResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[2]);
}

// ===================================================================

class GetPackageBundleChecksumRequest::_Internal {
 public:
};

GetPackageBundleChecksumRequest::GetPackageBundleChecksumRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.GetPackageBundleChecksumRequest)
}
GetPackageBundleChecksumRequest::GetPackageBundleChecksumRequest(const GetPackageBundleChecksumRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.GetPackageBundleChecksumRequest)
}

void GetPackageBundleChecksumRequest::SharedCtor() {
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetPackageBundleChecksumRequest::~GetPackageBundleChecksumRequest() {
  // @@protoc_insertion_point(destructor:resource.GetPackageBundleChecksumRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetPackageBundleChecksumRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetPackageBundleChecksumRequest::ArenaDtor(void* object) {
  GetPackageBundleChecksumRequest* _this = reinterpret_cast< GetPackageBundleChecksumRequest* >(object);
  (void)_this;
}
void GetPackageBundleChecksumRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetPackageBundleChecksumRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetPackageBundleChecksumRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.GetPackageBundleChecksumRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetPackageBundleChecksumRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.GetPackageBundleChecksumRequest.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetPackageBundleChecksumRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.GetPackageBundleChecksumRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.GetPackageBundleChecksumRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.GetPackageBundleChecksumRequest)
  return target;
}

size_t GetPackageBundleChecksumRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.GetPackageBundleChecksumRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetPackageBundleChecksumRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.GetPackageBundleChecksumRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetPackageBundleChecksumRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetPackageBundleChecksumRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.GetPackageBundleChecksumRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.GetPackageBundleChecksumRequest)
    MergeFrom(*source);
  }
}

void GetPackageBundleChecksumRequest::MergeFrom(const GetPackageBundleChecksumRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.GetPackageBundleChecksumRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
}

void GetPackageBundleChecksumRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.GetPackageBundleChecksumRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetPackageBundleChecksumRequest::CopyFrom(const GetPackageBundleChecksumRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.GetPackageBundleChecksumRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPackageBundleChecksumRequest::IsInitialized() const {
  return true;
}

void GetPackageBundleChecksumRequest::InternalSwap(GetPackageBundleChecksumRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetPackageBundleChecksumRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[3]);
}

// ===================================================================

class GetPackageBundleChecksumResponse::_Internal {
 public:
};

GetPackageBundleChecksumResponse::GetPackageBundleChecksumResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.GetPackageBundleChecksumResponse)
}
GetPackageBundleChecksumResponse::GetPackageBundleChecksumResponse(const GetPackageBundleChecksumResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  checksum_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_checksum().empty()) {
    checksum_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_checksum(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.GetPackageBundleChecksumResponse)
}

void GetPackageBundleChecksumResponse::SharedCtor() {
checksum_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetPackageBundleChecksumResponse::~GetPackageBundleChecksumResponse() {
  // @@protoc_insertion_point(destructor:resource.GetPackageBundleChecksumResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetPackageBundleChecksumResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  checksum_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetPackageBundleChecksumResponse::ArenaDtor(void* object) {
  GetPackageBundleChecksumResponse* _this = reinterpret_cast< GetPackageBundleChecksumResponse* >(object);
  (void)_this;
}
void GetPackageBundleChecksumResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetPackageBundleChecksumResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetPackageBundleChecksumResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.GetPackageBundleChecksumResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  checksum_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetPackageBundleChecksumResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string checksum = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_checksum();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.GetPackageBundleChecksumResponse.checksum"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetPackageBundleChecksumResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.GetPackageBundleChecksumResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string checksum = 1;
  if (this->checksum().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_checksum().data(), static_cast<int>(this->_internal_checksum().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.GetPackageBundleChecksumResponse.checksum");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_checksum(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.GetPackageBundleChecksumResponse)
  return target;
}

size_t GetPackageBundleChecksumResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.GetPackageBundleChecksumResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string checksum = 1;
  if (this->checksum().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_checksum());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetPackageBundleChecksumResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.GetPackageBundleChecksumResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetPackageBundleChecksumResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetPackageBundleChecksumResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.GetPackageBundleChecksumResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.GetPackageBundleChecksumResponse)
    MergeFrom(*source);
  }
}

void GetPackageBundleChecksumResponse::MergeFrom(const GetPackageBundleChecksumResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.GetPackageBundleChecksumResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.checksum().size() > 0) {
    _internal_set_checksum(from._internal_checksum());
  }
}

void GetPackageBundleChecksumResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.GetPackageBundleChecksumResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetPackageBundleChecksumResponse::CopyFrom(const GetPackageBundleChecksumResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.GetPackageBundleChecksumResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPackageBundleChecksumResponse::IsInitialized() const {
  return true;
}

void GetPackageBundleChecksumResponse::InternalSwap(GetPackageBundleChecksumResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  checksum_.Swap(&other->checksum_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetPackageBundleChecksumResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[4]);
}

// ===================================================================

class PackageDescriptor::_Internal {
 public:
};

PackageDescriptor::PackageDescriptor(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  repositories_(arena),
  discoveries_(arena),
  keywords_(arena),
  actions_(arena),
  roles_(arena),
  groups_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.PackageDescriptor)
}
PackageDescriptor::PackageDescriptor(const PackageDescriptor& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      repositories_(from.repositories_),
      discoveries_(from.discoveries_),
      keywords_(from.keywords_),
      actions_(from.actions_),
      roles_(from.roles_),
      groups_(from.groups_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArena());
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  publisherid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_publisherid().empty()) {
    publisherid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_publisherid(), 
      GetArena());
  }
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_version().empty()) {
    version_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_version(), 
      GetArena());
  }
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_description().empty()) {
    description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_description(), 
      GetArena());
  }
  icon_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_icon().empty()) {
    icon_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_icon(), 
      GetArena());
  }
  alias_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_alias().empty()) {
    alias_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_alias(), 
      GetArena());
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:resource.PackageDescriptor)
}

void PackageDescriptor::SharedCtor() {
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
publisherid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
icon_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
alias_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
type_ = 0;
}

PackageDescriptor::~PackageDescriptor() {
  // @@protoc_insertion_point(destructor:resource.PackageDescriptor)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PackageDescriptor::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  publisherid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  icon_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  alias_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PackageDescriptor::ArenaDtor(void* object) {
  PackageDescriptor* _this = reinterpret_cast< PackageDescriptor* >(object);
  (void)_this;
}
void PackageDescriptor::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PackageDescriptor::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PackageDescriptor::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.PackageDescriptor)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  repositories_.Clear();
  discoveries_.Clear();
  keywords_.Clear();
  actions_.Clear();
  roles_.Clear();
  groups_.Clear();
  id_.ClearToEmpty();
  name_.ClearToEmpty();
  publisherid_.ClearToEmpty();
  version_.ClearToEmpty();
  description_.ClearToEmpty();
  icon_.ClearToEmpty();
  alias_.ClearToEmpty();
  type_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PackageDescriptor::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.PackageDescriptor.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.PackageDescriptor.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .resource.PackageType type = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::resource::PackageType>(val));
        } else goto handle_unusual;
        continue;
      // string publisherId = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_publisherid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.PackageDescriptor.publisherId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string version = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_version();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.PackageDescriptor.version"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string description = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_description();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.PackageDescriptor.description"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string repositories = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_repositories();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.PackageDescriptor.repositories"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<66>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated string discoveries = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_discoveries();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.PackageDescriptor.discoveries"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<74>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated string keywords = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_keywords();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.PackageDescriptor.keywords"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<82>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated string actions = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_actions();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.PackageDescriptor.actions"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<90>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .resource.Role roles = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_roles(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<98>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .resource.Group groups = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_groups(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<106>(ptr));
        } else goto handle_unusual;
        continue;
      // string icon = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 114)) {
          auto str = _internal_mutable_icon();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.PackageDescriptor.icon"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string alias = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 122)) {
          auto str = _internal_mutable_alias();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.PackageDescriptor.alias"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PackageDescriptor::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.PackageDescriptor)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.PackageDescriptor.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.PackageDescriptor.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // .resource.PackageType type = 3;
  if (this->type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3, this->_internal_type(), target);
  }

  // string publisherId = 4;
  if (this->publisherid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_publisherid().data(), static_cast<int>(this->_internal_publisherid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.PackageDescriptor.publisherId");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_publisherid(), target);
  }

  // string version = 6;
  if (this->version().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_version().data(), static_cast<int>(this->_internal_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.PackageDescriptor.version");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_version(), target);
  }

  // string description = 7;
  if (this->description().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.PackageDescriptor.description");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_description(), target);
  }

  // repeated string repositories = 8;
  for (int i = 0, n = this->_internal_repositories_size(); i < n; i++) {
    const auto& s = this->_internal_repositories(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.PackageDescriptor.repositories");
    target = stream->WriteString(8, s, target);
  }

  // repeated string discoveries = 9;
  for (int i = 0, n = this->_internal_discoveries_size(); i < n; i++) {
    const auto& s = this->_internal_discoveries(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.PackageDescriptor.discoveries");
    target = stream->WriteString(9, s, target);
  }

  // repeated string keywords = 10;
  for (int i = 0, n = this->_internal_keywords_size(); i < n; i++) {
    const auto& s = this->_internal_keywords(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.PackageDescriptor.keywords");
    target = stream->WriteString(10, s, target);
  }

  // repeated string actions = 11;
  for (int i = 0, n = this->_internal_actions_size(); i < n; i++) {
    const auto& s = this->_internal_actions(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.PackageDescriptor.actions");
    target = stream->WriteString(11, s, target);
  }

  // repeated .resource.Role roles = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_roles_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(12, this->_internal_roles(i), target, stream);
  }

  // repeated .resource.Group groups = 13;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_groups_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(13, this->_internal_groups(i), target, stream);
  }

  // string icon = 14;
  if (this->icon().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_icon().data(), static_cast<int>(this->_internal_icon().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.PackageDescriptor.icon");
    target = stream->WriteStringMaybeAliased(
        14, this->_internal_icon(), target);
  }

  // string alias = 15;
  if (this->alias().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_alias().data(), static_cast<int>(this->_internal_alias().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.PackageDescriptor.alias");
    target = stream->WriteStringMaybeAliased(
        15, this->_internal_alias(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.PackageDescriptor)
  return target;
}

size_t PackageDescriptor::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.PackageDescriptor)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string repositories = 8;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(repositories_.size());
  for (int i = 0, n = repositories_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      repositories_.Get(i));
  }

  // repeated string discoveries = 9;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(discoveries_.size());
  for (int i = 0, n = discoveries_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      discoveries_.Get(i));
  }

  // repeated string keywords = 10;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(keywords_.size());
  for (int i = 0, n = keywords_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      keywords_.Get(i));
  }

  // repeated string actions = 11;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(actions_.size());
  for (int i = 0, n = actions_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      actions_.Get(i));
  }

  // repeated .resource.Role roles = 12;
  total_size += 1UL * this->_internal_roles_size();
  for (const auto& msg : this->roles_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .resource.Group groups = 13;
  total_size += 1UL * this->_internal_groups_size();
  for (const auto& msg : this->groups_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string publisherId = 4;
  if (this->publisherid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_publisherid());
  }

  // string version = 6;
  if (this->version().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_version());
  }

  // string description = 7;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  // string icon = 14;
  if (this->icon().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_icon());
  }

  // string alias = 15;
  if (this->alias().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_alias());
  }

  // .resource.PackageType type = 3;
  if (this->type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_type());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PackageDescriptor::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.PackageDescriptor)
  GOOGLE_DCHECK_NE(&from, this);
  const PackageDescriptor* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PackageDescriptor>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.PackageDescriptor)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.PackageDescriptor)
    MergeFrom(*source);
  }
}

void PackageDescriptor::MergeFrom(const PackageDescriptor& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.PackageDescriptor)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  repositories_.MergeFrom(from.repositories_);
  discoveries_.MergeFrom(from.discoveries_);
  keywords_.MergeFrom(from.keywords_);
  actions_.MergeFrom(from.actions_);
  roles_.MergeFrom(from.roles_);
  groups_.MergeFrom(from.groups_);
  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.publisherid().size() > 0) {
    _internal_set_publisherid(from._internal_publisherid());
  }
  if (from.version().size() > 0) {
    _internal_set_version(from._internal_version());
  }
  if (from.description().size() > 0) {
    _internal_set_description(from._internal_description());
  }
  if (from.icon().size() > 0) {
    _internal_set_icon(from._internal_icon());
  }
  if (from.alias().size() > 0) {
    _internal_set_alias(from._internal_alias());
  }
  if (from.type() != 0) {
    _internal_set_type(from._internal_type());
  }
}

void PackageDescriptor::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.PackageDescriptor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PackageDescriptor::CopyFrom(const PackageDescriptor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.PackageDescriptor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PackageDescriptor::IsInitialized() const {
  return true;
}

void PackageDescriptor::InternalSwap(PackageDescriptor* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  repositories_.InternalSwap(&other->repositories_);
  discoveries_.InternalSwap(&other->discoveries_);
  keywords_.InternalSwap(&other->keywords_);
  actions_.InternalSwap(&other->actions_);
  roles_.InternalSwap(&other->roles_);
  groups_.InternalSwap(&other->groups_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  publisherid_.Swap(&other->publisherid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  version_.Swap(&other->version_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  description_.Swap(&other->description_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  icon_.Swap(&other->icon_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  alias_.Swap(&other->alias_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(type_, other->type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PackageDescriptor::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[5]);
}

// ===================================================================

class GetPackageDescriptorRequest::_Internal {
 public:
};

GetPackageDescriptorRequest::GetPackageDescriptorRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.GetPackageDescriptorRequest)
}
GetPackageDescriptorRequest::GetPackageDescriptorRequest(const GetPackageDescriptorRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  serviceid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_serviceid().empty()) {
    serviceid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_serviceid(), 
      GetArena());
  }
  publisherid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_publisherid().empty()) {
    publisherid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_publisherid(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.GetPackageDescriptorRequest)
}

void GetPackageDescriptorRequest::SharedCtor() {
serviceid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
publisherid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetPackageDescriptorRequest::~GetPackageDescriptorRequest() {
  // @@protoc_insertion_point(destructor:resource.GetPackageDescriptorRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetPackageDescriptorRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  serviceid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  publisherid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetPackageDescriptorRequest::ArenaDtor(void* object) {
  GetPackageDescriptorRequest* _this = reinterpret_cast< GetPackageDescriptorRequest* >(object);
  (void)_this;
}
void GetPackageDescriptorRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetPackageDescriptorRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetPackageDescriptorRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.GetPackageDescriptorRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  serviceid_.ClearToEmpty();
  publisherid_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetPackageDescriptorRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string serviceId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_serviceid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.GetPackageDescriptorRequest.serviceId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string publisherId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_publisherid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.GetPackageDescriptorRequest.publisherId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetPackageDescriptorRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.GetPackageDescriptorRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string serviceId = 1;
  if (this->serviceid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_serviceid().data(), static_cast<int>(this->_internal_serviceid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.GetPackageDescriptorRequest.serviceId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_serviceid(), target);
  }

  // string publisherId = 2;
  if (this->publisherid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_publisherid().data(), static_cast<int>(this->_internal_publisherid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.GetPackageDescriptorRequest.publisherId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_publisherid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.GetPackageDescriptorRequest)
  return target;
}

size_t GetPackageDescriptorRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.GetPackageDescriptorRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string serviceId = 1;
  if (this->serviceid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_serviceid());
  }

  // string publisherId = 2;
  if (this->publisherid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_publisherid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetPackageDescriptorRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.GetPackageDescriptorRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetPackageDescriptorRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetPackageDescriptorRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.GetPackageDescriptorRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.GetPackageDescriptorRequest)
    MergeFrom(*source);
  }
}

void GetPackageDescriptorRequest::MergeFrom(const GetPackageDescriptorRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.GetPackageDescriptorRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.serviceid().size() > 0) {
    _internal_set_serviceid(from._internal_serviceid());
  }
  if (from.publisherid().size() > 0) {
    _internal_set_publisherid(from._internal_publisherid());
  }
}

void GetPackageDescriptorRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.GetPackageDescriptorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetPackageDescriptorRequest::CopyFrom(const GetPackageDescriptorRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.GetPackageDescriptorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPackageDescriptorRequest::IsInitialized() const {
  return true;
}

void GetPackageDescriptorRequest::InternalSwap(GetPackageDescriptorRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  serviceid_.Swap(&other->serviceid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  publisherid_.Swap(&other->publisherid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetPackageDescriptorRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[6]);
}

// ===================================================================

class GetPackageDescriptorResponse::_Internal {
 public:
};

GetPackageDescriptorResponse::GetPackageDescriptorResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  results_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.GetPackageDescriptorResponse)
}
GetPackageDescriptorResponse::GetPackageDescriptorResponse(const GetPackageDescriptorResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      results_(from.results_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:resource.GetPackageDescriptorResponse)
}

void GetPackageDescriptorResponse::SharedCtor() {
}

GetPackageDescriptorResponse::~GetPackageDescriptorResponse() {
  // @@protoc_insertion_point(destructor:resource.GetPackageDescriptorResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetPackageDescriptorResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetPackageDescriptorResponse::ArenaDtor(void* object) {
  GetPackageDescriptorResponse* _this = reinterpret_cast< GetPackageDescriptorResponse* >(object);
  (void)_this;
}
void GetPackageDescriptorResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetPackageDescriptorResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetPackageDescriptorResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.GetPackageDescriptorResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  results_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetPackageDescriptorResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .resource.PackageDescriptor results = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_results(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetPackageDescriptorResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.GetPackageDescriptorResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .resource.PackageDescriptor results = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_results_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_results(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.GetPackageDescriptorResponse)
  return target;
}

size_t GetPackageDescriptorResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.GetPackageDescriptorResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .resource.PackageDescriptor results = 1;
  total_size += 1UL * this->_internal_results_size();
  for (const auto& msg : this->results_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetPackageDescriptorResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.GetPackageDescriptorResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetPackageDescriptorResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetPackageDescriptorResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.GetPackageDescriptorResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.GetPackageDescriptorResponse)
    MergeFrom(*source);
  }
}

void GetPackageDescriptorResponse::MergeFrom(const GetPackageDescriptorResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.GetPackageDescriptorResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  results_.MergeFrom(from.results_);
}

void GetPackageDescriptorResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.GetPackageDescriptorResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetPackageDescriptorResponse::CopyFrom(const GetPackageDescriptorResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.GetPackageDescriptorResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPackageDescriptorResponse::IsInitialized() const {
  return true;
}

void GetPackageDescriptorResponse::InternalSwap(GetPackageDescriptorResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  results_.InternalSwap(&other->results_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetPackageDescriptorResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[7]);
}

// ===================================================================

class GetPackagesDescriptorRequest::_Internal {
 public:
};

GetPackagesDescriptorRequest::GetPackagesDescriptorRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.GetPackagesDescriptorRequest)
}
GetPackagesDescriptorRequest::GetPackagesDescriptorRequest(const GetPackagesDescriptorRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  query_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_query().empty()) {
    query_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_query(), 
      GetArena());
  }
  options_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_options().empty()) {
    options_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_options(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.GetPackagesDescriptorRequest)
}

void GetPackagesDescriptorRequest::SharedCtor() {
query_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
options_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetPackagesDescriptorRequest::~GetPackagesDescriptorRequest() {
  // @@protoc_insertion_point(destructor:resource.GetPackagesDescriptorRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetPackagesDescriptorRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  query_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  options_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetPackagesDescriptorRequest::ArenaDtor(void* object) {
  GetPackagesDescriptorRequest* _this = reinterpret_cast< GetPackagesDescriptorRequest* >(object);
  (void)_this;
}
void GetPackagesDescriptorRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetPackagesDescriptorRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetPackagesDescriptorRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.GetPackagesDescriptorRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_.ClearToEmpty();
  options_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetPackagesDescriptorRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string query = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_query();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.GetPackagesDescriptorRequest.query"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string options = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_options();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.GetPackagesDescriptorRequest.options"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetPackagesDescriptorRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.GetPackagesDescriptorRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_query().data(), static_cast<int>(this->_internal_query().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.GetPackagesDescriptorRequest.query");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_query(), target);
  }

  // string options = 2;
  if (this->options().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_options().data(), static_cast<int>(this->_internal_options().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.GetPackagesDescriptorRequest.options");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_options(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.GetPackagesDescriptorRequest)
  return target;
}

size_t GetPackagesDescriptorRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.GetPackagesDescriptorRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_query());
  }

  // string options = 2;
  if (this->options().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_options());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetPackagesDescriptorRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.GetPackagesDescriptorRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetPackagesDescriptorRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetPackagesDescriptorRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.GetPackagesDescriptorRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.GetPackagesDescriptorRequest)
    MergeFrom(*source);
  }
}

void GetPackagesDescriptorRequest::MergeFrom(const GetPackagesDescriptorRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.GetPackagesDescriptorRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query().size() > 0) {
    _internal_set_query(from._internal_query());
  }
  if (from.options().size() > 0) {
    _internal_set_options(from._internal_options());
  }
}

void GetPackagesDescriptorRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.GetPackagesDescriptorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetPackagesDescriptorRequest::CopyFrom(const GetPackagesDescriptorRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.GetPackagesDescriptorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPackagesDescriptorRequest::IsInitialized() const {
  return true;
}

void GetPackagesDescriptorRequest::InternalSwap(GetPackagesDescriptorRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  query_.Swap(&other->query_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  options_.Swap(&other->options_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetPackagesDescriptorRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[8]);
}

// ===================================================================

class GetPackagesDescriptorResponse::_Internal {
 public:
};

GetPackagesDescriptorResponse::GetPackagesDescriptorResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  results_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.GetPackagesDescriptorResponse)
}
GetPackagesDescriptorResponse::GetPackagesDescriptorResponse(const GetPackagesDescriptorResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      results_(from.results_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:resource.GetPackagesDescriptorResponse)
}

void GetPackagesDescriptorResponse::SharedCtor() {
}

GetPackagesDescriptorResponse::~GetPackagesDescriptorResponse() {
  // @@protoc_insertion_point(destructor:resource.GetPackagesDescriptorResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetPackagesDescriptorResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetPackagesDescriptorResponse::ArenaDtor(void* object) {
  GetPackagesDescriptorResponse* _this = reinterpret_cast< GetPackagesDescriptorResponse* >(object);
  (void)_this;
}
void GetPackagesDescriptorResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetPackagesDescriptorResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetPackagesDescriptorResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.GetPackagesDescriptorResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  results_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetPackagesDescriptorResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .resource.PackageDescriptor results = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_results(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetPackagesDescriptorResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.GetPackagesDescriptorResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .resource.PackageDescriptor results = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_results_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_results(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.GetPackagesDescriptorResponse)
  return target;
}

size_t GetPackagesDescriptorResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.GetPackagesDescriptorResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .resource.PackageDescriptor results = 1;
  total_size += 1UL * this->_internal_results_size();
  for (const auto& msg : this->results_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetPackagesDescriptorResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.GetPackagesDescriptorResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetPackagesDescriptorResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetPackagesDescriptorResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.GetPackagesDescriptorResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.GetPackagesDescriptorResponse)
    MergeFrom(*source);
  }
}

void GetPackagesDescriptorResponse::MergeFrom(const GetPackagesDescriptorResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.GetPackagesDescriptorResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  results_.MergeFrom(from.results_);
}

void GetPackagesDescriptorResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.GetPackagesDescriptorResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetPackagesDescriptorResponse::CopyFrom(const GetPackagesDescriptorResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.GetPackagesDescriptorResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPackagesDescriptorResponse::IsInitialized() const {
  return true;
}

void GetPackagesDescriptorResponse::InternalSwap(GetPackagesDescriptorResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  results_.InternalSwap(&other->results_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetPackagesDescriptorResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[9]);
}

// ===================================================================

class SetPackageDescriptorRequest::_Internal {
 public:
  static const ::resource::PackageDescriptor& packagedescriptor(const SetPackageDescriptorRequest* msg);
};

const ::resource::PackageDescriptor&
SetPackageDescriptorRequest::_Internal::packagedescriptor(const SetPackageDescriptorRequest* msg) {
  return *msg->packagedescriptor_;
}
SetPackageDescriptorRequest::SetPackageDescriptorRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.SetPackageDescriptorRequest)
}
SetPackageDescriptorRequest::SetPackageDescriptorRequest(const SetPackageDescriptorRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_packagedescriptor()) {
    packagedescriptor_ = new ::resource::PackageDescriptor(*from.packagedescriptor_);
  } else {
    packagedescriptor_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:resource.SetPackageDescriptorRequest)
}

void SetPackageDescriptorRequest::SharedCtor() {
packagedescriptor_ = nullptr;
}

SetPackageDescriptorRequest::~SetPackageDescriptorRequest() {
  // @@protoc_insertion_point(destructor:resource.SetPackageDescriptorRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SetPackageDescriptorRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete packagedescriptor_;
}

void SetPackageDescriptorRequest::ArenaDtor(void* object) {
  SetPackageDescriptorRequest* _this = reinterpret_cast< SetPackageDescriptorRequest* >(object);
  (void)_this;
}
void SetPackageDescriptorRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetPackageDescriptorRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SetPackageDescriptorRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.SetPackageDescriptorRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && packagedescriptor_ != nullptr) {
    delete packagedescriptor_;
  }
  packagedescriptor_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetPackageDescriptorRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .resource.PackageDescriptor packageDescriptor = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_packagedescriptor(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetPackageDescriptorRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.SetPackageDescriptorRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .resource.PackageDescriptor packageDescriptor = 1;
  if (this->has_packagedescriptor()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::packagedescriptor(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.SetPackageDescriptorRequest)
  return target;
}

size_t SetPackageDescriptorRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.SetPackageDescriptorRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .resource.PackageDescriptor packageDescriptor = 1;
  if (this->has_packagedescriptor()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *packagedescriptor_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetPackageDescriptorRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.SetPackageDescriptorRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SetPackageDescriptorRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetPackageDescriptorRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.SetPackageDescriptorRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.SetPackageDescriptorRequest)
    MergeFrom(*source);
  }
}

void SetPackageDescriptorRequest::MergeFrom(const SetPackageDescriptorRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.SetPackageDescriptorRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_packagedescriptor()) {
    _internal_mutable_packagedescriptor()->::resource::PackageDescriptor::MergeFrom(from._internal_packagedescriptor());
  }
}

void SetPackageDescriptorRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.SetPackageDescriptorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetPackageDescriptorRequest::CopyFrom(const SetPackageDescriptorRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.SetPackageDescriptorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetPackageDescriptorRequest::IsInitialized() const {
  return true;
}

void SetPackageDescriptorRequest::InternalSwap(SetPackageDescriptorRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(packagedescriptor_, other->packagedescriptor_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetPackageDescriptorRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[10]);
}

// ===================================================================

class SetPackageDescriptorResponse::_Internal {
 public:
};

SetPackageDescriptorResponse::SetPackageDescriptorResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.SetPackageDescriptorResponse)
}
SetPackageDescriptorResponse::SetPackageDescriptorResponse(const SetPackageDescriptorResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.SetPackageDescriptorResponse)
}

void SetPackageDescriptorResponse::SharedCtor() {
result_ = false;
}

SetPackageDescriptorResponse::~SetPackageDescriptorResponse() {
  // @@protoc_insertion_point(destructor:resource.SetPackageDescriptorResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SetPackageDescriptorResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SetPackageDescriptorResponse::ArenaDtor(void* object) {
  SetPackageDescriptorResponse* _this = reinterpret_cast< SetPackageDescriptorResponse* >(object);
  (void)_this;
}
void SetPackageDescriptorResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetPackageDescriptorResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SetPackageDescriptorResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.SetPackageDescriptorResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetPackageDescriptorResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetPackageDescriptorResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.SetPackageDescriptorResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.SetPackageDescriptorResponse)
  return target;
}

size_t SetPackageDescriptorResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.SetPackageDescriptorResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetPackageDescriptorResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.SetPackageDescriptorResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SetPackageDescriptorResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetPackageDescriptorResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.SetPackageDescriptorResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.SetPackageDescriptorResponse)
    MergeFrom(*source);
  }
}

void SetPackageDescriptorResponse::MergeFrom(const SetPackageDescriptorResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.SetPackageDescriptorResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void SetPackageDescriptorResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.SetPackageDescriptorResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetPackageDescriptorResponse::CopyFrom(const SetPackageDescriptorResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.SetPackageDescriptorResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetPackageDescriptorResponse::IsInitialized() const {
  return true;
}

void SetPackageDescriptorResponse::InternalSwap(SetPackageDescriptorResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetPackageDescriptorResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[11]);
}

// ===================================================================

class FindPackagesDescriptorRequest::_Internal {
 public:
};

FindPackagesDescriptorRequest::FindPackagesDescriptorRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  keywords_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.FindPackagesDescriptorRequest)
}
FindPackagesDescriptorRequest::FindPackagesDescriptorRequest(const FindPackagesDescriptorRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      keywords_(from.keywords_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:resource.FindPackagesDescriptorRequest)
}

void FindPackagesDescriptorRequest::SharedCtor() {
}

FindPackagesDescriptorRequest::~FindPackagesDescriptorRequest() {
  // @@protoc_insertion_point(destructor:resource.FindPackagesDescriptorRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FindPackagesDescriptorRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void FindPackagesDescriptorRequest::ArenaDtor(void* object) {
  FindPackagesDescriptorRequest* _this = reinterpret_cast< FindPackagesDescriptorRequest* >(object);
  (void)_this;
}
void FindPackagesDescriptorRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FindPackagesDescriptorRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FindPackagesDescriptorRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.FindPackagesDescriptorRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  keywords_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FindPackagesDescriptorRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated string keywords = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_keywords();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.FindPackagesDescriptorRequest.keywords"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FindPackagesDescriptorRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.FindPackagesDescriptorRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string keywords = 1;
  for (int i = 0, n = this->_internal_keywords_size(); i < n; i++) {
    const auto& s = this->_internal_keywords(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.FindPackagesDescriptorRequest.keywords");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.FindPackagesDescriptorRequest)
  return target;
}

size_t FindPackagesDescriptorRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.FindPackagesDescriptorRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string keywords = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(keywords_.size());
  for (int i = 0, n = keywords_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      keywords_.Get(i));
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FindPackagesDescriptorRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.FindPackagesDescriptorRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const FindPackagesDescriptorRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FindPackagesDescriptorRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.FindPackagesDescriptorRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.FindPackagesDescriptorRequest)
    MergeFrom(*source);
  }
}

void FindPackagesDescriptorRequest::MergeFrom(const FindPackagesDescriptorRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.FindPackagesDescriptorRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  keywords_.MergeFrom(from.keywords_);
}

void FindPackagesDescriptorRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.FindPackagesDescriptorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FindPackagesDescriptorRequest::CopyFrom(const FindPackagesDescriptorRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.FindPackagesDescriptorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FindPackagesDescriptorRequest::IsInitialized() const {
  return true;
}

void FindPackagesDescriptorRequest::InternalSwap(FindPackagesDescriptorRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  keywords_.InternalSwap(&other->keywords_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FindPackagesDescriptorRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[12]);
}

// ===================================================================

class FindPackagesDescriptorResponse::_Internal {
 public:
};

FindPackagesDescriptorResponse::FindPackagesDescriptorResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  results_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.FindPackagesDescriptorResponse)
}
FindPackagesDescriptorResponse::FindPackagesDescriptorResponse(const FindPackagesDescriptorResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      results_(from.results_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:resource.FindPackagesDescriptorResponse)
}

void FindPackagesDescriptorResponse::SharedCtor() {
}

FindPackagesDescriptorResponse::~FindPackagesDescriptorResponse() {
  // @@protoc_insertion_point(destructor:resource.FindPackagesDescriptorResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FindPackagesDescriptorResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void FindPackagesDescriptorResponse::ArenaDtor(void* object) {
  FindPackagesDescriptorResponse* _this = reinterpret_cast< FindPackagesDescriptorResponse* >(object);
  (void)_this;
}
void FindPackagesDescriptorResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FindPackagesDescriptorResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FindPackagesDescriptorResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.FindPackagesDescriptorResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  results_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FindPackagesDescriptorResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .resource.PackageDescriptor results = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_results(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FindPackagesDescriptorResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.FindPackagesDescriptorResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .resource.PackageDescriptor results = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_results_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_results(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.FindPackagesDescriptorResponse)
  return target;
}

size_t FindPackagesDescriptorResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.FindPackagesDescriptorResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .resource.PackageDescriptor results = 1;
  total_size += 1UL * this->_internal_results_size();
  for (const auto& msg : this->results_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FindPackagesDescriptorResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.FindPackagesDescriptorResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const FindPackagesDescriptorResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FindPackagesDescriptorResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.FindPackagesDescriptorResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.FindPackagesDescriptorResponse)
    MergeFrom(*source);
  }
}

void FindPackagesDescriptorResponse::MergeFrom(const FindPackagesDescriptorResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.FindPackagesDescriptorResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  results_.MergeFrom(from.results_);
}

void FindPackagesDescriptorResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.FindPackagesDescriptorResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FindPackagesDescriptorResponse::CopyFrom(const FindPackagesDescriptorResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.FindPackagesDescriptorResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FindPackagesDescriptorResponse::IsInitialized() const {
  return true;
}

void FindPackagesDescriptorResponse::InternalSwap(FindPackagesDescriptorResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  results_.InternalSwap(&other->results_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FindPackagesDescriptorResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[13]);
}

// ===================================================================

class Role::_Internal {
 public:
};

Role::Role(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  actions_(arena),
  members_(arena),
  organizations_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.Role)
}
Role::Role(const Role& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      actions_(from.actions_),
      members_(from.members_),
      organizations_(from.organizations_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArena());
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  domain_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_domain().empty()) {
    domain_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_domain(), 
      GetArena());
  }
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_description().empty()) {
    description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_description(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.Role)
}

void Role::SharedCtor() {
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
domain_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Role::~Role() {
  // @@protoc_insertion_point(destructor:resource.Role)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Role::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  domain_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Role::ArenaDtor(void* object) {
  Role* _this = reinterpret_cast< Role* >(object);
  (void)_this;
}
void Role::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Role::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Role::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.Role)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  actions_.Clear();
  members_.Clear();
  organizations_.Clear();
  id_.ClearToEmpty();
  name_.ClearToEmpty();
  domain_.ClearToEmpty();
  description_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Role::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Role.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Role.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string domain = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_domain();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Role.domain"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string description = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_description();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Role.description"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string actions = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_actions();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Role.actions"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated string members = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_members();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Role.members"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated string organizations = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_organizations();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Role.organizations"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<58>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Role::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.Role)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Role.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Role.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // string domain = 3;
  if (this->domain().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_domain().data(), static_cast<int>(this->_internal_domain().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Role.domain");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_domain(), target);
  }

  // string description = 4;
  if (this->description().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Role.description");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_description(), target);
  }

  // repeated string actions = 5;
  for (int i = 0, n = this->_internal_actions_size(); i < n; i++) {
    const auto& s = this->_internal_actions(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Role.actions");
    target = stream->WriteString(5, s, target);
  }

  // repeated string members = 6;
  for (int i = 0, n = this->_internal_members_size(); i < n; i++) {
    const auto& s = this->_internal_members(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Role.members");
    target = stream->WriteString(6, s, target);
  }

  // repeated string organizations = 7;
  for (int i = 0, n = this->_internal_organizations_size(); i < n; i++) {
    const auto& s = this->_internal_organizations(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Role.organizations");
    target = stream->WriteString(7, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.Role)
  return target;
}

size_t Role::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.Role)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string actions = 5;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(actions_.size());
  for (int i = 0, n = actions_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      actions_.Get(i));
  }

  // repeated string members = 6;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(members_.size());
  for (int i = 0, n = members_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      members_.Get(i));
  }

  // repeated string organizations = 7;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(organizations_.size());
  for (int i = 0, n = organizations_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      organizations_.Get(i));
  }

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string domain = 3;
  if (this->domain().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_domain());
  }

  // string description = 4;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Role::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.Role)
  GOOGLE_DCHECK_NE(&from, this);
  const Role* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Role>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.Role)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.Role)
    MergeFrom(*source);
  }
}

void Role::MergeFrom(const Role& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.Role)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  actions_.MergeFrom(from.actions_);
  members_.MergeFrom(from.members_);
  organizations_.MergeFrom(from.organizations_);
  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.domain().size() > 0) {
    _internal_set_domain(from._internal_domain());
  }
  if (from.description().size() > 0) {
    _internal_set_description(from._internal_description());
  }
}

void Role::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.Role)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Role::CopyFrom(const Role& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.Role)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Role::IsInitialized() const {
  return true;
}

void Role::InternalSwap(Role* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  actions_.InternalSwap(&other->actions_);
  members_.InternalSwap(&other->members_);
  organizations_.InternalSwap(&other->organizations_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  domain_.Swap(&other->domain_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  description_.Swap(&other->description_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata Role::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[14]);
}

// ===================================================================

class AddRoleActionsRqst::_Internal {
 public:
};

AddRoleActionsRqst::AddRoleActionsRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  actions_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.AddRoleActionsRqst)
}
AddRoleActionsRqst::AddRoleActionsRqst(const AddRoleActionsRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      actions_(from.actions_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  roleid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_roleid().empty()) {
    roleid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_roleid(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.AddRoleActionsRqst)
}

void AddRoleActionsRqst::SharedCtor() {
roleid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

AddRoleActionsRqst::~AddRoleActionsRqst() {
  // @@protoc_insertion_point(destructor:resource.AddRoleActionsRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddRoleActionsRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  roleid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AddRoleActionsRqst::ArenaDtor(void* object) {
  AddRoleActionsRqst* _this = reinterpret_cast< AddRoleActionsRqst* >(object);
  (void)_this;
}
void AddRoleActionsRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddRoleActionsRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AddRoleActionsRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.AddRoleActionsRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  actions_.Clear();
  roleid_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddRoleActionsRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string roleId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_roleid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.AddRoleActionsRqst.roleId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string actions = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_actions();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.AddRoleActionsRqst.actions"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddRoleActionsRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.AddRoleActionsRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string roleId = 1;
  if (this->roleid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_roleid().data(), static_cast<int>(this->_internal_roleid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.AddRoleActionsRqst.roleId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_roleid(), target);
  }

  // repeated string actions = 2;
  for (int i = 0, n = this->_internal_actions_size(); i < n; i++) {
    const auto& s = this->_internal_actions(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.AddRoleActionsRqst.actions");
    target = stream->WriteString(2, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.AddRoleActionsRqst)
  return target;
}

size_t AddRoleActionsRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.AddRoleActionsRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string actions = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(actions_.size());
  for (int i = 0, n = actions_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      actions_.Get(i));
  }

  // string roleId = 1;
  if (this->roleid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_roleid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddRoleActionsRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.AddRoleActionsRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const AddRoleActionsRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddRoleActionsRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.AddRoleActionsRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.AddRoleActionsRqst)
    MergeFrom(*source);
  }
}

void AddRoleActionsRqst::MergeFrom(const AddRoleActionsRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.AddRoleActionsRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  actions_.MergeFrom(from.actions_);
  if (from.roleid().size() > 0) {
    _internal_set_roleid(from._internal_roleid());
  }
}

void AddRoleActionsRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.AddRoleActionsRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddRoleActionsRqst::CopyFrom(const AddRoleActionsRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.AddRoleActionsRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddRoleActionsRqst::IsInitialized() const {
  return true;
}

void AddRoleActionsRqst::InternalSwap(AddRoleActionsRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  actions_.InternalSwap(&other->actions_);
  roleid_.Swap(&other->roleid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata AddRoleActionsRqst::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[15]);
}

// ===================================================================

class AddRoleActionsRsp::_Internal {
 public:
};

AddRoleActionsRsp::AddRoleActionsRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.AddRoleActionsRsp)
}
AddRoleActionsRsp::AddRoleActionsRsp(const AddRoleActionsRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.AddRoleActionsRsp)
}

void AddRoleActionsRsp::SharedCtor() {
result_ = false;
}

AddRoleActionsRsp::~AddRoleActionsRsp() {
  // @@protoc_insertion_point(destructor:resource.AddRoleActionsRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddRoleActionsRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void AddRoleActionsRsp::ArenaDtor(void* object) {
  AddRoleActionsRsp* _this = reinterpret_cast< AddRoleActionsRsp* >(object);
  (void)_this;
}
void AddRoleActionsRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddRoleActionsRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AddRoleActionsRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.AddRoleActionsRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddRoleActionsRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddRoleActionsRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.AddRoleActionsRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.AddRoleActionsRsp)
  return target;
}

size_t AddRoleActionsRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.AddRoleActionsRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddRoleActionsRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.AddRoleActionsRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const AddRoleActionsRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddRoleActionsRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.AddRoleActionsRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.AddRoleActionsRsp)
    MergeFrom(*source);
  }
}

void AddRoleActionsRsp::MergeFrom(const AddRoleActionsRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.AddRoleActionsRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void AddRoleActionsRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.AddRoleActionsRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddRoleActionsRsp::CopyFrom(const AddRoleActionsRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.AddRoleActionsRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddRoleActionsRsp::IsInitialized() const {
  return true;
}

void AddRoleActionsRsp::InternalSwap(AddRoleActionsRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AddRoleActionsRsp::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[16]);
}

// ===================================================================

class RemoveRoleActionRqst::_Internal {
 public:
};

RemoveRoleActionRqst::RemoveRoleActionRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.RemoveRoleActionRqst)
}
RemoveRoleActionRqst::RemoveRoleActionRqst(const RemoveRoleActionRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  roleid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_roleid().empty()) {
    roleid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_roleid(), 
      GetArena());
  }
  action_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_action().empty()) {
    action_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_action(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.RemoveRoleActionRqst)
}

void RemoveRoleActionRqst::SharedCtor() {
roleid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
action_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

RemoveRoleActionRqst::~RemoveRoleActionRqst() {
  // @@protoc_insertion_point(destructor:resource.RemoveRoleActionRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemoveRoleActionRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  roleid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  action_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RemoveRoleActionRqst::ArenaDtor(void* object) {
  RemoveRoleActionRqst* _this = reinterpret_cast< RemoveRoleActionRqst* >(object);
  (void)_this;
}
void RemoveRoleActionRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemoveRoleActionRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RemoveRoleActionRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.RemoveRoleActionRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  roleid_.ClearToEmpty();
  action_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveRoleActionRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string roleId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_roleid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.RemoveRoleActionRqst.roleId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string action = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_action();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.RemoveRoleActionRqst.action"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemoveRoleActionRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.RemoveRoleActionRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string roleId = 1;
  if (this->roleid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_roleid().data(), static_cast<int>(this->_internal_roleid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.RemoveRoleActionRqst.roleId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_roleid(), target);
  }

  // string action = 2;
  if (this->action().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_action().data(), static_cast<int>(this->_internal_action().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.RemoveRoleActionRqst.action");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_action(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.RemoveRoleActionRqst)
  return target;
}

size_t RemoveRoleActionRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.RemoveRoleActionRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string roleId = 1;
  if (this->roleid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_roleid());
  }

  // string action = 2;
  if (this->action().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_action());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveRoleActionRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.RemoveRoleActionRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveRoleActionRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemoveRoleActionRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.RemoveRoleActionRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.RemoveRoleActionRqst)
    MergeFrom(*source);
  }
}

void RemoveRoleActionRqst::MergeFrom(const RemoveRoleActionRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.RemoveRoleActionRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.roleid().size() > 0) {
    _internal_set_roleid(from._internal_roleid());
  }
  if (from.action().size() > 0) {
    _internal_set_action(from._internal_action());
  }
}

void RemoveRoleActionRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.RemoveRoleActionRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveRoleActionRqst::CopyFrom(const RemoveRoleActionRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.RemoveRoleActionRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveRoleActionRqst::IsInitialized() const {
  return true;
}

void RemoveRoleActionRqst::InternalSwap(RemoveRoleActionRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  roleid_.Swap(&other->roleid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  action_.Swap(&other->action_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveRoleActionRqst::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[17]);
}

// ===================================================================

class RemoveRoleActionRsp::_Internal {
 public:
};

RemoveRoleActionRsp::RemoveRoleActionRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.RemoveRoleActionRsp)
}
RemoveRoleActionRsp::RemoveRoleActionRsp(const RemoveRoleActionRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.RemoveRoleActionRsp)
}

void RemoveRoleActionRsp::SharedCtor() {
result_ = false;
}

RemoveRoleActionRsp::~RemoveRoleActionRsp() {
  // @@protoc_insertion_point(destructor:resource.RemoveRoleActionRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemoveRoleActionRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RemoveRoleActionRsp::ArenaDtor(void* object) {
  RemoveRoleActionRsp* _this = reinterpret_cast< RemoveRoleActionRsp* >(object);
  (void)_this;
}
void RemoveRoleActionRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemoveRoleActionRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RemoveRoleActionRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.RemoveRoleActionRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveRoleActionRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemoveRoleActionRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.RemoveRoleActionRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.RemoveRoleActionRsp)
  return target;
}

size_t RemoveRoleActionRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.RemoveRoleActionRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveRoleActionRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.RemoveRoleActionRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveRoleActionRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemoveRoleActionRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.RemoveRoleActionRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.RemoveRoleActionRsp)
    MergeFrom(*source);
  }
}

void RemoveRoleActionRsp::MergeFrom(const RemoveRoleActionRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.RemoveRoleActionRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void RemoveRoleActionRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.RemoveRoleActionRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveRoleActionRsp::CopyFrom(const RemoveRoleActionRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.RemoveRoleActionRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveRoleActionRsp::IsInitialized() const {
  return true;
}

void RemoveRoleActionRsp::InternalSwap(RemoveRoleActionRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveRoleActionRsp::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[18]);
}

// ===================================================================

class RemoveRolesActionRqst::_Internal {
 public:
};

RemoveRolesActionRqst::RemoveRolesActionRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.RemoveRolesActionRqst)
}
RemoveRolesActionRqst::RemoveRolesActionRqst(const RemoveRolesActionRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  action_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_action().empty()) {
    action_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_action(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.RemoveRolesActionRqst)
}

void RemoveRolesActionRqst::SharedCtor() {
action_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

RemoveRolesActionRqst::~RemoveRolesActionRqst() {
  // @@protoc_insertion_point(destructor:resource.RemoveRolesActionRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemoveRolesActionRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  action_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RemoveRolesActionRqst::ArenaDtor(void* object) {
  RemoveRolesActionRqst* _this = reinterpret_cast< RemoveRolesActionRqst* >(object);
  (void)_this;
}
void RemoveRolesActionRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemoveRolesActionRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RemoveRolesActionRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.RemoveRolesActionRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  action_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveRolesActionRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string action = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_action();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.RemoveRolesActionRqst.action"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemoveRolesActionRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.RemoveRolesActionRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string action = 2;
  if (this->action().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_action().data(), static_cast<int>(this->_internal_action().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.RemoveRolesActionRqst.action");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_action(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.RemoveRolesActionRqst)
  return target;
}

size_t RemoveRolesActionRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.RemoveRolesActionRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string action = 2;
  if (this->action().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_action());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveRolesActionRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.RemoveRolesActionRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveRolesActionRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemoveRolesActionRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.RemoveRolesActionRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.RemoveRolesActionRqst)
    MergeFrom(*source);
  }
}

void RemoveRolesActionRqst::MergeFrom(const RemoveRolesActionRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.RemoveRolesActionRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.action().size() > 0) {
    _internal_set_action(from._internal_action());
  }
}

void RemoveRolesActionRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.RemoveRolesActionRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveRolesActionRqst::CopyFrom(const RemoveRolesActionRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.RemoveRolesActionRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveRolesActionRqst::IsInitialized() const {
  return true;
}

void RemoveRolesActionRqst::InternalSwap(RemoveRolesActionRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  action_.Swap(&other->action_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveRolesActionRqst::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[19]);
}

// ===================================================================

class RemoveRolesActionRsp::_Internal {
 public:
};

RemoveRolesActionRsp::RemoveRolesActionRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.RemoveRolesActionRsp)
}
RemoveRolesActionRsp::RemoveRolesActionRsp(const RemoveRolesActionRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.RemoveRolesActionRsp)
}

void RemoveRolesActionRsp::SharedCtor() {
result_ = false;
}

RemoveRolesActionRsp::~RemoveRolesActionRsp() {
  // @@protoc_insertion_point(destructor:resource.RemoveRolesActionRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemoveRolesActionRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RemoveRolesActionRsp::ArenaDtor(void* object) {
  RemoveRolesActionRsp* _this = reinterpret_cast< RemoveRolesActionRsp* >(object);
  (void)_this;
}
void RemoveRolesActionRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemoveRolesActionRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RemoveRolesActionRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.RemoveRolesActionRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveRolesActionRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemoveRolesActionRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.RemoveRolesActionRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.RemoveRolesActionRsp)
  return target;
}

size_t RemoveRolesActionRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.RemoveRolesActionRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveRolesActionRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.RemoveRolesActionRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveRolesActionRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemoveRolesActionRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.RemoveRolesActionRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.RemoveRolesActionRsp)
    MergeFrom(*source);
  }
}

void RemoveRolesActionRsp::MergeFrom(const RemoveRolesActionRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.RemoveRolesActionRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void RemoveRolesActionRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.RemoveRolesActionRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveRolesActionRsp::CopyFrom(const RemoveRolesActionRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.RemoveRolesActionRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveRolesActionRsp::IsInitialized() const {
  return true;
}

void RemoveRolesActionRsp::InternalSwap(RemoveRolesActionRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveRolesActionRsp::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[20]);
}

// ===================================================================

class Account::_Internal {
 public:
};

Account::Account(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  organizations_(arena),
  groups_(arena),
  roles_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.Account)
}
Account::Account(const Account& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      organizations_(from.organizations_),
      groups_(from.groups_),
      roles_(from.roles_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArena());
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  email_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_email().empty()) {
    email_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_email(), 
      GetArena());
  }
  password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_password().empty()) {
    password_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_password(), 
      GetArena());
  }
  domain_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_domain().empty()) {
    domain_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_domain(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.Account)
}

void Account::SharedCtor() {
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
email_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
domain_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Account::~Account() {
  // @@protoc_insertion_point(destructor:resource.Account)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Account::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  email_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  domain_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Account::ArenaDtor(void* object) {
  Account* _this = reinterpret_cast< Account* >(object);
  (void)_this;
}
void Account::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Account::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Account::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.Account)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  organizations_.Clear();
  groups_.Clear();
  roles_.Clear();
  id_.ClearToEmpty();
  name_.ClearToEmpty();
  email_.ClearToEmpty();
  password_.ClearToEmpty();
  domain_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Account::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Account.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Account.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string email = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_email();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Account.email"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string password = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_password();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Account.password"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string domain = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_domain();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Account.domain"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string organizations = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_organizations();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Account.organizations"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated string groups = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_groups();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Account.groups"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<58>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated string roles = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_roles();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Account.roles"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<66>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Account::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.Account)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Account.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Account.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // string email = 3;
  if (this->email().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_email().data(), static_cast<int>(this->_internal_email().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Account.email");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_email(), target);
  }

  // string password = 4;
  if (this->password().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_password().data(), static_cast<int>(this->_internal_password().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Account.password");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_password(), target);
  }

  // string domain = 5;
  if (this->domain().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_domain().data(), static_cast<int>(this->_internal_domain().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Account.domain");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_domain(), target);
  }

  // repeated string organizations = 6;
  for (int i = 0, n = this->_internal_organizations_size(); i < n; i++) {
    const auto& s = this->_internal_organizations(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Account.organizations");
    target = stream->WriteString(6, s, target);
  }

  // repeated string groups = 7;
  for (int i = 0, n = this->_internal_groups_size(); i < n; i++) {
    const auto& s = this->_internal_groups(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Account.groups");
    target = stream->WriteString(7, s, target);
  }

  // repeated string roles = 8;
  for (int i = 0, n = this->_internal_roles_size(); i < n; i++) {
    const auto& s = this->_internal_roles(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Account.roles");
    target = stream->WriteString(8, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.Account)
  return target;
}

size_t Account::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.Account)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string organizations = 6;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(organizations_.size());
  for (int i = 0, n = organizations_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      organizations_.Get(i));
  }

  // repeated string groups = 7;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(groups_.size());
  for (int i = 0, n = groups_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      groups_.Get(i));
  }

  // repeated string roles = 8;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(roles_.size());
  for (int i = 0, n = roles_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      roles_.Get(i));
  }

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string email = 3;
  if (this->email().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_email());
  }

  // string password = 4;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_password());
  }

  // string domain = 5;
  if (this->domain().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_domain());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Account::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.Account)
  GOOGLE_DCHECK_NE(&from, this);
  const Account* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Account>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.Account)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.Account)
    MergeFrom(*source);
  }
}

void Account::MergeFrom(const Account& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.Account)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  organizations_.MergeFrom(from.organizations_);
  groups_.MergeFrom(from.groups_);
  roles_.MergeFrom(from.roles_);
  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.email().size() > 0) {
    _internal_set_email(from._internal_email());
  }
  if (from.password().size() > 0) {
    _internal_set_password(from._internal_password());
  }
  if (from.domain().size() > 0) {
    _internal_set_domain(from._internal_domain());
  }
}

void Account::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.Account)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Account::CopyFrom(const Account& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.Account)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Account::IsInitialized() const {
  return true;
}

void Account::InternalSwap(Account* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  organizations_.InternalSwap(&other->organizations_);
  groups_.InternalSwap(&other->groups_);
  roles_.InternalSwap(&other->roles_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  email_.Swap(&other->email_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  password_.Swap(&other->password_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  domain_.Swap(&other->domain_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata Account::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[21]);
}

// ===================================================================

class RegisterAccountRqst::_Internal {
 public:
  static const ::resource::Account& account(const RegisterAccountRqst* msg);
};

const ::resource::Account&
RegisterAccountRqst::_Internal::account(const RegisterAccountRqst* msg) {
  return *msg->account_;
}
RegisterAccountRqst::RegisterAccountRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.RegisterAccountRqst)
}
RegisterAccountRqst::RegisterAccountRqst(const RegisterAccountRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  confirm_password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_confirm_password().empty()) {
    confirm_password_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_confirm_password(), 
      GetArena());
  }
  if (from._internal_has_account()) {
    account_ = new ::resource::Account(*from.account_);
  } else {
    account_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:resource.RegisterAccountRqst)
}

void RegisterAccountRqst::SharedCtor() {
confirm_password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
account_ = nullptr;
}

RegisterAccountRqst::~RegisterAccountRqst() {
  // @@protoc_insertion_point(destructor:resource.RegisterAccountRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RegisterAccountRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  confirm_password_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete account_;
}

void RegisterAccountRqst::ArenaDtor(void* object) {
  RegisterAccountRqst* _this = reinterpret_cast< RegisterAccountRqst* >(object);
  (void)_this;
}
void RegisterAccountRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RegisterAccountRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RegisterAccountRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.RegisterAccountRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  confirm_password_.ClearToEmpty();
  if (GetArena() == nullptr && account_ != nullptr) {
    delete account_;
  }
  account_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RegisterAccountRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .resource.Account account = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_account(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string confirm_password = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_confirm_password();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.RegisterAccountRqst.confirm_password"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RegisterAccountRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.RegisterAccountRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .resource.Account account = 1;
  if (this->has_account()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::account(this), target, stream);
  }

  // string confirm_password = 3;
  if (this->confirm_password().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_confirm_password().data(), static_cast<int>(this->_internal_confirm_password().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.RegisterAccountRqst.confirm_password");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_confirm_password(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.RegisterAccountRqst)
  return target;
}

size_t RegisterAccountRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.RegisterAccountRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string confirm_password = 3;
  if (this->confirm_password().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_confirm_password());
  }

  // .resource.Account account = 1;
  if (this->has_account()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *account_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RegisterAccountRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.RegisterAccountRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const RegisterAccountRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RegisterAccountRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.RegisterAccountRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.RegisterAccountRqst)
    MergeFrom(*source);
  }
}

void RegisterAccountRqst::MergeFrom(const RegisterAccountRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.RegisterAccountRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.confirm_password().size() > 0) {
    _internal_set_confirm_password(from._internal_confirm_password());
  }
  if (from.has_account()) {
    _internal_mutable_account()->::resource::Account::MergeFrom(from._internal_account());
  }
}

void RegisterAccountRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.RegisterAccountRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegisterAccountRqst::CopyFrom(const RegisterAccountRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.RegisterAccountRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegisterAccountRqst::IsInitialized() const {
  return true;
}

void RegisterAccountRqst::InternalSwap(RegisterAccountRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  confirm_password_.Swap(&other->confirm_password_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(account_, other->account_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RegisterAccountRqst::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[22]);
}

// ===================================================================

class RegisterAccountRsp::_Internal {
 public:
};

RegisterAccountRsp::RegisterAccountRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.RegisterAccountRsp)
}
RegisterAccountRsp::RegisterAccountRsp(const RegisterAccountRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_result().empty()) {
    result_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_result(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.RegisterAccountRsp)
}

void RegisterAccountRsp::SharedCtor() {
result_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

RegisterAccountRsp::~RegisterAccountRsp() {
  // @@protoc_insertion_point(destructor:resource.RegisterAccountRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RegisterAccountRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  result_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RegisterAccountRsp::ArenaDtor(void* object) {
  RegisterAccountRsp* _this = reinterpret_cast< RegisterAccountRsp* >(object);
  (void)_this;
}
void RegisterAccountRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RegisterAccountRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RegisterAccountRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.RegisterAccountRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RegisterAccountRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_result();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.RegisterAccountRsp.result"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RegisterAccountRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.RegisterAccountRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string result = 1;
  if (this->result().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_result().data(), static_cast<int>(this->_internal_result().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.RegisterAccountRsp.result");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.RegisterAccountRsp)
  return target;
}

size_t RegisterAccountRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.RegisterAccountRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result = 1;
  if (this->result().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RegisterAccountRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.RegisterAccountRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const RegisterAccountRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RegisterAccountRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.RegisterAccountRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.RegisterAccountRsp)
    MergeFrom(*source);
  }
}

void RegisterAccountRsp::MergeFrom(const RegisterAccountRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.RegisterAccountRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result().size() > 0) {
    _internal_set_result(from._internal_result());
  }
}

void RegisterAccountRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.RegisterAccountRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegisterAccountRsp::CopyFrom(const RegisterAccountRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.RegisterAccountRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegisterAccountRsp::IsInitialized() const {
  return true;
}

void RegisterAccountRsp::InternalSwap(RegisterAccountRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  result_.Swap(&other->result_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata RegisterAccountRsp::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[23]);
}

// ===================================================================

class AccountExistRqst::_Internal {
 public:
};

AccountExistRqst::AccountExistRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.AccountExistRqst)
}
AccountExistRqst::AccountExistRqst(const AccountExistRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.AccountExistRqst)
}

void AccountExistRqst::SharedCtor() {
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

AccountExistRqst::~AccountExistRqst() {
  // @@protoc_insertion_point(destructor:resource.AccountExistRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AccountExistRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AccountExistRqst::ArenaDtor(void* object) {
  AccountExistRqst* _this = reinterpret_cast< AccountExistRqst* >(object);
  (void)_this;
}
void AccountExistRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AccountExistRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AccountExistRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.AccountExistRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AccountExistRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.AccountExistRqst.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AccountExistRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.AccountExistRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.AccountExistRqst.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.AccountExistRqst)
  return target;
}

size_t AccountExistRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.AccountExistRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AccountExistRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.AccountExistRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const AccountExistRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AccountExistRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.AccountExistRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.AccountExistRqst)
    MergeFrom(*source);
  }
}

void AccountExistRqst::MergeFrom(const AccountExistRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.AccountExistRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
}

void AccountExistRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.AccountExistRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AccountExistRqst::CopyFrom(const AccountExistRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.AccountExistRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AccountExistRqst::IsInitialized() const {
  return true;
}

void AccountExistRqst::InternalSwap(AccountExistRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata AccountExistRqst::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[24]);
}

// ===================================================================

class AccountExistRsp::_Internal {
 public:
};

AccountExistRsp::AccountExistRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.AccountExistRsp)
}
AccountExistRsp::AccountExistRsp(const AccountExistRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.AccountExistRsp)
}

void AccountExistRsp::SharedCtor() {
result_ = false;
}

AccountExistRsp::~AccountExistRsp() {
  // @@protoc_insertion_point(destructor:resource.AccountExistRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AccountExistRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void AccountExistRsp::ArenaDtor(void* object) {
  AccountExistRsp* _this = reinterpret_cast< AccountExistRsp* >(object);
  (void)_this;
}
void AccountExistRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AccountExistRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AccountExistRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.AccountExistRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AccountExistRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AccountExistRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.AccountExistRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.AccountExistRsp)
  return target;
}

size_t AccountExistRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.AccountExistRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AccountExistRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.AccountExistRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const AccountExistRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AccountExistRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.AccountExistRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.AccountExistRsp)
    MergeFrom(*source);
  }
}

void AccountExistRsp::MergeFrom(const AccountExistRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.AccountExistRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void AccountExistRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.AccountExistRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AccountExistRsp::CopyFrom(const AccountExistRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.AccountExistRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AccountExistRsp::IsInitialized() const {
  return true;
}

void AccountExistRsp::InternalSwap(AccountExistRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AccountExistRsp::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[25]);
}

// ===================================================================

class GetAccountsRqst::_Internal {
 public:
};

GetAccountsRqst::GetAccountsRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.GetAccountsRqst)
}
GetAccountsRqst::GetAccountsRqst(const GetAccountsRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  query_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_query().empty()) {
    query_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_query(), 
      GetArena());
  }
  options_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_options().empty()) {
    options_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_options(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.GetAccountsRqst)
}

void GetAccountsRqst::SharedCtor() {
query_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
options_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetAccountsRqst::~GetAccountsRqst() {
  // @@protoc_insertion_point(destructor:resource.GetAccountsRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetAccountsRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  query_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  options_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetAccountsRqst::ArenaDtor(void* object) {
  GetAccountsRqst* _this = reinterpret_cast< GetAccountsRqst* >(object);
  (void)_this;
}
void GetAccountsRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetAccountsRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetAccountsRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.GetAccountsRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_.ClearToEmpty();
  options_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetAccountsRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string query = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_query();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.GetAccountsRqst.query"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string options = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_options();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.GetAccountsRqst.options"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetAccountsRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.GetAccountsRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_query().data(), static_cast<int>(this->_internal_query().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.GetAccountsRqst.query");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_query(), target);
  }

  // string options = 2;
  if (this->options().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_options().data(), static_cast<int>(this->_internal_options().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.GetAccountsRqst.options");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_options(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.GetAccountsRqst)
  return target;
}

size_t GetAccountsRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.GetAccountsRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_query());
  }

  // string options = 2;
  if (this->options().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_options());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetAccountsRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.GetAccountsRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const GetAccountsRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetAccountsRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.GetAccountsRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.GetAccountsRqst)
    MergeFrom(*source);
  }
}

void GetAccountsRqst::MergeFrom(const GetAccountsRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.GetAccountsRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query().size() > 0) {
    _internal_set_query(from._internal_query());
  }
  if (from.options().size() > 0) {
    _internal_set_options(from._internal_options());
  }
}

void GetAccountsRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.GetAccountsRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAccountsRqst::CopyFrom(const GetAccountsRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.GetAccountsRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAccountsRqst::IsInitialized() const {
  return true;
}

void GetAccountsRqst::InternalSwap(GetAccountsRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  query_.Swap(&other->query_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  options_.Swap(&other->options_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetAccountsRqst::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[26]);
}

// ===================================================================

class GetAccountsRsp::_Internal {
 public:
};

GetAccountsRsp::GetAccountsRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  accounts_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.GetAccountsRsp)
}
GetAccountsRsp::GetAccountsRsp(const GetAccountsRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      accounts_(from.accounts_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:resource.GetAccountsRsp)
}

void GetAccountsRsp::SharedCtor() {
}

GetAccountsRsp::~GetAccountsRsp() {
  // @@protoc_insertion_point(destructor:resource.GetAccountsRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetAccountsRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetAccountsRsp::ArenaDtor(void* object) {
  GetAccountsRsp* _this = reinterpret_cast< GetAccountsRsp* >(object);
  (void)_this;
}
void GetAccountsRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetAccountsRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetAccountsRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.GetAccountsRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  accounts_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetAccountsRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .resource.Account accounts = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_accounts(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetAccountsRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.GetAccountsRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .resource.Account accounts = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_accounts_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_accounts(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.GetAccountsRsp)
  return target;
}

size_t GetAccountsRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.GetAccountsRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .resource.Account accounts = 1;
  total_size += 1UL * this->_internal_accounts_size();
  for (const auto& msg : this->accounts_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetAccountsRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.GetAccountsRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetAccountsRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetAccountsRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.GetAccountsRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.GetAccountsRsp)
    MergeFrom(*source);
  }
}

void GetAccountsRsp::MergeFrom(const GetAccountsRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.GetAccountsRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  accounts_.MergeFrom(from.accounts_);
}

void GetAccountsRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.GetAccountsRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAccountsRsp::CopyFrom(const GetAccountsRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.GetAccountsRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAccountsRsp::IsInitialized() const {
  return true;
}

void GetAccountsRsp::InternalSwap(GetAccountsRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  accounts_.InternalSwap(&other->accounts_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetAccountsRsp::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[27]);
}

// ===================================================================

class GetAccountRqst::_Internal {
 public:
};

GetAccountRqst::GetAccountRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.GetAccountRqst)
}
GetAccountRqst::GetAccountRqst(const GetAccountRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  accountid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_accountid().empty()) {
    accountid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_accountid(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.GetAccountRqst)
}

void GetAccountRqst::SharedCtor() {
accountid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetAccountRqst::~GetAccountRqst() {
  // @@protoc_insertion_point(destructor:resource.GetAccountRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetAccountRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  accountid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetAccountRqst::ArenaDtor(void* object) {
  GetAccountRqst* _this = reinterpret_cast< GetAccountRqst* >(object);
  (void)_this;
}
void GetAccountRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetAccountRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetAccountRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.GetAccountRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  accountid_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetAccountRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string accountId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_accountid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.GetAccountRqst.accountId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetAccountRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.GetAccountRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string accountId = 1;
  if (this->accountid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_accountid().data(), static_cast<int>(this->_internal_accountid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.GetAccountRqst.accountId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_accountid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.GetAccountRqst)
  return target;
}

size_t GetAccountRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.GetAccountRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string accountId = 1;
  if (this->accountid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_accountid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetAccountRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.GetAccountRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const GetAccountRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetAccountRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.GetAccountRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.GetAccountRqst)
    MergeFrom(*source);
  }
}

void GetAccountRqst::MergeFrom(const GetAccountRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.GetAccountRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.accountid().size() > 0) {
    _internal_set_accountid(from._internal_accountid());
  }
}

void GetAccountRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.GetAccountRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAccountRqst::CopyFrom(const GetAccountRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.GetAccountRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAccountRqst::IsInitialized() const {
  return true;
}

void GetAccountRqst::InternalSwap(GetAccountRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  accountid_.Swap(&other->accountid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetAccountRqst::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[28]);
}

// ===================================================================

class GetAccountRsp::_Internal {
 public:
  static const ::resource::Account& account(const GetAccountRsp* msg);
};

const ::resource::Account&
GetAccountRsp::_Internal::account(const GetAccountRsp* msg) {
  return *msg->account_;
}
GetAccountRsp::GetAccountRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.GetAccountRsp)
}
GetAccountRsp::GetAccountRsp(const GetAccountRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_account()) {
    account_ = new ::resource::Account(*from.account_);
  } else {
    account_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:resource.GetAccountRsp)
}

void GetAccountRsp::SharedCtor() {
account_ = nullptr;
}

GetAccountRsp::~GetAccountRsp() {
  // @@protoc_insertion_point(destructor:resource.GetAccountRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetAccountRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete account_;
}

void GetAccountRsp::ArenaDtor(void* object) {
  GetAccountRsp* _this = reinterpret_cast< GetAccountRsp* >(object);
  (void)_this;
}
void GetAccountRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetAccountRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetAccountRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.GetAccountRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && account_ != nullptr) {
    delete account_;
  }
  account_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetAccountRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .resource.Account account = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_account(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetAccountRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.GetAccountRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .resource.Account account = 1;
  if (this->has_account()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::account(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.GetAccountRsp)
  return target;
}

size_t GetAccountRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.GetAccountRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .resource.Account account = 1;
  if (this->has_account()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *account_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetAccountRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.GetAccountRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetAccountRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetAccountRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.GetAccountRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.GetAccountRsp)
    MergeFrom(*source);
  }
}

void GetAccountRsp::MergeFrom(const GetAccountRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.GetAccountRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_account()) {
    _internal_mutable_account()->::resource::Account::MergeFrom(from._internal_account());
  }
}

void GetAccountRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.GetAccountRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAccountRsp::CopyFrom(const GetAccountRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.GetAccountRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAccountRsp::IsInitialized() const {
  return true;
}

void GetAccountRsp::InternalSwap(GetAccountRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(account_, other->account_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetAccountRsp::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[29]);
}

// ===================================================================

class SetAccountPasswordRqst::_Internal {
 public:
};

SetAccountPasswordRqst::SetAccountPasswordRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.SetAccountPasswordRqst)
}
SetAccountPasswordRqst::SetAccountPasswordRqst(const SetAccountPasswordRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  accountid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_accountid().empty()) {
    accountid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_accountid(), 
      GetArena());
  }
  old_password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_old_password().empty()) {
    old_password_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_old_password(), 
      GetArena());
  }
  new_password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_new_password().empty()) {
    new_password_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_new_password(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.SetAccountPasswordRqst)
}

void SetAccountPasswordRqst::SharedCtor() {
accountid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
old_password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
new_password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

SetAccountPasswordRqst::~SetAccountPasswordRqst() {
  // @@protoc_insertion_point(destructor:resource.SetAccountPasswordRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SetAccountPasswordRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  accountid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  old_password_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  new_password_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SetAccountPasswordRqst::ArenaDtor(void* object) {
  SetAccountPasswordRqst* _this = reinterpret_cast< SetAccountPasswordRqst* >(object);
  (void)_this;
}
void SetAccountPasswordRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetAccountPasswordRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SetAccountPasswordRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.SetAccountPasswordRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  accountid_.ClearToEmpty();
  old_password_.ClearToEmpty();
  new_password_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetAccountPasswordRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string accountId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_accountid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.SetAccountPasswordRqst.accountId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string old_password = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_old_password();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.SetAccountPasswordRqst.old_password"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string new_password = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_new_password();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.SetAccountPasswordRqst.new_password"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetAccountPasswordRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.SetAccountPasswordRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string accountId = 1;
  if (this->accountid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_accountid().data(), static_cast<int>(this->_internal_accountid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.SetAccountPasswordRqst.accountId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_accountid(), target);
  }

  // string old_password = 2;
  if (this->old_password().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_old_password().data(), static_cast<int>(this->_internal_old_password().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.SetAccountPasswordRqst.old_password");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_old_password(), target);
  }

  // string new_password = 3;
  if (this->new_password().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_new_password().data(), static_cast<int>(this->_internal_new_password().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.SetAccountPasswordRqst.new_password");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_new_password(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.SetAccountPasswordRqst)
  return target;
}

size_t SetAccountPasswordRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.SetAccountPasswordRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string accountId = 1;
  if (this->accountid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_accountid());
  }

  // string old_password = 2;
  if (this->old_password().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_old_password());
  }

  // string new_password = 3;
  if (this->new_password().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_new_password());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetAccountPasswordRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.SetAccountPasswordRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const SetAccountPasswordRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetAccountPasswordRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.SetAccountPasswordRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.SetAccountPasswordRqst)
    MergeFrom(*source);
  }
}

void SetAccountPasswordRqst::MergeFrom(const SetAccountPasswordRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.SetAccountPasswordRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.accountid().size() > 0) {
    _internal_set_accountid(from._internal_accountid());
  }
  if (from.old_password().size() > 0) {
    _internal_set_old_password(from._internal_old_password());
  }
  if (from.new_password().size() > 0) {
    _internal_set_new_password(from._internal_new_password());
  }
}

void SetAccountPasswordRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.SetAccountPasswordRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetAccountPasswordRqst::CopyFrom(const SetAccountPasswordRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.SetAccountPasswordRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetAccountPasswordRqst::IsInitialized() const {
  return true;
}

void SetAccountPasswordRqst::InternalSwap(SetAccountPasswordRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  accountid_.Swap(&other->accountid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  old_password_.Swap(&other->old_password_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  new_password_.Swap(&other->new_password_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata SetAccountPasswordRqst::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[30]);
}

// ===================================================================

class SetAccountPasswordRsp::_Internal {
 public:
};

SetAccountPasswordRsp::SetAccountPasswordRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.SetAccountPasswordRsp)
}
SetAccountPasswordRsp::SetAccountPasswordRsp(const SetAccountPasswordRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:resource.SetAccountPasswordRsp)
}

void SetAccountPasswordRsp::SharedCtor() {
}

SetAccountPasswordRsp::~SetAccountPasswordRsp() {
  // @@protoc_insertion_point(destructor:resource.SetAccountPasswordRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SetAccountPasswordRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SetAccountPasswordRsp::ArenaDtor(void* object) {
  SetAccountPasswordRsp* _this = reinterpret_cast< SetAccountPasswordRsp* >(object);
  (void)_this;
}
void SetAccountPasswordRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetAccountPasswordRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SetAccountPasswordRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.SetAccountPasswordRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetAccountPasswordRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetAccountPasswordRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.SetAccountPasswordRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.SetAccountPasswordRsp)
  return target;
}

size_t SetAccountPasswordRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.SetAccountPasswordRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetAccountPasswordRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.SetAccountPasswordRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SetAccountPasswordRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetAccountPasswordRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.SetAccountPasswordRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.SetAccountPasswordRsp)
    MergeFrom(*source);
  }
}

void SetAccountPasswordRsp::MergeFrom(const SetAccountPasswordRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.SetAccountPasswordRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void SetAccountPasswordRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.SetAccountPasswordRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetAccountPasswordRsp::CopyFrom(const SetAccountPasswordRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.SetAccountPasswordRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetAccountPasswordRsp::IsInitialized() const {
  return true;
}

void SetAccountPasswordRsp::InternalSwap(SetAccountPasswordRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetAccountPasswordRsp::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[31]);
}

// ===================================================================

class SetEmailRequest::_Internal {
 public:
};

SetEmailRequest::SetEmailRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.SetEmailRequest)
}
SetEmailRequest::SetEmailRequest(const SetEmailRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  accountid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_accountid().empty()) {
    accountid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_accountid(), 
      GetArena());
  }
  oldemail_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_oldemail().empty()) {
    oldemail_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_oldemail(), 
      GetArena());
  }
  newemail_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_newemail().empty()) {
    newemail_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_newemail(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.SetEmailRequest)
}

void SetEmailRequest::SharedCtor() {
accountid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
oldemail_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
newemail_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

SetEmailRequest::~SetEmailRequest() {
  // @@protoc_insertion_point(destructor:resource.SetEmailRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SetEmailRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  accountid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  oldemail_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  newemail_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SetEmailRequest::ArenaDtor(void* object) {
  SetEmailRequest* _this = reinterpret_cast< SetEmailRequest* >(object);
  (void)_this;
}
void SetEmailRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetEmailRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SetEmailRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.SetEmailRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  accountid_.ClearToEmpty();
  oldemail_.ClearToEmpty();
  newemail_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetEmailRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string accountId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_accountid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.SetEmailRequest.accountId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string oldEmail = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_oldemail();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.SetEmailRequest.oldEmail"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string newEmail = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_newemail();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.SetEmailRequest.newEmail"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetEmailRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.SetEmailRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string accountId = 1;
  if (this->accountid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_accountid().data(), static_cast<int>(this->_internal_accountid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.SetEmailRequest.accountId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_accountid(), target);
  }

  // string oldEmail = 2;
  if (this->oldemail().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_oldemail().data(), static_cast<int>(this->_internal_oldemail().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.SetEmailRequest.oldEmail");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_oldemail(), target);
  }

  // string newEmail = 3;
  if (this->newemail().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_newemail().data(), static_cast<int>(this->_internal_newemail().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.SetEmailRequest.newEmail");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_newemail(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.SetEmailRequest)
  return target;
}

size_t SetEmailRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.SetEmailRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string accountId = 1;
  if (this->accountid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_accountid());
  }

  // string oldEmail = 2;
  if (this->oldemail().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_oldemail());
  }

  // string newEmail = 3;
  if (this->newemail().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_newemail());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetEmailRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.SetEmailRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SetEmailRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetEmailRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.SetEmailRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.SetEmailRequest)
    MergeFrom(*source);
  }
}

void SetEmailRequest::MergeFrom(const SetEmailRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.SetEmailRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.accountid().size() > 0) {
    _internal_set_accountid(from._internal_accountid());
  }
  if (from.oldemail().size() > 0) {
    _internal_set_oldemail(from._internal_oldemail());
  }
  if (from.newemail().size() > 0) {
    _internal_set_newemail(from._internal_newemail());
  }
}

void SetEmailRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.SetEmailRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetEmailRequest::CopyFrom(const SetEmailRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.SetEmailRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetEmailRequest::IsInitialized() const {
  return true;
}

void SetEmailRequest::InternalSwap(SetEmailRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  accountid_.Swap(&other->accountid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  oldemail_.Swap(&other->oldemail_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  newemail_.Swap(&other->newemail_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata SetEmailRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[32]);
}

// ===================================================================

class SetEmailResponse::_Internal {
 public:
};

SetEmailResponse::SetEmailResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.SetEmailResponse)
}
SetEmailResponse::SetEmailResponse(const SetEmailResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:resource.SetEmailResponse)
}

void SetEmailResponse::SharedCtor() {
}

SetEmailResponse::~SetEmailResponse() {
  // @@protoc_insertion_point(destructor:resource.SetEmailResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SetEmailResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SetEmailResponse::ArenaDtor(void* object) {
  SetEmailResponse* _this = reinterpret_cast< SetEmailResponse* >(object);
  (void)_this;
}
void SetEmailResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetEmailResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SetEmailResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.SetEmailResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetEmailResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetEmailResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.SetEmailResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.SetEmailResponse)
  return target;
}

size_t SetEmailResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.SetEmailResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetEmailResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.SetEmailResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SetEmailResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetEmailResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.SetEmailResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.SetEmailResponse)
    MergeFrom(*source);
  }
}

void SetEmailResponse::MergeFrom(const SetEmailResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.SetEmailResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void SetEmailResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.SetEmailResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetEmailResponse::CopyFrom(const SetEmailResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.SetEmailResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetEmailResponse::IsInitialized() const {
  return true;
}

void SetEmailResponse::InternalSwap(SetEmailResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetEmailResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[33]);
}

// ===================================================================

class DeleteAccountRqst::_Internal {
 public:
};

DeleteAccountRqst::DeleteAccountRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.DeleteAccountRqst)
}
DeleteAccountRqst::DeleteAccountRqst(const DeleteAccountRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.DeleteAccountRqst)
}

void DeleteAccountRqst::SharedCtor() {
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DeleteAccountRqst::~DeleteAccountRqst() {
  // @@protoc_insertion_point(destructor:resource.DeleteAccountRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteAccountRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeleteAccountRqst::ArenaDtor(void* object) {
  DeleteAccountRqst* _this = reinterpret_cast< DeleteAccountRqst* >(object);
  (void)_this;
}
void DeleteAccountRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteAccountRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeleteAccountRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.DeleteAccountRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteAccountRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.DeleteAccountRqst.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteAccountRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.DeleteAccountRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.DeleteAccountRqst.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.DeleteAccountRqst)
  return target;
}

size_t DeleteAccountRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.DeleteAccountRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteAccountRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.DeleteAccountRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteAccountRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteAccountRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.DeleteAccountRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.DeleteAccountRqst)
    MergeFrom(*source);
  }
}

void DeleteAccountRqst::MergeFrom(const DeleteAccountRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.DeleteAccountRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
}

void DeleteAccountRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.DeleteAccountRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteAccountRqst::CopyFrom(const DeleteAccountRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.DeleteAccountRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteAccountRqst::IsInitialized() const {
  return true;
}

void DeleteAccountRqst::InternalSwap(DeleteAccountRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteAccountRqst::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[34]);
}

// ===================================================================

class DeleteAccountRsp::_Internal {
 public:
};

DeleteAccountRsp::DeleteAccountRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.DeleteAccountRsp)
}
DeleteAccountRsp::DeleteAccountRsp(const DeleteAccountRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_result().empty()) {
    result_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_result(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.DeleteAccountRsp)
}

void DeleteAccountRsp::SharedCtor() {
result_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DeleteAccountRsp::~DeleteAccountRsp() {
  // @@protoc_insertion_point(destructor:resource.DeleteAccountRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteAccountRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  result_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeleteAccountRsp::ArenaDtor(void* object) {
  DeleteAccountRsp* _this = reinterpret_cast< DeleteAccountRsp* >(object);
  (void)_this;
}
void DeleteAccountRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteAccountRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeleteAccountRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.DeleteAccountRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteAccountRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_result();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.DeleteAccountRsp.result"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteAccountRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.DeleteAccountRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string result = 1;
  if (this->result().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_result().data(), static_cast<int>(this->_internal_result().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.DeleteAccountRsp.result");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.DeleteAccountRsp)
  return target;
}

size_t DeleteAccountRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.DeleteAccountRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result = 1;
  if (this->result().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteAccountRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.DeleteAccountRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteAccountRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteAccountRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.DeleteAccountRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.DeleteAccountRsp)
    MergeFrom(*source);
  }
}

void DeleteAccountRsp::MergeFrom(const DeleteAccountRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.DeleteAccountRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result().size() > 0) {
    _internal_set_result(from._internal_result());
  }
}

void DeleteAccountRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.DeleteAccountRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteAccountRsp::CopyFrom(const DeleteAccountRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.DeleteAccountRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteAccountRsp::IsInitialized() const {
  return true;
}

void DeleteAccountRsp::InternalSwap(DeleteAccountRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  result_.Swap(&other->result_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteAccountRsp::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[35]);
}

// ===================================================================

class AddAccountRoleRqst::_Internal {
 public:
};

AddAccountRoleRqst::AddAccountRoleRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.AddAccountRoleRqst)
}
AddAccountRoleRqst::AddAccountRoleRqst(const AddAccountRoleRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  accountid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_accountid().empty()) {
    accountid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_accountid(), 
      GetArena());
  }
  roleid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_roleid().empty()) {
    roleid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_roleid(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.AddAccountRoleRqst)
}

void AddAccountRoleRqst::SharedCtor() {
accountid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
roleid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

AddAccountRoleRqst::~AddAccountRoleRqst() {
  // @@protoc_insertion_point(destructor:resource.AddAccountRoleRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddAccountRoleRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  accountid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  roleid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AddAccountRoleRqst::ArenaDtor(void* object) {
  AddAccountRoleRqst* _this = reinterpret_cast< AddAccountRoleRqst* >(object);
  (void)_this;
}
void AddAccountRoleRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddAccountRoleRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AddAccountRoleRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.AddAccountRoleRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  accountid_.ClearToEmpty();
  roleid_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddAccountRoleRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string accountId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_accountid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.AddAccountRoleRqst.accountId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string roleId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_roleid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.AddAccountRoleRqst.roleId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddAccountRoleRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.AddAccountRoleRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string accountId = 1;
  if (this->accountid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_accountid().data(), static_cast<int>(this->_internal_accountid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.AddAccountRoleRqst.accountId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_accountid(), target);
  }

  // string roleId = 2;
  if (this->roleid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_roleid().data(), static_cast<int>(this->_internal_roleid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.AddAccountRoleRqst.roleId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_roleid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.AddAccountRoleRqst)
  return target;
}

size_t AddAccountRoleRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.AddAccountRoleRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string accountId = 1;
  if (this->accountid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_accountid());
  }

  // string roleId = 2;
  if (this->roleid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_roleid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddAccountRoleRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.AddAccountRoleRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const AddAccountRoleRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddAccountRoleRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.AddAccountRoleRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.AddAccountRoleRqst)
    MergeFrom(*source);
  }
}

void AddAccountRoleRqst::MergeFrom(const AddAccountRoleRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.AddAccountRoleRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.accountid().size() > 0) {
    _internal_set_accountid(from._internal_accountid());
  }
  if (from.roleid().size() > 0) {
    _internal_set_roleid(from._internal_roleid());
  }
}

void AddAccountRoleRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.AddAccountRoleRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddAccountRoleRqst::CopyFrom(const AddAccountRoleRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.AddAccountRoleRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddAccountRoleRqst::IsInitialized() const {
  return true;
}

void AddAccountRoleRqst::InternalSwap(AddAccountRoleRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  accountid_.Swap(&other->accountid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  roleid_.Swap(&other->roleid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata AddAccountRoleRqst::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[36]);
}

// ===================================================================

class AddAccountRoleRsp::_Internal {
 public:
};

AddAccountRoleRsp::AddAccountRoleRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.AddAccountRoleRsp)
}
AddAccountRoleRsp::AddAccountRoleRsp(const AddAccountRoleRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.AddAccountRoleRsp)
}

void AddAccountRoleRsp::SharedCtor() {
result_ = false;
}

AddAccountRoleRsp::~AddAccountRoleRsp() {
  // @@protoc_insertion_point(destructor:resource.AddAccountRoleRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddAccountRoleRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void AddAccountRoleRsp::ArenaDtor(void* object) {
  AddAccountRoleRsp* _this = reinterpret_cast< AddAccountRoleRsp* >(object);
  (void)_this;
}
void AddAccountRoleRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddAccountRoleRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AddAccountRoleRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.AddAccountRoleRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddAccountRoleRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddAccountRoleRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.AddAccountRoleRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.AddAccountRoleRsp)
  return target;
}

size_t AddAccountRoleRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.AddAccountRoleRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddAccountRoleRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.AddAccountRoleRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const AddAccountRoleRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddAccountRoleRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.AddAccountRoleRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.AddAccountRoleRsp)
    MergeFrom(*source);
  }
}

void AddAccountRoleRsp::MergeFrom(const AddAccountRoleRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.AddAccountRoleRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void AddAccountRoleRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.AddAccountRoleRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddAccountRoleRsp::CopyFrom(const AddAccountRoleRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.AddAccountRoleRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddAccountRoleRsp::IsInitialized() const {
  return true;
}

void AddAccountRoleRsp::InternalSwap(AddAccountRoleRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AddAccountRoleRsp::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[37]);
}

// ===================================================================

class RemoveAccountRoleRqst::_Internal {
 public:
};

RemoveAccountRoleRqst::RemoveAccountRoleRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.RemoveAccountRoleRqst)
}
RemoveAccountRoleRqst::RemoveAccountRoleRqst(const RemoveAccountRoleRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  accountid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_accountid().empty()) {
    accountid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_accountid(), 
      GetArena());
  }
  roleid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_roleid().empty()) {
    roleid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_roleid(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.RemoveAccountRoleRqst)
}

void RemoveAccountRoleRqst::SharedCtor() {
accountid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
roleid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

RemoveAccountRoleRqst::~RemoveAccountRoleRqst() {
  // @@protoc_insertion_point(destructor:resource.RemoveAccountRoleRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemoveAccountRoleRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  accountid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  roleid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RemoveAccountRoleRqst::ArenaDtor(void* object) {
  RemoveAccountRoleRqst* _this = reinterpret_cast< RemoveAccountRoleRqst* >(object);
  (void)_this;
}
void RemoveAccountRoleRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemoveAccountRoleRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RemoveAccountRoleRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.RemoveAccountRoleRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  accountid_.ClearToEmpty();
  roleid_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveAccountRoleRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string accountId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_accountid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.RemoveAccountRoleRqst.accountId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string roleId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_roleid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.RemoveAccountRoleRqst.roleId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemoveAccountRoleRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.RemoveAccountRoleRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string accountId = 1;
  if (this->accountid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_accountid().data(), static_cast<int>(this->_internal_accountid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.RemoveAccountRoleRqst.accountId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_accountid(), target);
  }

  // string roleId = 2;
  if (this->roleid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_roleid().data(), static_cast<int>(this->_internal_roleid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.RemoveAccountRoleRqst.roleId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_roleid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.RemoveAccountRoleRqst)
  return target;
}

size_t RemoveAccountRoleRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.RemoveAccountRoleRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string accountId = 1;
  if (this->accountid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_accountid());
  }

  // string roleId = 2;
  if (this->roleid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_roleid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveAccountRoleRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.RemoveAccountRoleRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveAccountRoleRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemoveAccountRoleRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.RemoveAccountRoleRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.RemoveAccountRoleRqst)
    MergeFrom(*source);
  }
}

void RemoveAccountRoleRqst::MergeFrom(const RemoveAccountRoleRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.RemoveAccountRoleRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.accountid().size() > 0) {
    _internal_set_accountid(from._internal_accountid());
  }
  if (from.roleid().size() > 0) {
    _internal_set_roleid(from._internal_roleid());
  }
}

void RemoveAccountRoleRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.RemoveAccountRoleRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveAccountRoleRqst::CopyFrom(const RemoveAccountRoleRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.RemoveAccountRoleRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveAccountRoleRqst::IsInitialized() const {
  return true;
}

void RemoveAccountRoleRqst::InternalSwap(RemoveAccountRoleRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  accountid_.Swap(&other->accountid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  roleid_.Swap(&other->roleid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveAccountRoleRqst::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[38]);
}

// ===================================================================

class RemoveAccountRoleRsp::_Internal {
 public:
};

RemoveAccountRoleRsp::RemoveAccountRoleRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.RemoveAccountRoleRsp)
}
RemoveAccountRoleRsp::RemoveAccountRoleRsp(const RemoveAccountRoleRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.RemoveAccountRoleRsp)
}

void RemoveAccountRoleRsp::SharedCtor() {
result_ = false;
}

RemoveAccountRoleRsp::~RemoveAccountRoleRsp() {
  // @@protoc_insertion_point(destructor:resource.RemoveAccountRoleRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemoveAccountRoleRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RemoveAccountRoleRsp::ArenaDtor(void* object) {
  RemoveAccountRoleRsp* _this = reinterpret_cast< RemoveAccountRoleRsp* >(object);
  (void)_this;
}
void RemoveAccountRoleRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemoveAccountRoleRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RemoveAccountRoleRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.RemoveAccountRoleRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveAccountRoleRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemoveAccountRoleRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.RemoveAccountRoleRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.RemoveAccountRoleRsp)
  return target;
}

size_t RemoveAccountRoleRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.RemoveAccountRoleRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveAccountRoleRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.RemoveAccountRoleRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveAccountRoleRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemoveAccountRoleRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.RemoveAccountRoleRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.RemoveAccountRoleRsp)
    MergeFrom(*source);
  }
}

void RemoveAccountRoleRsp::MergeFrom(const RemoveAccountRoleRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.RemoveAccountRoleRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void RemoveAccountRoleRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.RemoveAccountRoleRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveAccountRoleRsp::CopyFrom(const RemoveAccountRoleRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.RemoveAccountRoleRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveAccountRoleRsp::IsInitialized() const {
  return true;
}

void RemoveAccountRoleRsp::InternalSwap(RemoveAccountRoleRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveAccountRoleRsp::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[39]);
}

// ===================================================================

class Contact::_Internal {
 public:
};

Contact::Contact(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.Contact)
}
Contact::Contact(const Contact& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArena());
  }
  status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_status().empty()) {
    status_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_status(), 
      GetArena());
  }
  invitationtime_ = from.invitationtime_;
  // @@protoc_insertion_point(copy_constructor:resource.Contact)
}

void Contact::SharedCtor() {
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
invitationtime_ = PROTOBUF_LONGLONG(0);
}

Contact::~Contact() {
  // @@protoc_insertion_point(destructor:resource.Contact)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Contact::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  status_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Contact::ArenaDtor(void* object) {
  Contact* _this = reinterpret_cast< Contact* >(object);
  (void)_this;
}
void Contact::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Contact::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Contact::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.Contact)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  status_.ClearToEmpty();
  invitationtime_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Contact::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Contact.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 invitationTime = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          invitationtime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string status = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_status();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Contact.status"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Contact::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.Contact)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Contact.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // int64 invitationTime = 2;
  if (this->invitationtime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_invitationtime(), target);
  }

  // string status = 3;
  if (this->status().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_status().data(), static_cast<int>(this->_internal_status().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Contact.status");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.Contact)
  return target;
}

size_t Contact::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.Contact)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string status = 3;
  if (this->status().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_status());
  }

  // int64 invitationTime = 2;
  if (this->invitationtime() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_invitationtime());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Contact::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.Contact)
  GOOGLE_DCHECK_NE(&from, this);
  const Contact* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Contact>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.Contact)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.Contact)
    MergeFrom(*source);
  }
}

void Contact::MergeFrom(const Contact& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.Contact)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.status().size() > 0) {
    _internal_set_status(from._internal_status());
  }
  if (from.invitationtime() != 0) {
    _internal_set_invitationtime(from._internal_invitationtime());
  }
}

void Contact::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.Contact)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Contact::CopyFrom(const Contact& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.Contact)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Contact::IsInitialized() const {
  return true;
}

void Contact::InternalSwap(Contact* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  status_.Swap(&other->status_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(invitationtime_, other->invitationtime_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Contact::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[40]);
}

// ===================================================================

class SetAccountContactRqst::_Internal {
 public:
  static const ::resource::Contact& contact(const SetAccountContactRqst* msg);
};

const ::resource::Contact&
SetAccountContactRqst::_Internal::contact(const SetAccountContactRqst* msg) {
  return *msg->contact_;
}
SetAccountContactRqst::SetAccountContactRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.SetAccountContactRqst)
}
SetAccountContactRqst::SetAccountContactRqst(const SetAccountContactRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  accountid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_accountid().empty()) {
    accountid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_accountid(), 
      GetArena());
  }
  if (from._internal_has_contact()) {
    contact_ = new ::resource::Contact(*from.contact_);
  } else {
    contact_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:resource.SetAccountContactRqst)
}

void SetAccountContactRqst::SharedCtor() {
accountid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
contact_ = nullptr;
}

SetAccountContactRqst::~SetAccountContactRqst() {
  // @@protoc_insertion_point(destructor:resource.SetAccountContactRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SetAccountContactRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  accountid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete contact_;
}

void SetAccountContactRqst::ArenaDtor(void* object) {
  SetAccountContactRqst* _this = reinterpret_cast< SetAccountContactRqst* >(object);
  (void)_this;
}
void SetAccountContactRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetAccountContactRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SetAccountContactRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.SetAccountContactRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  accountid_.ClearToEmpty();
  if (GetArena() == nullptr && contact_ != nullptr) {
    delete contact_;
  }
  contact_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetAccountContactRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string accountId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_accountid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.SetAccountContactRqst.accountId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .resource.Contact contact = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_contact(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetAccountContactRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.SetAccountContactRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string accountId = 1;
  if (this->accountid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_accountid().data(), static_cast<int>(this->_internal_accountid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.SetAccountContactRqst.accountId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_accountid(), target);
  }

  // .resource.Contact contact = 2;
  if (this->has_contact()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::contact(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.SetAccountContactRqst)
  return target;
}

size_t SetAccountContactRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.SetAccountContactRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string accountId = 1;
  if (this->accountid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_accountid());
  }

  // .resource.Contact contact = 2;
  if (this->has_contact()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *contact_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetAccountContactRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.SetAccountContactRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const SetAccountContactRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetAccountContactRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.SetAccountContactRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.SetAccountContactRqst)
    MergeFrom(*source);
  }
}

void SetAccountContactRqst::MergeFrom(const SetAccountContactRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.SetAccountContactRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.accountid().size() > 0) {
    _internal_set_accountid(from._internal_accountid());
  }
  if (from.has_contact()) {
    _internal_mutable_contact()->::resource::Contact::MergeFrom(from._internal_contact());
  }
}

void SetAccountContactRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.SetAccountContactRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetAccountContactRqst::CopyFrom(const SetAccountContactRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.SetAccountContactRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetAccountContactRqst::IsInitialized() const {
  return true;
}

void SetAccountContactRqst::InternalSwap(SetAccountContactRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  accountid_.Swap(&other->accountid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(contact_, other->contact_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetAccountContactRqst::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[41]);
}

// ===================================================================

class SetAccountContactRsp::_Internal {
 public:
};

SetAccountContactRsp::SetAccountContactRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.SetAccountContactRsp)
}
SetAccountContactRsp::SetAccountContactRsp(const SetAccountContactRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.SetAccountContactRsp)
}

void SetAccountContactRsp::SharedCtor() {
result_ = false;
}

SetAccountContactRsp::~SetAccountContactRsp() {
  // @@protoc_insertion_point(destructor:resource.SetAccountContactRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SetAccountContactRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SetAccountContactRsp::ArenaDtor(void* object) {
  SetAccountContactRsp* _this = reinterpret_cast< SetAccountContactRsp* >(object);
  (void)_this;
}
void SetAccountContactRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetAccountContactRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SetAccountContactRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.SetAccountContactRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetAccountContactRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetAccountContactRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.SetAccountContactRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.SetAccountContactRsp)
  return target;
}

size_t SetAccountContactRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.SetAccountContactRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetAccountContactRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.SetAccountContactRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SetAccountContactRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetAccountContactRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.SetAccountContactRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.SetAccountContactRsp)
    MergeFrom(*source);
  }
}

void SetAccountContactRsp::MergeFrom(const SetAccountContactRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.SetAccountContactRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void SetAccountContactRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.SetAccountContactRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetAccountContactRsp::CopyFrom(const SetAccountContactRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.SetAccountContactRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetAccountContactRsp::IsInitialized() const {
  return true;
}

void SetAccountContactRsp::InternalSwap(SetAccountContactRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetAccountContactRsp::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[42]);
}

// ===================================================================

class CreateRoleRqst::_Internal {
 public:
  static const ::resource::Role& role(const CreateRoleRqst* msg);
};

const ::resource::Role&
CreateRoleRqst::_Internal::role(const CreateRoleRqst* msg) {
  return *msg->role_;
}
CreateRoleRqst::CreateRoleRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.CreateRoleRqst)
}
CreateRoleRqst::CreateRoleRqst(const CreateRoleRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_role()) {
    role_ = new ::resource::Role(*from.role_);
  } else {
    role_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:resource.CreateRoleRqst)
}

void CreateRoleRqst::SharedCtor() {
role_ = nullptr;
}

CreateRoleRqst::~CreateRoleRqst() {
  // @@protoc_insertion_point(destructor:resource.CreateRoleRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateRoleRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete role_;
}

void CreateRoleRqst::ArenaDtor(void* object) {
  CreateRoleRqst* _this = reinterpret_cast< CreateRoleRqst* >(object);
  (void)_this;
}
void CreateRoleRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateRoleRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateRoleRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.CreateRoleRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && role_ != nullptr) {
    delete role_;
  }
  role_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateRoleRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .resource.Role role = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_role(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateRoleRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.CreateRoleRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .resource.Role role = 1;
  if (this->has_role()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::role(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.CreateRoleRqst)
  return target;
}

size_t CreateRoleRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.CreateRoleRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .resource.Role role = 1;
  if (this->has_role()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *role_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateRoleRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.CreateRoleRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateRoleRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateRoleRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.CreateRoleRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.CreateRoleRqst)
    MergeFrom(*source);
  }
}

void CreateRoleRqst::MergeFrom(const CreateRoleRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.CreateRoleRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_role()) {
    _internal_mutable_role()->::resource::Role::MergeFrom(from._internal_role());
  }
}

void CreateRoleRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.CreateRoleRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateRoleRqst::CopyFrom(const CreateRoleRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.CreateRoleRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateRoleRqst::IsInitialized() const {
  return true;
}

void CreateRoleRqst::InternalSwap(CreateRoleRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(role_, other->role_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateRoleRqst::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[43]);
}

// ===================================================================

class CreateRoleRsp::_Internal {
 public:
};

CreateRoleRsp::CreateRoleRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.CreateRoleRsp)
}
CreateRoleRsp::CreateRoleRsp(const CreateRoleRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.CreateRoleRsp)
}

void CreateRoleRsp::SharedCtor() {
result_ = false;
}

CreateRoleRsp::~CreateRoleRsp() {
  // @@protoc_insertion_point(destructor:resource.CreateRoleRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateRoleRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CreateRoleRsp::ArenaDtor(void* object) {
  CreateRoleRsp* _this = reinterpret_cast< CreateRoleRsp* >(object);
  (void)_this;
}
void CreateRoleRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateRoleRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateRoleRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.CreateRoleRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateRoleRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateRoleRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.CreateRoleRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.CreateRoleRsp)
  return target;
}

size_t CreateRoleRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.CreateRoleRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateRoleRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.CreateRoleRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateRoleRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateRoleRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.CreateRoleRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.CreateRoleRsp)
    MergeFrom(*source);
  }
}

void CreateRoleRsp::MergeFrom(const CreateRoleRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.CreateRoleRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void CreateRoleRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.CreateRoleRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateRoleRsp::CopyFrom(const CreateRoleRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.CreateRoleRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateRoleRsp::IsInitialized() const {
  return true;
}

void CreateRoleRsp::InternalSwap(CreateRoleRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateRoleRsp::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[44]);
}

// ===================================================================

class GetRolesRqst::_Internal {
 public:
};

GetRolesRqst::GetRolesRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.GetRolesRqst)
}
GetRolesRqst::GetRolesRqst(const GetRolesRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  query_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_query().empty()) {
    query_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_query(), 
      GetArena());
  }
  options_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_options().empty()) {
    options_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_options(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.GetRolesRqst)
}

void GetRolesRqst::SharedCtor() {
query_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
options_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetRolesRqst::~GetRolesRqst() {
  // @@protoc_insertion_point(destructor:resource.GetRolesRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetRolesRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  query_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  options_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetRolesRqst::ArenaDtor(void* object) {
  GetRolesRqst* _this = reinterpret_cast< GetRolesRqst* >(object);
  (void)_this;
}
void GetRolesRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetRolesRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetRolesRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.GetRolesRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_.ClearToEmpty();
  options_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetRolesRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string query = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_query();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.GetRolesRqst.query"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string options = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_options();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.GetRolesRqst.options"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetRolesRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.GetRolesRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_query().data(), static_cast<int>(this->_internal_query().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.GetRolesRqst.query");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_query(), target);
  }

  // string options = 2;
  if (this->options().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_options().data(), static_cast<int>(this->_internal_options().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.GetRolesRqst.options");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_options(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.GetRolesRqst)
  return target;
}

size_t GetRolesRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.GetRolesRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_query());
  }

  // string options = 2;
  if (this->options().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_options());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetRolesRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.GetRolesRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const GetRolesRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetRolesRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.GetRolesRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.GetRolesRqst)
    MergeFrom(*source);
  }
}

void GetRolesRqst::MergeFrom(const GetRolesRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.GetRolesRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query().size() > 0) {
    _internal_set_query(from._internal_query());
  }
  if (from.options().size() > 0) {
    _internal_set_options(from._internal_options());
  }
}

void GetRolesRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.GetRolesRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetRolesRqst::CopyFrom(const GetRolesRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.GetRolesRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRolesRqst::IsInitialized() const {
  return true;
}

void GetRolesRqst::InternalSwap(GetRolesRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  query_.Swap(&other->query_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  options_.Swap(&other->options_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetRolesRqst::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[45]);
}

// ===================================================================

class GetRolesRsp::_Internal {
 public:
};

GetRolesRsp::GetRolesRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  roles_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.GetRolesRsp)
}
GetRolesRsp::GetRolesRsp(const GetRolesRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      roles_(from.roles_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:resource.GetRolesRsp)
}

void GetRolesRsp::SharedCtor() {
}

GetRolesRsp::~GetRolesRsp() {
  // @@protoc_insertion_point(destructor:resource.GetRolesRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetRolesRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetRolesRsp::ArenaDtor(void* object) {
  GetRolesRsp* _this = reinterpret_cast< GetRolesRsp* >(object);
  (void)_this;
}
void GetRolesRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetRolesRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetRolesRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.GetRolesRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  roles_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetRolesRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .resource.Role roles = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_roles(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetRolesRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.GetRolesRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .resource.Role roles = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_roles_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_roles(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.GetRolesRsp)
  return target;
}

size_t GetRolesRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.GetRolesRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .resource.Role roles = 1;
  total_size += 1UL * this->_internal_roles_size();
  for (const auto& msg : this->roles_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetRolesRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.GetRolesRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetRolesRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetRolesRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.GetRolesRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.GetRolesRsp)
    MergeFrom(*source);
  }
}

void GetRolesRsp::MergeFrom(const GetRolesRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.GetRolesRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  roles_.MergeFrom(from.roles_);
}

void GetRolesRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.GetRolesRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetRolesRsp::CopyFrom(const GetRolesRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.GetRolesRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRolesRsp::IsInitialized() const {
  return true;
}

void GetRolesRsp::InternalSwap(GetRolesRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  roles_.InternalSwap(&other->roles_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetRolesRsp::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[46]);
}

// ===================================================================

class DeleteRoleRqst::_Internal {
 public:
};

DeleteRoleRqst::DeleteRoleRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.DeleteRoleRqst)
}
DeleteRoleRqst::DeleteRoleRqst(const DeleteRoleRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  roleid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_roleid().empty()) {
    roleid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_roleid(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.DeleteRoleRqst)
}

void DeleteRoleRqst::SharedCtor() {
roleid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DeleteRoleRqst::~DeleteRoleRqst() {
  // @@protoc_insertion_point(destructor:resource.DeleteRoleRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteRoleRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  roleid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeleteRoleRqst::ArenaDtor(void* object) {
  DeleteRoleRqst* _this = reinterpret_cast< DeleteRoleRqst* >(object);
  (void)_this;
}
void DeleteRoleRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteRoleRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeleteRoleRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.DeleteRoleRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  roleid_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteRoleRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string roleId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_roleid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.DeleteRoleRqst.roleId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteRoleRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.DeleteRoleRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string roleId = 1;
  if (this->roleid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_roleid().data(), static_cast<int>(this->_internal_roleid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.DeleteRoleRqst.roleId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_roleid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.DeleteRoleRqst)
  return target;
}

size_t DeleteRoleRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.DeleteRoleRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string roleId = 1;
  if (this->roleid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_roleid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteRoleRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.DeleteRoleRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteRoleRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteRoleRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.DeleteRoleRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.DeleteRoleRqst)
    MergeFrom(*source);
  }
}

void DeleteRoleRqst::MergeFrom(const DeleteRoleRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.DeleteRoleRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.roleid().size() > 0) {
    _internal_set_roleid(from._internal_roleid());
  }
}

void DeleteRoleRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.DeleteRoleRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteRoleRqst::CopyFrom(const DeleteRoleRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.DeleteRoleRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteRoleRqst::IsInitialized() const {
  return true;
}

void DeleteRoleRqst::InternalSwap(DeleteRoleRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  roleid_.Swap(&other->roleid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteRoleRqst::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[47]);
}

// ===================================================================

class DeleteRoleRsp::_Internal {
 public:
};

DeleteRoleRsp::DeleteRoleRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.DeleteRoleRsp)
}
DeleteRoleRsp::DeleteRoleRsp(const DeleteRoleRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.DeleteRoleRsp)
}

void DeleteRoleRsp::SharedCtor() {
result_ = false;
}

DeleteRoleRsp::~DeleteRoleRsp() {
  // @@protoc_insertion_point(destructor:resource.DeleteRoleRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteRoleRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void DeleteRoleRsp::ArenaDtor(void* object) {
  DeleteRoleRsp* _this = reinterpret_cast< DeleteRoleRsp* >(object);
  (void)_this;
}
void DeleteRoleRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteRoleRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeleteRoleRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.DeleteRoleRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteRoleRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteRoleRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.DeleteRoleRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.DeleteRoleRsp)
  return target;
}

size_t DeleteRoleRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.DeleteRoleRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteRoleRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.DeleteRoleRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteRoleRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteRoleRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.DeleteRoleRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.DeleteRoleRsp)
    MergeFrom(*source);
  }
}

void DeleteRoleRsp::MergeFrom(const DeleteRoleRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.DeleteRoleRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void DeleteRoleRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.DeleteRoleRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteRoleRsp::CopyFrom(const DeleteRoleRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.DeleteRoleRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteRoleRsp::IsInitialized() const {
  return true;
}

void DeleteRoleRsp::InternalSwap(DeleteRoleRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteRoleRsp::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[48]);
}

// ===================================================================

class Application::_Internal {
 public:
};

Application::Application(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  actions_(arena),
  keywords_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.Application)
}
Application::Application(const Application& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      actions_(from.actions_),
      keywords_(from.keywords_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArena());
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  domain_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_domain().empty()) {
    domain_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_domain(), 
      GetArena());
  }
  password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_password().empty()) {
    password_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_password(), 
      GetArena());
  }
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_path().empty()) {
    path_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_path(), 
      GetArena());
  }
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_version().empty()) {
    version_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_version(), 
      GetArena());
  }
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_description().empty()) {
    description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_description(), 
      GetArena());
  }
  icon_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_icon().empty()) {
    icon_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_icon(), 
      GetArena());
  }
  alias_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_alias().empty()) {
    alias_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_alias(), 
      GetArena());
  }
  publisherid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_publisherid().empty()) {
    publisherid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_publisherid(), 
      GetArena());
  }
  ::memcpy(&creation_date_, &from.creation_date_,
    static_cast<size_t>(reinterpret_cast<char*>(&last_deployed_) -
    reinterpret_cast<char*>(&creation_date_)) + sizeof(last_deployed_));
  // @@protoc_insertion_point(copy_constructor:resource.Application)
}

void Application::SharedCtor() {
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
domain_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
icon_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
alias_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
publisherid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&creation_date_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&last_deployed_) -
    reinterpret_cast<char*>(&creation_date_)) + sizeof(last_deployed_));
}

Application::~Application() {
  // @@protoc_insertion_point(destructor:resource.Application)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Application::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  domain_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  icon_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  alias_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  publisherid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Application::ArenaDtor(void* object) {
  Application* _this = reinterpret_cast< Application* >(object);
  (void)_this;
}
void Application::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Application::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Application::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.Application)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  actions_.Clear();
  keywords_.Clear();
  id_.ClearToEmpty();
  name_.ClearToEmpty();
  domain_.ClearToEmpty();
  password_.ClearToEmpty();
  path_.ClearToEmpty();
  version_.ClearToEmpty();
  description_.ClearToEmpty();
  icon_.ClearToEmpty();
  alias_.ClearToEmpty();
  publisherid_.ClearToEmpty();
  ::memset(&creation_date_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&last_deployed_) -
      reinterpret_cast<char*>(&creation_date_)) + sizeof(last_deployed_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Application::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Application.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Application.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string domain = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_domain();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Application.domain"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string password = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_password();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Application.password"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string path = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Application.path"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string version = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_version();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Application.version"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string description = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_description();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Application.description"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string actions = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_actions();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Application.actions"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<66>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated string keywords = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_keywords();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Application.keywords"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<74>(ptr));
        } else goto handle_unusual;
        continue;
      // string icon = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          auto str = _internal_mutable_icon();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Application.icon"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string alias = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          auto str = _internal_mutable_alias();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Application.alias"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string publisherid = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          auto str = _internal_mutable_publisherid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Application.publisherid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 creation_date = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 104)) {
          creation_date_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 last_deployed = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 112)) {
          last_deployed_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Application::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.Application)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Application.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Application.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // string domain = 3;
  if (this->domain().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_domain().data(), static_cast<int>(this->_internal_domain().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Application.domain");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_domain(), target);
  }

  // string password = 4;
  if (this->password().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_password().data(), static_cast<int>(this->_internal_password().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Application.password");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_password(), target);
  }

  // string path = 5;
  if (this->path().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_path().data(), static_cast<int>(this->_internal_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Application.path");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_path(), target);
  }

  // string version = 6;
  if (this->version().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_version().data(), static_cast<int>(this->_internal_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Application.version");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_version(), target);
  }

  // string description = 7;
  if (this->description().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Application.description");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_description(), target);
  }

  // repeated string actions = 8;
  for (int i = 0, n = this->_internal_actions_size(); i < n; i++) {
    const auto& s = this->_internal_actions(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Application.actions");
    target = stream->WriteString(8, s, target);
  }

  // repeated string keywords = 9;
  for (int i = 0, n = this->_internal_keywords_size(); i < n; i++) {
    const auto& s = this->_internal_keywords(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Application.keywords");
    target = stream->WriteString(9, s, target);
  }

  // string icon = 10;
  if (this->icon().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_icon().data(), static_cast<int>(this->_internal_icon().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Application.icon");
    target = stream->WriteStringMaybeAliased(
        10, this->_internal_icon(), target);
  }

  // string alias = 11;
  if (this->alias().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_alias().data(), static_cast<int>(this->_internal_alias().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Application.alias");
    target = stream->WriteStringMaybeAliased(
        11, this->_internal_alias(), target);
  }

  // string publisherid = 12;
  if (this->publisherid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_publisherid().data(), static_cast<int>(this->_internal_publisherid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Application.publisherid");
    target = stream->WriteStringMaybeAliased(
        12, this->_internal_publisherid(), target);
  }

  // int64 creation_date = 13;
  if (this->creation_date() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(13, this->_internal_creation_date(), target);
  }

  // int64 last_deployed = 14;
  if (this->last_deployed() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(14, this->_internal_last_deployed(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.Application)
  return target;
}

size_t Application::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.Application)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string actions = 8;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(actions_.size());
  for (int i = 0, n = actions_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      actions_.Get(i));
  }

  // repeated string keywords = 9;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(keywords_.size());
  for (int i = 0, n = keywords_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      keywords_.Get(i));
  }

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string domain = 3;
  if (this->domain().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_domain());
  }

  // string password = 4;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_password());
  }

  // string path = 5;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_path());
  }

  // string version = 6;
  if (this->version().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_version());
  }

  // string description = 7;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  // string icon = 10;
  if (this->icon().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_icon());
  }

  // string alias = 11;
  if (this->alias().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_alias());
  }

  // string publisherid = 12;
  if (this->publisherid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_publisherid());
  }

  // int64 creation_date = 13;
  if (this->creation_date() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_creation_date());
  }

  // int64 last_deployed = 14;
  if (this->last_deployed() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_last_deployed());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Application::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.Application)
  GOOGLE_DCHECK_NE(&from, this);
  const Application* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Application>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.Application)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.Application)
    MergeFrom(*source);
  }
}

void Application::MergeFrom(const Application& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.Application)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  actions_.MergeFrom(from.actions_);
  keywords_.MergeFrom(from.keywords_);
  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.domain().size() > 0) {
    _internal_set_domain(from._internal_domain());
  }
  if (from.password().size() > 0) {
    _internal_set_password(from._internal_password());
  }
  if (from.path().size() > 0) {
    _internal_set_path(from._internal_path());
  }
  if (from.version().size() > 0) {
    _internal_set_version(from._internal_version());
  }
  if (from.description().size() > 0) {
    _internal_set_description(from._internal_description());
  }
  if (from.icon().size() > 0) {
    _internal_set_icon(from._internal_icon());
  }
  if (from.alias().size() > 0) {
    _internal_set_alias(from._internal_alias());
  }
  if (from.publisherid().size() > 0) {
    _internal_set_publisherid(from._internal_publisherid());
  }
  if (from.creation_date() != 0) {
    _internal_set_creation_date(from._internal_creation_date());
  }
  if (from.last_deployed() != 0) {
    _internal_set_last_deployed(from._internal_last_deployed());
  }
}

void Application::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.Application)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Application::CopyFrom(const Application& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.Application)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Application::IsInitialized() const {
  return true;
}

void Application::InternalSwap(Application* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  actions_.InternalSwap(&other->actions_);
  keywords_.InternalSwap(&other->keywords_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  domain_.Swap(&other->domain_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  password_.Swap(&other->password_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  path_.Swap(&other->path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  version_.Swap(&other->version_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  description_.Swap(&other->description_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  icon_.Swap(&other->icon_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  alias_.Swap(&other->alias_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  publisherid_.Swap(&other->publisherid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Application, last_deployed_)
      + sizeof(Application::last_deployed_)
      - PROTOBUF_FIELD_OFFSET(Application, creation_date_)>(
          reinterpret_cast<char*>(&creation_date_),
          reinterpret_cast<char*>(&other->creation_date_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Application::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[49]);
}

// ===================================================================

class CreateApplicationRqst::_Internal {
 public:
  static const ::resource::Application& application(const CreateApplicationRqst* msg);
};

const ::resource::Application&
CreateApplicationRqst::_Internal::application(const CreateApplicationRqst* msg) {
  return *msg->application_;
}
CreateApplicationRqst::CreateApplicationRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.CreateApplicationRqst)
}
CreateApplicationRqst::CreateApplicationRqst(const CreateApplicationRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_application()) {
    application_ = new ::resource::Application(*from.application_);
  } else {
    application_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:resource.CreateApplicationRqst)
}

void CreateApplicationRqst::SharedCtor() {
application_ = nullptr;
}

CreateApplicationRqst::~CreateApplicationRqst() {
  // @@protoc_insertion_point(destructor:resource.CreateApplicationRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateApplicationRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete application_;
}

void CreateApplicationRqst::ArenaDtor(void* object) {
  CreateApplicationRqst* _this = reinterpret_cast< CreateApplicationRqst* >(object);
  (void)_this;
}
void CreateApplicationRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateApplicationRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateApplicationRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.CreateApplicationRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && application_ != nullptr) {
    delete application_;
  }
  application_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateApplicationRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .resource.Application application = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_application(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateApplicationRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.CreateApplicationRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .resource.Application application = 1;
  if (this->has_application()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::application(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.CreateApplicationRqst)
  return target;
}

size_t CreateApplicationRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.CreateApplicationRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .resource.Application application = 1;
  if (this->has_application()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *application_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateApplicationRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.CreateApplicationRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateApplicationRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateApplicationRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.CreateApplicationRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.CreateApplicationRqst)
    MergeFrom(*source);
  }
}

void CreateApplicationRqst::MergeFrom(const CreateApplicationRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.CreateApplicationRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_application()) {
    _internal_mutable_application()->::resource::Application::MergeFrom(from._internal_application());
  }
}

void CreateApplicationRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.CreateApplicationRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateApplicationRqst::CopyFrom(const CreateApplicationRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.CreateApplicationRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateApplicationRqst::IsInitialized() const {
  return true;
}

void CreateApplicationRqst::InternalSwap(CreateApplicationRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(application_, other->application_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateApplicationRqst::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[50]);
}

// ===================================================================

class CreateApplicationRsp::_Internal {
 public:
};

CreateApplicationRsp::CreateApplicationRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.CreateApplicationRsp)
}
CreateApplicationRsp::CreateApplicationRsp(const CreateApplicationRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:resource.CreateApplicationRsp)
}

void CreateApplicationRsp::SharedCtor() {
}

CreateApplicationRsp::~CreateApplicationRsp() {
  // @@protoc_insertion_point(destructor:resource.CreateApplicationRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateApplicationRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CreateApplicationRsp::ArenaDtor(void* object) {
  CreateApplicationRsp* _this = reinterpret_cast< CreateApplicationRsp* >(object);
  (void)_this;
}
void CreateApplicationRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateApplicationRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateApplicationRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.CreateApplicationRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateApplicationRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateApplicationRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.CreateApplicationRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.CreateApplicationRsp)
  return target;
}

size_t CreateApplicationRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.CreateApplicationRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateApplicationRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.CreateApplicationRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateApplicationRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateApplicationRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.CreateApplicationRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.CreateApplicationRsp)
    MergeFrom(*source);
  }
}

void CreateApplicationRsp::MergeFrom(const CreateApplicationRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.CreateApplicationRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CreateApplicationRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.CreateApplicationRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateApplicationRsp::CopyFrom(const CreateApplicationRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.CreateApplicationRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateApplicationRsp::IsInitialized() const {
  return true;
}

void CreateApplicationRsp::InternalSwap(CreateApplicationRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateApplicationRsp::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[51]);
}

// ===================================================================

class UpdateApplicationRqst::_Internal {
 public:
};

UpdateApplicationRqst::UpdateApplicationRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.UpdateApplicationRqst)
}
UpdateApplicationRqst::UpdateApplicationRqst(const UpdateApplicationRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  applicationid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_applicationid().empty()) {
    applicationid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_applicationid(), 
      GetArena());
  }
  values_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_values().empty()) {
    values_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_values(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.UpdateApplicationRqst)
}

void UpdateApplicationRqst::SharedCtor() {
applicationid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
values_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

UpdateApplicationRqst::~UpdateApplicationRqst() {
  // @@protoc_insertion_point(destructor:resource.UpdateApplicationRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UpdateApplicationRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  applicationid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  values_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void UpdateApplicationRqst::ArenaDtor(void* object) {
  UpdateApplicationRqst* _this = reinterpret_cast< UpdateApplicationRqst* >(object);
  (void)_this;
}
void UpdateApplicationRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateApplicationRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UpdateApplicationRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.UpdateApplicationRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  applicationid_.ClearToEmpty();
  values_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateApplicationRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string applicationId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_applicationid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.UpdateApplicationRqst.applicationId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string values = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_values();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.UpdateApplicationRqst.values"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateApplicationRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.UpdateApplicationRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string applicationId = 1;
  if (this->applicationid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_applicationid().data(), static_cast<int>(this->_internal_applicationid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.UpdateApplicationRqst.applicationId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_applicationid(), target);
  }

  // string values = 2;
  if (this->values().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_values().data(), static_cast<int>(this->_internal_values().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.UpdateApplicationRqst.values");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_values(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.UpdateApplicationRqst)
  return target;
}

size_t UpdateApplicationRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.UpdateApplicationRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string applicationId = 1;
  if (this->applicationid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_applicationid());
  }

  // string values = 2;
  if (this->values().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_values());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateApplicationRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.UpdateApplicationRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateApplicationRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateApplicationRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.UpdateApplicationRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.UpdateApplicationRqst)
    MergeFrom(*source);
  }
}

void UpdateApplicationRqst::MergeFrom(const UpdateApplicationRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.UpdateApplicationRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.applicationid().size() > 0) {
    _internal_set_applicationid(from._internal_applicationid());
  }
  if (from.values().size() > 0) {
    _internal_set_values(from._internal_values());
  }
}

void UpdateApplicationRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.UpdateApplicationRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateApplicationRqst::CopyFrom(const UpdateApplicationRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.UpdateApplicationRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateApplicationRqst::IsInitialized() const {
  return true;
}

void UpdateApplicationRqst::InternalSwap(UpdateApplicationRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  applicationid_.Swap(&other->applicationid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  values_.Swap(&other->values_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateApplicationRqst::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[52]);
}

// ===================================================================

class UpdateApplicationRsp::_Internal {
 public:
};

UpdateApplicationRsp::UpdateApplicationRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.UpdateApplicationRsp)
}
UpdateApplicationRsp::UpdateApplicationRsp(const UpdateApplicationRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.UpdateApplicationRsp)
}

void UpdateApplicationRsp::SharedCtor() {
result_ = false;
}

UpdateApplicationRsp::~UpdateApplicationRsp() {
  // @@protoc_insertion_point(destructor:resource.UpdateApplicationRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UpdateApplicationRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void UpdateApplicationRsp::ArenaDtor(void* object) {
  UpdateApplicationRsp* _this = reinterpret_cast< UpdateApplicationRsp* >(object);
  (void)_this;
}
void UpdateApplicationRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateApplicationRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UpdateApplicationRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.UpdateApplicationRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateApplicationRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateApplicationRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.UpdateApplicationRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.UpdateApplicationRsp)
  return target;
}

size_t UpdateApplicationRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.UpdateApplicationRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateApplicationRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.UpdateApplicationRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateApplicationRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateApplicationRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.UpdateApplicationRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.UpdateApplicationRsp)
    MergeFrom(*source);
  }
}

void UpdateApplicationRsp::MergeFrom(const UpdateApplicationRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.UpdateApplicationRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void UpdateApplicationRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.UpdateApplicationRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateApplicationRsp::CopyFrom(const UpdateApplicationRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.UpdateApplicationRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateApplicationRsp::IsInitialized() const {
  return true;
}

void UpdateApplicationRsp::InternalSwap(UpdateApplicationRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateApplicationRsp::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[53]);
}

// ===================================================================

class DeleteApplicationRqst::_Internal {
 public:
};

DeleteApplicationRqst::DeleteApplicationRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.DeleteApplicationRqst)
}
DeleteApplicationRqst::DeleteApplicationRqst(const DeleteApplicationRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  applicationid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_applicationid().empty()) {
    applicationid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_applicationid(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.DeleteApplicationRqst)
}

void DeleteApplicationRqst::SharedCtor() {
applicationid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DeleteApplicationRqst::~DeleteApplicationRqst() {
  // @@protoc_insertion_point(destructor:resource.DeleteApplicationRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteApplicationRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  applicationid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeleteApplicationRqst::ArenaDtor(void* object) {
  DeleteApplicationRqst* _this = reinterpret_cast< DeleteApplicationRqst* >(object);
  (void)_this;
}
void DeleteApplicationRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteApplicationRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeleteApplicationRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.DeleteApplicationRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  applicationid_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteApplicationRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string applicationId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_applicationid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.DeleteApplicationRqst.applicationId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteApplicationRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.DeleteApplicationRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string applicationId = 1;
  if (this->applicationid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_applicationid().data(), static_cast<int>(this->_internal_applicationid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.DeleteApplicationRqst.applicationId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_applicationid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.DeleteApplicationRqst)
  return target;
}

size_t DeleteApplicationRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.DeleteApplicationRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string applicationId = 1;
  if (this->applicationid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_applicationid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteApplicationRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.DeleteApplicationRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteApplicationRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteApplicationRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.DeleteApplicationRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.DeleteApplicationRqst)
    MergeFrom(*source);
  }
}

void DeleteApplicationRqst::MergeFrom(const DeleteApplicationRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.DeleteApplicationRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.applicationid().size() > 0) {
    _internal_set_applicationid(from._internal_applicationid());
  }
}

void DeleteApplicationRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.DeleteApplicationRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteApplicationRqst::CopyFrom(const DeleteApplicationRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.DeleteApplicationRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteApplicationRqst::IsInitialized() const {
  return true;
}

void DeleteApplicationRqst::InternalSwap(DeleteApplicationRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  applicationid_.Swap(&other->applicationid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteApplicationRqst::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[54]);
}

// ===================================================================

class DeleteApplicationRsp::_Internal {
 public:
};

DeleteApplicationRsp::DeleteApplicationRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.DeleteApplicationRsp)
}
DeleteApplicationRsp::DeleteApplicationRsp(const DeleteApplicationRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.DeleteApplicationRsp)
}

void DeleteApplicationRsp::SharedCtor() {
result_ = false;
}

DeleteApplicationRsp::~DeleteApplicationRsp() {
  // @@protoc_insertion_point(destructor:resource.DeleteApplicationRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteApplicationRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void DeleteApplicationRsp::ArenaDtor(void* object) {
  DeleteApplicationRsp* _this = reinterpret_cast< DeleteApplicationRsp* >(object);
  (void)_this;
}
void DeleteApplicationRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteApplicationRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeleteApplicationRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.DeleteApplicationRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteApplicationRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteApplicationRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.DeleteApplicationRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.DeleteApplicationRsp)
  return target;
}

size_t DeleteApplicationRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.DeleteApplicationRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteApplicationRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.DeleteApplicationRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteApplicationRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteApplicationRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.DeleteApplicationRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.DeleteApplicationRsp)
    MergeFrom(*source);
  }
}

void DeleteApplicationRsp::MergeFrom(const DeleteApplicationRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.DeleteApplicationRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void DeleteApplicationRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.DeleteApplicationRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteApplicationRsp::CopyFrom(const DeleteApplicationRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.DeleteApplicationRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteApplicationRsp::IsInitialized() const {
  return true;
}

void DeleteApplicationRsp::InternalSwap(DeleteApplicationRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteApplicationRsp::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[55]);
}

// ===================================================================

class AddApplicationActionsRqst::_Internal {
 public:
};

AddApplicationActionsRqst::AddApplicationActionsRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  actions_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.AddApplicationActionsRqst)
}
AddApplicationActionsRqst::AddApplicationActionsRqst(const AddApplicationActionsRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      actions_(from.actions_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  applicationid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_applicationid().empty()) {
    applicationid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_applicationid(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.AddApplicationActionsRqst)
}

void AddApplicationActionsRqst::SharedCtor() {
applicationid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

AddApplicationActionsRqst::~AddApplicationActionsRqst() {
  // @@protoc_insertion_point(destructor:resource.AddApplicationActionsRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddApplicationActionsRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  applicationid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AddApplicationActionsRqst::ArenaDtor(void* object) {
  AddApplicationActionsRqst* _this = reinterpret_cast< AddApplicationActionsRqst* >(object);
  (void)_this;
}
void AddApplicationActionsRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddApplicationActionsRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AddApplicationActionsRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.AddApplicationActionsRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  actions_.Clear();
  applicationid_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddApplicationActionsRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string applicationId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_applicationid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.AddApplicationActionsRqst.applicationId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string actions = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_actions();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.AddApplicationActionsRqst.actions"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddApplicationActionsRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.AddApplicationActionsRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string applicationId = 1;
  if (this->applicationid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_applicationid().data(), static_cast<int>(this->_internal_applicationid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.AddApplicationActionsRqst.applicationId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_applicationid(), target);
  }

  // repeated string actions = 2;
  for (int i = 0, n = this->_internal_actions_size(); i < n; i++) {
    const auto& s = this->_internal_actions(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.AddApplicationActionsRqst.actions");
    target = stream->WriteString(2, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.AddApplicationActionsRqst)
  return target;
}

size_t AddApplicationActionsRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.AddApplicationActionsRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string actions = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(actions_.size());
  for (int i = 0, n = actions_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      actions_.Get(i));
  }

  // string applicationId = 1;
  if (this->applicationid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_applicationid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddApplicationActionsRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.AddApplicationActionsRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const AddApplicationActionsRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddApplicationActionsRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.AddApplicationActionsRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.AddApplicationActionsRqst)
    MergeFrom(*source);
  }
}

void AddApplicationActionsRqst::MergeFrom(const AddApplicationActionsRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.AddApplicationActionsRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  actions_.MergeFrom(from.actions_);
  if (from.applicationid().size() > 0) {
    _internal_set_applicationid(from._internal_applicationid());
  }
}

void AddApplicationActionsRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.AddApplicationActionsRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddApplicationActionsRqst::CopyFrom(const AddApplicationActionsRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.AddApplicationActionsRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddApplicationActionsRqst::IsInitialized() const {
  return true;
}

void AddApplicationActionsRqst::InternalSwap(AddApplicationActionsRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  actions_.InternalSwap(&other->actions_);
  applicationid_.Swap(&other->applicationid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata AddApplicationActionsRqst::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[56]);
}

// ===================================================================

class AddApplicationActionsRsp::_Internal {
 public:
};

AddApplicationActionsRsp::AddApplicationActionsRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.AddApplicationActionsRsp)
}
AddApplicationActionsRsp::AddApplicationActionsRsp(const AddApplicationActionsRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.AddApplicationActionsRsp)
}

void AddApplicationActionsRsp::SharedCtor() {
result_ = false;
}

AddApplicationActionsRsp::~AddApplicationActionsRsp() {
  // @@protoc_insertion_point(destructor:resource.AddApplicationActionsRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddApplicationActionsRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void AddApplicationActionsRsp::ArenaDtor(void* object) {
  AddApplicationActionsRsp* _this = reinterpret_cast< AddApplicationActionsRsp* >(object);
  (void)_this;
}
void AddApplicationActionsRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddApplicationActionsRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AddApplicationActionsRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.AddApplicationActionsRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddApplicationActionsRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddApplicationActionsRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.AddApplicationActionsRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.AddApplicationActionsRsp)
  return target;
}

size_t AddApplicationActionsRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.AddApplicationActionsRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddApplicationActionsRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.AddApplicationActionsRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const AddApplicationActionsRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddApplicationActionsRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.AddApplicationActionsRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.AddApplicationActionsRsp)
    MergeFrom(*source);
  }
}

void AddApplicationActionsRsp::MergeFrom(const AddApplicationActionsRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.AddApplicationActionsRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void AddApplicationActionsRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.AddApplicationActionsRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddApplicationActionsRsp::CopyFrom(const AddApplicationActionsRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.AddApplicationActionsRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddApplicationActionsRsp::IsInitialized() const {
  return true;
}

void AddApplicationActionsRsp::InternalSwap(AddApplicationActionsRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AddApplicationActionsRsp::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[57]);
}

// ===================================================================

class RemoveApplicationActionRqst::_Internal {
 public:
};

RemoveApplicationActionRqst::RemoveApplicationActionRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.RemoveApplicationActionRqst)
}
RemoveApplicationActionRqst::RemoveApplicationActionRqst(const RemoveApplicationActionRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  applicationid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_applicationid().empty()) {
    applicationid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_applicationid(), 
      GetArena());
  }
  action_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_action().empty()) {
    action_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_action(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.RemoveApplicationActionRqst)
}

void RemoveApplicationActionRqst::SharedCtor() {
applicationid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
action_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

RemoveApplicationActionRqst::~RemoveApplicationActionRqst() {
  // @@protoc_insertion_point(destructor:resource.RemoveApplicationActionRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemoveApplicationActionRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  applicationid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  action_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RemoveApplicationActionRqst::ArenaDtor(void* object) {
  RemoveApplicationActionRqst* _this = reinterpret_cast< RemoveApplicationActionRqst* >(object);
  (void)_this;
}
void RemoveApplicationActionRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemoveApplicationActionRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RemoveApplicationActionRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.RemoveApplicationActionRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  applicationid_.ClearToEmpty();
  action_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveApplicationActionRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string applicationId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_applicationid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.RemoveApplicationActionRqst.applicationId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string action = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_action();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.RemoveApplicationActionRqst.action"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemoveApplicationActionRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.RemoveApplicationActionRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string applicationId = 1;
  if (this->applicationid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_applicationid().data(), static_cast<int>(this->_internal_applicationid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.RemoveApplicationActionRqst.applicationId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_applicationid(), target);
  }

  // string action = 2;
  if (this->action().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_action().data(), static_cast<int>(this->_internal_action().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.RemoveApplicationActionRqst.action");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_action(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.RemoveApplicationActionRqst)
  return target;
}

size_t RemoveApplicationActionRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.RemoveApplicationActionRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string applicationId = 1;
  if (this->applicationid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_applicationid());
  }

  // string action = 2;
  if (this->action().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_action());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveApplicationActionRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.RemoveApplicationActionRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveApplicationActionRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemoveApplicationActionRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.RemoveApplicationActionRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.RemoveApplicationActionRqst)
    MergeFrom(*source);
  }
}

void RemoveApplicationActionRqst::MergeFrom(const RemoveApplicationActionRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.RemoveApplicationActionRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.applicationid().size() > 0) {
    _internal_set_applicationid(from._internal_applicationid());
  }
  if (from.action().size() > 0) {
    _internal_set_action(from._internal_action());
  }
}

void RemoveApplicationActionRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.RemoveApplicationActionRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveApplicationActionRqst::CopyFrom(const RemoveApplicationActionRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.RemoveApplicationActionRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveApplicationActionRqst::IsInitialized() const {
  return true;
}

void RemoveApplicationActionRqst::InternalSwap(RemoveApplicationActionRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  applicationid_.Swap(&other->applicationid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  action_.Swap(&other->action_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveApplicationActionRqst::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[58]);
}

// ===================================================================

class RemoveApplicationActionRsp::_Internal {
 public:
};

RemoveApplicationActionRsp::RemoveApplicationActionRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.RemoveApplicationActionRsp)
}
RemoveApplicationActionRsp::RemoveApplicationActionRsp(const RemoveApplicationActionRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.RemoveApplicationActionRsp)
}

void RemoveApplicationActionRsp::SharedCtor() {
result_ = false;
}

RemoveApplicationActionRsp::~RemoveApplicationActionRsp() {
  // @@protoc_insertion_point(destructor:resource.RemoveApplicationActionRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemoveApplicationActionRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RemoveApplicationActionRsp::ArenaDtor(void* object) {
  RemoveApplicationActionRsp* _this = reinterpret_cast< RemoveApplicationActionRsp* >(object);
  (void)_this;
}
void RemoveApplicationActionRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemoveApplicationActionRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RemoveApplicationActionRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.RemoveApplicationActionRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveApplicationActionRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemoveApplicationActionRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.RemoveApplicationActionRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.RemoveApplicationActionRsp)
  return target;
}

size_t RemoveApplicationActionRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.RemoveApplicationActionRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveApplicationActionRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.RemoveApplicationActionRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveApplicationActionRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemoveApplicationActionRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.RemoveApplicationActionRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.RemoveApplicationActionRsp)
    MergeFrom(*source);
  }
}

void RemoveApplicationActionRsp::MergeFrom(const RemoveApplicationActionRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.RemoveApplicationActionRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void RemoveApplicationActionRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.RemoveApplicationActionRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveApplicationActionRsp::CopyFrom(const RemoveApplicationActionRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.RemoveApplicationActionRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveApplicationActionRsp::IsInitialized() const {
  return true;
}

void RemoveApplicationActionRsp::InternalSwap(RemoveApplicationActionRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveApplicationActionRsp::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[59]);
}

// ===================================================================

class RemoveApplicationsActionRqst::_Internal {
 public:
};

RemoveApplicationsActionRqst::RemoveApplicationsActionRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.RemoveApplicationsActionRqst)
}
RemoveApplicationsActionRqst::RemoveApplicationsActionRqst(const RemoveApplicationsActionRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  action_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_action().empty()) {
    action_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_action(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.RemoveApplicationsActionRqst)
}

void RemoveApplicationsActionRqst::SharedCtor() {
action_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

RemoveApplicationsActionRqst::~RemoveApplicationsActionRqst() {
  // @@protoc_insertion_point(destructor:resource.RemoveApplicationsActionRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemoveApplicationsActionRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  action_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RemoveApplicationsActionRqst::ArenaDtor(void* object) {
  RemoveApplicationsActionRqst* _this = reinterpret_cast< RemoveApplicationsActionRqst* >(object);
  (void)_this;
}
void RemoveApplicationsActionRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemoveApplicationsActionRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RemoveApplicationsActionRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.RemoveApplicationsActionRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  action_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveApplicationsActionRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string action = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_action();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.RemoveApplicationsActionRqst.action"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemoveApplicationsActionRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.RemoveApplicationsActionRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string action = 2;
  if (this->action().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_action().data(), static_cast<int>(this->_internal_action().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.RemoveApplicationsActionRqst.action");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_action(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.RemoveApplicationsActionRqst)
  return target;
}

size_t RemoveApplicationsActionRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.RemoveApplicationsActionRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string action = 2;
  if (this->action().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_action());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveApplicationsActionRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.RemoveApplicationsActionRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveApplicationsActionRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemoveApplicationsActionRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.RemoveApplicationsActionRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.RemoveApplicationsActionRqst)
    MergeFrom(*source);
  }
}

void RemoveApplicationsActionRqst::MergeFrom(const RemoveApplicationsActionRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.RemoveApplicationsActionRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.action().size() > 0) {
    _internal_set_action(from._internal_action());
  }
}

void RemoveApplicationsActionRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.RemoveApplicationsActionRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveApplicationsActionRqst::CopyFrom(const RemoveApplicationsActionRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.RemoveApplicationsActionRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveApplicationsActionRqst::IsInitialized() const {
  return true;
}

void RemoveApplicationsActionRqst::InternalSwap(RemoveApplicationsActionRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  action_.Swap(&other->action_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveApplicationsActionRqst::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[60]);
}

// ===================================================================

class RemoveApplicationsActionRsp::_Internal {
 public:
};

RemoveApplicationsActionRsp::RemoveApplicationsActionRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.RemoveApplicationsActionRsp)
}
RemoveApplicationsActionRsp::RemoveApplicationsActionRsp(const RemoveApplicationsActionRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.RemoveApplicationsActionRsp)
}

void RemoveApplicationsActionRsp::SharedCtor() {
result_ = false;
}

RemoveApplicationsActionRsp::~RemoveApplicationsActionRsp() {
  // @@protoc_insertion_point(destructor:resource.RemoveApplicationsActionRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemoveApplicationsActionRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RemoveApplicationsActionRsp::ArenaDtor(void* object) {
  RemoveApplicationsActionRsp* _this = reinterpret_cast< RemoveApplicationsActionRsp* >(object);
  (void)_this;
}
void RemoveApplicationsActionRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemoveApplicationsActionRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RemoveApplicationsActionRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.RemoveApplicationsActionRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveApplicationsActionRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemoveApplicationsActionRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.RemoveApplicationsActionRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.RemoveApplicationsActionRsp)
  return target;
}

size_t RemoveApplicationsActionRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.RemoveApplicationsActionRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveApplicationsActionRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.RemoveApplicationsActionRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveApplicationsActionRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemoveApplicationsActionRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.RemoveApplicationsActionRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.RemoveApplicationsActionRsp)
    MergeFrom(*source);
  }
}

void RemoveApplicationsActionRsp::MergeFrom(const RemoveApplicationsActionRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.RemoveApplicationsActionRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void RemoveApplicationsActionRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.RemoveApplicationsActionRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveApplicationsActionRsp::CopyFrom(const RemoveApplicationsActionRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.RemoveApplicationsActionRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveApplicationsActionRsp::IsInitialized() const {
  return true;
}

void RemoveApplicationsActionRsp::InternalSwap(RemoveApplicationsActionRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveApplicationsActionRsp::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[61]);
}

// ===================================================================

class GetApplicationsRqst::_Internal {
 public:
};

GetApplicationsRqst::GetApplicationsRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.GetApplicationsRqst)
}
GetApplicationsRqst::GetApplicationsRqst(const GetApplicationsRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  query_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_query().empty()) {
    query_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_query(), 
      GetArena());
  }
  options_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_options().empty()) {
    options_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_options(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.GetApplicationsRqst)
}

void GetApplicationsRqst::SharedCtor() {
query_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
options_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetApplicationsRqst::~GetApplicationsRqst() {
  // @@protoc_insertion_point(destructor:resource.GetApplicationsRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetApplicationsRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  query_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  options_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetApplicationsRqst::ArenaDtor(void* object) {
  GetApplicationsRqst* _this = reinterpret_cast< GetApplicationsRqst* >(object);
  (void)_this;
}
void GetApplicationsRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetApplicationsRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetApplicationsRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.GetApplicationsRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_.ClearToEmpty();
  options_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetApplicationsRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string query = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_query();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.GetApplicationsRqst.query"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string options = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_options();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.GetApplicationsRqst.options"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetApplicationsRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.GetApplicationsRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_query().data(), static_cast<int>(this->_internal_query().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.GetApplicationsRqst.query");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_query(), target);
  }

  // string options = 2;
  if (this->options().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_options().data(), static_cast<int>(this->_internal_options().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.GetApplicationsRqst.options");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_options(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.GetApplicationsRqst)
  return target;
}

size_t GetApplicationsRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.GetApplicationsRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_query());
  }

  // string options = 2;
  if (this->options().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_options());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetApplicationsRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.GetApplicationsRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const GetApplicationsRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetApplicationsRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.GetApplicationsRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.GetApplicationsRqst)
    MergeFrom(*source);
  }
}

void GetApplicationsRqst::MergeFrom(const GetApplicationsRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.GetApplicationsRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query().size() > 0) {
    _internal_set_query(from._internal_query());
  }
  if (from.options().size() > 0) {
    _internal_set_options(from._internal_options());
  }
}

void GetApplicationsRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.GetApplicationsRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetApplicationsRqst::CopyFrom(const GetApplicationsRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.GetApplicationsRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetApplicationsRqst::IsInitialized() const {
  return true;
}

void GetApplicationsRqst::InternalSwap(GetApplicationsRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  query_.Swap(&other->query_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  options_.Swap(&other->options_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetApplicationsRqst::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[62]);
}

// ===================================================================

class GetApplicationsRsp::_Internal {
 public:
};

GetApplicationsRsp::GetApplicationsRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  applications_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.GetApplicationsRsp)
}
GetApplicationsRsp::GetApplicationsRsp(const GetApplicationsRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      applications_(from.applications_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:resource.GetApplicationsRsp)
}

void GetApplicationsRsp::SharedCtor() {
}

GetApplicationsRsp::~GetApplicationsRsp() {
  // @@protoc_insertion_point(destructor:resource.GetApplicationsRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetApplicationsRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetApplicationsRsp::ArenaDtor(void* object) {
  GetApplicationsRsp* _this = reinterpret_cast< GetApplicationsRsp* >(object);
  (void)_this;
}
void GetApplicationsRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetApplicationsRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetApplicationsRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.GetApplicationsRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  applications_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetApplicationsRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .resource.Application applications = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_applications(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetApplicationsRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.GetApplicationsRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .resource.Application applications = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_applications_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_applications(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.GetApplicationsRsp)
  return target;
}

size_t GetApplicationsRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.GetApplicationsRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .resource.Application applications = 1;
  total_size += 1UL * this->_internal_applications_size();
  for (const auto& msg : this->applications_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetApplicationsRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.GetApplicationsRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetApplicationsRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetApplicationsRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.GetApplicationsRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.GetApplicationsRsp)
    MergeFrom(*source);
  }
}

void GetApplicationsRsp::MergeFrom(const GetApplicationsRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.GetApplicationsRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  applications_.MergeFrom(from.applications_);
}

void GetApplicationsRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.GetApplicationsRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetApplicationsRsp::CopyFrom(const GetApplicationsRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.GetApplicationsRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetApplicationsRsp::IsInitialized() const {
  return true;
}

void GetApplicationsRsp::InternalSwap(GetApplicationsRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  applications_.InternalSwap(&other->applications_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetApplicationsRsp::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[63]);
}

// ===================================================================

class GetApplicationVersionRqst::_Internal {
 public:
};

GetApplicationVersionRqst::GetApplicationVersionRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.GetApplicationVersionRqst)
}
GetApplicationVersionRqst::GetApplicationVersionRqst(const GetApplicationVersionRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.GetApplicationVersionRqst)
}

void GetApplicationVersionRqst::SharedCtor() {
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetApplicationVersionRqst::~GetApplicationVersionRqst() {
  // @@protoc_insertion_point(destructor:resource.GetApplicationVersionRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetApplicationVersionRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetApplicationVersionRqst::ArenaDtor(void* object) {
  GetApplicationVersionRqst* _this = reinterpret_cast< GetApplicationVersionRqst* >(object);
  (void)_this;
}
void GetApplicationVersionRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetApplicationVersionRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetApplicationVersionRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.GetApplicationVersionRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetApplicationVersionRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.GetApplicationVersionRqst.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetApplicationVersionRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.GetApplicationVersionRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.GetApplicationVersionRqst.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.GetApplicationVersionRqst)
  return target;
}

size_t GetApplicationVersionRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.GetApplicationVersionRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetApplicationVersionRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.GetApplicationVersionRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const GetApplicationVersionRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetApplicationVersionRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.GetApplicationVersionRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.GetApplicationVersionRqst)
    MergeFrom(*source);
  }
}

void GetApplicationVersionRqst::MergeFrom(const GetApplicationVersionRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.GetApplicationVersionRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
}

void GetApplicationVersionRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.GetApplicationVersionRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetApplicationVersionRqst::CopyFrom(const GetApplicationVersionRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.GetApplicationVersionRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetApplicationVersionRqst::IsInitialized() const {
  return true;
}

void GetApplicationVersionRqst::InternalSwap(GetApplicationVersionRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetApplicationVersionRqst::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[64]);
}

// ===================================================================

class GetApplicationVersionRsp::_Internal {
 public:
};

GetApplicationVersionRsp::GetApplicationVersionRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.GetApplicationVersionRsp)
}
GetApplicationVersionRsp::GetApplicationVersionRsp(const GetApplicationVersionRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_version().empty()) {
    version_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_version(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.GetApplicationVersionRsp)
}

void GetApplicationVersionRsp::SharedCtor() {
version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetApplicationVersionRsp::~GetApplicationVersionRsp() {
  // @@protoc_insertion_point(destructor:resource.GetApplicationVersionRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetApplicationVersionRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  version_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetApplicationVersionRsp::ArenaDtor(void* object) {
  GetApplicationVersionRsp* _this = reinterpret_cast< GetApplicationVersionRsp* >(object);
  (void)_this;
}
void GetApplicationVersionRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetApplicationVersionRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetApplicationVersionRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.GetApplicationVersionRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  version_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetApplicationVersionRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string version = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_version();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.GetApplicationVersionRsp.version"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetApplicationVersionRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.GetApplicationVersionRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string version = 1;
  if (this->version().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_version().data(), static_cast<int>(this->_internal_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.GetApplicationVersionRsp.version");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_version(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.GetApplicationVersionRsp)
  return target;
}

size_t GetApplicationVersionRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.GetApplicationVersionRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string version = 1;
  if (this->version().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_version());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetApplicationVersionRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.GetApplicationVersionRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetApplicationVersionRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetApplicationVersionRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.GetApplicationVersionRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.GetApplicationVersionRsp)
    MergeFrom(*source);
  }
}

void GetApplicationVersionRsp::MergeFrom(const GetApplicationVersionRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.GetApplicationVersionRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.version().size() > 0) {
    _internal_set_version(from._internal_version());
  }
}

void GetApplicationVersionRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.GetApplicationVersionRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetApplicationVersionRsp::CopyFrom(const GetApplicationVersionRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.GetApplicationVersionRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetApplicationVersionRsp::IsInitialized() const {
  return true;
}

void GetApplicationVersionRsp::InternalSwap(GetApplicationVersionRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  version_.Swap(&other->version_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetApplicationVersionRsp::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[65]);
}

// ===================================================================

class GetApplicationIconRqst::_Internal {
 public:
};

GetApplicationIconRqst::GetApplicationIconRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.GetApplicationIconRqst)
}
GetApplicationIconRqst::GetApplicationIconRqst(const GetApplicationIconRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.GetApplicationIconRqst)
}

void GetApplicationIconRqst::SharedCtor() {
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetApplicationIconRqst::~GetApplicationIconRqst() {
  // @@protoc_insertion_point(destructor:resource.GetApplicationIconRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetApplicationIconRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetApplicationIconRqst::ArenaDtor(void* object) {
  GetApplicationIconRqst* _this = reinterpret_cast< GetApplicationIconRqst* >(object);
  (void)_this;
}
void GetApplicationIconRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetApplicationIconRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetApplicationIconRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.GetApplicationIconRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetApplicationIconRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.GetApplicationIconRqst.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetApplicationIconRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.GetApplicationIconRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.GetApplicationIconRqst.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.GetApplicationIconRqst)
  return target;
}

size_t GetApplicationIconRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.GetApplicationIconRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetApplicationIconRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.GetApplicationIconRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const GetApplicationIconRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetApplicationIconRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.GetApplicationIconRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.GetApplicationIconRqst)
    MergeFrom(*source);
  }
}

void GetApplicationIconRqst::MergeFrom(const GetApplicationIconRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.GetApplicationIconRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
}

void GetApplicationIconRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.GetApplicationIconRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetApplicationIconRqst::CopyFrom(const GetApplicationIconRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.GetApplicationIconRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetApplicationIconRqst::IsInitialized() const {
  return true;
}

void GetApplicationIconRqst::InternalSwap(GetApplicationIconRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetApplicationIconRqst::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[66]);
}

// ===================================================================

class GetApplicationIconRsp::_Internal {
 public:
};

GetApplicationIconRsp::GetApplicationIconRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.GetApplicationIconRsp)
}
GetApplicationIconRsp::GetApplicationIconRsp(const GetApplicationIconRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  icon_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_icon().empty()) {
    icon_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_icon(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.GetApplicationIconRsp)
}

void GetApplicationIconRsp::SharedCtor() {
icon_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetApplicationIconRsp::~GetApplicationIconRsp() {
  // @@protoc_insertion_point(destructor:resource.GetApplicationIconRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetApplicationIconRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  icon_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetApplicationIconRsp::ArenaDtor(void* object) {
  GetApplicationIconRsp* _this = reinterpret_cast< GetApplicationIconRsp* >(object);
  (void)_this;
}
void GetApplicationIconRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetApplicationIconRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetApplicationIconRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.GetApplicationIconRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  icon_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetApplicationIconRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string icon = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_icon();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.GetApplicationIconRsp.icon"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetApplicationIconRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.GetApplicationIconRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string icon = 1;
  if (this->icon().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_icon().data(), static_cast<int>(this->_internal_icon().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.GetApplicationIconRsp.icon");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_icon(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.GetApplicationIconRsp)
  return target;
}

size_t GetApplicationIconRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.GetApplicationIconRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string icon = 1;
  if (this->icon().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_icon());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetApplicationIconRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.GetApplicationIconRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetApplicationIconRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetApplicationIconRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.GetApplicationIconRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.GetApplicationIconRsp)
    MergeFrom(*source);
  }
}

void GetApplicationIconRsp::MergeFrom(const GetApplicationIconRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.GetApplicationIconRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.icon().size() > 0) {
    _internal_set_icon(from._internal_icon());
  }
}

void GetApplicationIconRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.GetApplicationIconRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetApplicationIconRsp::CopyFrom(const GetApplicationIconRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.GetApplicationIconRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetApplicationIconRsp::IsInitialized() const {
  return true;
}

void GetApplicationIconRsp::InternalSwap(GetApplicationIconRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  icon_.Swap(&other->icon_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetApplicationIconRsp::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[67]);
}

// ===================================================================

class GetApplicationAliasRqst::_Internal {
 public:
};

GetApplicationAliasRqst::GetApplicationAliasRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.GetApplicationAliasRqst)
}
GetApplicationAliasRqst::GetApplicationAliasRqst(const GetApplicationAliasRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.GetApplicationAliasRqst)
}

void GetApplicationAliasRqst::SharedCtor() {
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetApplicationAliasRqst::~GetApplicationAliasRqst() {
  // @@protoc_insertion_point(destructor:resource.GetApplicationAliasRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetApplicationAliasRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetApplicationAliasRqst::ArenaDtor(void* object) {
  GetApplicationAliasRqst* _this = reinterpret_cast< GetApplicationAliasRqst* >(object);
  (void)_this;
}
void GetApplicationAliasRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetApplicationAliasRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetApplicationAliasRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.GetApplicationAliasRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetApplicationAliasRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.GetApplicationAliasRqst.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetApplicationAliasRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.GetApplicationAliasRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.GetApplicationAliasRqst.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.GetApplicationAliasRqst)
  return target;
}

size_t GetApplicationAliasRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.GetApplicationAliasRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetApplicationAliasRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.GetApplicationAliasRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const GetApplicationAliasRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetApplicationAliasRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.GetApplicationAliasRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.GetApplicationAliasRqst)
    MergeFrom(*source);
  }
}

void GetApplicationAliasRqst::MergeFrom(const GetApplicationAliasRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.GetApplicationAliasRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
}

void GetApplicationAliasRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.GetApplicationAliasRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetApplicationAliasRqst::CopyFrom(const GetApplicationAliasRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.GetApplicationAliasRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetApplicationAliasRqst::IsInitialized() const {
  return true;
}

void GetApplicationAliasRqst::InternalSwap(GetApplicationAliasRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetApplicationAliasRqst::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[68]);
}

// ===================================================================

class GetApplicationAliasRsp::_Internal {
 public:
};

GetApplicationAliasRsp::GetApplicationAliasRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.GetApplicationAliasRsp)
}
GetApplicationAliasRsp::GetApplicationAliasRsp(const GetApplicationAliasRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  alias_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_alias().empty()) {
    alias_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_alias(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.GetApplicationAliasRsp)
}

void GetApplicationAliasRsp::SharedCtor() {
alias_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetApplicationAliasRsp::~GetApplicationAliasRsp() {
  // @@protoc_insertion_point(destructor:resource.GetApplicationAliasRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetApplicationAliasRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  alias_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetApplicationAliasRsp::ArenaDtor(void* object) {
  GetApplicationAliasRsp* _this = reinterpret_cast< GetApplicationAliasRsp* >(object);
  (void)_this;
}
void GetApplicationAliasRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetApplicationAliasRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetApplicationAliasRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.GetApplicationAliasRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  alias_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetApplicationAliasRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string alias = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_alias();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.GetApplicationAliasRsp.alias"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetApplicationAliasRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.GetApplicationAliasRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string alias = 1;
  if (this->alias().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_alias().data(), static_cast<int>(this->_internal_alias().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.GetApplicationAliasRsp.alias");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_alias(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.GetApplicationAliasRsp)
  return target;
}

size_t GetApplicationAliasRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.GetApplicationAliasRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string alias = 1;
  if (this->alias().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_alias());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetApplicationAliasRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.GetApplicationAliasRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetApplicationAliasRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetApplicationAliasRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.GetApplicationAliasRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.GetApplicationAliasRsp)
    MergeFrom(*source);
  }
}

void GetApplicationAliasRsp::MergeFrom(const GetApplicationAliasRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.GetApplicationAliasRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.alias().size() > 0) {
    _internal_set_alias(from._internal_alias());
  }
}

void GetApplicationAliasRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.GetApplicationAliasRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetApplicationAliasRsp::CopyFrom(const GetApplicationAliasRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.GetApplicationAliasRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetApplicationAliasRsp::IsInitialized() const {
  return true;
}

void GetApplicationAliasRsp::InternalSwap(GetApplicationAliasRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  alias_.Swap(&other->alias_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetApplicationAliasRsp::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[69]);
}

// ===================================================================

class Group::_Internal {
 public:
};

Group::Group(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  members_(arena),
  organizations_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.Group)
}
Group::Group(const Group& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      members_(from.members_),
      organizations_(from.organizations_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArena());
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  domain_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_domain().empty()) {
    domain_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_domain(), 
      GetArena());
  }
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_description().empty()) {
    description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_description(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.Group)
}

void Group::SharedCtor() {
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
domain_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Group::~Group() {
  // @@protoc_insertion_point(destructor:resource.Group)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Group::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  domain_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Group::ArenaDtor(void* object) {
  Group* _this = reinterpret_cast< Group* >(object);
  (void)_this;
}
void Group::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Group::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Group::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.Group)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  members_.Clear();
  organizations_.Clear();
  id_.ClearToEmpty();
  name_.ClearToEmpty();
  domain_.ClearToEmpty();
  description_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Group::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Group.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Group.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string domain = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_domain();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Group.domain"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string description = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_description();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Group.description"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string members = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_members();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Group.members"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated string organizations = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_organizations();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Group.organizations"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Group::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.Group)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Group.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Group.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // string domain = 3;
  if (this->domain().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_domain().data(), static_cast<int>(this->_internal_domain().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Group.domain");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_domain(), target);
  }

  // string description = 4;
  if (this->description().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Group.description");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_description(), target);
  }

  // repeated string members = 5;
  for (int i = 0, n = this->_internal_members_size(); i < n; i++) {
    const auto& s = this->_internal_members(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Group.members");
    target = stream->WriteString(5, s, target);
  }

  // repeated string organizations = 6;
  for (int i = 0, n = this->_internal_organizations_size(); i < n; i++) {
    const auto& s = this->_internal_organizations(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Group.organizations");
    target = stream->WriteString(6, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.Group)
  return target;
}

size_t Group::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.Group)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string members = 5;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(members_.size());
  for (int i = 0, n = members_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      members_.Get(i));
  }

  // repeated string organizations = 6;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(organizations_.size());
  for (int i = 0, n = organizations_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      organizations_.Get(i));
  }

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string domain = 3;
  if (this->domain().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_domain());
  }

  // string description = 4;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Group::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.Group)
  GOOGLE_DCHECK_NE(&from, this);
  const Group* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Group>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.Group)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.Group)
    MergeFrom(*source);
  }
}

void Group::MergeFrom(const Group& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.Group)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  members_.MergeFrom(from.members_);
  organizations_.MergeFrom(from.organizations_);
  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.domain().size() > 0) {
    _internal_set_domain(from._internal_domain());
  }
  if (from.description().size() > 0) {
    _internal_set_description(from._internal_description());
  }
}

void Group::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.Group)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Group::CopyFrom(const Group& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.Group)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Group::IsInitialized() const {
  return true;
}

void Group::InternalSwap(Group* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  members_.InternalSwap(&other->members_);
  organizations_.InternalSwap(&other->organizations_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  domain_.Swap(&other->domain_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  description_.Swap(&other->description_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata Group::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[70]);
}

// ===================================================================

class CreateGroupRqst::_Internal {
 public:
  static const ::resource::Group& group(const CreateGroupRqst* msg);
};

const ::resource::Group&
CreateGroupRqst::_Internal::group(const CreateGroupRqst* msg) {
  return *msg->group_;
}
CreateGroupRqst::CreateGroupRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.CreateGroupRqst)
}
CreateGroupRqst::CreateGroupRqst(const CreateGroupRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_group()) {
    group_ = new ::resource::Group(*from.group_);
  } else {
    group_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:resource.CreateGroupRqst)
}

void CreateGroupRqst::SharedCtor() {
group_ = nullptr;
}

CreateGroupRqst::~CreateGroupRqst() {
  // @@protoc_insertion_point(destructor:resource.CreateGroupRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateGroupRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete group_;
}

void CreateGroupRqst::ArenaDtor(void* object) {
  CreateGroupRqst* _this = reinterpret_cast< CreateGroupRqst* >(object);
  (void)_this;
}
void CreateGroupRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateGroupRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateGroupRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.CreateGroupRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && group_ != nullptr) {
    delete group_;
  }
  group_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateGroupRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .resource.Group group = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_group(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateGroupRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.CreateGroupRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .resource.Group group = 1;
  if (this->has_group()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::group(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.CreateGroupRqst)
  return target;
}

size_t CreateGroupRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.CreateGroupRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .resource.Group group = 1;
  if (this->has_group()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *group_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateGroupRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.CreateGroupRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateGroupRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateGroupRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.CreateGroupRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.CreateGroupRqst)
    MergeFrom(*source);
  }
}

void CreateGroupRqst::MergeFrom(const CreateGroupRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.CreateGroupRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_group()) {
    _internal_mutable_group()->::resource::Group::MergeFrom(from._internal_group());
  }
}

void CreateGroupRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.CreateGroupRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateGroupRqst::CopyFrom(const CreateGroupRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.CreateGroupRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateGroupRqst::IsInitialized() const {
  return true;
}

void CreateGroupRqst::InternalSwap(CreateGroupRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(group_, other->group_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateGroupRqst::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[71]);
}

// ===================================================================

class CreateGroupRsp::_Internal {
 public:
};

CreateGroupRsp::CreateGroupRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.CreateGroupRsp)
}
CreateGroupRsp::CreateGroupRsp(const CreateGroupRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.CreateGroupRsp)
}

void CreateGroupRsp::SharedCtor() {
result_ = false;
}

CreateGroupRsp::~CreateGroupRsp() {
  // @@protoc_insertion_point(destructor:resource.CreateGroupRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateGroupRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CreateGroupRsp::ArenaDtor(void* object) {
  CreateGroupRsp* _this = reinterpret_cast< CreateGroupRsp* >(object);
  (void)_this;
}
void CreateGroupRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateGroupRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateGroupRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.CreateGroupRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateGroupRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateGroupRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.CreateGroupRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.CreateGroupRsp)
  return target;
}

size_t CreateGroupRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.CreateGroupRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateGroupRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.CreateGroupRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateGroupRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateGroupRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.CreateGroupRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.CreateGroupRsp)
    MergeFrom(*source);
  }
}

void CreateGroupRsp::MergeFrom(const CreateGroupRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.CreateGroupRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void CreateGroupRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.CreateGroupRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateGroupRsp::CopyFrom(const CreateGroupRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.CreateGroupRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateGroupRsp::IsInitialized() const {
  return true;
}

void CreateGroupRsp::InternalSwap(CreateGroupRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateGroupRsp::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[72]);
}

// ===================================================================

class UpdateGroupRqst::_Internal {
 public:
};

UpdateGroupRqst::UpdateGroupRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.UpdateGroupRqst)
}
UpdateGroupRqst::UpdateGroupRqst(const UpdateGroupRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  groupid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_groupid().empty()) {
    groupid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_groupid(), 
      GetArena());
  }
  values_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_values().empty()) {
    values_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_values(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.UpdateGroupRqst)
}

void UpdateGroupRqst::SharedCtor() {
groupid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
values_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

UpdateGroupRqst::~UpdateGroupRqst() {
  // @@protoc_insertion_point(destructor:resource.UpdateGroupRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UpdateGroupRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  groupid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  values_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void UpdateGroupRqst::ArenaDtor(void* object) {
  UpdateGroupRqst* _this = reinterpret_cast< UpdateGroupRqst* >(object);
  (void)_this;
}
void UpdateGroupRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateGroupRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UpdateGroupRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.UpdateGroupRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  groupid_.ClearToEmpty();
  values_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateGroupRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string groupId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_groupid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.UpdateGroupRqst.groupId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string values = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_values();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.UpdateGroupRqst.values"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateGroupRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.UpdateGroupRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string groupId = 1;
  if (this->groupid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_groupid().data(), static_cast<int>(this->_internal_groupid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.UpdateGroupRqst.groupId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_groupid(), target);
  }

  // string values = 2;
  if (this->values().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_values().data(), static_cast<int>(this->_internal_values().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.UpdateGroupRqst.values");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_values(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.UpdateGroupRqst)
  return target;
}

size_t UpdateGroupRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.UpdateGroupRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string groupId = 1;
  if (this->groupid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_groupid());
  }

  // string values = 2;
  if (this->values().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_values());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateGroupRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.UpdateGroupRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateGroupRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateGroupRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.UpdateGroupRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.UpdateGroupRqst)
    MergeFrom(*source);
  }
}

void UpdateGroupRqst::MergeFrom(const UpdateGroupRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.UpdateGroupRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.groupid().size() > 0) {
    _internal_set_groupid(from._internal_groupid());
  }
  if (from.values().size() > 0) {
    _internal_set_values(from._internal_values());
  }
}

void UpdateGroupRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.UpdateGroupRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateGroupRqst::CopyFrom(const UpdateGroupRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.UpdateGroupRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateGroupRqst::IsInitialized() const {
  return true;
}

void UpdateGroupRqst::InternalSwap(UpdateGroupRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  groupid_.Swap(&other->groupid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  values_.Swap(&other->values_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateGroupRqst::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[73]);
}

// ===================================================================

class UpdateGroupRsp::_Internal {
 public:
};

UpdateGroupRsp::UpdateGroupRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.UpdateGroupRsp)
}
UpdateGroupRsp::UpdateGroupRsp(const UpdateGroupRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.UpdateGroupRsp)
}

void UpdateGroupRsp::SharedCtor() {
result_ = false;
}

UpdateGroupRsp::~UpdateGroupRsp() {
  // @@protoc_insertion_point(destructor:resource.UpdateGroupRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UpdateGroupRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void UpdateGroupRsp::ArenaDtor(void* object) {
  UpdateGroupRsp* _this = reinterpret_cast< UpdateGroupRsp* >(object);
  (void)_this;
}
void UpdateGroupRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateGroupRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UpdateGroupRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.UpdateGroupRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateGroupRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateGroupRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.UpdateGroupRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.UpdateGroupRsp)
  return target;
}

size_t UpdateGroupRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.UpdateGroupRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateGroupRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.UpdateGroupRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateGroupRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateGroupRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.UpdateGroupRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.UpdateGroupRsp)
    MergeFrom(*source);
  }
}

void UpdateGroupRsp::MergeFrom(const UpdateGroupRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.UpdateGroupRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void UpdateGroupRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.UpdateGroupRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateGroupRsp::CopyFrom(const UpdateGroupRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.UpdateGroupRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateGroupRsp::IsInitialized() const {
  return true;
}

void UpdateGroupRsp::InternalSwap(UpdateGroupRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateGroupRsp::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[74]);
}

// ===================================================================

class GetGroupsRqst::_Internal {
 public:
};

GetGroupsRqst::GetGroupsRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.GetGroupsRqst)
}
GetGroupsRqst::GetGroupsRqst(const GetGroupsRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  query_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_query().empty()) {
    query_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_query(), 
      GetArena());
  }
  options_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_options().empty()) {
    options_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_options(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.GetGroupsRqst)
}

void GetGroupsRqst::SharedCtor() {
query_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
options_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetGroupsRqst::~GetGroupsRqst() {
  // @@protoc_insertion_point(destructor:resource.GetGroupsRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetGroupsRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  query_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  options_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetGroupsRqst::ArenaDtor(void* object) {
  GetGroupsRqst* _this = reinterpret_cast< GetGroupsRqst* >(object);
  (void)_this;
}
void GetGroupsRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetGroupsRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetGroupsRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.GetGroupsRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_.ClearToEmpty();
  options_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetGroupsRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string query = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_query();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.GetGroupsRqst.query"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string options = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_options();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.GetGroupsRqst.options"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetGroupsRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.GetGroupsRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_query().data(), static_cast<int>(this->_internal_query().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.GetGroupsRqst.query");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_query(), target);
  }

  // string options = 2;
  if (this->options().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_options().data(), static_cast<int>(this->_internal_options().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.GetGroupsRqst.options");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_options(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.GetGroupsRqst)
  return target;
}

size_t GetGroupsRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.GetGroupsRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_query());
  }

  // string options = 2;
  if (this->options().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_options());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetGroupsRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.GetGroupsRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const GetGroupsRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetGroupsRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.GetGroupsRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.GetGroupsRqst)
    MergeFrom(*source);
  }
}

void GetGroupsRqst::MergeFrom(const GetGroupsRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.GetGroupsRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query().size() > 0) {
    _internal_set_query(from._internal_query());
  }
  if (from.options().size() > 0) {
    _internal_set_options(from._internal_options());
  }
}

void GetGroupsRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.GetGroupsRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetGroupsRqst::CopyFrom(const GetGroupsRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.GetGroupsRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetGroupsRqst::IsInitialized() const {
  return true;
}

void GetGroupsRqst::InternalSwap(GetGroupsRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  query_.Swap(&other->query_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  options_.Swap(&other->options_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetGroupsRqst::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[75]);
}

// ===================================================================

class GetGroupsRsp::_Internal {
 public:
};

GetGroupsRsp::GetGroupsRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  groups_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.GetGroupsRsp)
}
GetGroupsRsp::GetGroupsRsp(const GetGroupsRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      groups_(from.groups_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:resource.GetGroupsRsp)
}

void GetGroupsRsp::SharedCtor() {
}

GetGroupsRsp::~GetGroupsRsp() {
  // @@protoc_insertion_point(destructor:resource.GetGroupsRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetGroupsRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetGroupsRsp::ArenaDtor(void* object) {
  GetGroupsRsp* _this = reinterpret_cast< GetGroupsRsp* >(object);
  (void)_this;
}
void GetGroupsRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetGroupsRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetGroupsRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.GetGroupsRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  groups_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetGroupsRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .resource.Group groups = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_groups(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetGroupsRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.GetGroupsRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .resource.Group groups = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_groups_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_groups(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.GetGroupsRsp)
  return target;
}

size_t GetGroupsRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.GetGroupsRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .resource.Group groups = 1;
  total_size += 1UL * this->_internal_groups_size();
  for (const auto& msg : this->groups_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetGroupsRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.GetGroupsRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetGroupsRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetGroupsRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.GetGroupsRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.GetGroupsRsp)
    MergeFrom(*source);
  }
}

void GetGroupsRsp::MergeFrom(const GetGroupsRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.GetGroupsRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  groups_.MergeFrom(from.groups_);
}

void GetGroupsRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.GetGroupsRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetGroupsRsp::CopyFrom(const GetGroupsRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.GetGroupsRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetGroupsRsp::IsInitialized() const {
  return true;
}

void GetGroupsRsp::InternalSwap(GetGroupsRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  groups_.InternalSwap(&other->groups_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetGroupsRsp::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[76]);
}

// ===================================================================

class DeleteGroupRqst::_Internal {
 public:
};

DeleteGroupRqst::DeleteGroupRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.DeleteGroupRqst)
}
DeleteGroupRqst::DeleteGroupRqst(const DeleteGroupRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  group_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_group().empty()) {
    group_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_group(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.DeleteGroupRqst)
}

void DeleteGroupRqst::SharedCtor() {
group_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DeleteGroupRqst::~DeleteGroupRqst() {
  // @@protoc_insertion_point(destructor:resource.DeleteGroupRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteGroupRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  group_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeleteGroupRqst::ArenaDtor(void* object) {
  DeleteGroupRqst* _this = reinterpret_cast< DeleteGroupRqst* >(object);
  (void)_this;
}
void DeleteGroupRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteGroupRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeleteGroupRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.DeleteGroupRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  group_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteGroupRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string group = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_group();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.DeleteGroupRqst.group"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteGroupRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.DeleteGroupRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string group = 1;
  if (this->group().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_group().data(), static_cast<int>(this->_internal_group().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.DeleteGroupRqst.group");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_group(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.DeleteGroupRqst)
  return target;
}

size_t DeleteGroupRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.DeleteGroupRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string group = 1;
  if (this->group().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_group());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteGroupRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.DeleteGroupRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteGroupRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteGroupRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.DeleteGroupRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.DeleteGroupRqst)
    MergeFrom(*source);
  }
}

void DeleteGroupRqst::MergeFrom(const DeleteGroupRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.DeleteGroupRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.group().size() > 0) {
    _internal_set_group(from._internal_group());
  }
}

void DeleteGroupRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.DeleteGroupRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteGroupRqst::CopyFrom(const DeleteGroupRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.DeleteGroupRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteGroupRqst::IsInitialized() const {
  return true;
}

void DeleteGroupRqst::InternalSwap(DeleteGroupRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  group_.Swap(&other->group_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteGroupRqst::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[77]);
}

// ===================================================================

class DeleteGroupRsp::_Internal {
 public:
};

DeleteGroupRsp::DeleteGroupRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.DeleteGroupRsp)
}
DeleteGroupRsp::DeleteGroupRsp(const DeleteGroupRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.DeleteGroupRsp)
}

void DeleteGroupRsp::SharedCtor() {
result_ = false;
}

DeleteGroupRsp::~DeleteGroupRsp() {
  // @@protoc_insertion_point(destructor:resource.DeleteGroupRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteGroupRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void DeleteGroupRsp::ArenaDtor(void* object) {
  DeleteGroupRsp* _this = reinterpret_cast< DeleteGroupRsp* >(object);
  (void)_this;
}
void DeleteGroupRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteGroupRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeleteGroupRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.DeleteGroupRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteGroupRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteGroupRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.DeleteGroupRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.DeleteGroupRsp)
  return target;
}

size_t DeleteGroupRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.DeleteGroupRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteGroupRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.DeleteGroupRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteGroupRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteGroupRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.DeleteGroupRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.DeleteGroupRsp)
    MergeFrom(*source);
  }
}

void DeleteGroupRsp::MergeFrom(const DeleteGroupRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.DeleteGroupRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void DeleteGroupRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.DeleteGroupRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteGroupRsp::CopyFrom(const DeleteGroupRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.DeleteGroupRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteGroupRsp::IsInitialized() const {
  return true;
}

void DeleteGroupRsp::InternalSwap(DeleteGroupRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteGroupRsp::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[78]);
}

// ===================================================================

class AddGroupMemberAccountRqst::_Internal {
 public:
};

AddGroupMemberAccountRqst::AddGroupMemberAccountRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.AddGroupMemberAccountRqst)
}
AddGroupMemberAccountRqst::AddGroupMemberAccountRqst(const AddGroupMemberAccountRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  groupid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_groupid().empty()) {
    groupid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_groupid(), 
      GetArena());
  }
  accountid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_accountid().empty()) {
    accountid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_accountid(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.AddGroupMemberAccountRqst)
}

void AddGroupMemberAccountRqst::SharedCtor() {
groupid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
accountid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

AddGroupMemberAccountRqst::~AddGroupMemberAccountRqst() {
  // @@protoc_insertion_point(destructor:resource.AddGroupMemberAccountRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddGroupMemberAccountRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  groupid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  accountid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AddGroupMemberAccountRqst::ArenaDtor(void* object) {
  AddGroupMemberAccountRqst* _this = reinterpret_cast< AddGroupMemberAccountRqst* >(object);
  (void)_this;
}
void AddGroupMemberAccountRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddGroupMemberAccountRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AddGroupMemberAccountRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.AddGroupMemberAccountRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  groupid_.ClearToEmpty();
  accountid_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddGroupMemberAccountRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string groupId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_groupid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.AddGroupMemberAccountRqst.groupId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string accountId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_accountid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.AddGroupMemberAccountRqst.accountId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddGroupMemberAccountRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.AddGroupMemberAccountRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string groupId = 1;
  if (this->groupid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_groupid().data(), static_cast<int>(this->_internal_groupid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.AddGroupMemberAccountRqst.groupId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_groupid(), target);
  }

  // string accountId = 2;
  if (this->accountid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_accountid().data(), static_cast<int>(this->_internal_accountid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.AddGroupMemberAccountRqst.accountId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_accountid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.AddGroupMemberAccountRqst)
  return target;
}

size_t AddGroupMemberAccountRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.AddGroupMemberAccountRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string groupId = 1;
  if (this->groupid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_groupid());
  }

  // string accountId = 2;
  if (this->accountid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_accountid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddGroupMemberAccountRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.AddGroupMemberAccountRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const AddGroupMemberAccountRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddGroupMemberAccountRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.AddGroupMemberAccountRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.AddGroupMemberAccountRqst)
    MergeFrom(*source);
  }
}

void AddGroupMemberAccountRqst::MergeFrom(const AddGroupMemberAccountRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.AddGroupMemberAccountRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.groupid().size() > 0) {
    _internal_set_groupid(from._internal_groupid());
  }
  if (from.accountid().size() > 0) {
    _internal_set_accountid(from._internal_accountid());
  }
}

void AddGroupMemberAccountRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.AddGroupMemberAccountRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddGroupMemberAccountRqst::CopyFrom(const AddGroupMemberAccountRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.AddGroupMemberAccountRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddGroupMemberAccountRqst::IsInitialized() const {
  return true;
}

void AddGroupMemberAccountRqst::InternalSwap(AddGroupMemberAccountRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  groupid_.Swap(&other->groupid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  accountid_.Swap(&other->accountid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata AddGroupMemberAccountRqst::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[79]);
}

// ===================================================================

class AddGroupMemberAccountRsp::_Internal {
 public:
};

AddGroupMemberAccountRsp::AddGroupMemberAccountRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.AddGroupMemberAccountRsp)
}
AddGroupMemberAccountRsp::AddGroupMemberAccountRsp(const AddGroupMemberAccountRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.AddGroupMemberAccountRsp)
}

void AddGroupMemberAccountRsp::SharedCtor() {
result_ = false;
}

AddGroupMemberAccountRsp::~AddGroupMemberAccountRsp() {
  // @@protoc_insertion_point(destructor:resource.AddGroupMemberAccountRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddGroupMemberAccountRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void AddGroupMemberAccountRsp::ArenaDtor(void* object) {
  AddGroupMemberAccountRsp* _this = reinterpret_cast< AddGroupMemberAccountRsp* >(object);
  (void)_this;
}
void AddGroupMemberAccountRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddGroupMemberAccountRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AddGroupMemberAccountRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.AddGroupMemberAccountRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddGroupMemberAccountRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddGroupMemberAccountRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.AddGroupMemberAccountRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.AddGroupMemberAccountRsp)
  return target;
}

size_t AddGroupMemberAccountRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.AddGroupMemberAccountRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddGroupMemberAccountRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.AddGroupMemberAccountRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const AddGroupMemberAccountRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddGroupMemberAccountRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.AddGroupMemberAccountRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.AddGroupMemberAccountRsp)
    MergeFrom(*source);
  }
}

void AddGroupMemberAccountRsp::MergeFrom(const AddGroupMemberAccountRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.AddGroupMemberAccountRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void AddGroupMemberAccountRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.AddGroupMemberAccountRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddGroupMemberAccountRsp::CopyFrom(const AddGroupMemberAccountRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.AddGroupMemberAccountRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddGroupMemberAccountRsp::IsInitialized() const {
  return true;
}

void AddGroupMemberAccountRsp::InternalSwap(AddGroupMemberAccountRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AddGroupMemberAccountRsp::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[80]);
}

// ===================================================================

class RemoveGroupMemberAccountRqst::_Internal {
 public:
};

RemoveGroupMemberAccountRqst::RemoveGroupMemberAccountRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.RemoveGroupMemberAccountRqst)
}
RemoveGroupMemberAccountRqst::RemoveGroupMemberAccountRqst(const RemoveGroupMemberAccountRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  groupid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_groupid().empty()) {
    groupid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_groupid(), 
      GetArena());
  }
  accountid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_accountid().empty()) {
    accountid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_accountid(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.RemoveGroupMemberAccountRqst)
}

void RemoveGroupMemberAccountRqst::SharedCtor() {
groupid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
accountid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

RemoveGroupMemberAccountRqst::~RemoveGroupMemberAccountRqst() {
  // @@protoc_insertion_point(destructor:resource.RemoveGroupMemberAccountRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemoveGroupMemberAccountRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  groupid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  accountid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RemoveGroupMemberAccountRqst::ArenaDtor(void* object) {
  RemoveGroupMemberAccountRqst* _this = reinterpret_cast< RemoveGroupMemberAccountRqst* >(object);
  (void)_this;
}
void RemoveGroupMemberAccountRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemoveGroupMemberAccountRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RemoveGroupMemberAccountRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.RemoveGroupMemberAccountRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  groupid_.ClearToEmpty();
  accountid_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveGroupMemberAccountRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string groupId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_groupid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.RemoveGroupMemberAccountRqst.groupId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string accountId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_accountid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.RemoveGroupMemberAccountRqst.accountId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemoveGroupMemberAccountRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.RemoveGroupMemberAccountRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string groupId = 1;
  if (this->groupid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_groupid().data(), static_cast<int>(this->_internal_groupid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.RemoveGroupMemberAccountRqst.groupId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_groupid(), target);
  }

  // string accountId = 2;
  if (this->accountid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_accountid().data(), static_cast<int>(this->_internal_accountid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.RemoveGroupMemberAccountRqst.accountId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_accountid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.RemoveGroupMemberAccountRqst)
  return target;
}

size_t RemoveGroupMemberAccountRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.RemoveGroupMemberAccountRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string groupId = 1;
  if (this->groupid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_groupid());
  }

  // string accountId = 2;
  if (this->accountid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_accountid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveGroupMemberAccountRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.RemoveGroupMemberAccountRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveGroupMemberAccountRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemoveGroupMemberAccountRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.RemoveGroupMemberAccountRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.RemoveGroupMemberAccountRqst)
    MergeFrom(*source);
  }
}

void RemoveGroupMemberAccountRqst::MergeFrom(const RemoveGroupMemberAccountRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.RemoveGroupMemberAccountRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.groupid().size() > 0) {
    _internal_set_groupid(from._internal_groupid());
  }
  if (from.accountid().size() > 0) {
    _internal_set_accountid(from._internal_accountid());
  }
}

void RemoveGroupMemberAccountRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.RemoveGroupMemberAccountRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveGroupMemberAccountRqst::CopyFrom(const RemoveGroupMemberAccountRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.RemoveGroupMemberAccountRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveGroupMemberAccountRqst::IsInitialized() const {
  return true;
}

void RemoveGroupMemberAccountRqst::InternalSwap(RemoveGroupMemberAccountRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  groupid_.Swap(&other->groupid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  accountid_.Swap(&other->accountid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveGroupMemberAccountRqst::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[81]);
}

// ===================================================================

class RemoveGroupMemberAccountRsp::_Internal {
 public:
};

RemoveGroupMemberAccountRsp::RemoveGroupMemberAccountRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.RemoveGroupMemberAccountRsp)
}
RemoveGroupMemberAccountRsp::RemoveGroupMemberAccountRsp(const RemoveGroupMemberAccountRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.RemoveGroupMemberAccountRsp)
}

void RemoveGroupMemberAccountRsp::SharedCtor() {
result_ = false;
}

RemoveGroupMemberAccountRsp::~RemoveGroupMemberAccountRsp() {
  // @@protoc_insertion_point(destructor:resource.RemoveGroupMemberAccountRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemoveGroupMemberAccountRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RemoveGroupMemberAccountRsp::ArenaDtor(void* object) {
  RemoveGroupMemberAccountRsp* _this = reinterpret_cast< RemoveGroupMemberAccountRsp* >(object);
  (void)_this;
}
void RemoveGroupMemberAccountRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemoveGroupMemberAccountRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RemoveGroupMemberAccountRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.RemoveGroupMemberAccountRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveGroupMemberAccountRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemoveGroupMemberAccountRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.RemoveGroupMemberAccountRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.RemoveGroupMemberAccountRsp)
  return target;
}

size_t RemoveGroupMemberAccountRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.RemoveGroupMemberAccountRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveGroupMemberAccountRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.RemoveGroupMemberAccountRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveGroupMemberAccountRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemoveGroupMemberAccountRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.RemoveGroupMemberAccountRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.RemoveGroupMemberAccountRsp)
    MergeFrom(*source);
  }
}

void RemoveGroupMemberAccountRsp::MergeFrom(const RemoveGroupMemberAccountRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.RemoveGroupMemberAccountRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void RemoveGroupMemberAccountRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.RemoveGroupMemberAccountRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveGroupMemberAccountRsp::CopyFrom(const RemoveGroupMemberAccountRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.RemoveGroupMemberAccountRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveGroupMemberAccountRsp::IsInitialized() const {
  return true;
}

void RemoveGroupMemberAccountRsp::InternalSwap(RemoveGroupMemberAccountRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveGroupMemberAccountRsp::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[82]);
}

// ===================================================================

class Organization::_Internal {
 public:
};

Organization::Organization(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  accounts_(arena),
  groups_(arena),
  roles_(arena),
  applications_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.Organization)
}
Organization::Organization(const Organization& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      accounts_(from.accounts_),
      groups_(from.groups_),
      roles_(from.roles_),
      applications_(from.applications_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArena());
  }
  domain_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_domain().empty()) {
    domain_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_domain(), 
      GetArena());
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  email_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_email().empty()) {
    email_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_email(), 
      GetArena());
  }
  icon_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_icon().empty()) {
    icon_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_icon(), 
      GetArena());
  }
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_description().empty()) {
    description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_description(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.Organization)
}

void Organization::SharedCtor() {
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
domain_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
email_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
icon_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Organization::~Organization() {
  // @@protoc_insertion_point(destructor:resource.Organization)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Organization::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  domain_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  email_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  icon_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Organization::ArenaDtor(void* object) {
  Organization* _this = reinterpret_cast< Organization* >(object);
  (void)_this;
}
void Organization::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Organization::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Organization::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.Organization)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  accounts_.Clear();
  groups_.Clear();
  roles_.Clear();
  applications_.Clear();
  id_.ClearToEmpty();
  domain_.ClearToEmpty();
  name_.ClearToEmpty();
  email_.ClearToEmpty();
  icon_.ClearToEmpty();
  description_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Organization::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Organization.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string domain = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_domain();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Organization.domain"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Organization.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string email = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_email();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Organization.email"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string icon = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_icon();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Organization.icon"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string description = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_description();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Organization.description"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string accounts = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_accounts();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Organization.accounts"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<58>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated string groups = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_groups();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Organization.groups"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<66>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated string roles = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_roles();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Organization.roles"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<74>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated string applications = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_applications();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Organization.applications"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<82>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Organization::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.Organization)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Organization.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string domain = 2;
  if (this->domain().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_domain().data(), static_cast<int>(this->_internal_domain().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Organization.domain");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_domain(), target);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Organization.name");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_name(), target);
  }

  // string email = 4;
  if (this->email().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_email().data(), static_cast<int>(this->_internal_email().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Organization.email");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_email(), target);
  }

  // string icon = 5;
  if (this->icon().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_icon().data(), static_cast<int>(this->_internal_icon().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Organization.icon");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_icon(), target);
  }

  // string description = 6;
  if (this->description().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Organization.description");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_description(), target);
  }

  // repeated string accounts = 7;
  for (int i = 0, n = this->_internal_accounts_size(); i < n; i++) {
    const auto& s = this->_internal_accounts(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Organization.accounts");
    target = stream->WriteString(7, s, target);
  }

  // repeated string groups = 8;
  for (int i = 0, n = this->_internal_groups_size(); i < n; i++) {
    const auto& s = this->_internal_groups(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Organization.groups");
    target = stream->WriteString(8, s, target);
  }

  // repeated string roles = 9;
  for (int i = 0, n = this->_internal_roles_size(); i < n; i++) {
    const auto& s = this->_internal_roles(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Organization.roles");
    target = stream->WriteString(9, s, target);
  }

  // repeated string applications = 10;
  for (int i = 0, n = this->_internal_applications_size(); i < n; i++) {
    const auto& s = this->_internal_applications(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Organization.applications");
    target = stream->WriteString(10, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.Organization)
  return target;
}

size_t Organization::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.Organization)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string accounts = 7;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(accounts_.size());
  for (int i = 0, n = accounts_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      accounts_.Get(i));
  }

  // repeated string groups = 8;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(groups_.size());
  for (int i = 0, n = groups_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      groups_.Get(i));
  }

  // repeated string roles = 9;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(roles_.size());
  for (int i = 0, n = roles_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      roles_.Get(i));
  }

  // repeated string applications = 10;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(applications_.size());
  for (int i = 0, n = applications_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      applications_.Get(i));
  }

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string domain = 2;
  if (this->domain().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_domain());
  }

  // string name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string email = 4;
  if (this->email().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_email());
  }

  // string icon = 5;
  if (this->icon().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_icon());
  }

  // string description = 6;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Organization::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.Organization)
  GOOGLE_DCHECK_NE(&from, this);
  const Organization* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Organization>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.Organization)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.Organization)
    MergeFrom(*source);
  }
}

void Organization::MergeFrom(const Organization& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.Organization)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  accounts_.MergeFrom(from.accounts_);
  groups_.MergeFrom(from.groups_);
  roles_.MergeFrom(from.roles_);
  applications_.MergeFrom(from.applications_);
  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.domain().size() > 0) {
    _internal_set_domain(from._internal_domain());
  }
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.email().size() > 0) {
    _internal_set_email(from._internal_email());
  }
  if (from.icon().size() > 0) {
    _internal_set_icon(from._internal_icon());
  }
  if (from.description().size() > 0) {
    _internal_set_description(from._internal_description());
  }
}

void Organization::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.Organization)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Organization::CopyFrom(const Organization& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.Organization)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Organization::IsInitialized() const {
  return true;
}

void Organization::InternalSwap(Organization* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  accounts_.InternalSwap(&other->accounts_);
  groups_.InternalSwap(&other->groups_);
  roles_.InternalSwap(&other->roles_);
  applications_.InternalSwap(&other->applications_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  domain_.Swap(&other->domain_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  email_.Swap(&other->email_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  icon_.Swap(&other->icon_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  description_.Swap(&other->description_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata Organization::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[83]);
}

// ===================================================================

class CreateOrganizationRqst::_Internal {
 public:
  static const ::resource::Organization& organization(const CreateOrganizationRqst* msg);
};

const ::resource::Organization&
CreateOrganizationRqst::_Internal::organization(const CreateOrganizationRqst* msg) {
  return *msg->organization_;
}
CreateOrganizationRqst::CreateOrganizationRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.CreateOrganizationRqst)
}
CreateOrganizationRqst::CreateOrganizationRqst(const CreateOrganizationRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_organization()) {
    organization_ = new ::resource::Organization(*from.organization_);
  } else {
    organization_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:resource.CreateOrganizationRqst)
}

void CreateOrganizationRqst::SharedCtor() {
organization_ = nullptr;
}

CreateOrganizationRqst::~CreateOrganizationRqst() {
  // @@protoc_insertion_point(destructor:resource.CreateOrganizationRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateOrganizationRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete organization_;
}

void CreateOrganizationRqst::ArenaDtor(void* object) {
  CreateOrganizationRqst* _this = reinterpret_cast< CreateOrganizationRqst* >(object);
  (void)_this;
}
void CreateOrganizationRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateOrganizationRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateOrganizationRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.CreateOrganizationRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && organization_ != nullptr) {
    delete organization_;
  }
  organization_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateOrganizationRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .resource.Organization organization = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_organization(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateOrganizationRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.CreateOrganizationRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .resource.Organization organization = 1;
  if (this->has_organization()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::organization(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.CreateOrganizationRqst)
  return target;
}

size_t CreateOrganizationRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.CreateOrganizationRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .resource.Organization organization = 1;
  if (this->has_organization()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *organization_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateOrganizationRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.CreateOrganizationRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateOrganizationRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateOrganizationRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.CreateOrganizationRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.CreateOrganizationRqst)
    MergeFrom(*source);
  }
}

void CreateOrganizationRqst::MergeFrom(const CreateOrganizationRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.CreateOrganizationRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_organization()) {
    _internal_mutable_organization()->::resource::Organization::MergeFrom(from._internal_organization());
  }
}

void CreateOrganizationRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.CreateOrganizationRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateOrganizationRqst::CopyFrom(const CreateOrganizationRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.CreateOrganizationRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateOrganizationRqst::IsInitialized() const {
  return true;
}

void CreateOrganizationRqst::InternalSwap(CreateOrganizationRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(organization_, other->organization_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateOrganizationRqst::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[84]);
}

// ===================================================================

class CreateOrganizationRsp::_Internal {
 public:
};

CreateOrganizationRsp::CreateOrganizationRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.CreateOrganizationRsp)
}
CreateOrganizationRsp::CreateOrganizationRsp(const CreateOrganizationRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.CreateOrganizationRsp)
}

void CreateOrganizationRsp::SharedCtor() {
result_ = false;
}

CreateOrganizationRsp::~CreateOrganizationRsp() {
  // @@protoc_insertion_point(destructor:resource.CreateOrganizationRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateOrganizationRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CreateOrganizationRsp::ArenaDtor(void* object) {
  CreateOrganizationRsp* _this = reinterpret_cast< CreateOrganizationRsp* >(object);
  (void)_this;
}
void CreateOrganizationRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateOrganizationRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateOrganizationRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.CreateOrganizationRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateOrganizationRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateOrganizationRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.CreateOrganizationRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.CreateOrganizationRsp)
  return target;
}

size_t CreateOrganizationRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.CreateOrganizationRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateOrganizationRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.CreateOrganizationRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateOrganizationRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateOrganizationRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.CreateOrganizationRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.CreateOrganizationRsp)
    MergeFrom(*source);
  }
}

void CreateOrganizationRsp::MergeFrom(const CreateOrganizationRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.CreateOrganizationRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void CreateOrganizationRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.CreateOrganizationRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateOrganizationRsp::CopyFrom(const CreateOrganizationRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.CreateOrganizationRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateOrganizationRsp::IsInitialized() const {
  return true;
}

void CreateOrganizationRsp::InternalSwap(CreateOrganizationRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateOrganizationRsp::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[85]);
}

// ===================================================================

class UpdateOrganizationRqst::_Internal {
 public:
};

UpdateOrganizationRqst::UpdateOrganizationRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.UpdateOrganizationRqst)
}
UpdateOrganizationRqst::UpdateOrganizationRqst(const UpdateOrganizationRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  organizationid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_organizationid().empty()) {
    organizationid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_organizationid(), 
      GetArena());
  }
  values_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_values().empty()) {
    values_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_values(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.UpdateOrganizationRqst)
}

void UpdateOrganizationRqst::SharedCtor() {
organizationid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
values_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

UpdateOrganizationRqst::~UpdateOrganizationRqst() {
  // @@protoc_insertion_point(destructor:resource.UpdateOrganizationRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UpdateOrganizationRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  organizationid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  values_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void UpdateOrganizationRqst::ArenaDtor(void* object) {
  UpdateOrganizationRqst* _this = reinterpret_cast< UpdateOrganizationRqst* >(object);
  (void)_this;
}
void UpdateOrganizationRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateOrganizationRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UpdateOrganizationRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.UpdateOrganizationRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  organizationid_.ClearToEmpty();
  values_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateOrganizationRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string organizationId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_organizationid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.UpdateOrganizationRqst.organizationId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string values = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_values();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.UpdateOrganizationRqst.values"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateOrganizationRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.UpdateOrganizationRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string organizationId = 1;
  if (this->organizationid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organizationid().data(), static_cast<int>(this->_internal_organizationid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.UpdateOrganizationRqst.organizationId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_organizationid(), target);
  }

  // string values = 2;
  if (this->values().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_values().data(), static_cast<int>(this->_internal_values().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.UpdateOrganizationRqst.values");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_values(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.UpdateOrganizationRqst)
  return target;
}

size_t UpdateOrganizationRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.UpdateOrganizationRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string organizationId = 1;
  if (this->organizationid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_organizationid());
  }

  // string values = 2;
  if (this->values().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_values());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateOrganizationRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.UpdateOrganizationRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateOrganizationRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateOrganizationRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.UpdateOrganizationRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.UpdateOrganizationRqst)
    MergeFrom(*source);
  }
}

void UpdateOrganizationRqst::MergeFrom(const UpdateOrganizationRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.UpdateOrganizationRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.organizationid().size() > 0) {
    _internal_set_organizationid(from._internal_organizationid());
  }
  if (from.values().size() > 0) {
    _internal_set_values(from._internal_values());
  }
}

void UpdateOrganizationRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.UpdateOrganizationRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateOrganizationRqst::CopyFrom(const UpdateOrganizationRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.UpdateOrganizationRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateOrganizationRqst::IsInitialized() const {
  return true;
}

void UpdateOrganizationRqst::InternalSwap(UpdateOrganizationRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  organizationid_.Swap(&other->organizationid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  values_.Swap(&other->values_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateOrganizationRqst::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[86]);
}

// ===================================================================

class UpdateOrganizationRsp::_Internal {
 public:
};

UpdateOrganizationRsp::UpdateOrganizationRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.UpdateOrganizationRsp)
}
UpdateOrganizationRsp::UpdateOrganizationRsp(const UpdateOrganizationRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.UpdateOrganizationRsp)
}

void UpdateOrganizationRsp::SharedCtor() {
result_ = false;
}

UpdateOrganizationRsp::~UpdateOrganizationRsp() {
  // @@protoc_insertion_point(destructor:resource.UpdateOrganizationRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UpdateOrganizationRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void UpdateOrganizationRsp::ArenaDtor(void* object) {
  UpdateOrganizationRsp* _this = reinterpret_cast< UpdateOrganizationRsp* >(object);
  (void)_this;
}
void UpdateOrganizationRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateOrganizationRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UpdateOrganizationRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.UpdateOrganizationRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateOrganizationRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateOrganizationRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.UpdateOrganizationRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.UpdateOrganizationRsp)
  return target;
}

size_t UpdateOrganizationRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.UpdateOrganizationRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateOrganizationRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.UpdateOrganizationRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateOrganizationRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateOrganizationRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.UpdateOrganizationRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.UpdateOrganizationRsp)
    MergeFrom(*source);
  }
}

void UpdateOrganizationRsp::MergeFrom(const UpdateOrganizationRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.UpdateOrganizationRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void UpdateOrganizationRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.UpdateOrganizationRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateOrganizationRsp::CopyFrom(const UpdateOrganizationRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.UpdateOrganizationRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateOrganizationRsp::IsInitialized() const {
  return true;
}

void UpdateOrganizationRsp::InternalSwap(UpdateOrganizationRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateOrganizationRsp::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[87]);
}

// ===================================================================

class GetOrganizationsRqst::_Internal {
 public:
};

GetOrganizationsRqst::GetOrganizationsRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.GetOrganizationsRqst)
}
GetOrganizationsRqst::GetOrganizationsRqst(const GetOrganizationsRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  query_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_query().empty()) {
    query_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_query(), 
      GetArena());
  }
  options_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_options().empty()) {
    options_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_options(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.GetOrganizationsRqst)
}

void GetOrganizationsRqst::SharedCtor() {
query_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
options_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetOrganizationsRqst::~GetOrganizationsRqst() {
  // @@protoc_insertion_point(destructor:resource.GetOrganizationsRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetOrganizationsRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  query_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  options_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetOrganizationsRqst::ArenaDtor(void* object) {
  GetOrganizationsRqst* _this = reinterpret_cast< GetOrganizationsRqst* >(object);
  (void)_this;
}
void GetOrganizationsRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetOrganizationsRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetOrganizationsRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.GetOrganizationsRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_.ClearToEmpty();
  options_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetOrganizationsRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string query = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_query();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.GetOrganizationsRqst.query"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string options = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_options();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.GetOrganizationsRqst.options"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetOrganizationsRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.GetOrganizationsRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_query().data(), static_cast<int>(this->_internal_query().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.GetOrganizationsRqst.query");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_query(), target);
  }

  // string options = 2;
  if (this->options().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_options().data(), static_cast<int>(this->_internal_options().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.GetOrganizationsRqst.options");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_options(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.GetOrganizationsRqst)
  return target;
}

size_t GetOrganizationsRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.GetOrganizationsRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_query());
  }

  // string options = 2;
  if (this->options().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_options());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetOrganizationsRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.GetOrganizationsRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const GetOrganizationsRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetOrganizationsRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.GetOrganizationsRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.GetOrganizationsRqst)
    MergeFrom(*source);
  }
}

void GetOrganizationsRqst::MergeFrom(const GetOrganizationsRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.GetOrganizationsRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query().size() > 0) {
    _internal_set_query(from._internal_query());
  }
  if (from.options().size() > 0) {
    _internal_set_options(from._internal_options());
  }
}

void GetOrganizationsRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.GetOrganizationsRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetOrganizationsRqst::CopyFrom(const GetOrganizationsRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.GetOrganizationsRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetOrganizationsRqst::IsInitialized() const {
  return true;
}

void GetOrganizationsRqst::InternalSwap(GetOrganizationsRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  query_.Swap(&other->query_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  options_.Swap(&other->options_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetOrganizationsRqst::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[88]);
}

// ===================================================================

class GetOrganizationsRsp::_Internal {
 public:
};

GetOrganizationsRsp::GetOrganizationsRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  organizations_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.GetOrganizationsRsp)
}
GetOrganizationsRsp::GetOrganizationsRsp(const GetOrganizationsRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      organizations_(from.organizations_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:resource.GetOrganizationsRsp)
}

void GetOrganizationsRsp::SharedCtor() {
}

GetOrganizationsRsp::~GetOrganizationsRsp() {
  // @@protoc_insertion_point(destructor:resource.GetOrganizationsRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetOrganizationsRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetOrganizationsRsp::ArenaDtor(void* object) {
  GetOrganizationsRsp* _this = reinterpret_cast< GetOrganizationsRsp* >(object);
  (void)_this;
}
void GetOrganizationsRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetOrganizationsRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetOrganizationsRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.GetOrganizationsRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  organizations_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetOrganizationsRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .resource.Organization organizations = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_organizations(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetOrganizationsRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.GetOrganizationsRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .resource.Organization organizations = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_organizations_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_organizations(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.GetOrganizationsRsp)
  return target;
}

size_t GetOrganizationsRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.GetOrganizationsRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .resource.Organization organizations = 1;
  total_size += 1UL * this->_internal_organizations_size();
  for (const auto& msg : this->organizations_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetOrganizationsRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.GetOrganizationsRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetOrganizationsRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetOrganizationsRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.GetOrganizationsRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.GetOrganizationsRsp)
    MergeFrom(*source);
  }
}

void GetOrganizationsRsp::MergeFrom(const GetOrganizationsRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.GetOrganizationsRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  organizations_.MergeFrom(from.organizations_);
}

void GetOrganizationsRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.GetOrganizationsRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetOrganizationsRsp::CopyFrom(const GetOrganizationsRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.GetOrganizationsRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetOrganizationsRsp::IsInitialized() const {
  return true;
}

void GetOrganizationsRsp::InternalSwap(GetOrganizationsRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  organizations_.InternalSwap(&other->organizations_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetOrganizationsRsp::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[89]);
}

// ===================================================================

class AddOrganizationAccountRqst::_Internal {
 public:
};

AddOrganizationAccountRqst::AddOrganizationAccountRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.AddOrganizationAccountRqst)
}
AddOrganizationAccountRqst::AddOrganizationAccountRqst(const AddOrganizationAccountRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  organizationid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_organizationid().empty()) {
    organizationid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_organizationid(), 
      GetArena());
  }
  accountid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_accountid().empty()) {
    accountid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_accountid(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.AddOrganizationAccountRqst)
}

void AddOrganizationAccountRqst::SharedCtor() {
organizationid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
accountid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

AddOrganizationAccountRqst::~AddOrganizationAccountRqst() {
  // @@protoc_insertion_point(destructor:resource.AddOrganizationAccountRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddOrganizationAccountRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  organizationid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  accountid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AddOrganizationAccountRqst::ArenaDtor(void* object) {
  AddOrganizationAccountRqst* _this = reinterpret_cast< AddOrganizationAccountRqst* >(object);
  (void)_this;
}
void AddOrganizationAccountRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddOrganizationAccountRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AddOrganizationAccountRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.AddOrganizationAccountRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  organizationid_.ClearToEmpty();
  accountid_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddOrganizationAccountRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string organizationId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_organizationid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.AddOrganizationAccountRqst.organizationId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string accountId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_accountid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.AddOrganizationAccountRqst.accountId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddOrganizationAccountRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.AddOrganizationAccountRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string organizationId = 1;
  if (this->organizationid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organizationid().data(), static_cast<int>(this->_internal_organizationid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.AddOrganizationAccountRqst.organizationId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_organizationid(), target);
  }

  // string accountId = 2;
  if (this->accountid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_accountid().data(), static_cast<int>(this->_internal_accountid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.AddOrganizationAccountRqst.accountId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_accountid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.AddOrganizationAccountRqst)
  return target;
}

size_t AddOrganizationAccountRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.AddOrganizationAccountRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string organizationId = 1;
  if (this->organizationid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_organizationid());
  }

  // string accountId = 2;
  if (this->accountid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_accountid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddOrganizationAccountRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.AddOrganizationAccountRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const AddOrganizationAccountRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddOrganizationAccountRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.AddOrganizationAccountRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.AddOrganizationAccountRqst)
    MergeFrom(*source);
  }
}

void AddOrganizationAccountRqst::MergeFrom(const AddOrganizationAccountRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.AddOrganizationAccountRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.organizationid().size() > 0) {
    _internal_set_organizationid(from._internal_organizationid());
  }
  if (from.accountid().size() > 0) {
    _internal_set_accountid(from._internal_accountid());
  }
}

void AddOrganizationAccountRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.AddOrganizationAccountRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddOrganizationAccountRqst::CopyFrom(const AddOrganizationAccountRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.AddOrganizationAccountRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddOrganizationAccountRqst::IsInitialized() const {
  return true;
}

void AddOrganizationAccountRqst::InternalSwap(AddOrganizationAccountRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  organizationid_.Swap(&other->organizationid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  accountid_.Swap(&other->accountid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata AddOrganizationAccountRqst::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[90]);
}

// ===================================================================

class AddOrganizationAccountRsp::_Internal {
 public:
};

AddOrganizationAccountRsp::AddOrganizationAccountRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.AddOrganizationAccountRsp)
}
AddOrganizationAccountRsp::AddOrganizationAccountRsp(const AddOrganizationAccountRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.AddOrganizationAccountRsp)
}

void AddOrganizationAccountRsp::SharedCtor() {
result_ = false;
}

AddOrganizationAccountRsp::~AddOrganizationAccountRsp() {
  // @@protoc_insertion_point(destructor:resource.AddOrganizationAccountRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddOrganizationAccountRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void AddOrganizationAccountRsp::ArenaDtor(void* object) {
  AddOrganizationAccountRsp* _this = reinterpret_cast< AddOrganizationAccountRsp* >(object);
  (void)_this;
}
void AddOrganizationAccountRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddOrganizationAccountRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AddOrganizationAccountRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.AddOrganizationAccountRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddOrganizationAccountRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddOrganizationAccountRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.AddOrganizationAccountRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.AddOrganizationAccountRsp)
  return target;
}

size_t AddOrganizationAccountRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.AddOrganizationAccountRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddOrganizationAccountRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.AddOrganizationAccountRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const AddOrganizationAccountRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddOrganizationAccountRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.AddOrganizationAccountRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.AddOrganizationAccountRsp)
    MergeFrom(*source);
  }
}

void AddOrganizationAccountRsp::MergeFrom(const AddOrganizationAccountRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.AddOrganizationAccountRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void AddOrganizationAccountRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.AddOrganizationAccountRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddOrganizationAccountRsp::CopyFrom(const AddOrganizationAccountRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.AddOrganizationAccountRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddOrganizationAccountRsp::IsInitialized() const {
  return true;
}

void AddOrganizationAccountRsp::InternalSwap(AddOrganizationAccountRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AddOrganizationAccountRsp::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[91]);
}

// ===================================================================

class AddOrganizationGroupRqst::_Internal {
 public:
};

AddOrganizationGroupRqst::AddOrganizationGroupRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.AddOrganizationGroupRqst)
}
AddOrganizationGroupRqst::AddOrganizationGroupRqst(const AddOrganizationGroupRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  organizationid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_organizationid().empty()) {
    organizationid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_organizationid(), 
      GetArena());
  }
  groupid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_groupid().empty()) {
    groupid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_groupid(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.AddOrganizationGroupRqst)
}

void AddOrganizationGroupRqst::SharedCtor() {
organizationid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
groupid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

AddOrganizationGroupRqst::~AddOrganizationGroupRqst() {
  // @@protoc_insertion_point(destructor:resource.AddOrganizationGroupRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddOrganizationGroupRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  organizationid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  groupid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AddOrganizationGroupRqst::ArenaDtor(void* object) {
  AddOrganizationGroupRqst* _this = reinterpret_cast< AddOrganizationGroupRqst* >(object);
  (void)_this;
}
void AddOrganizationGroupRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddOrganizationGroupRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AddOrganizationGroupRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.AddOrganizationGroupRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  organizationid_.ClearToEmpty();
  groupid_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddOrganizationGroupRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string organizationId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_organizationid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.AddOrganizationGroupRqst.organizationId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string groupId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_groupid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.AddOrganizationGroupRqst.groupId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddOrganizationGroupRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.AddOrganizationGroupRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string organizationId = 1;
  if (this->organizationid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organizationid().data(), static_cast<int>(this->_internal_organizationid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.AddOrganizationGroupRqst.organizationId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_organizationid(), target);
  }

  // string groupId = 2;
  if (this->groupid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_groupid().data(), static_cast<int>(this->_internal_groupid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.AddOrganizationGroupRqst.groupId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_groupid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.AddOrganizationGroupRqst)
  return target;
}

size_t AddOrganizationGroupRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.AddOrganizationGroupRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string organizationId = 1;
  if (this->organizationid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_organizationid());
  }

  // string groupId = 2;
  if (this->groupid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_groupid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddOrganizationGroupRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.AddOrganizationGroupRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const AddOrganizationGroupRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddOrganizationGroupRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.AddOrganizationGroupRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.AddOrganizationGroupRqst)
    MergeFrom(*source);
  }
}

void AddOrganizationGroupRqst::MergeFrom(const AddOrganizationGroupRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.AddOrganizationGroupRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.organizationid().size() > 0) {
    _internal_set_organizationid(from._internal_organizationid());
  }
  if (from.groupid().size() > 0) {
    _internal_set_groupid(from._internal_groupid());
  }
}

void AddOrganizationGroupRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.AddOrganizationGroupRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddOrganizationGroupRqst::CopyFrom(const AddOrganizationGroupRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.AddOrganizationGroupRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddOrganizationGroupRqst::IsInitialized() const {
  return true;
}

void AddOrganizationGroupRqst::InternalSwap(AddOrganizationGroupRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  organizationid_.Swap(&other->organizationid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  groupid_.Swap(&other->groupid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata AddOrganizationGroupRqst::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[92]);
}

// ===================================================================

class AddOrganizationGroupRsp::_Internal {
 public:
};

AddOrganizationGroupRsp::AddOrganizationGroupRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.AddOrganizationGroupRsp)
}
AddOrganizationGroupRsp::AddOrganizationGroupRsp(const AddOrganizationGroupRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.AddOrganizationGroupRsp)
}

void AddOrganizationGroupRsp::SharedCtor() {
result_ = false;
}

AddOrganizationGroupRsp::~AddOrganizationGroupRsp() {
  // @@protoc_insertion_point(destructor:resource.AddOrganizationGroupRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddOrganizationGroupRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void AddOrganizationGroupRsp::ArenaDtor(void* object) {
  AddOrganizationGroupRsp* _this = reinterpret_cast< AddOrganizationGroupRsp* >(object);
  (void)_this;
}
void AddOrganizationGroupRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddOrganizationGroupRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AddOrganizationGroupRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.AddOrganizationGroupRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddOrganizationGroupRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddOrganizationGroupRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.AddOrganizationGroupRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.AddOrganizationGroupRsp)
  return target;
}

size_t AddOrganizationGroupRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.AddOrganizationGroupRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddOrganizationGroupRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.AddOrganizationGroupRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const AddOrganizationGroupRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddOrganizationGroupRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.AddOrganizationGroupRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.AddOrganizationGroupRsp)
    MergeFrom(*source);
  }
}

void AddOrganizationGroupRsp::MergeFrom(const AddOrganizationGroupRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.AddOrganizationGroupRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void AddOrganizationGroupRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.AddOrganizationGroupRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddOrganizationGroupRsp::CopyFrom(const AddOrganizationGroupRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.AddOrganizationGroupRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddOrganizationGroupRsp::IsInitialized() const {
  return true;
}

void AddOrganizationGroupRsp::InternalSwap(AddOrganizationGroupRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AddOrganizationGroupRsp::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[93]);
}

// ===================================================================

class AddOrganizationRoleRqst::_Internal {
 public:
};

AddOrganizationRoleRqst::AddOrganizationRoleRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.AddOrganizationRoleRqst)
}
AddOrganizationRoleRqst::AddOrganizationRoleRqst(const AddOrganizationRoleRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  organizationid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_organizationid().empty()) {
    organizationid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_organizationid(), 
      GetArena());
  }
  roleid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_roleid().empty()) {
    roleid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_roleid(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.AddOrganizationRoleRqst)
}

void AddOrganizationRoleRqst::SharedCtor() {
organizationid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
roleid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

AddOrganizationRoleRqst::~AddOrganizationRoleRqst() {
  // @@protoc_insertion_point(destructor:resource.AddOrganizationRoleRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddOrganizationRoleRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  organizationid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  roleid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AddOrganizationRoleRqst::ArenaDtor(void* object) {
  AddOrganizationRoleRqst* _this = reinterpret_cast< AddOrganizationRoleRqst* >(object);
  (void)_this;
}
void AddOrganizationRoleRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddOrganizationRoleRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AddOrganizationRoleRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.AddOrganizationRoleRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  organizationid_.ClearToEmpty();
  roleid_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddOrganizationRoleRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string organizationId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_organizationid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.AddOrganizationRoleRqst.organizationId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string roleId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_roleid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.AddOrganizationRoleRqst.roleId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddOrganizationRoleRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.AddOrganizationRoleRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string organizationId = 1;
  if (this->organizationid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organizationid().data(), static_cast<int>(this->_internal_organizationid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.AddOrganizationRoleRqst.organizationId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_organizationid(), target);
  }

  // string roleId = 2;
  if (this->roleid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_roleid().data(), static_cast<int>(this->_internal_roleid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.AddOrganizationRoleRqst.roleId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_roleid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.AddOrganizationRoleRqst)
  return target;
}

size_t AddOrganizationRoleRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.AddOrganizationRoleRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string organizationId = 1;
  if (this->organizationid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_organizationid());
  }

  // string roleId = 2;
  if (this->roleid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_roleid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddOrganizationRoleRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.AddOrganizationRoleRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const AddOrganizationRoleRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddOrganizationRoleRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.AddOrganizationRoleRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.AddOrganizationRoleRqst)
    MergeFrom(*source);
  }
}

void AddOrganizationRoleRqst::MergeFrom(const AddOrganizationRoleRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.AddOrganizationRoleRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.organizationid().size() > 0) {
    _internal_set_organizationid(from._internal_organizationid());
  }
  if (from.roleid().size() > 0) {
    _internal_set_roleid(from._internal_roleid());
  }
}

void AddOrganizationRoleRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.AddOrganizationRoleRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddOrganizationRoleRqst::CopyFrom(const AddOrganizationRoleRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.AddOrganizationRoleRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddOrganizationRoleRqst::IsInitialized() const {
  return true;
}

void AddOrganizationRoleRqst::InternalSwap(AddOrganizationRoleRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  organizationid_.Swap(&other->organizationid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  roleid_.Swap(&other->roleid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata AddOrganizationRoleRqst::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[94]);
}

// ===================================================================

class AddOrganizationRoleRsp::_Internal {
 public:
};

AddOrganizationRoleRsp::AddOrganizationRoleRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.AddOrganizationRoleRsp)
}
AddOrganizationRoleRsp::AddOrganizationRoleRsp(const AddOrganizationRoleRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.AddOrganizationRoleRsp)
}

void AddOrganizationRoleRsp::SharedCtor() {
result_ = false;
}

AddOrganizationRoleRsp::~AddOrganizationRoleRsp() {
  // @@protoc_insertion_point(destructor:resource.AddOrganizationRoleRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddOrganizationRoleRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void AddOrganizationRoleRsp::ArenaDtor(void* object) {
  AddOrganizationRoleRsp* _this = reinterpret_cast< AddOrganizationRoleRsp* >(object);
  (void)_this;
}
void AddOrganizationRoleRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddOrganizationRoleRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AddOrganizationRoleRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.AddOrganizationRoleRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddOrganizationRoleRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddOrganizationRoleRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.AddOrganizationRoleRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.AddOrganizationRoleRsp)
  return target;
}

size_t AddOrganizationRoleRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.AddOrganizationRoleRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddOrganizationRoleRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.AddOrganizationRoleRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const AddOrganizationRoleRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddOrganizationRoleRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.AddOrganizationRoleRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.AddOrganizationRoleRsp)
    MergeFrom(*source);
  }
}

void AddOrganizationRoleRsp::MergeFrom(const AddOrganizationRoleRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.AddOrganizationRoleRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void AddOrganizationRoleRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.AddOrganizationRoleRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddOrganizationRoleRsp::CopyFrom(const AddOrganizationRoleRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.AddOrganizationRoleRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddOrganizationRoleRsp::IsInitialized() const {
  return true;
}

void AddOrganizationRoleRsp::InternalSwap(AddOrganizationRoleRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AddOrganizationRoleRsp::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[95]);
}

// ===================================================================

class AddOrganizationApplicationRqst::_Internal {
 public:
};

AddOrganizationApplicationRqst::AddOrganizationApplicationRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.AddOrganizationApplicationRqst)
}
AddOrganizationApplicationRqst::AddOrganizationApplicationRqst(const AddOrganizationApplicationRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  organizationid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_organizationid().empty()) {
    organizationid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_organizationid(), 
      GetArena());
  }
  applicationid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_applicationid().empty()) {
    applicationid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_applicationid(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.AddOrganizationApplicationRqst)
}

void AddOrganizationApplicationRqst::SharedCtor() {
organizationid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
applicationid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

AddOrganizationApplicationRqst::~AddOrganizationApplicationRqst() {
  // @@protoc_insertion_point(destructor:resource.AddOrganizationApplicationRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddOrganizationApplicationRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  organizationid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  applicationid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AddOrganizationApplicationRqst::ArenaDtor(void* object) {
  AddOrganizationApplicationRqst* _this = reinterpret_cast< AddOrganizationApplicationRqst* >(object);
  (void)_this;
}
void AddOrganizationApplicationRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddOrganizationApplicationRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AddOrganizationApplicationRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.AddOrganizationApplicationRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  organizationid_.ClearToEmpty();
  applicationid_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddOrganizationApplicationRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string organizationId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_organizationid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.AddOrganizationApplicationRqst.organizationId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string applicationId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_applicationid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.AddOrganizationApplicationRqst.applicationId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddOrganizationApplicationRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.AddOrganizationApplicationRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string organizationId = 1;
  if (this->organizationid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organizationid().data(), static_cast<int>(this->_internal_organizationid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.AddOrganizationApplicationRqst.organizationId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_organizationid(), target);
  }

  // string applicationId = 2;
  if (this->applicationid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_applicationid().data(), static_cast<int>(this->_internal_applicationid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.AddOrganizationApplicationRqst.applicationId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_applicationid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.AddOrganizationApplicationRqst)
  return target;
}

size_t AddOrganizationApplicationRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.AddOrganizationApplicationRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string organizationId = 1;
  if (this->organizationid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_organizationid());
  }

  // string applicationId = 2;
  if (this->applicationid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_applicationid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddOrganizationApplicationRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.AddOrganizationApplicationRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const AddOrganizationApplicationRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddOrganizationApplicationRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.AddOrganizationApplicationRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.AddOrganizationApplicationRqst)
    MergeFrom(*source);
  }
}

void AddOrganizationApplicationRqst::MergeFrom(const AddOrganizationApplicationRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.AddOrganizationApplicationRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.organizationid().size() > 0) {
    _internal_set_organizationid(from._internal_organizationid());
  }
  if (from.applicationid().size() > 0) {
    _internal_set_applicationid(from._internal_applicationid());
  }
}

void AddOrganizationApplicationRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.AddOrganizationApplicationRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddOrganizationApplicationRqst::CopyFrom(const AddOrganizationApplicationRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.AddOrganizationApplicationRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddOrganizationApplicationRqst::IsInitialized() const {
  return true;
}

void AddOrganizationApplicationRqst::InternalSwap(AddOrganizationApplicationRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  organizationid_.Swap(&other->organizationid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  applicationid_.Swap(&other->applicationid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata AddOrganizationApplicationRqst::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[96]);
}

// ===================================================================

class AddOrganizationApplicationRsp::_Internal {
 public:
};

AddOrganizationApplicationRsp::AddOrganizationApplicationRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.AddOrganizationApplicationRsp)
}
AddOrganizationApplicationRsp::AddOrganizationApplicationRsp(const AddOrganizationApplicationRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.AddOrganizationApplicationRsp)
}

void AddOrganizationApplicationRsp::SharedCtor() {
result_ = false;
}

AddOrganizationApplicationRsp::~AddOrganizationApplicationRsp() {
  // @@protoc_insertion_point(destructor:resource.AddOrganizationApplicationRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddOrganizationApplicationRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void AddOrganizationApplicationRsp::ArenaDtor(void* object) {
  AddOrganizationApplicationRsp* _this = reinterpret_cast< AddOrganizationApplicationRsp* >(object);
  (void)_this;
}
void AddOrganizationApplicationRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddOrganizationApplicationRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AddOrganizationApplicationRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.AddOrganizationApplicationRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddOrganizationApplicationRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddOrganizationApplicationRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.AddOrganizationApplicationRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.AddOrganizationApplicationRsp)
  return target;
}

size_t AddOrganizationApplicationRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.AddOrganizationApplicationRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddOrganizationApplicationRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.AddOrganizationApplicationRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const AddOrganizationApplicationRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddOrganizationApplicationRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.AddOrganizationApplicationRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.AddOrganizationApplicationRsp)
    MergeFrom(*source);
  }
}

void AddOrganizationApplicationRsp::MergeFrom(const AddOrganizationApplicationRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.AddOrganizationApplicationRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void AddOrganizationApplicationRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.AddOrganizationApplicationRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddOrganizationApplicationRsp::CopyFrom(const AddOrganizationApplicationRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.AddOrganizationApplicationRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddOrganizationApplicationRsp::IsInitialized() const {
  return true;
}

void AddOrganizationApplicationRsp::InternalSwap(AddOrganizationApplicationRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AddOrganizationApplicationRsp::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[97]);
}

// ===================================================================

class RemoveOrganizationGroupRqst::_Internal {
 public:
};

RemoveOrganizationGroupRqst::RemoveOrganizationGroupRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.RemoveOrganizationGroupRqst)
}
RemoveOrganizationGroupRqst::RemoveOrganizationGroupRqst(const RemoveOrganizationGroupRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  organizationid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_organizationid().empty()) {
    organizationid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_organizationid(), 
      GetArena());
  }
  groupid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_groupid().empty()) {
    groupid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_groupid(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.RemoveOrganizationGroupRqst)
}

void RemoveOrganizationGroupRqst::SharedCtor() {
organizationid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
groupid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

RemoveOrganizationGroupRqst::~RemoveOrganizationGroupRqst() {
  // @@protoc_insertion_point(destructor:resource.RemoveOrganizationGroupRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemoveOrganizationGroupRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  organizationid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  groupid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RemoveOrganizationGroupRqst::ArenaDtor(void* object) {
  RemoveOrganizationGroupRqst* _this = reinterpret_cast< RemoveOrganizationGroupRqst* >(object);
  (void)_this;
}
void RemoveOrganizationGroupRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemoveOrganizationGroupRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RemoveOrganizationGroupRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.RemoveOrganizationGroupRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  organizationid_.ClearToEmpty();
  groupid_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveOrganizationGroupRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string organizationId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_organizationid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.RemoveOrganizationGroupRqst.organizationId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string groupId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_groupid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.RemoveOrganizationGroupRqst.groupId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemoveOrganizationGroupRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.RemoveOrganizationGroupRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string organizationId = 1;
  if (this->organizationid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organizationid().data(), static_cast<int>(this->_internal_organizationid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.RemoveOrganizationGroupRqst.organizationId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_organizationid(), target);
  }

  // string groupId = 2;
  if (this->groupid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_groupid().data(), static_cast<int>(this->_internal_groupid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.RemoveOrganizationGroupRqst.groupId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_groupid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.RemoveOrganizationGroupRqst)
  return target;
}

size_t RemoveOrganizationGroupRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.RemoveOrganizationGroupRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string organizationId = 1;
  if (this->organizationid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_organizationid());
  }

  // string groupId = 2;
  if (this->groupid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_groupid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveOrganizationGroupRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.RemoveOrganizationGroupRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveOrganizationGroupRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemoveOrganizationGroupRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.RemoveOrganizationGroupRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.RemoveOrganizationGroupRqst)
    MergeFrom(*source);
  }
}

void RemoveOrganizationGroupRqst::MergeFrom(const RemoveOrganizationGroupRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.RemoveOrganizationGroupRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.organizationid().size() > 0) {
    _internal_set_organizationid(from._internal_organizationid());
  }
  if (from.groupid().size() > 0) {
    _internal_set_groupid(from._internal_groupid());
  }
}

void RemoveOrganizationGroupRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.RemoveOrganizationGroupRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveOrganizationGroupRqst::CopyFrom(const RemoveOrganizationGroupRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.RemoveOrganizationGroupRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveOrganizationGroupRqst::IsInitialized() const {
  return true;
}

void RemoveOrganizationGroupRqst::InternalSwap(RemoveOrganizationGroupRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  organizationid_.Swap(&other->organizationid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  groupid_.Swap(&other->groupid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveOrganizationGroupRqst::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[98]);
}

// ===================================================================

class RemoveOrganizationGroupRsp::_Internal {
 public:
};

RemoveOrganizationGroupRsp::RemoveOrganizationGroupRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.RemoveOrganizationGroupRsp)
}
RemoveOrganizationGroupRsp::RemoveOrganizationGroupRsp(const RemoveOrganizationGroupRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.RemoveOrganizationGroupRsp)
}

void RemoveOrganizationGroupRsp::SharedCtor() {
result_ = false;
}

RemoveOrganizationGroupRsp::~RemoveOrganizationGroupRsp() {
  // @@protoc_insertion_point(destructor:resource.RemoveOrganizationGroupRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemoveOrganizationGroupRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RemoveOrganizationGroupRsp::ArenaDtor(void* object) {
  RemoveOrganizationGroupRsp* _this = reinterpret_cast< RemoveOrganizationGroupRsp* >(object);
  (void)_this;
}
void RemoveOrganizationGroupRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemoveOrganizationGroupRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RemoveOrganizationGroupRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.RemoveOrganizationGroupRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveOrganizationGroupRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemoveOrganizationGroupRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.RemoveOrganizationGroupRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.RemoveOrganizationGroupRsp)
  return target;
}

size_t RemoveOrganizationGroupRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.RemoveOrganizationGroupRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveOrganizationGroupRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.RemoveOrganizationGroupRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveOrganizationGroupRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemoveOrganizationGroupRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.RemoveOrganizationGroupRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.RemoveOrganizationGroupRsp)
    MergeFrom(*source);
  }
}

void RemoveOrganizationGroupRsp::MergeFrom(const RemoveOrganizationGroupRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.RemoveOrganizationGroupRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void RemoveOrganizationGroupRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.RemoveOrganizationGroupRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveOrganizationGroupRsp::CopyFrom(const RemoveOrganizationGroupRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.RemoveOrganizationGroupRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveOrganizationGroupRsp::IsInitialized() const {
  return true;
}

void RemoveOrganizationGroupRsp::InternalSwap(RemoveOrganizationGroupRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveOrganizationGroupRsp::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[99]);
}

// ===================================================================

class RemoveOrganizationRoleRqst::_Internal {
 public:
};

RemoveOrganizationRoleRqst::RemoveOrganizationRoleRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.RemoveOrganizationRoleRqst)
}
RemoveOrganizationRoleRqst::RemoveOrganizationRoleRqst(const RemoveOrganizationRoleRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  organizationid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_organizationid().empty()) {
    organizationid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_organizationid(), 
      GetArena());
  }
  roleid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_roleid().empty()) {
    roleid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_roleid(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.RemoveOrganizationRoleRqst)
}

void RemoveOrganizationRoleRqst::SharedCtor() {
organizationid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
roleid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

RemoveOrganizationRoleRqst::~RemoveOrganizationRoleRqst() {
  // @@protoc_insertion_point(destructor:resource.RemoveOrganizationRoleRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemoveOrganizationRoleRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  organizationid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  roleid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RemoveOrganizationRoleRqst::ArenaDtor(void* object) {
  RemoveOrganizationRoleRqst* _this = reinterpret_cast< RemoveOrganizationRoleRqst* >(object);
  (void)_this;
}
void RemoveOrganizationRoleRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemoveOrganizationRoleRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RemoveOrganizationRoleRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.RemoveOrganizationRoleRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  organizationid_.ClearToEmpty();
  roleid_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveOrganizationRoleRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string organizationId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_organizationid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.RemoveOrganizationRoleRqst.organizationId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string roleId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_roleid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.RemoveOrganizationRoleRqst.roleId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemoveOrganizationRoleRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.RemoveOrganizationRoleRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string organizationId = 1;
  if (this->organizationid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organizationid().data(), static_cast<int>(this->_internal_organizationid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.RemoveOrganizationRoleRqst.organizationId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_organizationid(), target);
  }

  // string roleId = 2;
  if (this->roleid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_roleid().data(), static_cast<int>(this->_internal_roleid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.RemoveOrganizationRoleRqst.roleId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_roleid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.RemoveOrganizationRoleRqst)
  return target;
}

size_t RemoveOrganizationRoleRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.RemoveOrganizationRoleRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string organizationId = 1;
  if (this->organizationid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_organizationid());
  }

  // string roleId = 2;
  if (this->roleid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_roleid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveOrganizationRoleRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.RemoveOrganizationRoleRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveOrganizationRoleRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemoveOrganizationRoleRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.RemoveOrganizationRoleRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.RemoveOrganizationRoleRqst)
    MergeFrom(*source);
  }
}

void RemoveOrganizationRoleRqst::MergeFrom(const RemoveOrganizationRoleRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.RemoveOrganizationRoleRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.organizationid().size() > 0) {
    _internal_set_organizationid(from._internal_organizationid());
  }
  if (from.roleid().size() > 0) {
    _internal_set_roleid(from._internal_roleid());
  }
}

void RemoveOrganizationRoleRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.RemoveOrganizationRoleRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveOrganizationRoleRqst::CopyFrom(const RemoveOrganizationRoleRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.RemoveOrganizationRoleRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveOrganizationRoleRqst::IsInitialized() const {
  return true;
}

void RemoveOrganizationRoleRqst::InternalSwap(RemoveOrganizationRoleRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  organizationid_.Swap(&other->organizationid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  roleid_.Swap(&other->roleid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveOrganizationRoleRqst::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[100]);
}

// ===================================================================

class RemoveOrganizationRoleRsp::_Internal {
 public:
};

RemoveOrganizationRoleRsp::RemoveOrganizationRoleRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.RemoveOrganizationRoleRsp)
}
RemoveOrganizationRoleRsp::RemoveOrganizationRoleRsp(const RemoveOrganizationRoleRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.RemoveOrganizationRoleRsp)
}

void RemoveOrganizationRoleRsp::SharedCtor() {
result_ = false;
}

RemoveOrganizationRoleRsp::~RemoveOrganizationRoleRsp() {
  // @@protoc_insertion_point(destructor:resource.RemoveOrganizationRoleRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemoveOrganizationRoleRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RemoveOrganizationRoleRsp::ArenaDtor(void* object) {
  RemoveOrganizationRoleRsp* _this = reinterpret_cast< RemoveOrganizationRoleRsp* >(object);
  (void)_this;
}
void RemoveOrganizationRoleRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemoveOrganizationRoleRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RemoveOrganizationRoleRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.RemoveOrganizationRoleRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveOrganizationRoleRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemoveOrganizationRoleRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.RemoveOrganizationRoleRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.RemoveOrganizationRoleRsp)
  return target;
}

size_t RemoveOrganizationRoleRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.RemoveOrganizationRoleRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveOrganizationRoleRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.RemoveOrganizationRoleRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveOrganizationRoleRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemoveOrganizationRoleRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.RemoveOrganizationRoleRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.RemoveOrganizationRoleRsp)
    MergeFrom(*source);
  }
}

void RemoveOrganizationRoleRsp::MergeFrom(const RemoveOrganizationRoleRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.RemoveOrganizationRoleRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void RemoveOrganizationRoleRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.RemoveOrganizationRoleRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveOrganizationRoleRsp::CopyFrom(const RemoveOrganizationRoleRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.RemoveOrganizationRoleRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveOrganizationRoleRsp::IsInitialized() const {
  return true;
}

void RemoveOrganizationRoleRsp::InternalSwap(RemoveOrganizationRoleRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveOrganizationRoleRsp::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[101]);
}

// ===================================================================

class RemoveOrganizationApplicationRqst::_Internal {
 public:
};

RemoveOrganizationApplicationRqst::RemoveOrganizationApplicationRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.RemoveOrganizationApplicationRqst)
}
RemoveOrganizationApplicationRqst::RemoveOrganizationApplicationRqst(const RemoveOrganizationApplicationRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  organizationid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_organizationid().empty()) {
    organizationid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_organizationid(), 
      GetArena());
  }
  applicationid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_applicationid().empty()) {
    applicationid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_applicationid(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.RemoveOrganizationApplicationRqst)
}

void RemoveOrganizationApplicationRqst::SharedCtor() {
organizationid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
applicationid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

RemoveOrganizationApplicationRqst::~RemoveOrganizationApplicationRqst() {
  // @@protoc_insertion_point(destructor:resource.RemoveOrganizationApplicationRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemoveOrganizationApplicationRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  organizationid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  applicationid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RemoveOrganizationApplicationRqst::ArenaDtor(void* object) {
  RemoveOrganizationApplicationRqst* _this = reinterpret_cast< RemoveOrganizationApplicationRqst* >(object);
  (void)_this;
}
void RemoveOrganizationApplicationRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemoveOrganizationApplicationRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RemoveOrganizationApplicationRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.RemoveOrganizationApplicationRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  organizationid_.ClearToEmpty();
  applicationid_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveOrganizationApplicationRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string organizationId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_organizationid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.RemoveOrganizationApplicationRqst.organizationId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string applicationId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_applicationid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.RemoveOrganizationApplicationRqst.applicationId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemoveOrganizationApplicationRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.RemoveOrganizationApplicationRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string organizationId = 1;
  if (this->organizationid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organizationid().data(), static_cast<int>(this->_internal_organizationid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.RemoveOrganizationApplicationRqst.organizationId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_organizationid(), target);
  }

  // string applicationId = 2;
  if (this->applicationid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_applicationid().data(), static_cast<int>(this->_internal_applicationid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.RemoveOrganizationApplicationRqst.applicationId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_applicationid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.RemoveOrganizationApplicationRqst)
  return target;
}

size_t RemoveOrganizationApplicationRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.RemoveOrganizationApplicationRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string organizationId = 1;
  if (this->organizationid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_organizationid());
  }

  // string applicationId = 2;
  if (this->applicationid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_applicationid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveOrganizationApplicationRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.RemoveOrganizationApplicationRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveOrganizationApplicationRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemoveOrganizationApplicationRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.RemoveOrganizationApplicationRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.RemoveOrganizationApplicationRqst)
    MergeFrom(*source);
  }
}

void RemoveOrganizationApplicationRqst::MergeFrom(const RemoveOrganizationApplicationRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.RemoveOrganizationApplicationRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.organizationid().size() > 0) {
    _internal_set_organizationid(from._internal_organizationid());
  }
  if (from.applicationid().size() > 0) {
    _internal_set_applicationid(from._internal_applicationid());
  }
}

void RemoveOrganizationApplicationRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.RemoveOrganizationApplicationRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveOrganizationApplicationRqst::CopyFrom(const RemoveOrganizationApplicationRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.RemoveOrganizationApplicationRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveOrganizationApplicationRqst::IsInitialized() const {
  return true;
}

void RemoveOrganizationApplicationRqst::InternalSwap(RemoveOrganizationApplicationRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  organizationid_.Swap(&other->organizationid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  applicationid_.Swap(&other->applicationid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveOrganizationApplicationRqst::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[102]);
}

// ===================================================================

class RemoveOrganizationApplicationRsp::_Internal {
 public:
};

RemoveOrganizationApplicationRsp::RemoveOrganizationApplicationRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.RemoveOrganizationApplicationRsp)
}
RemoveOrganizationApplicationRsp::RemoveOrganizationApplicationRsp(const RemoveOrganizationApplicationRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.RemoveOrganizationApplicationRsp)
}

void RemoveOrganizationApplicationRsp::SharedCtor() {
result_ = false;
}

RemoveOrganizationApplicationRsp::~RemoveOrganizationApplicationRsp() {
  // @@protoc_insertion_point(destructor:resource.RemoveOrganizationApplicationRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemoveOrganizationApplicationRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RemoveOrganizationApplicationRsp::ArenaDtor(void* object) {
  RemoveOrganizationApplicationRsp* _this = reinterpret_cast< RemoveOrganizationApplicationRsp* >(object);
  (void)_this;
}
void RemoveOrganizationApplicationRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemoveOrganizationApplicationRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RemoveOrganizationApplicationRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.RemoveOrganizationApplicationRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveOrganizationApplicationRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemoveOrganizationApplicationRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.RemoveOrganizationApplicationRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.RemoveOrganizationApplicationRsp)
  return target;
}

size_t RemoveOrganizationApplicationRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.RemoveOrganizationApplicationRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveOrganizationApplicationRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.RemoveOrganizationApplicationRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveOrganizationApplicationRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemoveOrganizationApplicationRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.RemoveOrganizationApplicationRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.RemoveOrganizationApplicationRsp)
    MergeFrom(*source);
  }
}

void RemoveOrganizationApplicationRsp::MergeFrom(const RemoveOrganizationApplicationRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.RemoveOrganizationApplicationRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void RemoveOrganizationApplicationRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.RemoveOrganizationApplicationRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveOrganizationApplicationRsp::CopyFrom(const RemoveOrganizationApplicationRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.RemoveOrganizationApplicationRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveOrganizationApplicationRsp::IsInitialized() const {
  return true;
}

void RemoveOrganizationApplicationRsp::InternalSwap(RemoveOrganizationApplicationRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveOrganizationApplicationRsp::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[103]);
}

// ===================================================================

class RemoveOrganizationAccountRqst::_Internal {
 public:
};

RemoveOrganizationAccountRqst::RemoveOrganizationAccountRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.RemoveOrganizationAccountRqst)
}
RemoveOrganizationAccountRqst::RemoveOrganizationAccountRqst(const RemoveOrganizationAccountRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  organizationid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_organizationid().empty()) {
    organizationid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_organizationid(), 
      GetArena());
  }
  accountid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_accountid().empty()) {
    accountid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_accountid(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.RemoveOrganizationAccountRqst)
}

void RemoveOrganizationAccountRqst::SharedCtor() {
organizationid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
accountid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

RemoveOrganizationAccountRqst::~RemoveOrganizationAccountRqst() {
  // @@protoc_insertion_point(destructor:resource.RemoveOrganizationAccountRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemoveOrganizationAccountRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  organizationid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  accountid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RemoveOrganizationAccountRqst::ArenaDtor(void* object) {
  RemoveOrganizationAccountRqst* _this = reinterpret_cast< RemoveOrganizationAccountRqst* >(object);
  (void)_this;
}
void RemoveOrganizationAccountRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemoveOrganizationAccountRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RemoveOrganizationAccountRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.RemoveOrganizationAccountRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  organizationid_.ClearToEmpty();
  accountid_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveOrganizationAccountRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string organizationId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_organizationid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.RemoveOrganizationAccountRqst.organizationId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string accountId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_accountid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.RemoveOrganizationAccountRqst.accountId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemoveOrganizationAccountRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.RemoveOrganizationAccountRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string organizationId = 1;
  if (this->organizationid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organizationid().data(), static_cast<int>(this->_internal_organizationid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.RemoveOrganizationAccountRqst.organizationId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_organizationid(), target);
  }

  // string accountId = 2;
  if (this->accountid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_accountid().data(), static_cast<int>(this->_internal_accountid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.RemoveOrganizationAccountRqst.accountId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_accountid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.RemoveOrganizationAccountRqst)
  return target;
}

size_t RemoveOrganizationAccountRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.RemoveOrganizationAccountRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string organizationId = 1;
  if (this->organizationid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_organizationid());
  }

  // string accountId = 2;
  if (this->accountid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_accountid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveOrganizationAccountRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.RemoveOrganizationAccountRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveOrganizationAccountRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemoveOrganizationAccountRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.RemoveOrganizationAccountRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.RemoveOrganizationAccountRqst)
    MergeFrom(*source);
  }
}

void RemoveOrganizationAccountRqst::MergeFrom(const RemoveOrganizationAccountRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.RemoveOrganizationAccountRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.organizationid().size() > 0) {
    _internal_set_organizationid(from._internal_organizationid());
  }
  if (from.accountid().size() > 0) {
    _internal_set_accountid(from._internal_accountid());
  }
}

void RemoveOrganizationAccountRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.RemoveOrganizationAccountRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveOrganizationAccountRqst::CopyFrom(const RemoveOrganizationAccountRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.RemoveOrganizationAccountRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveOrganizationAccountRqst::IsInitialized() const {
  return true;
}

void RemoveOrganizationAccountRqst::InternalSwap(RemoveOrganizationAccountRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  organizationid_.Swap(&other->organizationid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  accountid_.Swap(&other->accountid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveOrganizationAccountRqst::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[104]);
}

// ===================================================================

class RemoveOrganizationAccountRsp::_Internal {
 public:
};

RemoveOrganizationAccountRsp::RemoveOrganizationAccountRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.RemoveOrganizationAccountRsp)
}
RemoveOrganizationAccountRsp::RemoveOrganizationAccountRsp(const RemoveOrganizationAccountRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.RemoveOrganizationAccountRsp)
}

void RemoveOrganizationAccountRsp::SharedCtor() {
result_ = false;
}

RemoveOrganizationAccountRsp::~RemoveOrganizationAccountRsp() {
  // @@protoc_insertion_point(destructor:resource.RemoveOrganizationAccountRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemoveOrganizationAccountRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RemoveOrganizationAccountRsp::ArenaDtor(void* object) {
  RemoveOrganizationAccountRsp* _this = reinterpret_cast< RemoveOrganizationAccountRsp* >(object);
  (void)_this;
}
void RemoveOrganizationAccountRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemoveOrganizationAccountRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RemoveOrganizationAccountRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.RemoveOrganizationAccountRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveOrganizationAccountRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemoveOrganizationAccountRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.RemoveOrganizationAccountRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.RemoveOrganizationAccountRsp)
  return target;
}

size_t RemoveOrganizationAccountRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.RemoveOrganizationAccountRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveOrganizationAccountRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.RemoveOrganizationAccountRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveOrganizationAccountRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemoveOrganizationAccountRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.RemoveOrganizationAccountRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.RemoveOrganizationAccountRsp)
    MergeFrom(*source);
  }
}

void RemoveOrganizationAccountRsp::MergeFrom(const RemoveOrganizationAccountRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.RemoveOrganizationAccountRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void RemoveOrganizationAccountRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.RemoveOrganizationAccountRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveOrganizationAccountRsp::CopyFrom(const RemoveOrganizationAccountRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.RemoveOrganizationAccountRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveOrganizationAccountRsp::IsInitialized() const {
  return true;
}

void RemoveOrganizationAccountRsp::InternalSwap(RemoveOrganizationAccountRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveOrganizationAccountRsp::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[105]);
}

// ===================================================================

class IsOrgnanizationMemberRqst::_Internal {
 public:
};

IsOrgnanizationMemberRqst::IsOrgnanizationMemberRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.IsOrgnanizationMemberRqst)
}
IsOrgnanizationMemberRqst::IsOrgnanizationMemberRqst(const IsOrgnanizationMemberRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  organizationid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_organizationid().empty()) {
    organizationid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_organizationid(), 
      GetArena());
  }
  accountid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_accountid().empty()) {
    accountid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_accountid(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.IsOrgnanizationMemberRqst)
}

void IsOrgnanizationMemberRqst::SharedCtor() {
organizationid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
accountid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

IsOrgnanizationMemberRqst::~IsOrgnanizationMemberRqst() {
  // @@protoc_insertion_point(destructor:resource.IsOrgnanizationMemberRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void IsOrgnanizationMemberRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  organizationid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  accountid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void IsOrgnanizationMemberRqst::ArenaDtor(void* object) {
  IsOrgnanizationMemberRqst* _this = reinterpret_cast< IsOrgnanizationMemberRqst* >(object);
  (void)_this;
}
void IsOrgnanizationMemberRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void IsOrgnanizationMemberRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void IsOrgnanizationMemberRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.IsOrgnanizationMemberRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  organizationid_.ClearToEmpty();
  accountid_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* IsOrgnanizationMemberRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string organizationId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_organizationid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.IsOrgnanizationMemberRqst.organizationId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string accountId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_accountid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.IsOrgnanizationMemberRqst.accountId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* IsOrgnanizationMemberRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.IsOrgnanizationMemberRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string organizationId = 1;
  if (this->organizationid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organizationid().data(), static_cast<int>(this->_internal_organizationid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.IsOrgnanizationMemberRqst.organizationId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_organizationid(), target);
  }

  // string accountId = 2;
  if (this->accountid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_accountid().data(), static_cast<int>(this->_internal_accountid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.IsOrgnanizationMemberRqst.accountId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_accountid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.IsOrgnanizationMemberRqst)
  return target;
}

size_t IsOrgnanizationMemberRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.IsOrgnanizationMemberRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string organizationId = 1;
  if (this->organizationid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_organizationid());
  }

  // string accountId = 2;
  if (this->accountid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_accountid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IsOrgnanizationMemberRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.IsOrgnanizationMemberRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const IsOrgnanizationMemberRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<IsOrgnanizationMemberRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.IsOrgnanizationMemberRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.IsOrgnanizationMemberRqst)
    MergeFrom(*source);
  }
}

void IsOrgnanizationMemberRqst::MergeFrom(const IsOrgnanizationMemberRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.IsOrgnanizationMemberRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.organizationid().size() > 0) {
    _internal_set_organizationid(from._internal_organizationid());
  }
  if (from.accountid().size() > 0) {
    _internal_set_accountid(from._internal_accountid());
  }
}

void IsOrgnanizationMemberRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.IsOrgnanizationMemberRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IsOrgnanizationMemberRqst::CopyFrom(const IsOrgnanizationMemberRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.IsOrgnanizationMemberRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IsOrgnanizationMemberRqst::IsInitialized() const {
  return true;
}

void IsOrgnanizationMemberRqst::InternalSwap(IsOrgnanizationMemberRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  organizationid_.Swap(&other->organizationid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  accountid_.Swap(&other->accountid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata IsOrgnanizationMemberRqst::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[106]);
}

// ===================================================================

class IsOrgnanizationMemberRsp::_Internal {
 public:
};

IsOrgnanizationMemberRsp::IsOrgnanizationMemberRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.IsOrgnanizationMemberRsp)
}
IsOrgnanizationMemberRsp::IsOrgnanizationMemberRsp(const IsOrgnanizationMemberRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.IsOrgnanizationMemberRsp)
}

void IsOrgnanizationMemberRsp::SharedCtor() {
result_ = false;
}

IsOrgnanizationMemberRsp::~IsOrgnanizationMemberRsp() {
  // @@protoc_insertion_point(destructor:resource.IsOrgnanizationMemberRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void IsOrgnanizationMemberRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void IsOrgnanizationMemberRsp::ArenaDtor(void* object) {
  IsOrgnanizationMemberRsp* _this = reinterpret_cast< IsOrgnanizationMemberRsp* >(object);
  (void)_this;
}
void IsOrgnanizationMemberRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void IsOrgnanizationMemberRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void IsOrgnanizationMemberRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.IsOrgnanizationMemberRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* IsOrgnanizationMemberRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* IsOrgnanizationMemberRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.IsOrgnanizationMemberRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.IsOrgnanizationMemberRsp)
  return target;
}

size_t IsOrgnanizationMemberRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.IsOrgnanizationMemberRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IsOrgnanizationMemberRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.IsOrgnanizationMemberRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const IsOrgnanizationMemberRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<IsOrgnanizationMemberRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.IsOrgnanizationMemberRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.IsOrgnanizationMemberRsp)
    MergeFrom(*source);
  }
}

void IsOrgnanizationMemberRsp::MergeFrom(const IsOrgnanizationMemberRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.IsOrgnanizationMemberRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void IsOrgnanizationMemberRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.IsOrgnanizationMemberRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IsOrgnanizationMemberRsp::CopyFrom(const IsOrgnanizationMemberRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.IsOrgnanizationMemberRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IsOrgnanizationMemberRsp::IsInitialized() const {
  return true;
}

void IsOrgnanizationMemberRsp::InternalSwap(IsOrgnanizationMemberRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata IsOrgnanizationMemberRsp::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[107]);
}

// ===================================================================

class DeleteOrganizationRqst::_Internal {
 public:
};

DeleteOrganizationRqst::DeleteOrganizationRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.DeleteOrganizationRqst)
}
DeleteOrganizationRqst::DeleteOrganizationRqst(const DeleteOrganizationRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  organization_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_organization().empty()) {
    organization_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_organization(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.DeleteOrganizationRqst)
}

void DeleteOrganizationRqst::SharedCtor() {
organization_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DeleteOrganizationRqst::~DeleteOrganizationRqst() {
  // @@protoc_insertion_point(destructor:resource.DeleteOrganizationRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteOrganizationRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  organization_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeleteOrganizationRqst::ArenaDtor(void* object) {
  DeleteOrganizationRqst* _this = reinterpret_cast< DeleteOrganizationRqst* >(object);
  (void)_this;
}
void DeleteOrganizationRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteOrganizationRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeleteOrganizationRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.DeleteOrganizationRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  organization_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteOrganizationRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string organization = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_organization();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.DeleteOrganizationRqst.organization"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteOrganizationRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.DeleteOrganizationRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string organization = 1;
  if (this->organization().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organization().data(), static_cast<int>(this->_internal_organization().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.DeleteOrganizationRqst.organization");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_organization(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.DeleteOrganizationRqst)
  return target;
}

size_t DeleteOrganizationRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.DeleteOrganizationRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string organization = 1;
  if (this->organization().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_organization());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteOrganizationRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.DeleteOrganizationRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteOrganizationRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteOrganizationRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.DeleteOrganizationRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.DeleteOrganizationRqst)
    MergeFrom(*source);
  }
}

void DeleteOrganizationRqst::MergeFrom(const DeleteOrganizationRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.DeleteOrganizationRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.organization().size() > 0) {
    _internal_set_organization(from._internal_organization());
  }
}

void DeleteOrganizationRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.DeleteOrganizationRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteOrganizationRqst::CopyFrom(const DeleteOrganizationRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.DeleteOrganizationRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteOrganizationRqst::IsInitialized() const {
  return true;
}

void DeleteOrganizationRqst::InternalSwap(DeleteOrganizationRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  organization_.Swap(&other->organization_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteOrganizationRqst::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[108]);
}

// ===================================================================

class DeleteOrganizationRsp::_Internal {
 public:
};

DeleteOrganizationRsp::DeleteOrganizationRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.DeleteOrganizationRsp)
}
DeleteOrganizationRsp::DeleteOrganizationRsp(const DeleteOrganizationRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.DeleteOrganizationRsp)
}

void DeleteOrganizationRsp::SharedCtor() {
result_ = false;
}

DeleteOrganizationRsp::~DeleteOrganizationRsp() {
  // @@protoc_insertion_point(destructor:resource.DeleteOrganizationRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteOrganizationRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void DeleteOrganizationRsp::ArenaDtor(void* object) {
  DeleteOrganizationRsp* _this = reinterpret_cast< DeleteOrganizationRsp* >(object);
  (void)_this;
}
void DeleteOrganizationRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteOrganizationRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeleteOrganizationRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.DeleteOrganizationRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteOrganizationRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteOrganizationRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.DeleteOrganizationRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.DeleteOrganizationRsp)
  return target;
}

size_t DeleteOrganizationRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.DeleteOrganizationRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteOrganizationRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.DeleteOrganizationRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteOrganizationRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteOrganizationRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.DeleteOrganizationRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.DeleteOrganizationRsp)
    MergeFrom(*source);
  }
}

void DeleteOrganizationRsp::MergeFrom(const DeleteOrganizationRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.DeleteOrganizationRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void DeleteOrganizationRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.DeleteOrganizationRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteOrganizationRsp::CopyFrom(const DeleteOrganizationRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.DeleteOrganizationRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteOrganizationRsp::IsInitialized() const {
  return true;
}

void DeleteOrganizationRsp::InternalSwap(DeleteOrganizationRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteOrganizationRsp::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[109]);
}

// ===================================================================

class Peer::_Internal {
 public:
};

Peer::Peer(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  actions_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.Peer)
}
Peer::Peer(const Peer& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      actions_(from.actions_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  hostname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_hostname().empty()) {
    hostname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_hostname(), 
      GetArena());
  }
  address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_address().empty()) {
    address_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_address(), 
      GetArena());
  }
  domain_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_domain().empty()) {
    domain_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_domain(), 
      GetArena());
  }
  external_ip_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_external_ip_address().empty()) {
    external_ip_address_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_external_ip_address(), 
      GetArena());
  }
  local_ip_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_local_ip_address().empty()) {
    local_ip_address_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_local_ip_address(), 
      GetArena());
  }
  mac_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_mac().empty()) {
    mac_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_mac(), 
      GetArena());
  }
  state_ = from.state_;
  // @@protoc_insertion_point(copy_constructor:resource.Peer)
}

void Peer::SharedCtor() {
hostname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
domain_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
external_ip_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
local_ip_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
mac_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
state_ = 0;
}

Peer::~Peer() {
  // @@protoc_insertion_point(destructor:resource.Peer)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Peer::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  hostname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  address_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  domain_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  external_ip_address_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  local_ip_address_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  mac_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Peer::ArenaDtor(void* object) {
  Peer* _this = reinterpret_cast< Peer* >(object);
  (void)_this;
}
void Peer::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Peer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Peer::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.Peer)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  actions_.Clear();
  hostname_.ClearToEmpty();
  address_.ClearToEmpty();
  domain_.ClearToEmpty();
  external_ip_address_.ClearToEmpty();
  local_ip_address_.ClearToEmpty();
  mac_.ClearToEmpty();
  state_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Peer::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string hostname = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_hostname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Peer.hostname"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string address = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_address();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Peer.address"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string domain = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_domain();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Peer.domain"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string external_ip_address = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_external_ip_address();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Peer.external_ip_address"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string local_ip_address = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_local_ip_address();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Peer.local_ip_address"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string mac = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_mac();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Peer.mac"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .resource.PeerApprovalState state = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_state(static_cast<::resource::PeerApprovalState>(val));
        } else goto handle_unusual;
        continue;
      // repeated string actions = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_actions();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Peer.actions"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<66>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Peer::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.Peer)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string hostname = 1;
  if (this->hostname().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_hostname().data(), static_cast<int>(this->_internal_hostname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Peer.hostname");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_hostname(), target);
  }

  // string address = 2;
  if (this->address().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_address().data(), static_cast<int>(this->_internal_address().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Peer.address");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_address(), target);
  }

  // string domain = 3;
  if (this->domain().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_domain().data(), static_cast<int>(this->_internal_domain().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Peer.domain");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_domain(), target);
  }

  // string external_ip_address = 4;
  if (this->external_ip_address().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_external_ip_address().data(), static_cast<int>(this->_internal_external_ip_address().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Peer.external_ip_address");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_external_ip_address(), target);
  }

  // string local_ip_address = 5;
  if (this->local_ip_address().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_local_ip_address().data(), static_cast<int>(this->_internal_local_ip_address().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Peer.local_ip_address");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_local_ip_address(), target);
  }

  // string mac = 6;
  if (this->mac().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_mac().data(), static_cast<int>(this->_internal_mac().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Peer.mac");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_mac(), target);
  }

  // .resource.PeerApprovalState state = 7;
  if (this->state() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      7, this->_internal_state(), target);
  }

  // repeated string actions = 8;
  for (int i = 0, n = this->_internal_actions_size(); i < n; i++) {
    const auto& s = this->_internal_actions(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Peer.actions");
    target = stream->WriteString(8, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.Peer)
  return target;
}

size_t Peer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.Peer)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string actions = 8;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(actions_.size());
  for (int i = 0, n = actions_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      actions_.Get(i));
  }

  // string hostname = 1;
  if (this->hostname().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_hostname());
  }

  // string address = 2;
  if (this->address().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_address());
  }

  // string domain = 3;
  if (this->domain().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_domain());
  }

  // string external_ip_address = 4;
  if (this->external_ip_address().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_external_ip_address());
  }

  // string local_ip_address = 5;
  if (this->local_ip_address().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_local_ip_address());
  }

  // string mac = 6;
  if (this->mac().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_mac());
  }

  // .resource.PeerApprovalState state = 7;
  if (this->state() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_state());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Peer::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.Peer)
  GOOGLE_DCHECK_NE(&from, this);
  const Peer* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Peer>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.Peer)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.Peer)
    MergeFrom(*source);
  }
}

void Peer::MergeFrom(const Peer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.Peer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  actions_.MergeFrom(from.actions_);
  if (from.hostname().size() > 0) {
    _internal_set_hostname(from._internal_hostname());
  }
  if (from.address().size() > 0) {
    _internal_set_address(from._internal_address());
  }
  if (from.domain().size() > 0) {
    _internal_set_domain(from._internal_domain());
  }
  if (from.external_ip_address().size() > 0) {
    _internal_set_external_ip_address(from._internal_external_ip_address());
  }
  if (from.local_ip_address().size() > 0) {
    _internal_set_local_ip_address(from._internal_local_ip_address());
  }
  if (from.mac().size() > 0) {
    _internal_set_mac(from._internal_mac());
  }
  if (from.state() != 0) {
    _internal_set_state(from._internal_state());
  }
}

void Peer::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.Peer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Peer::CopyFrom(const Peer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.Peer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Peer::IsInitialized() const {
  return true;
}

void Peer::InternalSwap(Peer* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  actions_.InternalSwap(&other->actions_);
  hostname_.Swap(&other->hostname_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  address_.Swap(&other->address_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  domain_.Swap(&other->domain_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  external_ip_address_.Swap(&other->external_ip_address_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  local_ip_address_.Swap(&other->local_ip_address_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  mac_.Swap(&other->mac_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(state_, other->state_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Peer::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[110]);
}

// ===================================================================

class GetPeerApprovalStateRqst::_Internal {
 public:
};

GetPeerApprovalStateRqst::GetPeerApprovalStateRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.GetPeerApprovalStateRqst)
}
GetPeerApprovalStateRqst::GetPeerApprovalStateRqst(const GetPeerApprovalStateRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  mac_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_mac().empty()) {
    mac_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_mac(), 
      GetArena());
  }
  remote_peer_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_remote_peer_address().empty()) {
    remote_peer_address_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_remote_peer_address(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.GetPeerApprovalStateRqst)
}

void GetPeerApprovalStateRqst::SharedCtor() {
mac_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
remote_peer_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetPeerApprovalStateRqst::~GetPeerApprovalStateRqst() {
  // @@protoc_insertion_point(destructor:resource.GetPeerApprovalStateRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetPeerApprovalStateRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  mac_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  remote_peer_address_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetPeerApprovalStateRqst::ArenaDtor(void* object) {
  GetPeerApprovalStateRqst* _this = reinterpret_cast< GetPeerApprovalStateRqst* >(object);
  (void)_this;
}
void GetPeerApprovalStateRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetPeerApprovalStateRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetPeerApprovalStateRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.GetPeerApprovalStateRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mac_.ClearToEmpty();
  remote_peer_address_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetPeerApprovalStateRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string mac = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_mac();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.GetPeerApprovalStateRqst.mac"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string remote_peer_address = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_remote_peer_address();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.GetPeerApprovalStateRqst.remote_peer_address"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetPeerApprovalStateRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.GetPeerApprovalStateRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string mac = 1;
  if (this->mac().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_mac().data(), static_cast<int>(this->_internal_mac().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.GetPeerApprovalStateRqst.mac");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_mac(), target);
  }

  // string remote_peer_address = 2;
  if (this->remote_peer_address().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_remote_peer_address().data(), static_cast<int>(this->_internal_remote_peer_address().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.GetPeerApprovalStateRqst.remote_peer_address");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_remote_peer_address(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.GetPeerApprovalStateRqst)
  return target;
}

size_t GetPeerApprovalStateRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.GetPeerApprovalStateRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string mac = 1;
  if (this->mac().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_mac());
  }

  // string remote_peer_address = 2;
  if (this->remote_peer_address().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_remote_peer_address());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetPeerApprovalStateRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.GetPeerApprovalStateRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const GetPeerApprovalStateRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetPeerApprovalStateRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.GetPeerApprovalStateRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.GetPeerApprovalStateRqst)
    MergeFrom(*source);
  }
}

void GetPeerApprovalStateRqst::MergeFrom(const GetPeerApprovalStateRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.GetPeerApprovalStateRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.mac().size() > 0) {
    _internal_set_mac(from._internal_mac());
  }
  if (from.remote_peer_address().size() > 0) {
    _internal_set_remote_peer_address(from._internal_remote_peer_address());
  }
}

void GetPeerApprovalStateRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.GetPeerApprovalStateRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetPeerApprovalStateRqst::CopyFrom(const GetPeerApprovalStateRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.GetPeerApprovalStateRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPeerApprovalStateRqst::IsInitialized() const {
  return true;
}

void GetPeerApprovalStateRqst::InternalSwap(GetPeerApprovalStateRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  mac_.Swap(&other->mac_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  remote_peer_address_.Swap(&other->remote_peer_address_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetPeerApprovalStateRqst::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[111]);
}

// ===================================================================

class GetPeerApprovalStateRsp::_Internal {
 public:
};

GetPeerApprovalStateRsp::GetPeerApprovalStateRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.GetPeerApprovalStateRsp)
}
GetPeerApprovalStateRsp::GetPeerApprovalStateRsp(const GetPeerApprovalStateRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  state_ = from.state_;
  // @@protoc_insertion_point(copy_constructor:resource.GetPeerApprovalStateRsp)
}

void GetPeerApprovalStateRsp::SharedCtor() {
state_ = 0;
}

GetPeerApprovalStateRsp::~GetPeerApprovalStateRsp() {
  // @@protoc_insertion_point(destructor:resource.GetPeerApprovalStateRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetPeerApprovalStateRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetPeerApprovalStateRsp::ArenaDtor(void* object) {
  GetPeerApprovalStateRsp* _this = reinterpret_cast< GetPeerApprovalStateRsp* >(object);
  (void)_this;
}
void GetPeerApprovalStateRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetPeerApprovalStateRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetPeerApprovalStateRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.GetPeerApprovalStateRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  state_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetPeerApprovalStateRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .resource.PeerApprovalState state = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_state(static_cast<::resource::PeerApprovalState>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetPeerApprovalStateRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.GetPeerApprovalStateRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .resource.PeerApprovalState state = 1;
  if (this->state() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_state(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.GetPeerApprovalStateRsp)
  return target;
}

size_t GetPeerApprovalStateRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.GetPeerApprovalStateRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .resource.PeerApprovalState state = 1;
  if (this->state() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_state());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetPeerApprovalStateRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.GetPeerApprovalStateRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetPeerApprovalStateRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetPeerApprovalStateRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.GetPeerApprovalStateRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.GetPeerApprovalStateRsp)
    MergeFrom(*source);
  }
}

void GetPeerApprovalStateRsp::MergeFrom(const GetPeerApprovalStateRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.GetPeerApprovalStateRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.state() != 0) {
    _internal_set_state(from._internal_state());
  }
}

void GetPeerApprovalStateRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.GetPeerApprovalStateRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetPeerApprovalStateRsp::CopyFrom(const GetPeerApprovalStateRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.GetPeerApprovalStateRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPeerApprovalStateRsp::IsInitialized() const {
  return true;
}

void GetPeerApprovalStateRsp::InternalSwap(GetPeerApprovalStateRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(state_, other->state_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetPeerApprovalStateRsp::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[112]);
}

// ===================================================================

class GetPeerPublicKeyRqst::_Internal {
 public:
};

GetPeerPublicKeyRqst::GetPeerPublicKeyRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.GetPeerPublicKeyRqst)
}
GetPeerPublicKeyRqst::GetPeerPublicKeyRqst(const GetPeerPublicKeyRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  mac_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_mac().empty()) {
    mac_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_mac(), 
      GetArena());
  }
  remote_peer_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_remote_peer_address().empty()) {
    remote_peer_address_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_remote_peer_address(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.GetPeerPublicKeyRqst)
}

void GetPeerPublicKeyRqst::SharedCtor() {
mac_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
remote_peer_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetPeerPublicKeyRqst::~GetPeerPublicKeyRqst() {
  // @@protoc_insertion_point(destructor:resource.GetPeerPublicKeyRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetPeerPublicKeyRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  mac_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  remote_peer_address_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetPeerPublicKeyRqst::ArenaDtor(void* object) {
  GetPeerPublicKeyRqst* _this = reinterpret_cast< GetPeerPublicKeyRqst* >(object);
  (void)_this;
}
void GetPeerPublicKeyRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetPeerPublicKeyRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetPeerPublicKeyRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.GetPeerPublicKeyRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mac_.ClearToEmpty();
  remote_peer_address_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetPeerPublicKeyRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string mac = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_mac();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.GetPeerPublicKeyRqst.mac"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string remote_peer_address = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_remote_peer_address();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.GetPeerPublicKeyRqst.remote_peer_address"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetPeerPublicKeyRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.GetPeerPublicKeyRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string mac = 1;
  if (this->mac().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_mac().data(), static_cast<int>(this->_internal_mac().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.GetPeerPublicKeyRqst.mac");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_mac(), target);
  }

  // string remote_peer_address = 2;
  if (this->remote_peer_address().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_remote_peer_address().data(), static_cast<int>(this->_internal_remote_peer_address().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.GetPeerPublicKeyRqst.remote_peer_address");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_remote_peer_address(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.GetPeerPublicKeyRqst)
  return target;
}

size_t GetPeerPublicKeyRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.GetPeerPublicKeyRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string mac = 1;
  if (this->mac().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_mac());
  }

  // string remote_peer_address = 2;
  if (this->remote_peer_address().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_remote_peer_address());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetPeerPublicKeyRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.GetPeerPublicKeyRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const GetPeerPublicKeyRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetPeerPublicKeyRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.GetPeerPublicKeyRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.GetPeerPublicKeyRqst)
    MergeFrom(*source);
  }
}

void GetPeerPublicKeyRqst::MergeFrom(const GetPeerPublicKeyRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.GetPeerPublicKeyRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.mac().size() > 0) {
    _internal_set_mac(from._internal_mac());
  }
  if (from.remote_peer_address().size() > 0) {
    _internal_set_remote_peer_address(from._internal_remote_peer_address());
  }
}

void GetPeerPublicKeyRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.GetPeerPublicKeyRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetPeerPublicKeyRqst::CopyFrom(const GetPeerPublicKeyRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.GetPeerPublicKeyRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPeerPublicKeyRqst::IsInitialized() const {
  return true;
}

void GetPeerPublicKeyRqst::InternalSwap(GetPeerPublicKeyRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  mac_.Swap(&other->mac_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  remote_peer_address_.Swap(&other->remote_peer_address_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetPeerPublicKeyRqst::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[113]);
}

// ===================================================================

class GetPeerPublicKeyRsp::_Internal {
 public:
};

GetPeerPublicKeyRsp::GetPeerPublicKeyRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.GetPeerPublicKeyRsp)
}
GetPeerPublicKeyRsp::GetPeerPublicKeyRsp(const GetPeerPublicKeyRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  public_key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_public_key().empty()) {
    public_key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_public_key(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.GetPeerPublicKeyRsp)
}

void GetPeerPublicKeyRsp::SharedCtor() {
public_key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetPeerPublicKeyRsp::~GetPeerPublicKeyRsp() {
  // @@protoc_insertion_point(destructor:resource.GetPeerPublicKeyRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetPeerPublicKeyRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  public_key_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetPeerPublicKeyRsp::ArenaDtor(void* object) {
  GetPeerPublicKeyRsp* _this = reinterpret_cast< GetPeerPublicKeyRsp* >(object);
  (void)_this;
}
void GetPeerPublicKeyRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetPeerPublicKeyRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetPeerPublicKeyRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.GetPeerPublicKeyRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  public_key_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetPeerPublicKeyRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string public_key = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_public_key();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.GetPeerPublicKeyRsp.public_key"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetPeerPublicKeyRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.GetPeerPublicKeyRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string public_key = 1;
  if (this->public_key().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_public_key().data(), static_cast<int>(this->_internal_public_key().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.GetPeerPublicKeyRsp.public_key");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_public_key(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.GetPeerPublicKeyRsp)
  return target;
}

size_t GetPeerPublicKeyRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.GetPeerPublicKeyRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string public_key = 1;
  if (this->public_key().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_public_key());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetPeerPublicKeyRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.GetPeerPublicKeyRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetPeerPublicKeyRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetPeerPublicKeyRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.GetPeerPublicKeyRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.GetPeerPublicKeyRsp)
    MergeFrom(*source);
  }
}

void GetPeerPublicKeyRsp::MergeFrom(const GetPeerPublicKeyRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.GetPeerPublicKeyRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.public_key().size() > 0) {
    _internal_set_public_key(from._internal_public_key());
  }
}

void GetPeerPublicKeyRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.GetPeerPublicKeyRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetPeerPublicKeyRsp::CopyFrom(const GetPeerPublicKeyRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.GetPeerPublicKeyRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPeerPublicKeyRsp::IsInitialized() const {
  return true;
}

void GetPeerPublicKeyRsp::InternalSwap(GetPeerPublicKeyRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  public_key_.Swap(&other->public_key_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetPeerPublicKeyRsp::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[114]);
}

// ===================================================================

class RegisterPeerRqst::_Internal {
 public:
  static const ::resource::Peer& peer(const RegisterPeerRqst* msg);
};

const ::resource::Peer&
RegisterPeerRqst::_Internal::peer(const RegisterPeerRqst* msg) {
  return *msg->peer_;
}
RegisterPeerRqst::RegisterPeerRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.RegisterPeerRqst)
}
RegisterPeerRqst::RegisterPeerRqst(const RegisterPeerRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  public_key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_public_key().empty()) {
    public_key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_public_key(), 
      GetArena());
  }
  if (from._internal_has_peer()) {
    peer_ = new ::resource::Peer(*from.peer_);
  } else {
    peer_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:resource.RegisterPeerRqst)
}

void RegisterPeerRqst::SharedCtor() {
public_key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
peer_ = nullptr;
}

RegisterPeerRqst::~RegisterPeerRqst() {
  // @@protoc_insertion_point(destructor:resource.RegisterPeerRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RegisterPeerRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  public_key_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete peer_;
}

void RegisterPeerRqst::ArenaDtor(void* object) {
  RegisterPeerRqst* _this = reinterpret_cast< RegisterPeerRqst* >(object);
  (void)_this;
}
void RegisterPeerRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RegisterPeerRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RegisterPeerRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.RegisterPeerRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  public_key_.ClearToEmpty();
  if (GetArena() == nullptr && peer_ != nullptr) {
    delete peer_;
  }
  peer_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RegisterPeerRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .resource.Peer peer = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_peer(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string public_key = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_public_key();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.RegisterPeerRqst.public_key"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RegisterPeerRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.RegisterPeerRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .resource.Peer peer = 1;
  if (this->has_peer()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::peer(this), target, stream);
  }

  // string public_key = 2;
  if (this->public_key().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_public_key().data(), static_cast<int>(this->_internal_public_key().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.RegisterPeerRqst.public_key");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_public_key(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.RegisterPeerRqst)
  return target;
}

size_t RegisterPeerRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.RegisterPeerRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string public_key = 2;
  if (this->public_key().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_public_key());
  }

  // .resource.Peer peer = 1;
  if (this->has_peer()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *peer_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RegisterPeerRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.RegisterPeerRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const RegisterPeerRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RegisterPeerRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.RegisterPeerRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.RegisterPeerRqst)
    MergeFrom(*source);
  }
}

void RegisterPeerRqst::MergeFrom(const RegisterPeerRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.RegisterPeerRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.public_key().size() > 0) {
    _internal_set_public_key(from._internal_public_key());
  }
  if (from.has_peer()) {
    _internal_mutable_peer()->::resource::Peer::MergeFrom(from._internal_peer());
  }
}

void RegisterPeerRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.RegisterPeerRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegisterPeerRqst::CopyFrom(const RegisterPeerRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.RegisterPeerRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegisterPeerRqst::IsInitialized() const {
  return true;
}

void RegisterPeerRqst::InternalSwap(RegisterPeerRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  public_key_.Swap(&other->public_key_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(peer_, other->peer_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RegisterPeerRqst::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[115]);
}

// ===================================================================

class RegisterPeerRsp::_Internal {
 public:
  static const ::resource::Peer& peer(const RegisterPeerRsp* msg);
};

const ::resource::Peer&
RegisterPeerRsp::_Internal::peer(const RegisterPeerRsp* msg) {
  return *msg->peer_;
}
RegisterPeerRsp::RegisterPeerRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.RegisterPeerRsp)
}
RegisterPeerRsp::RegisterPeerRsp(const RegisterPeerRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  public_key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_public_key().empty()) {
    public_key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_public_key(), 
      GetArena());
  }
  if (from._internal_has_peer()) {
    peer_ = new ::resource::Peer(*from.peer_);
  } else {
    peer_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:resource.RegisterPeerRsp)
}

void RegisterPeerRsp::SharedCtor() {
public_key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
peer_ = nullptr;
}

RegisterPeerRsp::~RegisterPeerRsp() {
  // @@protoc_insertion_point(destructor:resource.RegisterPeerRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RegisterPeerRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  public_key_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete peer_;
}

void RegisterPeerRsp::ArenaDtor(void* object) {
  RegisterPeerRsp* _this = reinterpret_cast< RegisterPeerRsp* >(object);
  (void)_this;
}
void RegisterPeerRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RegisterPeerRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RegisterPeerRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.RegisterPeerRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  public_key_.ClearToEmpty();
  if (GetArena() == nullptr && peer_ != nullptr) {
    delete peer_;
  }
  peer_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RegisterPeerRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .resource.Peer peer = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_peer(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string public_key = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_public_key();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.RegisterPeerRsp.public_key"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RegisterPeerRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.RegisterPeerRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .resource.Peer peer = 1;
  if (this->has_peer()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::peer(this), target, stream);
  }

  // string public_key = 2;
  if (this->public_key().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_public_key().data(), static_cast<int>(this->_internal_public_key().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.RegisterPeerRsp.public_key");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_public_key(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.RegisterPeerRsp)
  return target;
}

size_t RegisterPeerRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.RegisterPeerRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string public_key = 2;
  if (this->public_key().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_public_key());
  }

  // .resource.Peer peer = 1;
  if (this->has_peer()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *peer_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RegisterPeerRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.RegisterPeerRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const RegisterPeerRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RegisterPeerRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.RegisterPeerRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.RegisterPeerRsp)
    MergeFrom(*source);
  }
}

void RegisterPeerRsp::MergeFrom(const RegisterPeerRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.RegisterPeerRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.public_key().size() > 0) {
    _internal_set_public_key(from._internal_public_key());
  }
  if (from.has_peer()) {
    _internal_mutable_peer()->::resource::Peer::MergeFrom(from._internal_peer());
  }
}

void RegisterPeerRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.RegisterPeerRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegisterPeerRsp::CopyFrom(const RegisterPeerRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.RegisterPeerRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegisterPeerRsp::IsInitialized() const {
  return true;
}

void RegisterPeerRsp::InternalSwap(RegisterPeerRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  public_key_.Swap(&other->public_key_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(peer_, other->peer_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RegisterPeerRsp::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[116]);
}

// ===================================================================

class GetPeersRqst::_Internal {
 public:
};

GetPeersRqst::GetPeersRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.GetPeersRqst)
}
GetPeersRqst::GetPeersRqst(const GetPeersRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  query_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_query().empty()) {
    query_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_query(), 
      GetArena());
  }
  options_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_options().empty()) {
    options_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_options(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.GetPeersRqst)
}

void GetPeersRqst::SharedCtor() {
query_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
options_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetPeersRqst::~GetPeersRqst() {
  // @@protoc_insertion_point(destructor:resource.GetPeersRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetPeersRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  query_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  options_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetPeersRqst::ArenaDtor(void* object) {
  GetPeersRqst* _this = reinterpret_cast< GetPeersRqst* >(object);
  (void)_this;
}
void GetPeersRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetPeersRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetPeersRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.GetPeersRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_.ClearToEmpty();
  options_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetPeersRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string query = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_query();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.GetPeersRqst.query"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string options = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_options();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.GetPeersRqst.options"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetPeersRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.GetPeersRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_query().data(), static_cast<int>(this->_internal_query().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.GetPeersRqst.query");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_query(), target);
  }

  // string options = 2;
  if (this->options().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_options().data(), static_cast<int>(this->_internal_options().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.GetPeersRqst.options");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_options(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.GetPeersRqst)
  return target;
}

size_t GetPeersRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.GetPeersRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_query());
  }

  // string options = 2;
  if (this->options().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_options());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetPeersRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.GetPeersRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const GetPeersRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetPeersRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.GetPeersRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.GetPeersRqst)
    MergeFrom(*source);
  }
}

void GetPeersRqst::MergeFrom(const GetPeersRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.GetPeersRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query().size() > 0) {
    _internal_set_query(from._internal_query());
  }
  if (from.options().size() > 0) {
    _internal_set_options(from._internal_options());
  }
}

void GetPeersRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.GetPeersRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetPeersRqst::CopyFrom(const GetPeersRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.GetPeersRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPeersRqst::IsInitialized() const {
  return true;
}

void GetPeersRqst::InternalSwap(GetPeersRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  query_.Swap(&other->query_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  options_.Swap(&other->options_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetPeersRqst::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[117]);
}

// ===================================================================

class GetPeersRsp::_Internal {
 public:
};

GetPeersRsp::GetPeersRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  peers_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.GetPeersRsp)
}
GetPeersRsp::GetPeersRsp(const GetPeersRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      peers_(from.peers_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:resource.GetPeersRsp)
}

void GetPeersRsp::SharedCtor() {
}

GetPeersRsp::~GetPeersRsp() {
  // @@protoc_insertion_point(destructor:resource.GetPeersRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetPeersRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetPeersRsp::ArenaDtor(void* object) {
  GetPeersRsp* _this = reinterpret_cast< GetPeersRsp* >(object);
  (void)_this;
}
void GetPeersRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetPeersRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetPeersRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.GetPeersRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  peers_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetPeersRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .resource.Peer peers = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_peers(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetPeersRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.GetPeersRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .resource.Peer peers = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_peers_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_peers(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.GetPeersRsp)
  return target;
}

size_t GetPeersRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.GetPeersRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .resource.Peer peers = 1;
  total_size += 1UL * this->_internal_peers_size();
  for (const auto& msg : this->peers_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetPeersRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.GetPeersRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetPeersRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetPeersRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.GetPeersRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.GetPeersRsp)
    MergeFrom(*source);
  }
}

void GetPeersRsp::MergeFrom(const GetPeersRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.GetPeersRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  peers_.MergeFrom(from.peers_);
}

void GetPeersRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.GetPeersRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetPeersRsp::CopyFrom(const GetPeersRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.GetPeersRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPeersRsp::IsInitialized() const {
  return true;
}

void GetPeersRsp::InternalSwap(GetPeersRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  peers_.InternalSwap(&other->peers_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetPeersRsp::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[118]);
}

// ===================================================================

class DeletePeerRqst::_Internal {
 public:
  static const ::resource::Peer& peer(const DeletePeerRqst* msg);
};

const ::resource::Peer&
DeletePeerRqst::_Internal::peer(const DeletePeerRqst* msg) {
  return *msg->peer_;
}
DeletePeerRqst::DeletePeerRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.DeletePeerRqst)
}
DeletePeerRqst::DeletePeerRqst(const DeletePeerRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_peer()) {
    peer_ = new ::resource::Peer(*from.peer_);
  } else {
    peer_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:resource.DeletePeerRqst)
}

void DeletePeerRqst::SharedCtor() {
peer_ = nullptr;
}

DeletePeerRqst::~DeletePeerRqst() {
  // @@protoc_insertion_point(destructor:resource.DeletePeerRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeletePeerRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete peer_;
}

void DeletePeerRqst::ArenaDtor(void* object) {
  DeletePeerRqst* _this = reinterpret_cast< DeletePeerRqst* >(object);
  (void)_this;
}
void DeletePeerRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeletePeerRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeletePeerRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.DeletePeerRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && peer_ != nullptr) {
    delete peer_;
  }
  peer_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeletePeerRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .resource.Peer peer = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_peer(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeletePeerRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.DeletePeerRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .resource.Peer peer = 1;
  if (this->has_peer()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::peer(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.DeletePeerRqst)
  return target;
}

size_t DeletePeerRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.DeletePeerRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .resource.Peer peer = 1;
  if (this->has_peer()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *peer_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeletePeerRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.DeletePeerRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const DeletePeerRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeletePeerRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.DeletePeerRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.DeletePeerRqst)
    MergeFrom(*source);
  }
}

void DeletePeerRqst::MergeFrom(const DeletePeerRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.DeletePeerRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_peer()) {
    _internal_mutable_peer()->::resource::Peer::MergeFrom(from._internal_peer());
  }
}

void DeletePeerRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.DeletePeerRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeletePeerRqst::CopyFrom(const DeletePeerRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.DeletePeerRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeletePeerRqst::IsInitialized() const {
  return true;
}

void DeletePeerRqst::InternalSwap(DeletePeerRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(peer_, other->peer_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeletePeerRqst::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[119]);
}

// ===================================================================

class DeletePeerRsp::_Internal {
 public:
};

DeletePeerRsp::DeletePeerRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.DeletePeerRsp)
}
DeletePeerRsp::DeletePeerRsp(const DeletePeerRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.DeletePeerRsp)
}

void DeletePeerRsp::SharedCtor() {
result_ = false;
}

DeletePeerRsp::~DeletePeerRsp() {
  // @@protoc_insertion_point(destructor:resource.DeletePeerRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeletePeerRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void DeletePeerRsp::ArenaDtor(void* object) {
  DeletePeerRsp* _this = reinterpret_cast< DeletePeerRsp* >(object);
  (void)_this;
}
void DeletePeerRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeletePeerRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeletePeerRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.DeletePeerRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeletePeerRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeletePeerRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.DeletePeerRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.DeletePeerRsp)
  return target;
}

size_t DeletePeerRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.DeletePeerRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeletePeerRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.DeletePeerRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const DeletePeerRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeletePeerRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.DeletePeerRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.DeletePeerRsp)
    MergeFrom(*source);
  }
}

void DeletePeerRsp::MergeFrom(const DeletePeerRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.DeletePeerRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void DeletePeerRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.DeletePeerRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeletePeerRsp::CopyFrom(const DeletePeerRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.DeletePeerRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeletePeerRsp::IsInitialized() const {
  return true;
}

void DeletePeerRsp::InternalSwap(DeletePeerRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeletePeerRsp::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[120]);
}

// ===================================================================

class AddPeerActionsRqst::_Internal {
 public:
};

AddPeerActionsRqst::AddPeerActionsRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  actions_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.AddPeerActionsRqst)
}
AddPeerActionsRqst::AddPeerActionsRqst(const AddPeerActionsRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      actions_(from.actions_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  mac_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_mac().empty()) {
    mac_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_mac(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.AddPeerActionsRqst)
}

void AddPeerActionsRqst::SharedCtor() {
mac_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

AddPeerActionsRqst::~AddPeerActionsRqst() {
  // @@protoc_insertion_point(destructor:resource.AddPeerActionsRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddPeerActionsRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  mac_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AddPeerActionsRqst::ArenaDtor(void* object) {
  AddPeerActionsRqst* _this = reinterpret_cast< AddPeerActionsRqst* >(object);
  (void)_this;
}
void AddPeerActionsRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddPeerActionsRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AddPeerActionsRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.AddPeerActionsRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  actions_.Clear();
  mac_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddPeerActionsRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string mac = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_mac();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.AddPeerActionsRqst.mac"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string actions = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_actions();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.AddPeerActionsRqst.actions"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddPeerActionsRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.AddPeerActionsRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string mac = 1;
  if (this->mac().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_mac().data(), static_cast<int>(this->_internal_mac().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.AddPeerActionsRqst.mac");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_mac(), target);
  }

  // repeated string actions = 2;
  for (int i = 0, n = this->_internal_actions_size(); i < n; i++) {
    const auto& s = this->_internal_actions(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.AddPeerActionsRqst.actions");
    target = stream->WriteString(2, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.AddPeerActionsRqst)
  return target;
}

size_t AddPeerActionsRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.AddPeerActionsRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string actions = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(actions_.size());
  for (int i = 0, n = actions_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      actions_.Get(i));
  }

  // string mac = 1;
  if (this->mac().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_mac());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddPeerActionsRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.AddPeerActionsRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const AddPeerActionsRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddPeerActionsRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.AddPeerActionsRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.AddPeerActionsRqst)
    MergeFrom(*source);
  }
}

void AddPeerActionsRqst::MergeFrom(const AddPeerActionsRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.AddPeerActionsRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  actions_.MergeFrom(from.actions_);
  if (from.mac().size() > 0) {
    _internal_set_mac(from._internal_mac());
  }
}

void AddPeerActionsRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.AddPeerActionsRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddPeerActionsRqst::CopyFrom(const AddPeerActionsRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.AddPeerActionsRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddPeerActionsRqst::IsInitialized() const {
  return true;
}

void AddPeerActionsRqst::InternalSwap(AddPeerActionsRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  actions_.InternalSwap(&other->actions_);
  mac_.Swap(&other->mac_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata AddPeerActionsRqst::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[121]);
}

// ===================================================================

class AddPeerActionsRsp::_Internal {
 public:
};

AddPeerActionsRsp::AddPeerActionsRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.AddPeerActionsRsp)
}
AddPeerActionsRsp::AddPeerActionsRsp(const AddPeerActionsRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.AddPeerActionsRsp)
}

void AddPeerActionsRsp::SharedCtor() {
result_ = false;
}

AddPeerActionsRsp::~AddPeerActionsRsp() {
  // @@protoc_insertion_point(destructor:resource.AddPeerActionsRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddPeerActionsRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void AddPeerActionsRsp::ArenaDtor(void* object) {
  AddPeerActionsRsp* _this = reinterpret_cast< AddPeerActionsRsp* >(object);
  (void)_this;
}
void AddPeerActionsRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddPeerActionsRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AddPeerActionsRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.AddPeerActionsRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddPeerActionsRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddPeerActionsRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.AddPeerActionsRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.AddPeerActionsRsp)
  return target;
}

size_t AddPeerActionsRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.AddPeerActionsRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddPeerActionsRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.AddPeerActionsRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const AddPeerActionsRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddPeerActionsRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.AddPeerActionsRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.AddPeerActionsRsp)
    MergeFrom(*source);
  }
}

void AddPeerActionsRsp::MergeFrom(const AddPeerActionsRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.AddPeerActionsRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void AddPeerActionsRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.AddPeerActionsRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddPeerActionsRsp::CopyFrom(const AddPeerActionsRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.AddPeerActionsRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddPeerActionsRsp::IsInitialized() const {
  return true;
}

void AddPeerActionsRsp::InternalSwap(AddPeerActionsRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AddPeerActionsRsp::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[122]);
}

// ===================================================================

class RemovePeerActionRqst::_Internal {
 public:
};

RemovePeerActionRqst::RemovePeerActionRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.RemovePeerActionRqst)
}
RemovePeerActionRqst::RemovePeerActionRqst(const RemovePeerActionRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  mac_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_mac().empty()) {
    mac_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_mac(), 
      GetArena());
  }
  action_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_action().empty()) {
    action_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_action(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.RemovePeerActionRqst)
}

void RemovePeerActionRqst::SharedCtor() {
mac_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
action_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

RemovePeerActionRqst::~RemovePeerActionRqst() {
  // @@protoc_insertion_point(destructor:resource.RemovePeerActionRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemovePeerActionRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  mac_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  action_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RemovePeerActionRqst::ArenaDtor(void* object) {
  RemovePeerActionRqst* _this = reinterpret_cast< RemovePeerActionRqst* >(object);
  (void)_this;
}
void RemovePeerActionRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemovePeerActionRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RemovePeerActionRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.RemovePeerActionRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mac_.ClearToEmpty();
  action_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemovePeerActionRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string mac = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_mac();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.RemovePeerActionRqst.mac"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string action = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_action();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.RemovePeerActionRqst.action"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemovePeerActionRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.RemovePeerActionRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string mac = 1;
  if (this->mac().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_mac().data(), static_cast<int>(this->_internal_mac().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.RemovePeerActionRqst.mac");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_mac(), target);
  }

  // string action = 2;
  if (this->action().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_action().data(), static_cast<int>(this->_internal_action().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.RemovePeerActionRqst.action");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_action(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.RemovePeerActionRqst)
  return target;
}

size_t RemovePeerActionRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.RemovePeerActionRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string mac = 1;
  if (this->mac().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_mac());
  }

  // string action = 2;
  if (this->action().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_action());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemovePeerActionRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.RemovePeerActionRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const RemovePeerActionRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemovePeerActionRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.RemovePeerActionRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.RemovePeerActionRqst)
    MergeFrom(*source);
  }
}

void RemovePeerActionRqst::MergeFrom(const RemovePeerActionRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.RemovePeerActionRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.mac().size() > 0) {
    _internal_set_mac(from._internal_mac());
  }
  if (from.action().size() > 0) {
    _internal_set_action(from._internal_action());
  }
}

void RemovePeerActionRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.RemovePeerActionRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemovePeerActionRqst::CopyFrom(const RemovePeerActionRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.RemovePeerActionRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemovePeerActionRqst::IsInitialized() const {
  return true;
}

void RemovePeerActionRqst::InternalSwap(RemovePeerActionRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  mac_.Swap(&other->mac_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  action_.Swap(&other->action_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata RemovePeerActionRqst::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[123]);
}

// ===================================================================

class RemovePeerActionRsp::_Internal {
 public:
};

RemovePeerActionRsp::RemovePeerActionRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.RemovePeerActionRsp)
}
RemovePeerActionRsp::RemovePeerActionRsp(const RemovePeerActionRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.RemovePeerActionRsp)
}

void RemovePeerActionRsp::SharedCtor() {
result_ = false;
}

RemovePeerActionRsp::~RemovePeerActionRsp() {
  // @@protoc_insertion_point(destructor:resource.RemovePeerActionRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemovePeerActionRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RemovePeerActionRsp::ArenaDtor(void* object) {
  RemovePeerActionRsp* _this = reinterpret_cast< RemovePeerActionRsp* >(object);
  (void)_this;
}
void RemovePeerActionRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemovePeerActionRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RemovePeerActionRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.RemovePeerActionRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemovePeerActionRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemovePeerActionRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.RemovePeerActionRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.RemovePeerActionRsp)
  return target;
}

size_t RemovePeerActionRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.RemovePeerActionRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemovePeerActionRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.RemovePeerActionRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const RemovePeerActionRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemovePeerActionRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.RemovePeerActionRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.RemovePeerActionRsp)
    MergeFrom(*source);
  }
}

void RemovePeerActionRsp::MergeFrom(const RemovePeerActionRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.RemovePeerActionRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void RemovePeerActionRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.RemovePeerActionRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemovePeerActionRsp::CopyFrom(const RemovePeerActionRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.RemovePeerActionRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemovePeerActionRsp::IsInitialized() const {
  return true;
}

void RemovePeerActionRsp::InternalSwap(RemovePeerActionRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RemovePeerActionRsp::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[124]);
}

// ===================================================================

class RemovePeersActionRqst::_Internal {
 public:
};

RemovePeersActionRqst::RemovePeersActionRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.RemovePeersActionRqst)
}
RemovePeersActionRqst::RemovePeersActionRqst(const RemovePeersActionRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  action_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_action().empty()) {
    action_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_action(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.RemovePeersActionRqst)
}

void RemovePeersActionRqst::SharedCtor() {
action_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

RemovePeersActionRqst::~RemovePeersActionRqst() {
  // @@protoc_insertion_point(destructor:resource.RemovePeersActionRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemovePeersActionRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  action_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RemovePeersActionRqst::ArenaDtor(void* object) {
  RemovePeersActionRqst* _this = reinterpret_cast< RemovePeersActionRqst* >(object);
  (void)_this;
}
void RemovePeersActionRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemovePeersActionRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RemovePeersActionRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.RemovePeersActionRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  action_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemovePeersActionRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string action = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_action();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.RemovePeersActionRqst.action"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemovePeersActionRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.RemovePeersActionRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string action = 2;
  if (this->action().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_action().data(), static_cast<int>(this->_internal_action().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.RemovePeersActionRqst.action");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_action(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.RemovePeersActionRqst)
  return target;
}

size_t RemovePeersActionRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.RemovePeersActionRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string action = 2;
  if (this->action().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_action());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemovePeersActionRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.RemovePeersActionRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const RemovePeersActionRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemovePeersActionRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.RemovePeersActionRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.RemovePeersActionRqst)
    MergeFrom(*source);
  }
}

void RemovePeersActionRqst::MergeFrom(const RemovePeersActionRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.RemovePeersActionRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.action().size() > 0) {
    _internal_set_action(from._internal_action());
  }
}

void RemovePeersActionRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.RemovePeersActionRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemovePeersActionRqst::CopyFrom(const RemovePeersActionRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.RemovePeersActionRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemovePeersActionRqst::IsInitialized() const {
  return true;
}

void RemovePeersActionRqst::InternalSwap(RemovePeersActionRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  action_.Swap(&other->action_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata RemovePeersActionRqst::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[125]);
}

// ===================================================================

class RemovePeersActionRsp::_Internal {
 public:
};

RemovePeersActionRsp::RemovePeersActionRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.RemovePeersActionRsp)
}
RemovePeersActionRsp::RemovePeersActionRsp(const RemovePeersActionRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.RemovePeersActionRsp)
}

void RemovePeersActionRsp::SharedCtor() {
result_ = false;
}

RemovePeersActionRsp::~RemovePeersActionRsp() {
  // @@protoc_insertion_point(destructor:resource.RemovePeersActionRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemovePeersActionRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RemovePeersActionRsp::ArenaDtor(void* object) {
  RemovePeersActionRsp* _this = reinterpret_cast< RemovePeersActionRsp* >(object);
  (void)_this;
}
void RemovePeersActionRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemovePeersActionRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RemovePeersActionRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.RemovePeersActionRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemovePeersActionRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemovePeersActionRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.RemovePeersActionRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.RemovePeersActionRsp)
  return target;
}

size_t RemovePeersActionRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.RemovePeersActionRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemovePeersActionRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.RemovePeersActionRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const RemovePeersActionRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemovePeersActionRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.RemovePeersActionRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.RemovePeersActionRsp)
    MergeFrom(*source);
  }
}

void RemovePeersActionRsp::MergeFrom(const RemovePeersActionRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.RemovePeersActionRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void RemovePeersActionRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.RemovePeersActionRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemovePeersActionRsp::CopyFrom(const RemovePeersActionRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.RemovePeersActionRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemovePeersActionRsp::IsInitialized() const {
  return true;
}

void RemovePeersActionRsp::InternalSwap(RemovePeersActionRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RemovePeersActionRsp::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[126]);
}

// ===================================================================

class AcceptPeerRqst::_Internal {
 public:
  static const ::resource::Peer& peer(const AcceptPeerRqst* msg);
};

const ::resource::Peer&
AcceptPeerRqst::_Internal::peer(const AcceptPeerRqst* msg) {
  return *msg->peer_;
}
AcceptPeerRqst::AcceptPeerRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.AcceptPeerRqst)
}
AcceptPeerRqst::AcceptPeerRqst(const AcceptPeerRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_peer()) {
    peer_ = new ::resource::Peer(*from.peer_);
  } else {
    peer_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:resource.AcceptPeerRqst)
}

void AcceptPeerRqst::SharedCtor() {
peer_ = nullptr;
}

AcceptPeerRqst::~AcceptPeerRqst() {
  // @@protoc_insertion_point(destructor:resource.AcceptPeerRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AcceptPeerRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete peer_;
}

void AcceptPeerRqst::ArenaDtor(void* object) {
  AcceptPeerRqst* _this = reinterpret_cast< AcceptPeerRqst* >(object);
  (void)_this;
}
void AcceptPeerRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AcceptPeerRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AcceptPeerRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.AcceptPeerRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && peer_ != nullptr) {
    delete peer_;
  }
  peer_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AcceptPeerRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .resource.Peer peer = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_peer(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AcceptPeerRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.AcceptPeerRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .resource.Peer peer = 1;
  if (this->has_peer()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::peer(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.AcceptPeerRqst)
  return target;
}

size_t AcceptPeerRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.AcceptPeerRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .resource.Peer peer = 1;
  if (this->has_peer()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *peer_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AcceptPeerRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.AcceptPeerRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const AcceptPeerRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AcceptPeerRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.AcceptPeerRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.AcceptPeerRqst)
    MergeFrom(*source);
  }
}

void AcceptPeerRqst::MergeFrom(const AcceptPeerRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.AcceptPeerRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_peer()) {
    _internal_mutable_peer()->::resource::Peer::MergeFrom(from._internal_peer());
  }
}

void AcceptPeerRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.AcceptPeerRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AcceptPeerRqst::CopyFrom(const AcceptPeerRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.AcceptPeerRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AcceptPeerRqst::IsInitialized() const {
  return true;
}

void AcceptPeerRqst::InternalSwap(AcceptPeerRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(peer_, other->peer_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AcceptPeerRqst::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[127]);
}

// ===================================================================

class AcceptPeerRsp::_Internal {
 public:
};

AcceptPeerRsp::AcceptPeerRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.AcceptPeerRsp)
}
AcceptPeerRsp::AcceptPeerRsp(const AcceptPeerRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.AcceptPeerRsp)
}

void AcceptPeerRsp::SharedCtor() {
result_ = false;
}

AcceptPeerRsp::~AcceptPeerRsp() {
  // @@protoc_insertion_point(destructor:resource.AcceptPeerRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AcceptPeerRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void AcceptPeerRsp::ArenaDtor(void* object) {
  AcceptPeerRsp* _this = reinterpret_cast< AcceptPeerRsp* >(object);
  (void)_this;
}
void AcceptPeerRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AcceptPeerRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AcceptPeerRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.AcceptPeerRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AcceptPeerRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AcceptPeerRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.AcceptPeerRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.AcceptPeerRsp)
  return target;
}

size_t AcceptPeerRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.AcceptPeerRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AcceptPeerRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.AcceptPeerRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const AcceptPeerRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AcceptPeerRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.AcceptPeerRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.AcceptPeerRsp)
    MergeFrom(*source);
  }
}

void AcceptPeerRsp::MergeFrom(const AcceptPeerRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.AcceptPeerRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void AcceptPeerRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.AcceptPeerRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AcceptPeerRsp::CopyFrom(const AcceptPeerRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.AcceptPeerRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AcceptPeerRsp::IsInitialized() const {
  return true;
}

void AcceptPeerRsp::InternalSwap(AcceptPeerRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AcceptPeerRsp::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[128]);
}

// ===================================================================

class RejectPeerRqst::_Internal {
 public:
  static const ::resource::Peer& peer(const RejectPeerRqst* msg);
};

const ::resource::Peer&
RejectPeerRqst::_Internal::peer(const RejectPeerRqst* msg) {
  return *msg->peer_;
}
RejectPeerRqst::RejectPeerRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.RejectPeerRqst)
}
RejectPeerRqst::RejectPeerRqst(const RejectPeerRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_peer()) {
    peer_ = new ::resource::Peer(*from.peer_);
  } else {
    peer_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:resource.RejectPeerRqst)
}

void RejectPeerRqst::SharedCtor() {
peer_ = nullptr;
}

RejectPeerRqst::~RejectPeerRqst() {
  // @@protoc_insertion_point(destructor:resource.RejectPeerRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RejectPeerRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete peer_;
}

void RejectPeerRqst::ArenaDtor(void* object) {
  RejectPeerRqst* _this = reinterpret_cast< RejectPeerRqst* >(object);
  (void)_this;
}
void RejectPeerRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RejectPeerRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RejectPeerRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.RejectPeerRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && peer_ != nullptr) {
    delete peer_;
  }
  peer_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RejectPeerRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .resource.Peer peer = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_peer(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RejectPeerRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.RejectPeerRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .resource.Peer peer = 1;
  if (this->has_peer()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::peer(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.RejectPeerRqst)
  return target;
}

size_t RejectPeerRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.RejectPeerRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .resource.Peer peer = 1;
  if (this->has_peer()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *peer_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RejectPeerRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.RejectPeerRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const RejectPeerRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RejectPeerRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.RejectPeerRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.RejectPeerRqst)
    MergeFrom(*source);
  }
}

void RejectPeerRqst::MergeFrom(const RejectPeerRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.RejectPeerRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_peer()) {
    _internal_mutable_peer()->::resource::Peer::MergeFrom(from._internal_peer());
  }
}

void RejectPeerRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.RejectPeerRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RejectPeerRqst::CopyFrom(const RejectPeerRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.RejectPeerRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RejectPeerRqst::IsInitialized() const {
  return true;
}

void RejectPeerRqst::InternalSwap(RejectPeerRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(peer_, other->peer_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RejectPeerRqst::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[129]);
}

// ===================================================================

class RejectPeerRsp::_Internal {
 public:
};

RejectPeerRsp::RejectPeerRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.RejectPeerRsp)
}
RejectPeerRsp::RejectPeerRsp(const RejectPeerRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.RejectPeerRsp)
}

void RejectPeerRsp::SharedCtor() {
result_ = false;
}

RejectPeerRsp::~RejectPeerRsp() {
  // @@protoc_insertion_point(destructor:resource.RejectPeerRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RejectPeerRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RejectPeerRsp::ArenaDtor(void* object) {
  RejectPeerRsp* _this = reinterpret_cast< RejectPeerRsp* >(object);
  (void)_this;
}
void RejectPeerRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RejectPeerRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RejectPeerRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.RejectPeerRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RejectPeerRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RejectPeerRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.RejectPeerRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.RejectPeerRsp)
  return target;
}

size_t RejectPeerRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.RejectPeerRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RejectPeerRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.RejectPeerRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const RejectPeerRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RejectPeerRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.RejectPeerRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.RejectPeerRsp)
    MergeFrom(*source);
  }
}

void RejectPeerRsp::MergeFrom(const RejectPeerRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.RejectPeerRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void RejectPeerRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.RejectPeerRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RejectPeerRsp::CopyFrom(const RejectPeerRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.RejectPeerRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RejectPeerRsp::IsInitialized() const {
  return true;
}

void RejectPeerRsp::InternalSwap(RejectPeerRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RejectPeerRsp::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[130]);
}

// ===================================================================

class Notification::_Internal {
 public:
};

Notification::Notification(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.Notification)
}
Notification::Notification(const Notification& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArena());
  }
  message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_message().empty()) {
    message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_message(), 
      GetArena());
  }
  recipient_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_recipient().empty()) {
    recipient_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_recipient(), 
      GetArena());
  }
  sender_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_sender().empty()) {
    sender_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_sender(), 
      GetArena());
  }
  ::memcpy(&date_, &from.date_,
    static_cast<size_t>(reinterpret_cast<char*>(&notification_type_) -
    reinterpret_cast<char*>(&date_)) + sizeof(notification_type_));
  // @@protoc_insertion_point(copy_constructor:resource.Notification)
}

void Notification::SharedCtor() {
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
recipient_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
sender_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&date_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&notification_type_) -
    reinterpret_cast<char*>(&date_)) + sizeof(notification_type_));
}

Notification::~Notification() {
  // @@protoc_insertion_point(destructor:resource.Notification)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Notification::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  message_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  recipient_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sender_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Notification::ArenaDtor(void* object) {
  Notification* _this = reinterpret_cast< Notification* >(object);
  (void)_this;
}
void Notification::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Notification::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Notification::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.Notification)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  message_.ClearToEmpty();
  recipient_.ClearToEmpty();
  sender_.ClearToEmpty();
  ::memset(&date_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&notification_type_) -
      reinterpret_cast<char*>(&date_)) + sizeof(notification_type_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Notification::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Notification.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 date = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          date_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string message = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_message();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Notification.message"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string recipient = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_recipient();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Notification.recipient"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string sender = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_sender();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Notification.sender"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .resource.NotificationType notification_type = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_notification_type(static_cast<::resource::NotificationType>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Notification::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.Notification)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Notification.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // int64 date = 2;
  if (this->date() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_date(), target);
  }

  // string message = 3;
  if (this->message().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Notification.message");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_message(), target);
  }

  // string recipient = 4;
  if (this->recipient().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_recipient().data(), static_cast<int>(this->_internal_recipient().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Notification.recipient");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_recipient(), target);
  }

  // string sender = 5;
  if (this->sender().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_sender().data(), static_cast<int>(this->_internal_sender().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Notification.sender");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_sender(), target);
  }

  // .resource.NotificationType notification_type = 6;
  if (this->notification_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      6, this->_internal_notification_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.Notification)
  return target;
}

size_t Notification::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.Notification)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string message = 3;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  // string recipient = 4;
  if (this->recipient().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_recipient());
  }

  // string sender = 5;
  if (this->sender().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_sender());
  }

  // int64 date = 2;
  if (this->date() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_date());
  }

  // .resource.NotificationType notification_type = 6;
  if (this->notification_type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_notification_type());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Notification::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.Notification)
  GOOGLE_DCHECK_NE(&from, this);
  const Notification* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Notification>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.Notification)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.Notification)
    MergeFrom(*source);
  }
}

void Notification::MergeFrom(const Notification& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.Notification)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.message().size() > 0) {
    _internal_set_message(from._internal_message());
  }
  if (from.recipient().size() > 0) {
    _internal_set_recipient(from._internal_recipient());
  }
  if (from.sender().size() > 0) {
    _internal_set_sender(from._internal_sender());
  }
  if (from.date() != 0) {
    _internal_set_date(from._internal_date());
  }
  if (from.notification_type() != 0) {
    _internal_set_notification_type(from._internal_notification_type());
  }
}

void Notification::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.Notification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Notification::CopyFrom(const Notification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.Notification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Notification::IsInitialized() const {
  return true;
}

void Notification::InternalSwap(Notification* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  message_.Swap(&other->message_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  recipient_.Swap(&other->recipient_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  sender_.Swap(&other->sender_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Notification, notification_type_)
      + sizeof(Notification::notification_type_)
      - PROTOBUF_FIELD_OFFSET(Notification, date_)>(
          reinterpret_cast<char*>(&date_),
          reinterpret_cast<char*>(&other->date_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Notification::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[131]);
}

// ===================================================================

class CreateNotificationRqst::_Internal {
 public:
  static const ::resource::Notification& notification(const CreateNotificationRqst* msg);
};

const ::resource::Notification&
CreateNotificationRqst::_Internal::notification(const CreateNotificationRqst* msg) {
  return *msg->notification_;
}
CreateNotificationRqst::CreateNotificationRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.CreateNotificationRqst)
}
CreateNotificationRqst::CreateNotificationRqst(const CreateNotificationRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_notification()) {
    notification_ = new ::resource::Notification(*from.notification_);
  } else {
    notification_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:resource.CreateNotificationRqst)
}

void CreateNotificationRqst::SharedCtor() {
notification_ = nullptr;
}

CreateNotificationRqst::~CreateNotificationRqst() {
  // @@protoc_insertion_point(destructor:resource.CreateNotificationRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateNotificationRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete notification_;
}

void CreateNotificationRqst::ArenaDtor(void* object) {
  CreateNotificationRqst* _this = reinterpret_cast< CreateNotificationRqst* >(object);
  (void)_this;
}
void CreateNotificationRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateNotificationRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateNotificationRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.CreateNotificationRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && notification_ != nullptr) {
    delete notification_;
  }
  notification_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateNotificationRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .resource.Notification notification = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_notification(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateNotificationRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.CreateNotificationRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .resource.Notification notification = 1;
  if (this->has_notification()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::notification(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.CreateNotificationRqst)
  return target;
}

size_t CreateNotificationRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.CreateNotificationRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .resource.Notification notification = 1;
  if (this->has_notification()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *notification_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateNotificationRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.CreateNotificationRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateNotificationRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateNotificationRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.CreateNotificationRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.CreateNotificationRqst)
    MergeFrom(*source);
  }
}

void CreateNotificationRqst::MergeFrom(const CreateNotificationRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.CreateNotificationRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_notification()) {
    _internal_mutable_notification()->::resource::Notification::MergeFrom(from._internal_notification());
  }
}

void CreateNotificationRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.CreateNotificationRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateNotificationRqst::CopyFrom(const CreateNotificationRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.CreateNotificationRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateNotificationRqst::IsInitialized() const {
  return true;
}

void CreateNotificationRqst::InternalSwap(CreateNotificationRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(notification_, other->notification_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateNotificationRqst::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[132]);
}

// ===================================================================

class CreateNotificationRsp::_Internal {
 public:
};

CreateNotificationRsp::CreateNotificationRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.CreateNotificationRsp)
}
CreateNotificationRsp::CreateNotificationRsp(const CreateNotificationRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:resource.CreateNotificationRsp)
}

void CreateNotificationRsp::SharedCtor() {
}

CreateNotificationRsp::~CreateNotificationRsp() {
  // @@protoc_insertion_point(destructor:resource.CreateNotificationRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateNotificationRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CreateNotificationRsp::ArenaDtor(void* object) {
  CreateNotificationRsp* _this = reinterpret_cast< CreateNotificationRsp* >(object);
  (void)_this;
}
void CreateNotificationRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateNotificationRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateNotificationRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.CreateNotificationRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateNotificationRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateNotificationRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.CreateNotificationRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.CreateNotificationRsp)
  return target;
}

size_t CreateNotificationRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.CreateNotificationRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateNotificationRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.CreateNotificationRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateNotificationRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateNotificationRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.CreateNotificationRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.CreateNotificationRsp)
    MergeFrom(*source);
  }
}

void CreateNotificationRsp::MergeFrom(const CreateNotificationRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.CreateNotificationRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CreateNotificationRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.CreateNotificationRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateNotificationRsp::CopyFrom(const CreateNotificationRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.CreateNotificationRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateNotificationRsp::IsInitialized() const {
  return true;
}

void CreateNotificationRsp::InternalSwap(CreateNotificationRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateNotificationRsp::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[133]);
}

// ===================================================================

class GetNotificationsRqst::_Internal {
 public:
};

GetNotificationsRqst::GetNotificationsRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.GetNotificationsRqst)
}
GetNotificationsRqst::GetNotificationsRqst(const GetNotificationsRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  recipient_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_recipient().empty()) {
    recipient_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_recipient(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.GetNotificationsRqst)
}

void GetNotificationsRqst::SharedCtor() {
recipient_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetNotificationsRqst::~GetNotificationsRqst() {
  // @@protoc_insertion_point(destructor:resource.GetNotificationsRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetNotificationsRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  recipient_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetNotificationsRqst::ArenaDtor(void* object) {
  GetNotificationsRqst* _this = reinterpret_cast< GetNotificationsRqst* >(object);
  (void)_this;
}
void GetNotificationsRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetNotificationsRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetNotificationsRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.GetNotificationsRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  recipient_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetNotificationsRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string recipient = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_recipient();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.GetNotificationsRqst.recipient"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetNotificationsRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.GetNotificationsRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string recipient = 1;
  if (this->recipient().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_recipient().data(), static_cast<int>(this->_internal_recipient().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.GetNotificationsRqst.recipient");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_recipient(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.GetNotificationsRqst)
  return target;
}

size_t GetNotificationsRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.GetNotificationsRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string recipient = 1;
  if (this->recipient().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_recipient());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetNotificationsRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.GetNotificationsRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const GetNotificationsRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetNotificationsRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.GetNotificationsRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.GetNotificationsRqst)
    MergeFrom(*source);
  }
}

void GetNotificationsRqst::MergeFrom(const GetNotificationsRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.GetNotificationsRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.recipient().size() > 0) {
    _internal_set_recipient(from._internal_recipient());
  }
}

void GetNotificationsRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.GetNotificationsRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetNotificationsRqst::CopyFrom(const GetNotificationsRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.GetNotificationsRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetNotificationsRqst::IsInitialized() const {
  return true;
}

void GetNotificationsRqst::InternalSwap(GetNotificationsRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  recipient_.Swap(&other->recipient_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetNotificationsRqst::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[134]);
}

// ===================================================================

class GetNotificationsRsp::_Internal {
 public:
};

GetNotificationsRsp::GetNotificationsRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  notifications_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.GetNotificationsRsp)
}
GetNotificationsRsp::GetNotificationsRsp(const GetNotificationsRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      notifications_(from.notifications_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:resource.GetNotificationsRsp)
}

void GetNotificationsRsp::SharedCtor() {
}

GetNotificationsRsp::~GetNotificationsRsp() {
  // @@protoc_insertion_point(destructor:resource.GetNotificationsRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetNotificationsRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetNotificationsRsp::ArenaDtor(void* object) {
  GetNotificationsRsp* _this = reinterpret_cast< GetNotificationsRsp* >(object);
  (void)_this;
}
void GetNotificationsRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetNotificationsRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetNotificationsRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.GetNotificationsRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  notifications_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetNotificationsRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .resource.Notification notifications = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_notifications(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetNotificationsRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.GetNotificationsRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .resource.Notification notifications = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_notifications_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_notifications(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.GetNotificationsRsp)
  return target;
}

size_t GetNotificationsRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.GetNotificationsRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .resource.Notification notifications = 1;
  total_size += 1UL * this->_internal_notifications_size();
  for (const auto& msg : this->notifications_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetNotificationsRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.GetNotificationsRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetNotificationsRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetNotificationsRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.GetNotificationsRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.GetNotificationsRsp)
    MergeFrom(*source);
  }
}

void GetNotificationsRsp::MergeFrom(const GetNotificationsRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.GetNotificationsRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  notifications_.MergeFrom(from.notifications_);
}

void GetNotificationsRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.GetNotificationsRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetNotificationsRsp::CopyFrom(const GetNotificationsRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.GetNotificationsRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetNotificationsRsp::IsInitialized() const {
  return true;
}

void GetNotificationsRsp::InternalSwap(GetNotificationsRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  notifications_.InternalSwap(&other->notifications_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetNotificationsRsp::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[135]);
}

// ===================================================================

class DeleteNotificationRqst::_Internal {
 public:
};

DeleteNotificationRqst::DeleteNotificationRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.DeleteNotificationRqst)
}
DeleteNotificationRqst::DeleteNotificationRqst(const DeleteNotificationRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArena());
  }
  recipient_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_recipient().empty()) {
    recipient_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_recipient(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.DeleteNotificationRqst)
}

void DeleteNotificationRqst::SharedCtor() {
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
recipient_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DeleteNotificationRqst::~DeleteNotificationRqst() {
  // @@protoc_insertion_point(destructor:resource.DeleteNotificationRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteNotificationRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  recipient_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeleteNotificationRqst::ArenaDtor(void* object) {
  DeleteNotificationRqst* _this = reinterpret_cast< DeleteNotificationRqst* >(object);
  (void)_this;
}
void DeleteNotificationRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteNotificationRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeleteNotificationRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.DeleteNotificationRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  recipient_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteNotificationRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.DeleteNotificationRqst.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string recipient = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_recipient();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.DeleteNotificationRqst.recipient"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteNotificationRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.DeleteNotificationRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.DeleteNotificationRqst.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string recipient = 2;
  if (this->recipient().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_recipient().data(), static_cast<int>(this->_internal_recipient().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.DeleteNotificationRqst.recipient");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_recipient(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.DeleteNotificationRqst)
  return target;
}

size_t DeleteNotificationRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.DeleteNotificationRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string recipient = 2;
  if (this->recipient().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_recipient());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteNotificationRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.DeleteNotificationRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteNotificationRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteNotificationRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.DeleteNotificationRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.DeleteNotificationRqst)
    MergeFrom(*source);
  }
}

void DeleteNotificationRqst::MergeFrom(const DeleteNotificationRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.DeleteNotificationRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.recipient().size() > 0) {
    _internal_set_recipient(from._internal_recipient());
  }
}

void DeleteNotificationRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.DeleteNotificationRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteNotificationRqst::CopyFrom(const DeleteNotificationRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.DeleteNotificationRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteNotificationRqst::IsInitialized() const {
  return true;
}

void DeleteNotificationRqst::InternalSwap(DeleteNotificationRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  recipient_.Swap(&other->recipient_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteNotificationRqst::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[136]);
}

// ===================================================================

class DeleteNotificationRsp::_Internal {
 public:
};

DeleteNotificationRsp::DeleteNotificationRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.DeleteNotificationRsp)
}
DeleteNotificationRsp::DeleteNotificationRsp(const DeleteNotificationRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:resource.DeleteNotificationRsp)
}

void DeleteNotificationRsp::SharedCtor() {
}

DeleteNotificationRsp::~DeleteNotificationRsp() {
  // @@protoc_insertion_point(destructor:resource.DeleteNotificationRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteNotificationRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void DeleteNotificationRsp::ArenaDtor(void* object) {
  DeleteNotificationRsp* _this = reinterpret_cast< DeleteNotificationRsp* >(object);
  (void)_this;
}
void DeleteNotificationRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteNotificationRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeleteNotificationRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.DeleteNotificationRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteNotificationRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteNotificationRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.DeleteNotificationRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.DeleteNotificationRsp)
  return target;
}

size_t DeleteNotificationRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.DeleteNotificationRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteNotificationRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.DeleteNotificationRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteNotificationRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteNotificationRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.DeleteNotificationRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.DeleteNotificationRsp)
    MergeFrom(*source);
  }
}

void DeleteNotificationRsp::MergeFrom(const DeleteNotificationRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.DeleteNotificationRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void DeleteNotificationRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.DeleteNotificationRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteNotificationRsp::CopyFrom(const DeleteNotificationRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.DeleteNotificationRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteNotificationRsp::IsInitialized() const {
  return true;
}

void DeleteNotificationRsp::InternalSwap(DeleteNotificationRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteNotificationRsp::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[137]);
}

// ===================================================================

class ClearAllNotificationsRqst::_Internal {
 public:
};

ClearAllNotificationsRqst::ClearAllNotificationsRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.ClearAllNotificationsRqst)
}
ClearAllNotificationsRqst::ClearAllNotificationsRqst(const ClearAllNotificationsRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  recipient_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_recipient().empty()) {
    recipient_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_recipient(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.ClearAllNotificationsRqst)
}

void ClearAllNotificationsRqst::SharedCtor() {
recipient_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ClearAllNotificationsRqst::~ClearAllNotificationsRqst() {
  // @@protoc_insertion_point(destructor:resource.ClearAllNotificationsRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ClearAllNotificationsRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  recipient_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ClearAllNotificationsRqst::ArenaDtor(void* object) {
  ClearAllNotificationsRqst* _this = reinterpret_cast< ClearAllNotificationsRqst* >(object);
  (void)_this;
}
void ClearAllNotificationsRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ClearAllNotificationsRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ClearAllNotificationsRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.ClearAllNotificationsRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  recipient_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ClearAllNotificationsRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string recipient = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_recipient();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.ClearAllNotificationsRqst.recipient"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ClearAllNotificationsRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.ClearAllNotificationsRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string recipient = 1;
  if (this->recipient().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_recipient().data(), static_cast<int>(this->_internal_recipient().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.ClearAllNotificationsRqst.recipient");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_recipient(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.ClearAllNotificationsRqst)
  return target;
}

size_t ClearAllNotificationsRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.ClearAllNotificationsRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string recipient = 1;
  if (this->recipient().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_recipient());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClearAllNotificationsRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.ClearAllNotificationsRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const ClearAllNotificationsRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ClearAllNotificationsRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.ClearAllNotificationsRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.ClearAllNotificationsRqst)
    MergeFrom(*source);
  }
}

void ClearAllNotificationsRqst::MergeFrom(const ClearAllNotificationsRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.ClearAllNotificationsRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.recipient().size() > 0) {
    _internal_set_recipient(from._internal_recipient());
  }
}

void ClearAllNotificationsRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.ClearAllNotificationsRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClearAllNotificationsRqst::CopyFrom(const ClearAllNotificationsRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.ClearAllNotificationsRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClearAllNotificationsRqst::IsInitialized() const {
  return true;
}

void ClearAllNotificationsRqst::InternalSwap(ClearAllNotificationsRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  recipient_.Swap(&other->recipient_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ClearAllNotificationsRqst::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[138]);
}

// ===================================================================

class ClearAllNotificationsRsp::_Internal {
 public:
};

ClearAllNotificationsRsp::ClearAllNotificationsRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.ClearAllNotificationsRsp)
}
ClearAllNotificationsRsp::ClearAllNotificationsRsp(const ClearAllNotificationsRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:resource.ClearAllNotificationsRsp)
}

void ClearAllNotificationsRsp::SharedCtor() {
}

ClearAllNotificationsRsp::~ClearAllNotificationsRsp() {
  // @@protoc_insertion_point(destructor:resource.ClearAllNotificationsRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ClearAllNotificationsRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ClearAllNotificationsRsp::ArenaDtor(void* object) {
  ClearAllNotificationsRsp* _this = reinterpret_cast< ClearAllNotificationsRsp* >(object);
  (void)_this;
}
void ClearAllNotificationsRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ClearAllNotificationsRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ClearAllNotificationsRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.ClearAllNotificationsRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ClearAllNotificationsRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ClearAllNotificationsRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.ClearAllNotificationsRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.ClearAllNotificationsRsp)
  return target;
}

size_t ClearAllNotificationsRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.ClearAllNotificationsRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClearAllNotificationsRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.ClearAllNotificationsRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ClearAllNotificationsRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ClearAllNotificationsRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.ClearAllNotificationsRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.ClearAllNotificationsRsp)
    MergeFrom(*source);
  }
}

void ClearAllNotificationsRsp::MergeFrom(const ClearAllNotificationsRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.ClearAllNotificationsRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ClearAllNotificationsRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.ClearAllNotificationsRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClearAllNotificationsRsp::CopyFrom(const ClearAllNotificationsRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.ClearAllNotificationsRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClearAllNotificationsRsp::IsInitialized() const {
  return true;
}

void ClearAllNotificationsRsp::InternalSwap(ClearAllNotificationsRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ClearAllNotificationsRsp::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[139]);
}

// ===================================================================

class ClearNotificationsByTypeRqst::_Internal {
 public:
};

ClearNotificationsByTypeRqst::ClearNotificationsByTypeRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.ClearNotificationsByTypeRqst)
}
ClearNotificationsByTypeRqst::ClearNotificationsByTypeRqst(const ClearNotificationsByTypeRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  recipient_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_recipient().empty()) {
    recipient_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_recipient(), 
      GetArena());
  }
  notification_type_ = from.notification_type_;
  // @@protoc_insertion_point(copy_constructor:resource.ClearNotificationsByTypeRqst)
}

void ClearNotificationsByTypeRqst::SharedCtor() {
recipient_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
notification_type_ = 0;
}

ClearNotificationsByTypeRqst::~ClearNotificationsByTypeRqst() {
  // @@protoc_insertion_point(destructor:resource.ClearNotificationsByTypeRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ClearNotificationsByTypeRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  recipient_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ClearNotificationsByTypeRqst::ArenaDtor(void* object) {
  ClearNotificationsByTypeRqst* _this = reinterpret_cast< ClearNotificationsByTypeRqst* >(object);
  (void)_this;
}
void ClearNotificationsByTypeRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ClearNotificationsByTypeRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ClearNotificationsByTypeRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.ClearNotificationsByTypeRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  recipient_.ClearToEmpty();
  notification_type_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ClearNotificationsByTypeRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string recipient = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_recipient();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.ClearNotificationsByTypeRqst.recipient"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .resource.NotificationType notification_type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_notification_type(static_cast<::resource::NotificationType>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ClearNotificationsByTypeRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.ClearNotificationsByTypeRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string recipient = 1;
  if (this->recipient().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_recipient().data(), static_cast<int>(this->_internal_recipient().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.ClearNotificationsByTypeRqst.recipient");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_recipient(), target);
  }

  // .resource.NotificationType notification_type = 2;
  if (this->notification_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_notification_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.ClearNotificationsByTypeRqst)
  return target;
}

size_t ClearNotificationsByTypeRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.ClearNotificationsByTypeRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string recipient = 1;
  if (this->recipient().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_recipient());
  }

  // .resource.NotificationType notification_type = 2;
  if (this->notification_type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_notification_type());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClearNotificationsByTypeRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.ClearNotificationsByTypeRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const ClearNotificationsByTypeRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ClearNotificationsByTypeRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.ClearNotificationsByTypeRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.ClearNotificationsByTypeRqst)
    MergeFrom(*source);
  }
}

void ClearNotificationsByTypeRqst::MergeFrom(const ClearNotificationsByTypeRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.ClearNotificationsByTypeRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.recipient().size() > 0) {
    _internal_set_recipient(from._internal_recipient());
  }
  if (from.notification_type() != 0) {
    _internal_set_notification_type(from._internal_notification_type());
  }
}

void ClearNotificationsByTypeRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.ClearNotificationsByTypeRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClearNotificationsByTypeRqst::CopyFrom(const ClearNotificationsByTypeRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.ClearNotificationsByTypeRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClearNotificationsByTypeRqst::IsInitialized() const {
  return true;
}

void ClearNotificationsByTypeRqst::InternalSwap(ClearNotificationsByTypeRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  recipient_.Swap(&other->recipient_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(notification_type_, other->notification_type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ClearNotificationsByTypeRqst::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[140]);
}

// ===================================================================

class ClearNotificationsByTypeRsp::_Internal {
 public:
};

ClearNotificationsByTypeRsp::ClearNotificationsByTypeRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.ClearNotificationsByTypeRsp)
}
ClearNotificationsByTypeRsp::ClearNotificationsByTypeRsp(const ClearNotificationsByTypeRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:resource.ClearNotificationsByTypeRsp)
}

void ClearNotificationsByTypeRsp::SharedCtor() {
}

ClearNotificationsByTypeRsp::~ClearNotificationsByTypeRsp() {
  // @@protoc_insertion_point(destructor:resource.ClearNotificationsByTypeRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ClearNotificationsByTypeRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ClearNotificationsByTypeRsp::ArenaDtor(void* object) {
  ClearNotificationsByTypeRsp* _this = reinterpret_cast< ClearNotificationsByTypeRsp* >(object);
  (void)_this;
}
void ClearNotificationsByTypeRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ClearNotificationsByTypeRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ClearNotificationsByTypeRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.ClearNotificationsByTypeRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ClearNotificationsByTypeRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ClearNotificationsByTypeRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.ClearNotificationsByTypeRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.ClearNotificationsByTypeRsp)
  return target;
}

size_t ClearNotificationsByTypeRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.ClearNotificationsByTypeRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClearNotificationsByTypeRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.ClearNotificationsByTypeRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ClearNotificationsByTypeRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ClearNotificationsByTypeRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.ClearNotificationsByTypeRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.ClearNotificationsByTypeRsp)
    MergeFrom(*source);
  }
}

void ClearNotificationsByTypeRsp::MergeFrom(const ClearNotificationsByTypeRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.ClearNotificationsByTypeRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ClearNotificationsByTypeRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.ClearNotificationsByTypeRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClearNotificationsByTypeRsp::CopyFrom(const ClearNotificationsByTypeRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.ClearNotificationsByTypeRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClearNotificationsByTypeRsp::IsInitialized() const {
  return true;
}

void ClearNotificationsByTypeRsp::InternalSwap(ClearNotificationsByTypeRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ClearNotificationsByTypeRsp::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[141]);
}

// ===================================================================

class Session::_Internal {
 public:
};

Session::Session(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.Session)
}
Session::Session(const Session& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  accountid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_accountid().empty()) {
    accountid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_accountid(), 
      GetArena());
  }
  ::memcpy(&last_state_time_, &from.last_state_time_,
    static_cast<size_t>(reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&last_state_time_)) + sizeof(state_));
  // @@protoc_insertion_point(copy_constructor:resource.Session)
}

void Session::SharedCtor() {
accountid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&last_state_time_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&last_state_time_)) + sizeof(state_));
}

Session::~Session() {
  // @@protoc_insertion_point(destructor:resource.Session)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Session::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  accountid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Session::ArenaDtor(void* object) {
  Session* _this = reinterpret_cast< Session* >(object);
  (void)_this;
}
void Session::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Session::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Session::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.Session)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  accountid_.ClearToEmpty();
  ::memset(&last_state_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&last_state_time_)) + sizeof(state_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Session::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string accountId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_accountid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Session.accountId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .resource.SessionState state = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_state(static_cast<::resource::SessionState>(val));
        } else goto handle_unusual;
        continue;
      // int64 last_state_time = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          last_state_time_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 expire_at = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          expire_at_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Session::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.Session)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string accountId = 1;
  if (this->accountid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_accountid().data(), static_cast<int>(this->_internal_accountid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Session.accountId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_accountid(), target);
  }

  // .resource.SessionState state = 2;
  if (this->state() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_state(), target);
  }

  // int64 last_state_time = 3;
  if (this->last_state_time() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_last_state_time(), target);
  }

  // int64 expire_at = 4;
  if (this->expire_at() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(4, this->_internal_expire_at(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.Session)
  return target;
}

size_t Session::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.Session)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string accountId = 1;
  if (this->accountid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_accountid());
  }

  // int64 last_state_time = 3;
  if (this->last_state_time() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_last_state_time());
  }

  // int64 expire_at = 4;
  if (this->expire_at() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_expire_at());
  }

  // .resource.SessionState state = 2;
  if (this->state() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_state());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Session::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.Session)
  GOOGLE_DCHECK_NE(&from, this);
  const Session* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Session>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.Session)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.Session)
    MergeFrom(*source);
  }
}

void Session::MergeFrom(const Session& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.Session)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.accountid().size() > 0) {
    _internal_set_accountid(from._internal_accountid());
  }
  if (from.last_state_time() != 0) {
    _internal_set_last_state_time(from._internal_last_state_time());
  }
  if (from.expire_at() != 0) {
    _internal_set_expire_at(from._internal_expire_at());
  }
  if (from.state() != 0) {
    _internal_set_state(from._internal_state());
  }
}

void Session::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.Session)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Session::CopyFrom(const Session& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.Session)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Session::IsInitialized() const {
  return true;
}

void Session::InternalSwap(Session* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  accountid_.Swap(&other->accountid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Session, state_)
      + sizeof(Session::state_)
      - PROTOBUF_FIELD_OFFSET(Session, last_state_time_)>(
          reinterpret_cast<char*>(&last_state_time_),
          reinterpret_cast<char*>(&other->last_state_time_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Session::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[142]);
}

// ===================================================================

class UpdateSessionRequest::_Internal {
 public:
  static const ::resource::Session& session(const UpdateSessionRequest* msg);
};

const ::resource::Session&
UpdateSessionRequest::_Internal::session(const UpdateSessionRequest* msg) {
  return *msg->session_;
}
UpdateSessionRequest::UpdateSessionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.UpdateSessionRequest)
}
UpdateSessionRequest::UpdateSessionRequest(const UpdateSessionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_session()) {
    session_ = new ::resource::Session(*from.session_);
  } else {
    session_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:resource.UpdateSessionRequest)
}

void UpdateSessionRequest::SharedCtor() {
session_ = nullptr;
}

UpdateSessionRequest::~UpdateSessionRequest() {
  // @@protoc_insertion_point(destructor:resource.UpdateSessionRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UpdateSessionRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete session_;
}

void UpdateSessionRequest::ArenaDtor(void* object) {
  UpdateSessionRequest* _this = reinterpret_cast< UpdateSessionRequest* >(object);
  (void)_this;
}
void UpdateSessionRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateSessionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UpdateSessionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.UpdateSessionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && session_ != nullptr) {
    delete session_;
  }
  session_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateSessionRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .resource.Session session = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_session(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateSessionRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.UpdateSessionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .resource.Session session = 1;
  if (this->has_session()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::session(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.UpdateSessionRequest)
  return target;
}

size_t UpdateSessionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.UpdateSessionRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .resource.Session session = 1;
  if (this->has_session()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *session_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateSessionRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.UpdateSessionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateSessionRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateSessionRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.UpdateSessionRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.UpdateSessionRequest)
    MergeFrom(*source);
  }
}

void UpdateSessionRequest::MergeFrom(const UpdateSessionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.UpdateSessionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_session()) {
    _internal_mutable_session()->::resource::Session::MergeFrom(from._internal_session());
  }
}

void UpdateSessionRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.UpdateSessionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateSessionRequest::CopyFrom(const UpdateSessionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.UpdateSessionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateSessionRequest::IsInitialized() const {
  return true;
}

void UpdateSessionRequest::InternalSwap(UpdateSessionRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(session_, other->session_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateSessionRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[143]);
}

// ===================================================================

class UpdateSessionResponse::_Internal {
 public:
};

UpdateSessionResponse::UpdateSessionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.UpdateSessionResponse)
}
UpdateSessionResponse::UpdateSessionResponse(const UpdateSessionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:resource.UpdateSessionResponse)
}

void UpdateSessionResponse::SharedCtor() {
}

UpdateSessionResponse::~UpdateSessionResponse() {
  // @@protoc_insertion_point(destructor:resource.UpdateSessionResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UpdateSessionResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void UpdateSessionResponse::ArenaDtor(void* object) {
  UpdateSessionResponse* _this = reinterpret_cast< UpdateSessionResponse* >(object);
  (void)_this;
}
void UpdateSessionResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateSessionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UpdateSessionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.UpdateSessionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateSessionResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateSessionResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.UpdateSessionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.UpdateSessionResponse)
  return target;
}

size_t UpdateSessionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.UpdateSessionResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateSessionResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.UpdateSessionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateSessionResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateSessionResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.UpdateSessionResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.UpdateSessionResponse)
    MergeFrom(*source);
  }
}

void UpdateSessionResponse::MergeFrom(const UpdateSessionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.UpdateSessionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void UpdateSessionResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.UpdateSessionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateSessionResponse::CopyFrom(const UpdateSessionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.UpdateSessionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateSessionResponse::IsInitialized() const {
  return true;
}

void UpdateSessionResponse::InternalSwap(UpdateSessionResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateSessionResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[144]);
}

// ===================================================================

class RemoveSessionRequest::_Internal {
 public:
};

RemoveSessionRequest::RemoveSessionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.RemoveSessionRequest)
}
RemoveSessionRequest::RemoveSessionRequest(const RemoveSessionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  accountid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_accountid().empty()) {
    accountid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_accountid(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.RemoveSessionRequest)
}

void RemoveSessionRequest::SharedCtor() {
accountid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

RemoveSessionRequest::~RemoveSessionRequest() {
  // @@protoc_insertion_point(destructor:resource.RemoveSessionRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemoveSessionRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  accountid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RemoveSessionRequest::ArenaDtor(void* object) {
  RemoveSessionRequest* _this = reinterpret_cast< RemoveSessionRequest* >(object);
  (void)_this;
}
void RemoveSessionRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemoveSessionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RemoveSessionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.RemoveSessionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  accountid_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveSessionRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string accountId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_accountid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.RemoveSessionRequest.accountId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemoveSessionRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.RemoveSessionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string accountId = 1;
  if (this->accountid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_accountid().data(), static_cast<int>(this->_internal_accountid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.RemoveSessionRequest.accountId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_accountid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.RemoveSessionRequest)
  return target;
}

size_t RemoveSessionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.RemoveSessionRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string accountId = 1;
  if (this->accountid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_accountid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveSessionRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.RemoveSessionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveSessionRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemoveSessionRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.RemoveSessionRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.RemoveSessionRequest)
    MergeFrom(*source);
  }
}

void RemoveSessionRequest::MergeFrom(const RemoveSessionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.RemoveSessionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.accountid().size() > 0) {
    _internal_set_accountid(from._internal_accountid());
  }
}

void RemoveSessionRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.RemoveSessionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveSessionRequest::CopyFrom(const RemoveSessionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.RemoveSessionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveSessionRequest::IsInitialized() const {
  return true;
}

void RemoveSessionRequest::InternalSwap(RemoveSessionRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  accountid_.Swap(&other->accountid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveSessionRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[145]);
}

// ===================================================================

class RemoveSessionResponse::_Internal {
 public:
};

RemoveSessionResponse::RemoveSessionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.RemoveSessionResponse)
}
RemoveSessionResponse::RemoveSessionResponse(const RemoveSessionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:resource.RemoveSessionResponse)
}

void RemoveSessionResponse::SharedCtor() {
}

RemoveSessionResponse::~RemoveSessionResponse() {
  // @@protoc_insertion_point(destructor:resource.RemoveSessionResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemoveSessionResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RemoveSessionResponse::ArenaDtor(void* object) {
  RemoveSessionResponse* _this = reinterpret_cast< RemoveSessionResponse* >(object);
  (void)_this;
}
void RemoveSessionResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemoveSessionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RemoveSessionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.RemoveSessionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveSessionResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemoveSessionResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.RemoveSessionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.RemoveSessionResponse)
  return target;
}

size_t RemoveSessionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.RemoveSessionResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveSessionResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.RemoveSessionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveSessionResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemoveSessionResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.RemoveSessionResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.RemoveSessionResponse)
    MergeFrom(*source);
  }
}

void RemoveSessionResponse::MergeFrom(const RemoveSessionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.RemoveSessionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void RemoveSessionResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.RemoveSessionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveSessionResponse::CopyFrom(const RemoveSessionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.RemoveSessionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveSessionResponse::IsInitialized() const {
  return true;
}

void RemoveSessionResponse::InternalSwap(RemoveSessionResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveSessionResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[146]);
}

// ===================================================================

class GetSessionsRequest::_Internal {
 public:
};

GetSessionsRequest::GetSessionsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.GetSessionsRequest)
}
GetSessionsRequest::GetSessionsRequest(const GetSessionsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  query_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_query().empty()) {
    query_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_query(), 
      GetArena());
  }
  options_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_options().empty()) {
    options_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_options(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.GetSessionsRequest)
}

void GetSessionsRequest::SharedCtor() {
query_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
options_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetSessionsRequest::~GetSessionsRequest() {
  // @@protoc_insertion_point(destructor:resource.GetSessionsRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetSessionsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  query_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  options_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetSessionsRequest::ArenaDtor(void* object) {
  GetSessionsRequest* _this = reinterpret_cast< GetSessionsRequest* >(object);
  (void)_this;
}
void GetSessionsRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetSessionsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetSessionsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.GetSessionsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_.ClearToEmpty();
  options_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetSessionsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string query = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_query();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.GetSessionsRequest.query"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string options = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_options();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.GetSessionsRequest.options"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetSessionsRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.GetSessionsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_query().data(), static_cast<int>(this->_internal_query().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.GetSessionsRequest.query");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_query(), target);
  }

  // string options = 2;
  if (this->options().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_options().data(), static_cast<int>(this->_internal_options().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.GetSessionsRequest.options");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_options(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.GetSessionsRequest)
  return target;
}

size_t GetSessionsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.GetSessionsRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_query());
  }

  // string options = 2;
  if (this->options().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_options());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetSessionsRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.GetSessionsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetSessionsRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetSessionsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.GetSessionsRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.GetSessionsRequest)
    MergeFrom(*source);
  }
}

void GetSessionsRequest::MergeFrom(const GetSessionsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.GetSessionsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query().size() > 0) {
    _internal_set_query(from._internal_query());
  }
  if (from.options().size() > 0) {
    _internal_set_options(from._internal_options());
  }
}

void GetSessionsRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.GetSessionsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetSessionsRequest::CopyFrom(const GetSessionsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.GetSessionsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSessionsRequest::IsInitialized() const {
  return true;
}

void GetSessionsRequest::InternalSwap(GetSessionsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  query_.Swap(&other->query_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  options_.Swap(&other->options_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetSessionsRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[147]);
}

// ===================================================================

class GetSessionsResponse::_Internal {
 public:
};

GetSessionsResponse::GetSessionsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  sessions_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.GetSessionsResponse)
}
GetSessionsResponse::GetSessionsResponse(const GetSessionsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      sessions_(from.sessions_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:resource.GetSessionsResponse)
}

void GetSessionsResponse::SharedCtor() {
}

GetSessionsResponse::~GetSessionsResponse() {
  // @@protoc_insertion_point(destructor:resource.GetSessionsResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetSessionsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetSessionsResponse::ArenaDtor(void* object) {
  GetSessionsResponse* _this = reinterpret_cast< GetSessionsResponse* >(object);
  (void)_this;
}
void GetSessionsResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetSessionsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetSessionsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.GetSessionsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sessions_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetSessionsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .resource.Session sessions = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_sessions(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetSessionsResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.GetSessionsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .resource.Session sessions = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_sessions_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_sessions(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.GetSessionsResponse)
  return target;
}

size_t GetSessionsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.GetSessionsResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .resource.Session sessions = 1;
  total_size += 1UL * this->_internal_sessions_size();
  for (const auto& msg : this->sessions_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetSessionsResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.GetSessionsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetSessionsResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetSessionsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.GetSessionsResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.GetSessionsResponse)
    MergeFrom(*source);
  }
}

void GetSessionsResponse::MergeFrom(const GetSessionsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.GetSessionsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  sessions_.MergeFrom(from.sessions_);
}

void GetSessionsResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.GetSessionsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetSessionsResponse::CopyFrom(const GetSessionsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.GetSessionsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSessionsResponse::IsInitialized() const {
  return true;
}

void GetSessionsResponse::InternalSwap(GetSessionsResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  sessions_.InternalSwap(&other->sessions_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetSessionsResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[148]);
}

// ===================================================================

class GetSessionRequest::_Internal {
 public:
};

GetSessionRequest::GetSessionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.GetSessionRequest)
}
GetSessionRequest::GetSessionRequest(const GetSessionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  accountid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_accountid().empty()) {
    accountid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_accountid(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.GetSessionRequest)
}

void GetSessionRequest::SharedCtor() {
accountid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetSessionRequest::~GetSessionRequest() {
  // @@protoc_insertion_point(destructor:resource.GetSessionRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetSessionRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  accountid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetSessionRequest::ArenaDtor(void* object) {
  GetSessionRequest* _this = reinterpret_cast< GetSessionRequest* >(object);
  (void)_this;
}
void GetSessionRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetSessionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetSessionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.GetSessionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  accountid_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetSessionRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string accountId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_accountid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.GetSessionRequest.accountId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetSessionRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.GetSessionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string accountId = 1;
  if (this->accountid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_accountid().data(), static_cast<int>(this->_internal_accountid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.GetSessionRequest.accountId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_accountid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.GetSessionRequest)
  return target;
}

size_t GetSessionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.GetSessionRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string accountId = 1;
  if (this->accountid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_accountid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetSessionRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.GetSessionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetSessionRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetSessionRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.GetSessionRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.GetSessionRequest)
    MergeFrom(*source);
  }
}

void GetSessionRequest::MergeFrom(const GetSessionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.GetSessionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.accountid().size() > 0) {
    _internal_set_accountid(from._internal_accountid());
  }
}

void GetSessionRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.GetSessionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetSessionRequest::CopyFrom(const GetSessionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.GetSessionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSessionRequest::IsInitialized() const {
  return true;
}

void GetSessionRequest::InternalSwap(GetSessionRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  accountid_.Swap(&other->accountid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetSessionRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[149]);
}

// ===================================================================

class GetSessionResponse::_Internal {
 public:
  static const ::resource::Session& session(const GetSessionResponse* msg);
};

const ::resource::Session&
GetSessionResponse::_Internal::session(const GetSessionResponse* msg) {
  return *msg->session_;
}
GetSessionResponse::GetSessionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.GetSessionResponse)
}
GetSessionResponse::GetSessionResponse(const GetSessionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_session()) {
    session_ = new ::resource::Session(*from.session_);
  } else {
    session_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:resource.GetSessionResponse)
}

void GetSessionResponse::SharedCtor() {
session_ = nullptr;
}

GetSessionResponse::~GetSessionResponse() {
  // @@protoc_insertion_point(destructor:resource.GetSessionResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetSessionResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete session_;
}

void GetSessionResponse::ArenaDtor(void* object) {
  GetSessionResponse* _this = reinterpret_cast< GetSessionResponse* >(object);
  (void)_this;
}
void GetSessionResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetSessionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetSessionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.GetSessionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && session_ != nullptr) {
    delete session_;
  }
  session_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetSessionResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .resource.Session session = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_session(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetSessionResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.GetSessionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .resource.Session session = 1;
  if (this->has_session()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::session(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.GetSessionResponse)
  return target;
}

size_t GetSessionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.GetSessionResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .resource.Session session = 1;
  if (this->has_session()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *session_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetSessionResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.GetSessionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetSessionResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetSessionResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.GetSessionResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.GetSessionResponse)
    MergeFrom(*source);
  }
}

void GetSessionResponse::MergeFrom(const GetSessionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.GetSessionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_session()) {
    _internal_mutable_session()->::resource::Session::MergeFrom(from._internal_session());
  }
}

void GetSessionResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.GetSessionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetSessionResponse::CopyFrom(const GetSessionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.GetSessionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSessionResponse::IsInitialized() const {
  return true;
}

void GetSessionResponse::InternalSwap(GetSessionResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(session_, other->session_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetSessionResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_2eproto_getter, &descriptor_table_resource_2eproto_once,
      file_level_metadata_resource_2eproto[150]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace resource
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::resource::PackageBundle* Arena::CreateMaybeMessage< ::resource::PackageBundle >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::PackageBundle >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::SetPackageBundleRequest* Arena::CreateMaybeMessage< ::resource::SetPackageBundleRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::SetPackageBundleRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::SetPackageBundleResponse* Arena::CreateMaybeMessage< ::resource::SetPackageBundleResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::SetPackageBundleResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::GetPackageBundleChecksumRequest* Arena::CreateMaybeMessage< ::resource::GetPackageBundleChecksumRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::GetPackageBundleChecksumRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::GetPackageBundleChecksumResponse* Arena::CreateMaybeMessage< ::resource::GetPackageBundleChecksumResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::GetPackageBundleChecksumResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::PackageDescriptor* Arena::CreateMaybeMessage< ::resource::PackageDescriptor >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::PackageDescriptor >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::GetPackageDescriptorRequest* Arena::CreateMaybeMessage< ::resource::GetPackageDescriptorRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::GetPackageDescriptorRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::GetPackageDescriptorResponse* Arena::CreateMaybeMessage< ::resource::GetPackageDescriptorResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::GetPackageDescriptorResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::GetPackagesDescriptorRequest* Arena::CreateMaybeMessage< ::resource::GetPackagesDescriptorRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::GetPackagesDescriptorRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::GetPackagesDescriptorResponse* Arena::CreateMaybeMessage< ::resource::GetPackagesDescriptorResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::GetPackagesDescriptorResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::SetPackageDescriptorRequest* Arena::CreateMaybeMessage< ::resource::SetPackageDescriptorRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::SetPackageDescriptorRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::SetPackageDescriptorResponse* Arena::CreateMaybeMessage< ::resource::SetPackageDescriptorResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::SetPackageDescriptorResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::FindPackagesDescriptorRequest* Arena::CreateMaybeMessage< ::resource::FindPackagesDescriptorRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::FindPackagesDescriptorRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::FindPackagesDescriptorResponse* Arena::CreateMaybeMessage< ::resource::FindPackagesDescriptorResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::FindPackagesDescriptorResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::Role* Arena::CreateMaybeMessage< ::resource::Role >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::Role >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::AddRoleActionsRqst* Arena::CreateMaybeMessage< ::resource::AddRoleActionsRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::AddRoleActionsRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::AddRoleActionsRsp* Arena::CreateMaybeMessage< ::resource::AddRoleActionsRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::AddRoleActionsRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::RemoveRoleActionRqst* Arena::CreateMaybeMessage< ::resource::RemoveRoleActionRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::RemoveRoleActionRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::RemoveRoleActionRsp* Arena::CreateMaybeMessage< ::resource::RemoveRoleActionRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::RemoveRoleActionRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::RemoveRolesActionRqst* Arena::CreateMaybeMessage< ::resource::RemoveRolesActionRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::RemoveRolesActionRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::RemoveRolesActionRsp* Arena::CreateMaybeMessage< ::resource::RemoveRolesActionRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::RemoveRolesActionRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::Account* Arena::CreateMaybeMessage< ::resource::Account >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::Account >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::RegisterAccountRqst* Arena::CreateMaybeMessage< ::resource::RegisterAccountRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::RegisterAccountRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::RegisterAccountRsp* Arena::CreateMaybeMessage< ::resource::RegisterAccountRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::RegisterAccountRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::AccountExistRqst* Arena::CreateMaybeMessage< ::resource::AccountExistRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::AccountExistRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::AccountExistRsp* Arena::CreateMaybeMessage< ::resource::AccountExistRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::AccountExistRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::GetAccountsRqst* Arena::CreateMaybeMessage< ::resource::GetAccountsRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::GetAccountsRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::GetAccountsRsp* Arena::CreateMaybeMessage< ::resource::GetAccountsRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::GetAccountsRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::GetAccountRqst* Arena::CreateMaybeMessage< ::resource::GetAccountRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::GetAccountRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::GetAccountRsp* Arena::CreateMaybeMessage< ::resource::GetAccountRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::GetAccountRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::SetAccountPasswordRqst* Arena::CreateMaybeMessage< ::resource::SetAccountPasswordRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::SetAccountPasswordRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::SetAccountPasswordRsp* Arena::CreateMaybeMessage< ::resource::SetAccountPasswordRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::SetAccountPasswordRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::SetEmailRequest* Arena::CreateMaybeMessage< ::resource::SetEmailRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::SetEmailRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::SetEmailResponse* Arena::CreateMaybeMessage< ::resource::SetEmailResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::SetEmailResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::DeleteAccountRqst* Arena::CreateMaybeMessage< ::resource::DeleteAccountRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::DeleteAccountRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::DeleteAccountRsp* Arena::CreateMaybeMessage< ::resource::DeleteAccountRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::DeleteAccountRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::AddAccountRoleRqst* Arena::CreateMaybeMessage< ::resource::AddAccountRoleRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::AddAccountRoleRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::AddAccountRoleRsp* Arena::CreateMaybeMessage< ::resource::AddAccountRoleRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::AddAccountRoleRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::RemoveAccountRoleRqst* Arena::CreateMaybeMessage< ::resource::RemoveAccountRoleRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::RemoveAccountRoleRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::RemoveAccountRoleRsp* Arena::CreateMaybeMessage< ::resource::RemoveAccountRoleRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::RemoveAccountRoleRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::Contact* Arena::CreateMaybeMessage< ::resource::Contact >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::Contact >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::SetAccountContactRqst* Arena::CreateMaybeMessage< ::resource::SetAccountContactRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::SetAccountContactRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::SetAccountContactRsp* Arena::CreateMaybeMessage< ::resource::SetAccountContactRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::SetAccountContactRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::CreateRoleRqst* Arena::CreateMaybeMessage< ::resource::CreateRoleRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::CreateRoleRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::CreateRoleRsp* Arena::CreateMaybeMessage< ::resource::CreateRoleRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::CreateRoleRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::GetRolesRqst* Arena::CreateMaybeMessage< ::resource::GetRolesRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::GetRolesRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::GetRolesRsp* Arena::CreateMaybeMessage< ::resource::GetRolesRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::GetRolesRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::DeleteRoleRqst* Arena::CreateMaybeMessage< ::resource::DeleteRoleRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::DeleteRoleRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::DeleteRoleRsp* Arena::CreateMaybeMessage< ::resource::DeleteRoleRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::DeleteRoleRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::Application* Arena::CreateMaybeMessage< ::resource::Application >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::Application >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::CreateApplicationRqst* Arena::CreateMaybeMessage< ::resource::CreateApplicationRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::CreateApplicationRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::CreateApplicationRsp* Arena::CreateMaybeMessage< ::resource::CreateApplicationRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::CreateApplicationRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::UpdateApplicationRqst* Arena::CreateMaybeMessage< ::resource::UpdateApplicationRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::UpdateApplicationRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::UpdateApplicationRsp* Arena::CreateMaybeMessage< ::resource::UpdateApplicationRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::UpdateApplicationRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::DeleteApplicationRqst* Arena::CreateMaybeMessage< ::resource::DeleteApplicationRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::DeleteApplicationRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::DeleteApplicationRsp* Arena::CreateMaybeMessage< ::resource::DeleteApplicationRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::DeleteApplicationRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::AddApplicationActionsRqst* Arena::CreateMaybeMessage< ::resource::AddApplicationActionsRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::AddApplicationActionsRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::AddApplicationActionsRsp* Arena::CreateMaybeMessage< ::resource::AddApplicationActionsRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::AddApplicationActionsRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::RemoveApplicationActionRqst* Arena::CreateMaybeMessage< ::resource::RemoveApplicationActionRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::RemoveApplicationActionRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::RemoveApplicationActionRsp* Arena::CreateMaybeMessage< ::resource::RemoveApplicationActionRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::RemoveApplicationActionRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::RemoveApplicationsActionRqst* Arena::CreateMaybeMessage< ::resource::RemoveApplicationsActionRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::RemoveApplicationsActionRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::RemoveApplicationsActionRsp* Arena::CreateMaybeMessage< ::resource::RemoveApplicationsActionRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::RemoveApplicationsActionRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::GetApplicationsRqst* Arena::CreateMaybeMessage< ::resource::GetApplicationsRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::GetApplicationsRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::GetApplicationsRsp* Arena::CreateMaybeMessage< ::resource::GetApplicationsRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::GetApplicationsRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::GetApplicationVersionRqst* Arena::CreateMaybeMessage< ::resource::GetApplicationVersionRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::GetApplicationVersionRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::GetApplicationVersionRsp* Arena::CreateMaybeMessage< ::resource::GetApplicationVersionRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::GetApplicationVersionRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::GetApplicationIconRqst* Arena::CreateMaybeMessage< ::resource::GetApplicationIconRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::GetApplicationIconRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::GetApplicationIconRsp* Arena::CreateMaybeMessage< ::resource::GetApplicationIconRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::GetApplicationIconRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::GetApplicationAliasRqst* Arena::CreateMaybeMessage< ::resource::GetApplicationAliasRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::GetApplicationAliasRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::GetApplicationAliasRsp* Arena::CreateMaybeMessage< ::resource::GetApplicationAliasRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::GetApplicationAliasRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::Group* Arena::CreateMaybeMessage< ::resource::Group >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::Group >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::CreateGroupRqst* Arena::CreateMaybeMessage< ::resource::CreateGroupRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::CreateGroupRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::CreateGroupRsp* Arena::CreateMaybeMessage< ::resource::CreateGroupRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::CreateGroupRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::UpdateGroupRqst* Arena::CreateMaybeMessage< ::resource::UpdateGroupRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::UpdateGroupRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::UpdateGroupRsp* Arena::CreateMaybeMessage< ::resource::UpdateGroupRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::UpdateGroupRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::GetGroupsRqst* Arena::CreateMaybeMessage< ::resource::GetGroupsRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::GetGroupsRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::GetGroupsRsp* Arena::CreateMaybeMessage< ::resource::GetGroupsRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::GetGroupsRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::DeleteGroupRqst* Arena::CreateMaybeMessage< ::resource::DeleteGroupRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::DeleteGroupRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::DeleteGroupRsp* Arena::CreateMaybeMessage< ::resource::DeleteGroupRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::DeleteGroupRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::AddGroupMemberAccountRqst* Arena::CreateMaybeMessage< ::resource::AddGroupMemberAccountRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::AddGroupMemberAccountRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::AddGroupMemberAccountRsp* Arena::CreateMaybeMessage< ::resource::AddGroupMemberAccountRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::AddGroupMemberAccountRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::RemoveGroupMemberAccountRqst* Arena::CreateMaybeMessage< ::resource::RemoveGroupMemberAccountRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::RemoveGroupMemberAccountRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::RemoveGroupMemberAccountRsp* Arena::CreateMaybeMessage< ::resource::RemoveGroupMemberAccountRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::RemoveGroupMemberAccountRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::Organization* Arena::CreateMaybeMessage< ::resource::Organization >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::Organization >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::CreateOrganizationRqst* Arena::CreateMaybeMessage< ::resource::CreateOrganizationRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::CreateOrganizationRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::CreateOrganizationRsp* Arena::CreateMaybeMessage< ::resource::CreateOrganizationRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::CreateOrganizationRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::UpdateOrganizationRqst* Arena::CreateMaybeMessage< ::resource::UpdateOrganizationRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::UpdateOrganizationRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::UpdateOrganizationRsp* Arena::CreateMaybeMessage< ::resource::UpdateOrganizationRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::UpdateOrganizationRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::GetOrganizationsRqst* Arena::CreateMaybeMessage< ::resource::GetOrganizationsRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::GetOrganizationsRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::GetOrganizationsRsp* Arena::CreateMaybeMessage< ::resource::GetOrganizationsRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::GetOrganizationsRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::AddOrganizationAccountRqst* Arena::CreateMaybeMessage< ::resource::AddOrganizationAccountRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::AddOrganizationAccountRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::AddOrganizationAccountRsp* Arena::CreateMaybeMessage< ::resource::AddOrganizationAccountRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::AddOrganizationAccountRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::AddOrganizationGroupRqst* Arena::CreateMaybeMessage< ::resource::AddOrganizationGroupRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::AddOrganizationGroupRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::AddOrganizationGroupRsp* Arena::CreateMaybeMessage< ::resource::AddOrganizationGroupRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::AddOrganizationGroupRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::AddOrganizationRoleRqst* Arena::CreateMaybeMessage< ::resource::AddOrganizationRoleRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::AddOrganizationRoleRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::AddOrganizationRoleRsp* Arena::CreateMaybeMessage< ::resource::AddOrganizationRoleRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::AddOrganizationRoleRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::AddOrganizationApplicationRqst* Arena::CreateMaybeMessage< ::resource::AddOrganizationApplicationRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::AddOrganizationApplicationRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::AddOrganizationApplicationRsp* Arena::CreateMaybeMessage< ::resource::AddOrganizationApplicationRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::AddOrganizationApplicationRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::RemoveOrganizationGroupRqst* Arena::CreateMaybeMessage< ::resource::RemoveOrganizationGroupRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::RemoveOrganizationGroupRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::RemoveOrganizationGroupRsp* Arena::CreateMaybeMessage< ::resource::RemoveOrganizationGroupRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::RemoveOrganizationGroupRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::RemoveOrganizationRoleRqst* Arena::CreateMaybeMessage< ::resource::RemoveOrganizationRoleRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::RemoveOrganizationRoleRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::RemoveOrganizationRoleRsp* Arena::CreateMaybeMessage< ::resource::RemoveOrganizationRoleRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::RemoveOrganizationRoleRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::RemoveOrganizationApplicationRqst* Arena::CreateMaybeMessage< ::resource::RemoveOrganizationApplicationRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::RemoveOrganizationApplicationRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::RemoveOrganizationApplicationRsp* Arena::CreateMaybeMessage< ::resource::RemoveOrganizationApplicationRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::RemoveOrganizationApplicationRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::RemoveOrganizationAccountRqst* Arena::CreateMaybeMessage< ::resource::RemoveOrganizationAccountRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::RemoveOrganizationAccountRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::RemoveOrganizationAccountRsp* Arena::CreateMaybeMessage< ::resource::RemoveOrganizationAccountRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::RemoveOrganizationAccountRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::IsOrgnanizationMemberRqst* Arena::CreateMaybeMessage< ::resource::IsOrgnanizationMemberRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::IsOrgnanizationMemberRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::IsOrgnanizationMemberRsp* Arena::CreateMaybeMessage< ::resource::IsOrgnanizationMemberRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::IsOrgnanizationMemberRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::DeleteOrganizationRqst* Arena::CreateMaybeMessage< ::resource::DeleteOrganizationRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::DeleteOrganizationRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::DeleteOrganizationRsp* Arena::CreateMaybeMessage< ::resource::DeleteOrganizationRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::DeleteOrganizationRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::Peer* Arena::CreateMaybeMessage< ::resource::Peer >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::Peer >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::GetPeerApprovalStateRqst* Arena::CreateMaybeMessage< ::resource::GetPeerApprovalStateRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::GetPeerApprovalStateRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::GetPeerApprovalStateRsp* Arena::CreateMaybeMessage< ::resource::GetPeerApprovalStateRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::GetPeerApprovalStateRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::GetPeerPublicKeyRqst* Arena::CreateMaybeMessage< ::resource::GetPeerPublicKeyRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::GetPeerPublicKeyRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::GetPeerPublicKeyRsp* Arena::CreateMaybeMessage< ::resource::GetPeerPublicKeyRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::GetPeerPublicKeyRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::RegisterPeerRqst* Arena::CreateMaybeMessage< ::resource::RegisterPeerRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::RegisterPeerRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::RegisterPeerRsp* Arena::CreateMaybeMessage< ::resource::RegisterPeerRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::RegisterPeerRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::GetPeersRqst* Arena::CreateMaybeMessage< ::resource::GetPeersRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::GetPeersRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::GetPeersRsp* Arena::CreateMaybeMessage< ::resource::GetPeersRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::GetPeersRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::DeletePeerRqst* Arena::CreateMaybeMessage< ::resource::DeletePeerRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::DeletePeerRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::DeletePeerRsp* Arena::CreateMaybeMessage< ::resource::DeletePeerRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::DeletePeerRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::AddPeerActionsRqst* Arena::CreateMaybeMessage< ::resource::AddPeerActionsRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::AddPeerActionsRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::AddPeerActionsRsp* Arena::CreateMaybeMessage< ::resource::AddPeerActionsRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::AddPeerActionsRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::RemovePeerActionRqst* Arena::CreateMaybeMessage< ::resource::RemovePeerActionRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::RemovePeerActionRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::RemovePeerActionRsp* Arena::CreateMaybeMessage< ::resource::RemovePeerActionRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::RemovePeerActionRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::RemovePeersActionRqst* Arena::CreateMaybeMessage< ::resource::RemovePeersActionRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::RemovePeersActionRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::RemovePeersActionRsp* Arena::CreateMaybeMessage< ::resource::RemovePeersActionRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::RemovePeersActionRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::AcceptPeerRqst* Arena::CreateMaybeMessage< ::resource::AcceptPeerRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::AcceptPeerRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::AcceptPeerRsp* Arena::CreateMaybeMessage< ::resource::AcceptPeerRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::AcceptPeerRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::RejectPeerRqst* Arena::CreateMaybeMessage< ::resource::RejectPeerRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::RejectPeerRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::RejectPeerRsp* Arena::CreateMaybeMessage< ::resource::RejectPeerRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::RejectPeerRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::Notification* Arena::CreateMaybeMessage< ::resource::Notification >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::Notification >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::CreateNotificationRqst* Arena::CreateMaybeMessage< ::resource::CreateNotificationRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::CreateNotificationRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::CreateNotificationRsp* Arena::CreateMaybeMessage< ::resource::CreateNotificationRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::CreateNotificationRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::GetNotificationsRqst* Arena::CreateMaybeMessage< ::resource::GetNotificationsRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::GetNotificationsRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::GetNotificationsRsp* Arena::CreateMaybeMessage< ::resource::GetNotificationsRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::GetNotificationsRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::DeleteNotificationRqst* Arena::CreateMaybeMessage< ::resource::DeleteNotificationRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::DeleteNotificationRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::DeleteNotificationRsp* Arena::CreateMaybeMessage< ::resource::DeleteNotificationRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::DeleteNotificationRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::ClearAllNotificationsRqst* Arena::CreateMaybeMessage< ::resource::ClearAllNotificationsRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::ClearAllNotificationsRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::ClearAllNotificationsRsp* Arena::CreateMaybeMessage< ::resource::ClearAllNotificationsRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::ClearAllNotificationsRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::ClearNotificationsByTypeRqst* Arena::CreateMaybeMessage< ::resource::ClearNotificationsByTypeRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::ClearNotificationsByTypeRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::ClearNotificationsByTypeRsp* Arena::CreateMaybeMessage< ::resource::ClearNotificationsByTypeRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::ClearNotificationsByTypeRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::Session* Arena::CreateMaybeMessage< ::resource::Session >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::Session >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::UpdateSessionRequest* Arena::CreateMaybeMessage< ::resource::UpdateSessionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::UpdateSessionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::UpdateSessionResponse* Arena::CreateMaybeMessage< ::resource::UpdateSessionResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::UpdateSessionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::RemoveSessionRequest* Arena::CreateMaybeMessage< ::resource::RemoveSessionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::RemoveSessionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::RemoveSessionResponse* Arena::CreateMaybeMessage< ::resource::RemoveSessionResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::RemoveSessionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::GetSessionsRequest* Arena::CreateMaybeMessage< ::resource::GetSessionsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::GetSessionsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::GetSessionsResponse* Arena::CreateMaybeMessage< ::resource::GetSessionsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::GetSessionsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::GetSessionRequest* Arena::CreateMaybeMessage< ::resource::GetSessionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::GetSessionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::GetSessionResponse* Arena::CreateMaybeMessage< ::resource::GetSessionResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::GetSessionResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
