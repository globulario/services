// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: resource.proto

#include "resource.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_resource_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Account_resource_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_resource_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Application_resource_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_resource_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Contact_resource_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_resource_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Group_resource_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_resource_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Notification_resource_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_resource_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Organization_resource_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_resource_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PackageBundle_resource_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_resource_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_PackageDescriptor_resource_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_resource_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Peer_resource_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_resource_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Role_resource_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_resource_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Session_resource_2eproto;
namespace resource {
class PackageBundleDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PackageBundle> _instance;
} _PackageBundle_default_instance_;
class PackageDescriptorDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PackageDescriptor> _instance;
} _PackageDescriptor_default_instance_;
class AccountDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Account> _instance;
} _Account_default_instance_;
class RoleDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Role> _instance;
} _Role_default_instance_;
class RegisterAccountRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RegisterAccountRqst> _instance;
} _RegisterAccountRqst_default_instance_;
class RegisterAccountRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RegisterAccountRsp> _instance;
} _RegisterAccountRsp_default_instance_;
class AccountExistRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AccountExistRqst> _instance;
} _AccountExistRqst_default_instance_;
class AccountExistRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AccountExistRsp> _instance;
} _AccountExistRsp_default_instance_;
class GetAccountsRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetAccountsRqst> _instance;
} _GetAccountsRqst_default_instance_;
class GetAccountsRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetAccountsRsp> _instance;
} _GetAccountsRsp_default_instance_;
class GetAccountRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetAccountRqst> _instance;
} _GetAccountRqst_default_instance_;
class GetAccountRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetAccountRsp> _instance;
} _GetAccountRsp_default_instance_;
class SetAccountPasswordRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SetAccountPasswordRqst> _instance;
} _SetAccountPasswordRqst_default_instance_;
class SetAccountPasswordRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SetAccountPasswordRsp> _instance;
} _SetAccountPasswordRsp_default_instance_;
class SetEmailRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SetEmailRequest> _instance;
} _SetEmailRequest_default_instance_;
class SetEmailResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SetEmailResponse> _instance;
} _SetEmailResponse_default_instance_;
class DeleteAccountRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteAccountRqst> _instance;
} _DeleteAccountRqst_default_instance_;
class DeleteAccountRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteAccountRsp> _instance;
} _DeleteAccountRsp_default_instance_;
class AddAccountRoleRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AddAccountRoleRqst> _instance;
} _AddAccountRoleRqst_default_instance_;
class AddAccountRoleRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AddAccountRoleRsp> _instance;
} _AddAccountRoleRsp_default_instance_;
class RemoveAccountRoleRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RemoveAccountRoleRqst> _instance;
} _RemoveAccountRoleRqst_default_instance_;
class RemoveAccountRoleRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RemoveAccountRoleRsp> _instance;
} _RemoveAccountRoleRsp_default_instance_;
class ContactDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Contact> _instance;
} _Contact_default_instance_;
class SetAccountContactRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SetAccountContactRqst> _instance;
} _SetAccountContactRqst_default_instance_;
class SetAccountContactRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SetAccountContactRsp> _instance;
} _SetAccountContactRsp_default_instance_;
class CreateRoleRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateRoleRqst> _instance;
} _CreateRoleRqst_default_instance_;
class CreateRoleRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateRoleRsp> _instance;
} _CreateRoleRsp_default_instance_;
class GetRolesRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetRolesRqst> _instance;
} _GetRolesRqst_default_instance_;
class GetRolesRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetRolesRsp> _instance;
} _GetRolesRsp_default_instance_;
class DeleteRoleRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteRoleRqst> _instance;
} _DeleteRoleRqst_default_instance_;
class DeleteRoleRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteRoleRsp> _instance;
} _DeleteRoleRsp_default_instance_;
class ApplicationDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Application> _instance;
} _Application_default_instance_;
class CreateApplicationRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateApplicationRqst> _instance;
} _CreateApplicationRqst_default_instance_;
class CreateApplicationRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateApplicationRsp> _instance;
} _CreateApplicationRsp_default_instance_;
class UpdateApplicationRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpdateApplicationRqst> _instance;
} _UpdateApplicationRqst_default_instance_;
class UpdateApplicationRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpdateApplicationRsp> _instance;
} _UpdateApplicationRsp_default_instance_;
class DeleteApplicationRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteApplicationRqst> _instance;
} _DeleteApplicationRqst_default_instance_;
class DeleteApplicationRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteApplicationRsp> _instance;
} _DeleteApplicationRsp_default_instance_;
class GetApplicationsRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetApplicationsRqst> _instance;
} _GetApplicationsRqst_default_instance_;
class GetApplicationsRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetApplicationsRsp> _instance;
} _GetApplicationsRsp_default_instance_;
class GetApplicationVersionRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetApplicationVersionRqst> _instance;
} _GetApplicationVersionRqst_default_instance_;
class GetApplicationVersionRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetApplicationVersionRsp> _instance;
} _GetApplicationVersionRsp_default_instance_;
class GetApplicationIconRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetApplicationIconRqst> _instance;
} _GetApplicationIconRqst_default_instance_;
class GetApplicationIconRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetApplicationIconRsp> _instance;
} _GetApplicationIconRsp_default_instance_;
class GetApplicationAliasRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetApplicationAliasRqst> _instance;
} _GetApplicationAliasRqst_default_instance_;
class GetApplicationAliasRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetApplicationAliasRsp> _instance;
} _GetApplicationAliasRsp_default_instance_;
class IsOrgnanizationMemberRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<IsOrgnanizationMemberRqst> _instance;
} _IsOrgnanizationMemberRqst_default_instance_;
class IsOrgnanizationMemberRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<IsOrgnanizationMemberRsp> _instance;
} _IsOrgnanizationMemberRsp_default_instance_;
class SetPackageBundleRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SetPackageBundleRequest> _instance;
} _SetPackageBundleRequest_default_instance_;
class SetPackageBundleResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SetPackageBundleResponse> _instance;
} _SetPackageBundleResponse_default_instance_;
class GetPackageBundleChecksumRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetPackageBundleChecksumRequest> _instance;
} _GetPackageBundleChecksumRequest_default_instance_;
class GetPackageBundleChecksumResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetPackageBundleChecksumResponse> _instance;
} _GetPackageBundleChecksumResponse_default_instance_;
class GroupDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Group> _instance;
} _Group_default_instance_;
class CreateGroupRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateGroupRqst> _instance;
} _CreateGroupRqst_default_instance_;
class CreateGroupRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateGroupRsp> _instance;
} _CreateGroupRsp_default_instance_;
class UpdateGroupRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpdateGroupRqst> _instance;
} _UpdateGroupRqst_default_instance_;
class UpdateGroupRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpdateGroupRsp> _instance;
} _UpdateGroupRsp_default_instance_;
class GetGroupsRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetGroupsRqst> _instance;
} _GetGroupsRqst_default_instance_;
class GetGroupsRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetGroupsRsp> _instance;
} _GetGroupsRsp_default_instance_;
class DeleteGroupRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteGroupRqst> _instance;
} _DeleteGroupRqst_default_instance_;
class DeleteGroupRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteGroupRsp> _instance;
} _DeleteGroupRsp_default_instance_;
class AddGroupMemberAccountRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AddGroupMemberAccountRqst> _instance;
} _AddGroupMemberAccountRqst_default_instance_;
class AddGroupMemberAccountRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AddGroupMemberAccountRsp> _instance;
} _AddGroupMemberAccountRsp_default_instance_;
class RemoveGroupMemberAccountRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RemoveGroupMemberAccountRqst> _instance;
} _RemoveGroupMemberAccountRqst_default_instance_;
class RemoveGroupMemberAccountRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RemoveGroupMemberAccountRsp> _instance;
} _RemoveGroupMemberAccountRsp_default_instance_;
class OrganizationDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Organization> _instance;
} _Organization_default_instance_;
class CreateOrganizationRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateOrganizationRqst> _instance;
} _CreateOrganizationRqst_default_instance_;
class CreateOrganizationRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateOrganizationRsp> _instance;
} _CreateOrganizationRsp_default_instance_;
class GetOrganizationsRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetOrganizationsRqst> _instance;
} _GetOrganizationsRqst_default_instance_;
class GetOrganizationsRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetOrganizationsRsp> _instance;
} _GetOrganizationsRsp_default_instance_;
class DeleteOrganizationRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteOrganizationRqst> _instance;
} _DeleteOrganizationRqst_default_instance_;
class DeleteOrganizationRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteOrganizationRsp> _instance;
} _DeleteOrganizationRsp_default_instance_;
class PeerDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Peer> _instance;
} _Peer_default_instance_;
class RegisterPeerRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RegisterPeerRqst> _instance;
} _RegisterPeerRqst_default_instance_;
class RegisterPeerRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RegisterPeerRsp> _instance;
} _RegisterPeerRsp_default_instance_;
class GetPeersRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetPeersRqst> _instance;
} _GetPeersRqst_default_instance_;
class GetPeersRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetPeersRsp> _instance;
} _GetPeersRsp_default_instance_;
class DeletePeerRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeletePeerRqst> _instance;
} _DeletePeerRqst_default_instance_;
class DeletePeerRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeletePeerRsp> _instance;
} _DeletePeerRsp_default_instance_;
class AddRoleActionsRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AddRoleActionsRqst> _instance;
} _AddRoleActionsRqst_default_instance_;
class AddRoleActionsRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AddRoleActionsRsp> _instance;
} _AddRoleActionsRsp_default_instance_;
class RemoveRoleActionRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RemoveRoleActionRqst> _instance;
} _RemoveRoleActionRqst_default_instance_;
class RemoveRoleActionRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RemoveRoleActionRsp> _instance;
} _RemoveRoleActionRsp_default_instance_;
class RemoveRolesActionRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RemoveRolesActionRqst> _instance;
} _RemoveRolesActionRqst_default_instance_;
class RemoveRolesActionRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RemoveRolesActionRsp> _instance;
} _RemoveRolesActionRsp_default_instance_;
class AddApplicationActionsRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AddApplicationActionsRqst> _instance;
} _AddApplicationActionsRqst_default_instance_;
class AddApplicationActionsRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AddApplicationActionsRsp> _instance;
} _AddApplicationActionsRsp_default_instance_;
class RemoveApplicationActionRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RemoveApplicationActionRqst> _instance;
} _RemoveApplicationActionRqst_default_instance_;
class RemoveApplicationActionRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RemoveApplicationActionRsp> _instance;
} _RemoveApplicationActionRsp_default_instance_;
class RemoveApplicationsActionRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RemoveApplicationsActionRqst> _instance;
} _RemoveApplicationsActionRqst_default_instance_;
class RemoveApplicationsActionRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RemoveApplicationsActionRsp> _instance;
} _RemoveApplicationsActionRsp_default_instance_;
class AddPeerActionsRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AddPeerActionsRqst> _instance;
} _AddPeerActionsRqst_default_instance_;
class AddPeerActionsRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AddPeerActionsRsp> _instance;
} _AddPeerActionsRsp_default_instance_;
class RemovePeerActionRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RemovePeerActionRqst> _instance;
} _RemovePeerActionRqst_default_instance_;
class RemovePeerActionRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RemovePeerActionRsp> _instance;
} _RemovePeerActionRsp_default_instance_;
class RemovePeersActionRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RemovePeersActionRqst> _instance;
} _RemovePeersActionRqst_default_instance_;
class RemovePeersActionRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RemovePeersActionRsp> _instance;
} _RemovePeersActionRsp_default_instance_;
class AddOrganizationAccountRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AddOrganizationAccountRqst> _instance;
} _AddOrganizationAccountRqst_default_instance_;
class AddOrganizationAccountRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AddOrganizationAccountRsp> _instance;
} _AddOrganizationAccountRsp_default_instance_;
class AddOrganizationGroupRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AddOrganizationGroupRqst> _instance;
} _AddOrganizationGroupRqst_default_instance_;
class AddOrganizationGroupRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AddOrganizationGroupRsp> _instance;
} _AddOrganizationGroupRsp_default_instance_;
class AddOrganizationRoleRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AddOrganizationRoleRqst> _instance;
} _AddOrganizationRoleRqst_default_instance_;
class AddOrganizationRoleRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AddOrganizationRoleRsp> _instance;
} _AddOrganizationRoleRsp_default_instance_;
class AddOrganizationApplicationRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AddOrganizationApplicationRqst> _instance;
} _AddOrganizationApplicationRqst_default_instance_;
class AddOrganizationApplicationRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AddOrganizationApplicationRsp> _instance;
} _AddOrganizationApplicationRsp_default_instance_;
class RemoveOrganizationGroupRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RemoveOrganizationGroupRqst> _instance;
} _RemoveOrganizationGroupRqst_default_instance_;
class RemoveOrganizationGroupRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RemoveOrganizationGroupRsp> _instance;
} _RemoveOrganizationGroupRsp_default_instance_;
class RemoveOrganizationRoleRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RemoveOrganizationRoleRqst> _instance;
} _RemoveOrganizationRoleRqst_default_instance_;
class RemoveOrganizationRoleRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RemoveOrganizationRoleRsp> _instance;
} _RemoveOrganizationRoleRsp_default_instance_;
class RemoveOrganizationApplicationRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RemoveOrganizationApplicationRqst> _instance;
} _RemoveOrganizationApplicationRqst_default_instance_;
class RemoveOrganizationApplicationRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RemoveOrganizationApplicationRsp> _instance;
} _RemoveOrganizationApplicationRsp_default_instance_;
class RemoveOrganizationAccountRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RemoveOrganizationAccountRqst> _instance;
} _RemoveOrganizationAccountRqst_default_instance_;
class RemoveOrganizationAccountRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RemoveOrganizationAccountRsp> _instance;
} _RemoveOrganizationAccountRsp_default_instance_;
class NotificationDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Notification> _instance;
} _Notification_default_instance_;
class CreateNotificationRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateNotificationRqst> _instance;
} _CreateNotificationRqst_default_instance_;
class CreateNotificationRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateNotificationRsp> _instance;
} _CreateNotificationRsp_default_instance_;
class GetNotificationsRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetNotificationsRqst> _instance;
} _GetNotificationsRqst_default_instance_;
class GetNotificationsRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetNotificationsRsp> _instance;
} _GetNotificationsRsp_default_instance_;
class DeleteNotificationRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteNotificationRqst> _instance;
} _DeleteNotificationRqst_default_instance_;
class DeleteNotificationRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteNotificationRsp> _instance;
} _DeleteNotificationRsp_default_instance_;
class ClearAllNotificationsRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ClearAllNotificationsRqst> _instance;
} _ClearAllNotificationsRqst_default_instance_;
class ClearAllNotificationsRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ClearAllNotificationsRsp> _instance;
} _ClearAllNotificationsRsp_default_instance_;
class ClearNotificationsByTypeRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ClearNotificationsByTypeRqst> _instance;
} _ClearNotificationsByTypeRqst_default_instance_;
class ClearNotificationsByTypeRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ClearNotificationsByTypeRsp> _instance;
} _ClearNotificationsByTypeRsp_default_instance_;
class GetPackageDescriptorRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetPackageDescriptorRequest> _instance;
} _GetPackageDescriptorRequest_default_instance_;
class GetPackageDescriptorResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetPackageDescriptorResponse> _instance;
} _GetPackageDescriptorResponse_default_instance_;
class GetPackagesDescriptorRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetPackagesDescriptorRequest> _instance;
} _GetPackagesDescriptorRequest_default_instance_;
class GetPackagesDescriptorResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetPackagesDescriptorResponse> _instance;
} _GetPackagesDescriptorResponse_default_instance_;
class SetPackageDescriptorRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SetPackageDescriptorRequest> _instance;
} _SetPackageDescriptorRequest_default_instance_;
class SetPackageDescriptorResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SetPackageDescriptorResponse> _instance;
} _SetPackageDescriptorResponse_default_instance_;
class FindPackagesDescriptorRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<FindPackagesDescriptorRequest> _instance;
} _FindPackagesDescriptorRequest_default_instance_;
class FindPackagesDescriptorResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<FindPackagesDescriptorResponse> _instance;
} _FindPackagesDescriptorResponse_default_instance_;
class SessionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Session> _instance;
} _Session_default_instance_;
class UpdateSessionRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpdateSessionRequest> _instance;
} _UpdateSessionRequest_default_instance_;
class UpdateSessionResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpdateSessionResponse> _instance;
} _UpdateSessionResponse_default_instance_;
class RemoveSessionRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RemoveSessionRequest> _instance;
} _RemoveSessionRequest_default_instance_;
class RemoveSessionResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RemoveSessionResponse> _instance;
} _RemoveSessionResponse_default_instance_;
class GetSessionsRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetSessionsRequest> _instance;
} _GetSessionsRequest_default_instance_;
class GetSessionsResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetSessionsResponse> _instance;
} _GetSessionsResponse_default_instance_;
class GetSessionRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetSessionRequest> _instance;
} _GetSessionRequest_default_instance_;
class GetSessionResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetSessionResponse> _instance;
} _GetSessionResponse_default_instance_;
}  // namespace resource
static void InitDefaultsscc_info_Account_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_Account_default_instance_;
    new (ptr) ::resource::Account();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::Account::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Account_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Account_resource_2eproto}, {}};

static void InitDefaultsscc_info_AccountExistRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_AccountExistRqst_default_instance_;
    new (ptr) ::resource::AccountExistRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::AccountExistRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AccountExistRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AccountExistRqst_resource_2eproto}, {}};

static void InitDefaultsscc_info_AccountExistRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_AccountExistRsp_default_instance_;
    new (ptr) ::resource::AccountExistRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::AccountExistRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AccountExistRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AccountExistRsp_resource_2eproto}, {}};

static void InitDefaultsscc_info_AddAccountRoleRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_AddAccountRoleRqst_default_instance_;
    new (ptr) ::resource::AddAccountRoleRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::AddAccountRoleRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AddAccountRoleRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AddAccountRoleRqst_resource_2eproto}, {}};

static void InitDefaultsscc_info_AddAccountRoleRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_AddAccountRoleRsp_default_instance_;
    new (ptr) ::resource::AddAccountRoleRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::AddAccountRoleRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AddAccountRoleRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AddAccountRoleRsp_resource_2eproto}, {}};

static void InitDefaultsscc_info_AddApplicationActionsRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_AddApplicationActionsRqst_default_instance_;
    new (ptr) ::resource::AddApplicationActionsRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::AddApplicationActionsRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AddApplicationActionsRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AddApplicationActionsRqst_resource_2eproto}, {}};

static void InitDefaultsscc_info_AddApplicationActionsRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_AddApplicationActionsRsp_default_instance_;
    new (ptr) ::resource::AddApplicationActionsRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::AddApplicationActionsRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AddApplicationActionsRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AddApplicationActionsRsp_resource_2eproto}, {}};

static void InitDefaultsscc_info_AddGroupMemberAccountRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_AddGroupMemberAccountRqst_default_instance_;
    new (ptr) ::resource::AddGroupMemberAccountRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::AddGroupMemberAccountRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AddGroupMemberAccountRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AddGroupMemberAccountRqst_resource_2eproto}, {}};

static void InitDefaultsscc_info_AddGroupMemberAccountRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_AddGroupMemberAccountRsp_default_instance_;
    new (ptr) ::resource::AddGroupMemberAccountRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::AddGroupMemberAccountRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AddGroupMemberAccountRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AddGroupMemberAccountRsp_resource_2eproto}, {}};

static void InitDefaultsscc_info_AddOrganizationAccountRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_AddOrganizationAccountRqst_default_instance_;
    new (ptr) ::resource::AddOrganizationAccountRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::AddOrganizationAccountRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AddOrganizationAccountRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AddOrganizationAccountRqst_resource_2eproto}, {}};

static void InitDefaultsscc_info_AddOrganizationAccountRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_AddOrganizationAccountRsp_default_instance_;
    new (ptr) ::resource::AddOrganizationAccountRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::AddOrganizationAccountRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AddOrganizationAccountRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AddOrganizationAccountRsp_resource_2eproto}, {}};

static void InitDefaultsscc_info_AddOrganizationApplicationRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_AddOrganizationApplicationRqst_default_instance_;
    new (ptr) ::resource::AddOrganizationApplicationRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::AddOrganizationApplicationRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AddOrganizationApplicationRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AddOrganizationApplicationRqst_resource_2eproto}, {}};

static void InitDefaultsscc_info_AddOrganizationApplicationRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_AddOrganizationApplicationRsp_default_instance_;
    new (ptr) ::resource::AddOrganizationApplicationRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::AddOrganizationApplicationRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AddOrganizationApplicationRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AddOrganizationApplicationRsp_resource_2eproto}, {}};

static void InitDefaultsscc_info_AddOrganizationGroupRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_AddOrganizationGroupRqst_default_instance_;
    new (ptr) ::resource::AddOrganizationGroupRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::AddOrganizationGroupRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AddOrganizationGroupRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AddOrganizationGroupRqst_resource_2eproto}, {}};

static void InitDefaultsscc_info_AddOrganizationGroupRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_AddOrganizationGroupRsp_default_instance_;
    new (ptr) ::resource::AddOrganizationGroupRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::AddOrganizationGroupRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AddOrganizationGroupRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AddOrganizationGroupRsp_resource_2eproto}, {}};

static void InitDefaultsscc_info_AddOrganizationRoleRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_AddOrganizationRoleRqst_default_instance_;
    new (ptr) ::resource::AddOrganizationRoleRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::AddOrganizationRoleRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AddOrganizationRoleRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AddOrganizationRoleRqst_resource_2eproto}, {}};

static void InitDefaultsscc_info_AddOrganizationRoleRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_AddOrganizationRoleRsp_default_instance_;
    new (ptr) ::resource::AddOrganizationRoleRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::AddOrganizationRoleRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AddOrganizationRoleRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AddOrganizationRoleRsp_resource_2eproto}, {}};

static void InitDefaultsscc_info_AddPeerActionsRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_AddPeerActionsRqst_default_instance_;
    new (ptr) ::resource::AddPeerActionsRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::AddPeerActionsRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AddPeerActionsRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AddPeerActionsRqst_resource_2eproto}, {}};

static void InitDefaultsscc_info_AddPeerActionsRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_AddPeerActionsRsp_default_instance_;
    new (ptr) ::resource::AddPeerActionsRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::AddPeerActionsRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AddPeerActionsRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AddPeerActionsRsp_resource_2eproto}, {}};

static void InitDefaultsscc_info_AddRoleActionsRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_AddRoleActionsRqst_default_instance_;
    new (ptr) ::resource::AddRoleActionsRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::AddRoleActionsRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AddRoleActionsRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AddRoleActionsRqst_resource_2eproto}, {}};

static void InitDefaultsscc_info_AddRoleActionsRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_AddRoleActionsRsp_default_instance_;
    new (ptr) ::resource::AddRoleActionsRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::AddRoleActionsRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AddRoleActionsRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AddRoleActionsRsp_resource_2eproto}, {}};

static void InitDefaultsscc_info_Application_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_Application_default_instance_;
    new (ptr) ::resource::Application();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::Application::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Application_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Application_resource_2eproto}, {}};

static void InitDefaultsscc_info_ClearAllNotificationsRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_ClearAllNotificationsRqst_default_instance_;
    new (ptr) ::resource::ClearAllNotificationsRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::ClearAllNotificationsRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ClearAllNotificationsRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ClearAllNotificationsRqst_resource_2eproto}, {}};

static void InitDefaultsscc_info_ClearAllNotificationsRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_ClearAllNotificationsRsp_default_instance_;
    new (ptr) ::resource::ClearAllNotificationsRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::ClearAllNotificationsRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ClearAllNotificationsRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ClearAllNotificationsRsp_resource_2eproto}, {}};

static void InitDefaultsscc_info_ClearNotificationsByTypeRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_ClearNotificationsByTypeRqst_default_instance_;
    new (ptr) ::resource::ClearNotificationsByTypeRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::ClearNotificationsByTypeRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ClearNotificationsByTypeRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ClearNotificationsByTypeRqst_resource_2eproto}, {}};

static void InitDefaultsscc_info_ClearNotificationsByTypeRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_ClearNotificationsByTypeRsp_default_instance_;
    new (ptr) ::resource::ClearNotificationsByTypeRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::ClearNotificationsByTypeRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ClearNotificationsByTypeRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ClearNotificationsByTypeRsp_resource_2eproto}, {}};

static void InitDefaultsscc_info_Contact_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_Contact_default_instance_;
    new (ptr) ::resource::Contact();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::Contact::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Contact_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Contact_resource_2eproto}, {}};

static void InitDefaultsscc_info_CreateApplicationRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_CreateApplicationRqst_default_instance_;
    new (ptr) ::resource::CreateApplicationRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::CreateApplicationRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_CreateApplicationRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_CreateApplicationRqst_resource_2eproto}, {
      &scc_info_Application_resource_2eproto.base,}};

static void InitDefaultsscc_info_CreateApplicationRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_CreateApplicationRsp_default_instance_;
    new (ptr) ::resource::CreateApplicationRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::CreateApplicationRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CreateApplicationRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CreateApplicationRsp_resource_2eproto}, {}};

static void InitDefaultsscc_info_CreateGroupRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_CreateGroupRqst_default_instance_;
    new (ptr) ::resource::CreateGroupRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::CreateGroupRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_CreateGroupRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_CreateGroupRqst_resource_2eproto}, {
      &scc_info_Group_resource_2eproto.base,}};

static void InitDefaultsscc_info_CreateGroupRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_CreateGroupRsp_default_instance_;
    new (ptr) ::resource::CreateGroupRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::CreateGroupRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CreateGroupRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CreateGroupRsp_resource_2eproto}, {}};

static void InitDefaultsscc_info_CreateNotificationRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_CreateNotificationRqst_default_instance_;
    new (ptr) ::resource::CreateNotificationRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::CreateNotificationRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_CreateNotificationRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_CreateNotificationRqst_resource_2eproto}, {
      &scc_info_Notification_resource_2eproto.base,}};

static void InitDefaultsscc_info_CreateNotificationRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_CreateNotificationRsp_default_instance_;
    new (ptr) ::resource::CreateNotificationRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::CreateNotificationRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CreateNotificationRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CreateNotificationRsp_resource_2eproto}, {}};

static void InitDefaultsscc_info_CreateOrganizationRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_CreateOrganizationRqst_default_instance_;
    new (ptr) ::resource::CreateOrganizationRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::CreateOrganizationRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_CreateOrganizationRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_CreateOrganizationRqst_resource_2eproto}, {
      &scc_info_Organization_resource_2eproto.base,}};

static void InitDefaultsscc_info_CreateOrganizationRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_CreateOrganizationRsp_default_instance_;
    new (ptr) ::resource::CreateOrganizationRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::CreateOrganizationRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CreateOrganizationRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CreateOrganizationRsp_resource_2eproto}, {}};

static void InitDefaultsscc_info_CreateRoleRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_CreateRoleRqst_default_instance_;
    new (ptr) ::resource::CreateRoleRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::CreateRoleRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_CreateRoleRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_CreateRoleRqst_resource_2eproto}, {
      &scc_info_Role_resource_2eproto.base,}};

static void InitDefaultsscc_info_CreateRoleRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_CreateRoleRsp_default_instance_;
    new (ptr) ::resource::CreateRoleRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::CreateRoleRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CreateRoleRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CreateRoleRsp_resource_2eproto}, {}};

static void InitDefaultsscc_info_DeleteAccountRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_DeleteAccountRqst_default_instance_;
    new (ptr) ::resource::DeleteAccountRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::DeleteAccountRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteAccountRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteAccountRqst_resource_2eproto}, {}};

static void InitDefaultsscc_info_DeleteAccountRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_DeleteAccountRsp_default_instance_;
    new (ptr) ::resource::DeleteAccountRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::DeleteAccountRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteAccountRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteAccountRsp_resource_2eproto}, {}};

static void InitDefaultsscc_info_DeleteApplicationRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_DeleteApplicationRqst_default_instance_;
    new (ptr) ::resource::DeleteApplicationRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::DeleteApplicationRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteApplicationRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteApplicationRqst_resource_2eproto}, {}};

static void InitDefaultsscc_info_DeleteApplicationRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_DeleteApplicationRsp_default_instance_;
    new (ptr) ::resource::DeleteApplicationRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::DeleteApplicationRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteApplicationRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteApplicationRsp_resource_2eproto}, {}};

static void InitDefaultsscc_info_DeleteGroupRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_DeleteGroupRqst_default_instance_;
    new (ptr) ::resource::DeleteGroupRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::DeleteGroupRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteGroupRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteGroupRqst_resource_2eproto}, {}};

static void InitDefaultsscc_info_DeleteGroupRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_DeleteGroupRsp_default_instance_;
    new (ptr) ::resource::DeleteGroupRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::DeleteGroupRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteGroupRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteGroupRsp_resource_2eproto}, {}};

static void InitDefaultsscc_info_DeleteNotificationRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_DeleteNotificationRqst_default_instance_;
    new (ptr) ::resource::DeleteNotificationRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::DeleteNotificationRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteNotificationRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteNotificationRqst_resource_2eproto}, {}};

static void InitDefaultsscc_info_DeleteNotificationRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_DeleteNotificationRsp_default_instance_;
    new (ptr) ::resource::DeleteNotificationRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::DeleteNotificationRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteNotificationRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteNotificationRsp_resource_2eproto}, {}};

static void InitDefaultsscc_info_DeleteOrganizationRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_DeleteOrganizationRqst_default_instance_;
    new (ptr) ::resource::DeleteOrganizationRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::DeleteOrganizationRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteOrganizationRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteOrganizationRqst_resource_2eproto}, {}};

static void InitDefaultsscc_info_DeleteOrganizationRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_DeleteOrganizationRsp_default_instance_;
    new (ptr) ::resource::DeleteOrganizationRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::DeleteOrganizationRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteOrganizationRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteOrganizationRsp_resource_2eproto}, {}};

static void InitDefaultsscc_info_DeletePeerRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_DeletePeerRqst_default_instance_;
    new (ptr) ::resource::DeletePeerRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::DeletePeerRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_DeletePeerRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_DeletePeerRqst_resource_2eproto}, {
      &scc_info_Peer_resource_2eproto.base,}};

static void InitDefaultsscc_info_DeletePeerRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_DeletePeerRsp_default_instance_;
    new (ptr) ::resource::DeletePeerRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::DeletePeerRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeletePeerRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeletePeerRsp_resource_2eproto}, {}};

static void InitDefaultsscc_info_DeleteRoleRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_DeleteRoleRqst_default_instance_;
    new (ptr) ::resource::DeleteRoleRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::DeleteRoleRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteRoleRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteRoleRqst_resource_2eproto}, {}};

static void InitDefaultsscc_info_DeleteRoleRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_DeleteRoleRsp_default_instance_;
    new (ptr) ::resource::DeleteRoleRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::DeleteRoleRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteRoleRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteRoleRsp_resource_2eproto}, {}};

static void InitDefaultsscc_info_FindPackagesDescriptorRequest_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_FindPackagesDescriptorRequest_default_instance_;
    new (ptr) ::resource::FindPackagesDescriptorRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::FindPackagesDescriptorRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_FindPackagesDescriptorRequest_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_FindPackagesDescriptorRequest_resource_2eproto}, {}};

static void InitDefaultsscc_info_FindPackagesDescriptorResponse_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_FindPackagesDescriptorResponse_default_instance_;
    new (ptr) ::resource::FindPackagesDescriptorResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::FindPackagesDescriptorResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_FindPackagesDescriptorResponse_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_FindPackagesDescriptorResponse_resource_2eproto}, {
      &scc_info_PackageDescriptor_resource_2eproto.base,}};

static void InitDefaultsscc_info_GetAccountRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_GetAccountRqst_default_instance_;
    new (ptr) ::resource::GetAccountRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::GetAccountRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetAccountRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetAccountRqst_resource_2eproto}, {}};

static void InitDefaultsscc_info_GetAccountRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_GetAccountRsp_default_instance_;
    new (ptr) ::resource::GetAccountRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::GetAccountRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetAccountRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetAccountRsp_resource_2eproto}, {
      &scc_info_Account_resource_2eproto.base,}};

static void InitDefaultsscc_info_GetAccountsRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_GetAccountsRqst_default_instance_;
    new (ptr) ::resource::GetAccountsRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::GetAccountsRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetAccountsRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetAccountsRqst_resource_2eproto}, {}};

static void InitDefaultsscc_info_GetAccountsRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_GetAccountsRsp_default_instance_;
    new (ptr) ::resource::GetAccountsRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::GetAccountsRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetAccountsRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetAccountsRsp_resource_2eproto}, {
      &scc_info_Account_resource_2eproto.base,}};

static void InitDefaultsscc_info_GetApplicationAliasRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_GetApplicationAliasRqst_default_instance_;
    new (ptr) ::resource::GetApplicationAliasRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::GetApplicationAliasRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetApplicationAliasRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetApplicationAliasRqst_resource_2eproto}, {}};

static void InitDefaultsscc_info_GetApplicationAliasRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_GetApplicationAliasRsp_default_instance_;
    new (ptr) ::resource::GetApplicationAliasRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::GetApplicationAliasRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetApplicationAliasRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetApplicationAliasRsp_resource_2eproto}, {}};

static void InitDefaultsscc_info_GetApplicationIconRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_GetApplicationIconRqst_default_instance_;
    new (ptr) ::resource::GetApplicationIconRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::GetApplicationIconRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetApplicationIconRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetApplicationIconRqst_resource_2eproto}, {}};

static void InitDefaultsscc_info_GetApplicationIconRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_GetApplicationIconRsp_default_instance_;
    new (ptr) ::resource::GetApplicationIconRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::GetApplicationIconRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetApplicationIconRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetApplicationIconRsp_resource_2eproto}, {}};

static void InitDefaultsscc_info_GetApplicationVersionRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_GetApplicationVersionRqst_default_instance_;
    new (ptr) ::resource::GetApplicationVersionRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::GetApplicationVersionRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetApplicationVersionRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetApplicationVersionRqst_resource_2eproto}, {}};

static void InitDefaultsscc_info_GetApplicationVersionRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_GetApplicationVersionRsp_default_instance_;
    new (ptr) ::resource::GetApplicationVersionRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::GetApplicationVersionRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetApplicationVersionRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetApplicationVersionRsp_resource_2eproto}, {}};

static void InitDefaultsscc_info_GetApplicationsRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_GetApplicationsRqst_default_instance_;
    new (ptr) ::resource::GetApplicationsRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::GetApplicationsRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetApplicationsRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetApplicationsRqst_resource_2eproto}, {}};

static void InitDefaultsscc_info_GetApplicationsRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_GetApplicationsRsp_default_instance_;
    new (ptr) ::resource::GetApplicationsRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::GetApplicationsRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetApplicationsRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetApplicationsRsp_resource_2eproto}, {
      &scc_info_Application_resource_2eproto.base,}};

static void InitDefaultsscc_info_GetGroupsRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_GetGroupsRqst_default_instance_;
    new (ptr) ::resource::GetGroupsRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::GetGroupsRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetGroupsRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetGroupsRqst_resource_2eproto}, {}};

static void InitDefaultsscc_info_GetGroupsRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_GetGroupsRsp_default_instance_;
    new (ptr) ::resource::GetGroupsRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::GetGroupsRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetGroupsRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetGroupsRsp_resource_2eproto}, {
      &scc_info_Group_resource_2eproto.base,}};

static void InitDefaultsscc_info_GetNotificationsRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_GetNotificationsRqst_default_instance_;
    new (ptr) ::resource::GetNotificationsRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::GetNotificationsRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetNotificationsRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetNotificationsRqst_resource_2eproto}, {}};

static void InitDefaultsscc_info_GetNotificationsRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_GetNotificationsRsp_default_instance_;
    new (ptr) ::resource::GetNotificationsRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::GetNotificationsRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetNotificationsRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetNotificationsRsp_resource_2eproto}, {
      &scc_info_Notification_resource_2eproto.base,}};

static void InitDefaultsscc_info_GetOrganizationsRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_GetOrganizationsRqst_default_instance_;
    new (ptr) ::resource::GetOrganizationsRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::GetOrganizationsRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetOrganizationsRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetOrganizationsRqst_resource_2eproto}, {}};

static void InitDefaultsscc_info_GetOrganizationsRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_GetOrganizationsRsp_default_instance_;
    new (ptr) ::resource::GetOrganizationsRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::GetOrganizationsRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetOrganizationsRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetOrganizationsRsp_resource_2eproto}, {
      &scc_info_Organization_resource_2eproto.base,}};

static void InitDefaultsscc_info_GetPackageBundleChecksumRequest_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_GetPackageBundleChecksumRequest_default_instance_;
    new (ptr) ::resource::GetPackageBundleChecksumRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::GetPackageBundleChecksumRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetPackageBundleChecksumRequest_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetPackageBundleChecksumRequest_resource_2eproto}, {}};

static void InitDefaultsscc_info_GetPackageBundleChecksumResponse_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_GetPackageBundleChecksumResponse_default_instance_;
    new (ptr) ::resource::GetPackageBundleChecksumResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::GetPackageBundleChecksumResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetPackageBundleChecksumResponse_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetPackageBundleChecksumResponse_resource_2eproto}, {}};

static void InitDefaultsscc_info_GetPackageDescriptorRequest_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_GetPackageDescriptorRequest_default_instance_;
    new (ptr) ::resource::GetPackageDescriptorRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::GetPackageDescriptorRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetPackageDescriptorRequest_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetPackageDescriptorRequest_resource_2eproto}, {}};

static void InitDefaultsscc_info_GetPackageDescriptorResponse_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_GetPackageDescriptorResponse_default_instance_;
    new (ptr) ::resource::GetPackageDescriptorResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::GetPackageDescriptorResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetPackageDescriptorResponse_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetPackageDescriptorResponse_resource_2eproto}, {
      &scc_info_PackageDescriptor_resource_2eproto.base,}};

static void InitDefaultsscc_info_GetPackagesDescriptorRequest_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_GetPackagesDescriptorRequest_default_instance_;
    new (ptr) ::resource::GetPackagesDescriptorRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::GetPackagesDescriptorRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetPackagesDescriptorRequest_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetPackagesDescriptorRequest_resource_2eproto}, {}};

static void InitDefaultsscc_info_GetPackagesDescriptorResponse_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_GetPackagesDescriptorResponse_default_instance_;
    new (ptr) ::resource::GetPackagesDescriptorResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::GetPackagesDescriptorResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetPackagesDescriptorResponse_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetPackagesDescriptorResponse_resource_2eproto}, {
      &scc_info_PackageDescriptor_resource_2eproto.base,}};

static void InitDefaultsscc_info_GetPeersRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_GetPeersRqst_default_instance_;
    new (ptr) ::resource::GetPeersRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::GetPeersRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetPeersRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetPeersRqst_resource_2eproto}, {}};

static void InitDefaultsscc_info_GetPeersRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_GetPeersRsp_default_instance_;
    new (ptr) ::resource::GetPeersRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::GetPeersRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetPeersRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetPeersRsp_resource_2eproto}, {
      &scc_info_Peer_resource_2eproto.base,}};

static void InitDefaultsscc_info_GetRolesRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_GetRolesRqst_default_instance_;
    new (ptr) ::resource::GetRolesRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::GetRolesRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetRolesRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetRolesRqst_resource_2eproto}, {}};

static void InitDefaultsscc_info_GetRolesRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_GetRolesRsp_default_instance_;
    new (ptr) ::resource::GetRolesRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::GetRolesRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetRolesRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetRolesRsp_resource_2eproto}, {
      &scc_info_Role_resource_2eproto.base,}};

static void InitDefaultsscc_info_GetSessionRequest_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_GetSessionRequest_default_instance_;
    new (ptr) ::resource::GetSessionRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::GetSessionRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetSessionRequest_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetSessionRequest_resource_2eproto}, {}};

static void InitDefaultsscc_info_GetSessionResponse_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_GetSessionResponse_default_instance_;
    new (ptr) ::resource::GetSessionResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::GetSessionResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetSessionResponse_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetSessionResponse_resource_2eproto}, {
      &scc_info_Session_resource_2eproto.base,}};

static void InitDefaultsscc_info_GetSessionsRequest_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_GetSessionsRequest_default_instance_;
    new (ptr) ::resource::GetSessionsRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::GetSessionsRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetSessionsRequest_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetSessionsRequest_resource_2eproto}, {}};

static void InitDefaultsscc_info_GetSessionsResponse_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_GetSessionsResponse_default_instance_;
    new (ptr) ::resource::GetSessionsResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::GetSessionsResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetSessionsResponse_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetSessionsResponse_resource_2eproto}, {
      &scc_info_Session_resource_2eproto.base,}};

static void InitDefaultsscc_info_Group_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_Group_default_instance_;
    new (ptr) ::resource::Group();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::Group::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Group_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Group_resource_2eproto}, {}};

static void InitDefaultsscc_info_IsOrgnanizationMemberRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_IsOrgnanizationMemberRqst_default_instance_;
    new (ptr) ::resource::IsOrgnanizationMemberRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::IsOrgnanizationMemberRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_IsOrgnanizationMemberRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_IsOrgnanizationMemberRqst_resource_2eproto}, {}};

static void InitDefaultsscc_info_IsOrgnanizationMemberRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_IsOrgnanizationMemberRsp_default_instance_;
    new (ptr) ::resource::IsOrgnanizationMemberRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::IsOrgnanizationMemberRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_IsOrgnanizationMemberRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_IsOrgnanizationMemberRsp_resource_2eproto}, {}};

static void InitDefaultsscc_info_Notification_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_Notification_default_instance_;
    new (ptr) ::resource::Notification();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::Notification::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Notification_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Notification_resource_2eproto}, {}};

static void InitDefaultsscc_info_Organization_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_Organization_default_instance_;
    new (ptr) ::resource::Organization();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::Organization::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Organization_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Organization_resource_2eproto}, {}};

static void InitDefaultsscc_info_PackageBundle_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_PackageBundle_default_instance_;
    new (ptr) ::resource::PackageBundle();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::PackageBundle::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PackageBundle_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_PackageBundle_resource_2eproto}, {
      &scc_info_PackageDescriptor_resource_2eproto.base,}};

static void InitDefaultsscc_info_PackageDescriptor_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_PackageDescriptor_default_instance_;
    new (ptr) ::resource::PackageDescriptor();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::PackageDescriptor::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_PackageDescriptor_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_PackageDescriptor_resource_2eproto}, {
      &scc_info_Role_resource_2eproto.base,
      &scc_info_Group_resource_2eproto.base,}};

static void InitDefaultsscc_info_Peer_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_Peer_default_instance_;
    new (ptr) ::resource::Peer();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::Peer::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Peer_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Peer_resource_2eproto}, {}};

static void InitDefaultsscc_info_RegisterAccountRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_RegisterAccountRqst_default_instance_;
    new (ptr) ::resource::RegisterAccountRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::RegisterAccountRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_RegisterAccountRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_RegisterAccountRqst_resource_2eproto}, {
      &scc_info_Account_resource_2eproto.base,}};

static void InitDefaultsscc_info_RegisterAccountRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_RegisterAccountRsp_default_instance_;
    new (ptr) ::resource::RegisterAccountRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::RegisterAccountRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RegisterAccountRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RegisterAccountRsp_resource_2eproto}, {}};

static void InitDefaultsscc_info_RegisterPeerRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_RegisterPeerRqst_default_instance_;
    new (ptr) ::resource::RegisterPeerRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::RegisterPeerRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_RegisterPeerRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_RegisterPeerRqst_resource_2eproto}, {
      &scc_info_Peer_resource_2eproto.base,}};

static void InitDefaultsscc_info_RegisterPeerRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_RegisterPeerRsp_default_instance_;
    new (ptr) ::resource::RegisterPeerRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::RegisterPeerRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_RegisterPeerRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_RegisterPeerRsp_resource_2eproto}, {
      &scc_info_Peer_resource_2eproto.base,}};

static void InitDefaultsscc_info_RemoveAccountRoleRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_RemoveAccountRoleRqst_default_instance_;
    new (ptr) ::resource::RemoveAccountRoleRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::RemoveAccountRoleRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RemoveAccountRoleRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RemoveAccountRoleRqst_resource_2eproto}, {}};

static void InitDefaultsscc_info_RemoveAccountRoleRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_RemoveAccountRoleRsp_default_instance_;
    new (ptr) ::resource::RemoveAccountRoleRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::RemoveAccountRoleRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RemoveAccountRoleRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RemoveAccountRoleRsp_resource_2eproto}, {}};

static void InitDefaultsscc_info_RemoveApplicationActionRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_RemoveApplicationActionRqst_default_instance_;
    new (ptr) ::resource::RemoveApplicationActionRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::RemoveApplicationActionRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RemoveApplicationActionRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RemoveApplicationActionRqst_resource_2eproto}, {}};

static void InitDefaultsscc_info_RemoveApplicationActionRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_RemoveApplicationActionRsp_default_instance_;
    new (ptr) ::resource::RemoveApplicationActionRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::RemoveApplicationActionRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RemoveApplicationActionRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RemoveApplicationActionRsp_resource_2eproto}, {}};

static void InitDefaultsscc_info_RemoveApplicationsActionRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_RemoveApplicationsActionRqst_default_instance_;
    new (ptr) ::resource::RemoveApplicationsActionRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::RemoveApplicationsActionRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RemoveApplicationsActionRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RemoveApplicationsActionRqst_resource_2eproto}, {}};

static void InitDefaultsscc_info_RemoveApplicationsActionRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_RemoveApplicationsActionRsp_default_instance_;
    new (ptr) ::resource::RemoveApplicationsActionRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::RemoveApplicationsActionRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RemoveApplicationsActionRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RemoveApplicationsActionRsp_resource_2eproto}, {}};

static void InitDefaultsscc_info_RemoveGroupMemberAccountRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_RemoveGroupMemberAccountRqst_default_instance_;
    new (ptr) ::resource::RemoveGroupMemberAccountRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::RemoveGroupMemberAccountRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RemoveGroupMemberAccountRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RemoveGroupMemberAccountRqst_resource_2eproto}, {}};

static void InitDefaultsscc_info_RemoveGroupMemberAccountRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_RemoveGroupMemberAccountRsp_default_instance_;
    new (ptr) ::resource::RemoveGroupMemberAccountRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::RemoveGroupMemberAccountRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RemoveGroupMemberAccountRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RemoveGroupMemberAccountRsp_resource_2eproto}, {}};

static void InitDefaultsscc_info_RemoveOrganizationAccountRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_RemoveOrganizationAccountRqst_default_instance_;
    new (ptr) ::resource::RemoveOrganizationAccountRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::RemoveOrganizationAccountRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RemoveOrganizationAccountRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RemoveOrganizationAccountRqst_resource_2eproto}, {}};

static void InitDefaultsscc_info_RemoveOrganizationAccountRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_RemoveOrganizationAccountRsp_default_instance_;
    new (ptr) ::resource::RemoveOrganizationAccountRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::RemoveOrganizationAccountRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RemoveOrganizationAccountRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RemoveOrganizationAccountRsp_resource_2eproto}, {}};

static void InitDefaultsscc_info_RemoveOrganizationApplicationRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_RemoveOrganizationApplicationRqst_default_instance_;
    new (ptr) ::resource::RemoveOrganizationApplicationRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::RemoveOrganizationApplicationRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RemoveOrganizationApplicationRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RemoveOrganizationApplicationRqst_resource_2eproto}, {}};

static void InitDefaultsscc_info_RemoveOrganizationApplicationRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_RemoveOrganizationApplicationRsp_default_instance_;
    new (ptr) ::resource::RemoveOrganizationApplicationRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::RemoveOrganizationApplicationRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RemoveOrganizationApplicationRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RemoveOrganizationApplicationRsp_resource_2eproto}, {}};

static void InitDefaultsscc_info_RemoveOrganizationGroupRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_RemoveOrganizationGroupRqst_default_instance_;
    new (ptr) ::resource::RemoveOrganizationGroupRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::RemoveOrganizationGroupRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RemoveOrganizationGroupRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RemoveOrganizationGroupRqst_resource_2eproto}, {}};

static void InitDefaultsscc_info_RemoveOrganizationGroupRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_RemoveOrganizationGroupRsp_default_instance_;
    new (ptr) ::resource::RemoveOrganizationGroupRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::RemoveOrganizationGroupRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RemoveOrganizationGroupRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RemoveOrganizationGroupRsp_resource_2eproto}, {}};

static void InitDefaultsscc_info_RemoveOrganizationRoleRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_RemoveOrganizationRoleRqst_default_instance_;
    new (ptr) ::resource::RemoveOrganizationRoleRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::RemoveOrganizationRoleRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RemoveOrganizationRoleRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RemoveOrganizationRoleRqst_resource_2eproto}, {}};

static void InitDefaultsscc_info_RemoveOrganizationRoleRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_RemoveOrganizationRoleRsp_default_instance_;
    new (ptr) ::resource::RemoveOrganizationRoleRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::RemoveOrganizationRoleRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RemoveOrganizationRoleRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RemoveOrganizationRoleRsp_resource_2eproto}, {}};

static void InitDefaultsscc_info_RemovePeerActionRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_RemovePeerActionRqst_default_instance_;
    new (ptr) ::resource::RemovePeerActionRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::RemovePeerActionRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RemovePeerActionRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RemovePeerActionRqst_resource_2eproto}, {}};

static void InitDefaultsscc_info_RemovePeerActionRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_RemovePeerActionRsp_default_instance_;
    new (ptr) ::resource::RemovePeerActionRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::RemovePeerActionRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RemovePeerActionRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RemovePeerActionRsp_resource_2eproto}, {}};

static void InitDefaultsscc_info_RemovePeersActionRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_RemovePeersActionRqst_default_instance_;
    new (ptr) ::resource::RemovePeersActionRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::RemovePeersActionRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RemovePeersActionRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RemovePeersActionRqst_resource_2eproto}, {}};

static void InitDefaultsscc_info_RemovePeersActionRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_RemovePeersActionRsp_default_instance_;
    new (ptr) ::resource::RemovePeersActionRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::RemovePeersActionRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RemovePeersActionRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RemovePeersActionRsp_resource_2eproto}, {}};

static void InitDefaultsscc_info_RemoveRoleActionRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_RemoveRoleActionRqst_default_instance_;
    new (ptr) ::resource::RemoveRoleActionRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::RemoveRoleActionRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RemoveRoleActionRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RemoveRoleActionRqst_resource_2eproto}, {}};

static void InitDefaultsscc_info_RemoveRoleActionRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_RemoveRoleActionRsp_default_instance_;
    new (ptr) ::resource::RemoveRoleActionRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::RemoveRoleActionRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RemoveRoleActionRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RemoveRoleActionRsp_resource_2eproto}, {}};

static void InitDefaultsscc_info_RemoveRolesActionRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_RemoveRolesActionRqst_default_instance_;
    new (ptr) ::resource::RemoveRolesActionRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::RemoveRolesActionRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RemoveRolesActionRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RemoveRolesActionRqst_resource_2eproto}, {}};

static void InitDefaultsscc_info_RemoveRolesActionRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_RemoveRolesActionRsp_default_instance_;
    new (ptr) ::resource::RemoveRolesActionRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::RemoveRolesActionRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RemoveRolesActionRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RemoveRolesActionRsp_resource_2eproto}, {}};

static void InitDefaultsscc_info_RemoveSessionRequest_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_RemoveSessionRequest_default_instance_;
    new (ptr) ::resource::RemoveSessionRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::RemoveSessionRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RemoveSessionRequest_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RemoveSessionRequest_resource_2eproto}, {}};

static void InitDefaultsscc_info_RemoveSessionResponse_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_RemoveSessionResponse_default_instance_;
    new (ptr) ::resource::RemoveSessionResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::RemoveSessionResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RemoveSessionResponse_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RemoveSessionResponse_resource_2eproto}, {}};

static void InitDefaultsscc_info_Role_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_Role_default_instance_;
    new (ptr) ::resource::Role();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::Role::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Role_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Role_resource_2eproto}, {}};

static void InitDefaultsscc_info_Session_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_Session_default_instance_;
    new (ptr) ::resource::Session();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::Session::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Session_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Session_resource_2eproto}, {}};

static void InitDefaultsscc_info_SetAccountContactRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_SetAccountContactRqst_default_instance_;
    new (ptr) ::resource::SetAccountContactRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::SetAccountContactRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SetAccountContactRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SetAccountContactRqst_resource_2eproto}, {
      &scc_info_Contact_resource_2eproto.base,}};

static void InitDefaultsscc_info_SetAccountContactRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_SetAccountContactRsp_default_instance_;
    new (ptr) ::resource::SetAccountContactRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::SetAccountContactRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SetAccountContactRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SetAccountContactRsp_resource_2eproto}, {}};

static void InitDefaultsscc_info_SetAccountPasswordRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_SetAccountPasswordRqst_default_instance_;
    new (ptr) ::resource::SetAccountPasswordRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::SetAccountPasswordRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SetAccountPasswordRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SetAccountPasswordRqst_resource_2eproto}, {}};

static void InitDefaultsscc_info_SetAccountPasswordRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_SetAccountPasswordRsp_default_instance_;
    new (ptr) ::resource::SetAccountPasswordRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::SetAccountPasswordRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SetAccountPasswordRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SetAccountPasswordRsp_resource_2eproto}, {}};

static void InitDefaultsscc_info_SetEmailRequest_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_SetEmailRequest_default_instance_;
    new (ptr) ::resource::SetEmailRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::SetEmailRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SetEmailRequest_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SetEmailRequest_resource_2eproto}, {}};

static void InitDefaultsscc_info_SetEmailResponse_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_SetEmailResponse_default_instance_;
    new (ptr) ::resource::SetEmailResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::SetEmailResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SetEmailResponse_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SetEmailResponse_resource_2eproto}, {}};

static void InitDefaultsscc_info_SetPackageBundleRequest_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_SetPackageBundleRequest_default_instance_;
    new (ptr) ::resource::SetPackageBundleRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::SetPackageBundleRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SetPackageBundleRequest_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SetPackageBundleRequest_resource_2eproto}, {
      &scc_info_PackageBundle_resource_2eproto.base,}};

static void InitDefaultsscc_info_SetPackageBundleResponse_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_SetPackageBundleResponse_default_instance_;
    new (ptr) ::resource::SetPackageBundleResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::SetPackageBundleResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SetPackageBundleResponse_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SetPackageBundleResponse_resource_2eproto}, {}};

static void InitDefaultsscc_info_SetPackageDescriptorRequest_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_SetPackageDescriptorRequest_default_instance_;
    new (ptr) ::resource::SetPackageDescriptorRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::SetPackageDescriptorRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SetPackageDescriptorRequest_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SetPackageDescriptorRequest_resource_2eproto}, {
      &scc_info_PackageDescriptor_resource_2eproto.base,}};

static void InitDefaultsscc_info_SetPackageDescriptorResponse_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_SetPackageDescriptorResponse_default_instance_;
    new (ptr) ::resource::SetPackageDescriptorResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::SetPackageDescriptorResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SetPackageDescriptorResponse_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SetPackageDescriptorResponse_resource_2eproto}, {}};

static void InitDefaultsscc_info_UpdateApplicationRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_UpdateApplicationRqst_default_instance_;
    new (ptr) ::resource::UpdateApplicationRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::UpdateApplicationRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UpdateApplicationRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_UpdateApplicationRqst_resource_2eproto}, {}};

static void InitDefaultsscc_info_UpdateApplicationRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_UpdateApplicationRsp_default_instance_;
    new (ptr) ::resource::UpdateApplicationRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::UpdateApplicationRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UpdateApplicationRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_UpdateApplicationRsp_resource_2eproto}, {}};

static void InitDefaultsscc_info_UpdateGroupRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_UpdateGroupRqst_default_instance_;
    new (ptr) ::resource::UpdateGroupRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::UpdateGroupRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UpdateGroupRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_UpdateGroupRqst_resource_2eproto}, {}};

static void InitDefaultsscc_info_UpdateGroupRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_UpdateGroupRsp_default_instance_;
    new (ptr) ::resource::UpdateGroupRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::UpdateGroupRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UpdateGroupRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_UpdateGroupRsp_resource_2eproto}, {}};

static void InitDefaultsscc_info_UpdateSessionRequest_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_UpdateSessionRequest_default_instance_;
    new (ptr) ::resource::UpdateSessionRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::UpdateSessionRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_UpdateSessionRequest_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_UpdateSessionRequest_resource_2eproto}, {
      &scc_info_Session_resource_2eproto.base,}};

static void InitDefaultsscc_info_UpdateSessionResponse_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_UpdateSessionResponse_default_instance_;
    new (ptr) ::resource::UpdateSessionResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::UpdateSessionResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UpdateSessionResponse_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_UpdateSessionResponse_resource_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_resource_2eproto[141];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_resource_2eproto[3];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_resource_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_resource_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::PackageBundle, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::PackageBundle, packagedescriptor_),
  PROTOBUF_FIELD_OFFSET(::resource::PackageBundle, checksum_),
  PROTOBUF_FIELD_OFFSET(::resource::PackageBundle, plaform_),
  PROTOBUF_FIELD_OFFSET(::resource::PackageBundle, size_),
  PROTOBUF_FIELD_OFFSET(::resource::PackageBundle, modified_),
  PROTOBUF_FIELD_OFFSET(::resource::PackageBundle, binairies_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::PackageDescriptor, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::PackageDescriptor, id_),
  PROTOBUF_FIELD_OFFSET(::resource::PackageDescriptor, name_),
  PROTOBUF_FIELD_OFFSET(::resource::PackageDescriptor, type_),
  PROTOBUF_FIELD_OFFSET(::resource::PackageDescriptor, publisherid_),
  PROTOBUF_FIELD_OFFSET(::resource::PackageDescriptor, version_),
  PROTOBUF_FIELD_OFFSET(::resource::PackageDescriptor, description_),
  PROTOBUF_FIELD_OFFSET(::resource::PackageDescriptor, repositories_),
  PROTOBUF_FIELD_OFFSET(::resource::PackageDescriptor, discoveries_),
  PROTOBUF_FIELD_OFFSET(::resource::PackageDescriptor, keywords_),
  PROTOBUF_FIELD_OFFSET(::resource::PackageDescriptor, actions_),
  PROTOBUF_FIELD_OFFSET(::resource::PackageDescriptor, roles_),
  PROTOBUF_FIELD_OFFSET(::resource::PackageDescriptor, groups_),
  PROTOBUF_FIELD_OFFSET(::resource::PackageDescriptor, icon_),
  PROTOBUF_FIELD_OFFSET(::resource::PackageDescriptor, alias_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::Account, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::Account, id_),
  PROTOBUF_FIELD_OFFSET(::resource::Account, name_),
  PROTOBUF_FIELD_OFFSET(::resource::Account, email_),
  PROTOBUF_FIELD_OFFSET(::resource::Account, password_),
  PROTOBUF_FIELD_OFFSET(::resource::Account, organizations_),
  PROTOBUF_FIELD_OFFSET(::resource::Account, groups_),
  PROTOBUF_FIELD_OFFSET(::resource::Account, roles_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::Role, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::Role, id_),
  PROTOBUF_FIELD_OFFSET(::resource::Role, name_),
  PROTOBUF_FIELD_OFFSET(::resource::Role, actions_),
  PROTOBUF_FIELD_OFFSET(::resource::Role, members_),
  PROTOBUF_FIELD_OFFSET(::resource::Role, organizations_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::RegisterAccountRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::RegisterAccountRqst, account_),
  PROTOBUF_FIELD_OFFSET(::resource::RegisterAccountRqst, confirm_password_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::RegisterAccountRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::RegisterAccountRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::AccountExistRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::AccountExistRqst, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::AccountExistRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::AccountExistRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::GetAccountsRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::GetAccountsRqst, query_),
  PROTOBUF_FIELD_OFFSET(::resource::GetAccountsRqst, options_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::GetAccountsRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::GetAccountsRsp, accounts_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::GetAccountRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::GetAccountRqst, accountid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::GetAccountRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::GetAccountRsp, account_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::SetAccountPasswordRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::SetAccountPasswordRqst, accountid_),
  PROTOBUF_FIELD_OFFSET(::resource::SetAccountPasswordRqst, old_password_),
  PROTOBUF_FIELD_OFFSET(::resource::SetAccountPasswordRqst, new_password_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::SetAccountPasswordRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::SetEmailRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::SetEmailRequest, accountid_),
  PROTOBUF_FIELD_OFFSET(::resource::SetEmailRequest, oldemail_),
  PROTOBUF_FIELD_OFFSET(::resource::SetEmailRequest, newemail_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::SetEmailResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::DeleteAccountRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::DeleteAccountRqst, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::DeleteAccountRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::DeleteAccountRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::AddAccountRoleRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::AddAccountRoleRqst, accountid_),
  PROTOBUF_FIELD_OFFSET(::resource::AddAccountRoleRqst, roleid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::AddAccountRoleRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::AddAccountRoleRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveAccountRoleRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveAccountRoleRqst, accountid_),
  PROTOBUF_FIELD_OFFSET(::resource::RemoveAccountRoleRqst, roleid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveAccountRoleRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveAccountRoleRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::Contact, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::Contact, id_),
  PROTOBUF_FIELD_OFFSET(::resource::Contact, invitationtime_),
  PROTOBUF_FIELD_OFFSET(::resource::Contact, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::SetAccountContactRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::SetAccountContactRqst, accountid_),
  PROTOBUF_FIELD_OFFSET(::resource::SetAccountContactRqst, contact_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::SetAccountContactRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::SetAccountContactRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::CreateRoleRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::CreateRoleRqst, role_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::CreateRoleRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::CreateRoleRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::GetRolesRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::GetRolesRqst, query_),
  PROTOBUF_FIELD_OFFSET(::resource::GetRolesRqst, options_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::GetRolesRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::GetRolesRsp, roles_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::DeleteRoleRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::DeleteRoleRqst, roleid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::DeleteRoleRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::DeleteRoleRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::Application, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::Application, id_),
  PROTOBUF_FIELD_OFFSET(::resource::Application, name_),
  PROTOBUF_FIELD_OFFSET(::resource::Application, password_),
  PROTOBUF_FIELD_OFFSET(::resource::Application, path_),
  PROTOBUF_FIELD_OFFSET(::resource::Application, version_),
  PROTOBUF_FIELD_OFFSET(::resource::Application, description_),
  PROTOBUF_FIELD_OFFSET(::resource::Application, actions_),
  PROTOBUF_FIELD_OFFSET(::resource::Application, keywords_),
  PROTOBUF_FIELD_OFFSET(::resource::Application, icon_),
  PROTOBUF_FIELD_OFFSET(::resource::Application, alias_),
  PROTOBUF_FIELD_OFFSET(::resource::Application, publisherid_),
  PROTOBUF_FIELD_OFFSET(::resource::Application, creation_date_),
  PROTOBUF_FIELD_OFFSET(::resource::Application, last_deployed_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::CreateApplicationRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::CreateApplicationRqst, application_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::CreateApplicationRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::UpdateApplicationRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::UpdateApplicationRqst, applicationid_),
  PROTOBUF_FIELD_OFFSET(::resource::UpdateApplicationRqst, values_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::UpdateApplicationRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::UpdateApplicationRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::DeleteApplicationRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::DeleteApplicationRqst, applicationid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::DeleteApplicationRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::DeleteApplicationRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::GetApplicationsRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::GetApplicationsRqst, query_),
  PROTOBUF_FIELD_OFFSET(::resource::GetApplicationsRqst, options_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::GetApplicationsRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::GetApplicationsRsp, applications_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::GetApplicationVersionRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::GetApplicationVersionRqst, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::GetApplicationVersionRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::GetApplicationVersionRsp, version_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::GetApplicationIconRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::GetApplicationIconRqst, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::GetApplicationIconRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::GetApplicationIconRsp, icon_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::GetApplicationAliasRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::GetApplicationAliasRqst, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::GetApplicationAliasRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::GetApplicationAliasRsp, alias_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::IsOrgnanizationMemberRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::IsOrgnanizationMemberRqst, organizationid_),
  PROTOBUF_FIELD_OFFSET(::resource::IsOrgnanizationMemberRqst, accountid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::IsOrgnanizationMemberRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::IsOrgnanizationMemberRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::SetPackageBundleRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::SetPackageBundleRequest, bundle_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::SetPackageBundleResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::SetPackageBundleResponse, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::GetPackageBundleChecksumRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::GetPackageBundleChecksumRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::GetPackageBundleChecksumResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::GetPackageBundleChecksumResponse, checksum_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::Group, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::Group, id_),
  PROTOBUF_FIELD_OFFSET(::resource::Group, name_),
  PROTOBUF_FIELD_OFFSET(::resource::Group, members_),
  PROTOBUF_FIELD_OFFSET(::resource::Group, organizations_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::CreateGroupRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::CreateGroupRqst, group_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::CreateGroupRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::CreateGroupRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::UpdateGroupRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::UpdateGroupRqst, groupid_),
  PROTOBUF_FIELD_OFFSET(::resource::UpdateGroupRqst, values_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::UpdateGroupRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::UpdateGroupRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::GetGroupsRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::GetGroupsRqst, query_),
  PROTOBUF_FIELD_OFFSET(::resource::GetGroupsRqst, options_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::GetGroupsRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::GetGroupsRsp, groups_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::DeleteGroupRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::DeleteGroupRqst, group_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::DeleteGroupRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::DeleteGroupRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::AddGroupMemberAccountRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::AddGroupMemberAccountRqst, groupid_),
  PROTOBUF_FIELD_OFFSET(::resource::AddGroupMemberAccountRqst, accountid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::AddGroupMemberAccountRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::AddGroupMemberAccountRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveGroupMemberAccountRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveGroupMemberAccountRqst, groupid_),
  PROTOBUF_FIELD_OFFSET(::resource::RemoveGroupMemberAccountRqst, accountid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveGroupMemberAccountRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveGroupMemberAccountRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::Organization, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::Organization, id_),
  PROTOBUF_FIELD_OFFSET(::resource::Organization, name_),
  PROTOBUF_FIELD_OFFSET(::resource::Organization, accounts_),
  PROTOBUF_FIELD_OFFSET(::resource::Organization, groups_),
  PROTOBUF_FIELD_OFFSET(::resource::Organization, roles_),
  PROTOBUF_FIELD_OFFSET(::resource::Organization, applications_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::CreateOrganizationRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::CreateOrganizationRqst, organization_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::CreateOrganizationRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::CreateOrganizationRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::GetOrganizationsRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::GetOrganizationsRqst, query_),
  PROTOBUF_FIELD_OFFSET(::resource::GetOrganizationsRqst, options_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::GetOrganizationsRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::GetOrganizationsRsp, organizations_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::DeleteOrganizationRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::DeleteOrganizationRqst, organization_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::DeleteOrganizationRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::DeleteOrganizationRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::Peer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::Peer, domain_),
  PROTOBUF_FIELD_OFFSET(::resource::Peer, address_),
  PROTOBUF_FIELD_OFFSET(::resource::Peer, mac_),
  PROTOBUF_FIELD_OFFSET(::resource::Peer, actions_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::RegisterPeerRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::RegisterPeerRqst, peer_),
  PROTOBUF_FIELD_OFFSET(::resource::RegisterPeerRqst, public_key_),
  PROTOBUF_FIELD_OFFSET(::resource::RegisterPeerRqst, secret_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::RegisterPeerRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::RegisterPeerRsp, peer_),
  PROTOBUF_FIELD_OFFSET(::resource::RegisterPeerRsp, public_key_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::GetPeersRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::GetPeersRqst, query_),
  PROTOBUF_FIELD_OFFSET(::resource::GetPeersRqst, options_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::GetPeersRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::GetPeersRsp, peers_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::DeletePeerRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::DeletePeerRqst, peer_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::DeletePeerRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::DeletePeerRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::AddRoleActionsRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::AddRoleActionsRqst, roleid_),
  PROTOBUF_FIELD_OFFSET(::resource::AddRoleActionsRqst, actions_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::AddRoleActionsRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::AddRoleActionsRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveRoleActionRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveRoleActionRqst, roleid_),
  PROTOBUF_FIELD_OFFSET(::resource::RemoveRoleActionRqst, action_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveRoleActionRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveRoleActionRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveRolesActionRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveRolesActionRqst, action_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveRolesActionRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveRolesActionRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::AddApplicationActionsRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::AddApplicationActionsRqst, applicationid_),
  PROTOBUF_FIELD_OFFSET(::resource::AddApplicationActionsRqst, actions_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::AddApplicationActionsRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::AddApplicationActionsRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveApplicationActionRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveApplicationActionRqst, applicationid_),
  PROTOBUF_FIELD_OFFSET(::resource::RemoveApplicationActionRqst, action_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveApplicationActionRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveApplicationActionRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveApplicationsActionRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveApplicationsActionRqst, action_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveApplicationsActionRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveApplicationsActionRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::AddPeerActionsRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::AddPeerActionsRqst, domain_),
  PROTOBUF_FIELD_OFFSET(::resource::AddPeerActionsRqst, actions_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::AddPeerActionsRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::AddPeerActionsRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::RemovePeerActionRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::RemovePeerActionRqst, domain_),
  PROTOBUF_FIELD_OFFSET(::resource::RemovePeerActionRqst, action_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::RemovePeerActionRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::RemovePeerActionRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::RemovePeersActionRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::RemovePeersActionRqst, action_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::RemovePeersActionRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::RemovePeersActionRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::AddOrganizationAccountRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::AddOrganizationAccountRqst, organizationid_),
  PROTOBUF_FIELD_OFFSET(::resource::AddOrganizationAccountRqst, accountid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::AddOrganizationAccountRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::AddOrganizationAccountRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::AddOrganizationGroupRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::AddOrganizationGroupRqst, organizationid_),
  PROTOBUF_FIELD_OFFSET(::resource::AddOrganizationGroupRqst, groupid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::AddOrganizationGroupRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::AddOrganizationGroupRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::AddOrganizationRoleRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::AddOrganizationRoleRqst, organizationid_),
  PROTOBUF_FIELD_OFFSET(::resource::AddOrganizationRoleRqst, roleid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::AddOrganizationRoleRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::AddOrganizationRoleRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::AddOrganizationApplicationRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::AddOrganizationApplicationRqst, organizationid_),
  PROTOBUF_FIELD_OFFSET(::resource::AddOrganizationApplicationRqst, applicationid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::AddOrganizationApplicationRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::AddOrganizationApplicationRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveOrganizationGroupRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveOrganizationGroupRqst, organizationid_),
  PROTOBUF_FIELD_OFFSET(::resource::RemoveOrganizationGroupRqst, groupid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveOrganizationGroupRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveOrganizationGroupRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveOrganizationRoleRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveOrganizationRoleRqst, organizationid_),
  PROTOBUF_FIELD_OFFSET(::resource::RemoveOrganizationRoleRqst, roleid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveOrganizationRoleRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveOrganizationRoleRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveOrganizationApplicationRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveOrganizationApplicationRqst, organizationid_),
  PROTOBUF_FIELD_OFFSET(::resource::RemoveOrganizationApplicationRqst, applicationid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveOrganizationApplicationRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveOrganizationApplicationRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveOrganizationAccountRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveOrganizationAccountRqst, organizationid_),
  PROTOBUF_FIELD_OFFSET(::resource::RemoveOrganizationAccountRqst, accountid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveOrganizationAccountRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveOrganizationAccountRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::Notification, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::Notification, id_),
  PROTOBUF_FIELD_OFFSET(::resource::Notification, date_),
  PROTOBUF_FIELD_OFFSET(::resource::Notification, message_),
  PROTOBUF_FIELD_OFFSET(::resource::Notification, recipient_),
  PROTOBUF_FIELD_OFFSET(::resource::Notification, sender_),
  PROTOBUF_FIELD_OFFSET(::resource::Notification, notification_type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::CreateNotificationRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::CreateNotificationRqst, notification_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::CreateNotificationRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::GetNotificationsRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::GetNotificationsRqst, recipient_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::GetNotificationsRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::GetNotificationsRsp, notifications_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::DeleteNotificationRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::DeleteNotificationRqst, id_),
  PROTOBUF_FIELD_OFFSET(::resource::DeleteNotificationRqst, recipient_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::DeleteNotificationRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::ClearAllNotificationsRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::ClearAllNotificationsRqst, recipient_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::ClearAllNotificationsRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::ClearNotificationsByTypeRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::ClearNotificationsByTypeRqst, recipient_),
  PROTOBUF_FIELD_OFFSET(::resource::ClearNotificationsByTypeRqst, notification_type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::ClearNotificationsByTypeRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::GetPackageDescriptorRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::GetPackageDescriptorRequest, serviceid_),
  PROTOBUF_FIELD_OFFSET(::resource::GetPackageDescriptorRequest, publisherid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::GetPackageDescriptorResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::GetPackageDescriptorResponse, results_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::GetPackagesDescriptorRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::GetPackagesDescriptorRequest, query_),
  PROTOBUF_FIELD_OFFSET(::resource::GetPackagesDescriptorRequest, options_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::GetPackagesDescriptorResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::GetPackagesDescriptorResponse, results_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::SetPackageDescriptorRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::SetPackageDescriptorRequest, packagedescriptor_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::SetPackageDescriptorResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::SetPackageDescriptorResponse, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::FindPackagesDescriptorRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::FindPackagesDescriptorRequest, keywords_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::FindPackagesDescriptorResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::FindPackagesDescriptorResponse, results_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::Session, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::Session, accountid_),
  PROTOBUF_FIELD_OFFSET(::resource::Session, state_),
  PROTOBUF_FIELD_OFFSET(::resource::Session, last_state_time_),
  PROTOBUF_FIELD_OFFSET(::resource::Session, expire_at_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::UpdateSessionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::UpdateSessionRequest, session_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::UpdateSessionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveSessionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveSessionRequest, accountid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveSessionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::GetSessionsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::GetSessionsRequest, query_),
  PROTOBUF_FIELD_OFFSET(::resource::GetSessionsRequest, options_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::GetSessionsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::GetSessionsResponse, sessions_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::GetSessionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::GetSessionRequest, accountid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::GetSessionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::GetSessionResponse, session_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::resource::PackageBundle)},
  { 11, -1, sizeof(::resource::PackageDescriptor)},
  { 30, -1, sizeof(::resource::Account)},
  { 42, -1, sizeof(::resource::Role)},
  { 52, -1, sizeof(::resource::RegisterAccountRqst)},
  { 59, -1, sizeof(::resource::RegisterAccountRsp)},
  { 65, -1, sizeof(::resource::AccountExistRqst)},
  { 71, -1, sizeof(::resource::AccountExistRsp)},
  { 77, -1, sizeof(::resource::GetAccountsRqst)},
  { 84, -1, sizeof(::resource::GetAccountsRsp)},
  { 90, -1, sizeof(::resource::GetAccountRqst)},
  { 96, -1, sizeof(::resource::GetAccountRsp)},
  { 102, -1, sizeof(::resource::SetAccountPasswordRqst)},
  { 110, -1, sizeof(::resource::SetAccountPasswordRsp)},
  { 115, -1, sizeof(::resource::SetEmailRequest)},
  { 123, -1, sizeof(::resource::SetEmailResponse)},
  { 128, -1, sizeof(::resource::DeleteAccountRqst)},
  { 134, -1, sizeof(::resource::DeleteAccountRsp)},
  { 140, -1, sizeof(::resource::AddAccountRoleRqst)},
  { 147, -1, sizeof(::resource::AddAccountRoleRsp)},
  { 153, -1, sizeof(::resource::RemoveAccountRoleRqst)},
  { 160, -1, sizeof(::resource::RemoveAccountRoleRsp)},
  { 166, -1, sizeof(::resource::Contact)},
  { 174, -1, sizeof(::resource::SetAccountContactRqst)},
  { 181, -1, sizeof(::resource::SetAccountContactRsp)},
  { 187, -1, sizeof(::resource::CreateRoleRqst)},
  { 193, -1, sizeof(::resource::CreateRoleRsp)},
  { 199, -1, sizeof(::resource::GetRolesRqst)},
  { 206, -1, sizeof(::resource::GetRolesRsp)},
  { 212, -1, sizeof(::resource::DeleteRoleRqst)},
  { 218, -1, sizeof(::resource::DeleteRoleRsp)},
  { 224, -1, sizeof(::resource::Application)},
  { 242, -1, sizeof(::resource::CreateApplicationRqst)},
  { 248, -1, sizeof(::resource::CreateApplicationRsp)},
  { 253, -1, sizeof(::resource::UpdateApplicationRqst)},
  { 260, -1, sizeof(::resource::UpdateApplicationRsp)},
  { 266, -1, sizeof(::resource::DeleteApplicationRqst)},
  { 272, -1, sizeof(::resource::DeleteApplicationRsp)},
  { 278, -1, sizeof(::resource::GetApplicationsRqst)},
  { 285, -1, sizeof(::resource::GetApplicationsRsp)},
  { 291, -1, sizeof(::resource::GetApplicationVersionRqst)},
  { 297, -1, sizeof(::resource::GetApplicationVersionRsp)},
  { 303, -1, sizeof(::resource::GetApplicationIconRqst)},
  { 309, -1, sizeof(::resource::GetApplicationIconRsp)},
  { 315, -1, sizeof(::resource::GetApplicationAliasRqst)},
  { 321, -1, sizeof(::resource::GetApplicationAliasRsp)},
  { 327, -1, sizeof(::resource::IsOrgnanizationMemberRqst)},
  { 334, -1, sizeof(::resource::IsOrgnanizationMemberRsp)},
  { 340, -1, sizeof(::resource::SetPackageBundleRequest)},
  { 346, -1, sizeof(::resource::SetPackageBundleResponse)},
  { 352, -1, sizeof(::resource::GetPackageBundleChecksumRequest)},
  { 358, -1, sizeof(::resource::GetPackageBundleChecksumResponse)},
  { 364, -1, sizeof(::resource::Group)},
  { 373, -1, sizeof(::resource::CreateGroupRqst)},
  { 379, -1, sizeof(::resource::CreateGroupRsp)},
  { 385, -1, sizeof(::resource::UpdateGroupRqst)},
  { 392, -1, sizeof(::resource::UpdateGroupRsp)},
  { 398, -1, sizeof(::resource::GetGroupsRqst)},
  { 405, -1, sizeof(::resource::GetGroupsRsp)},
  { 411, -1, sizeof(::resource::DeleteGroupRqst)},
  { 417, -1, sizeof(::resource::DeleteGroupRsp)},
  { 423, -1, sizeof(::resource::AddGroupMemberAccountRqst)},
  { 430, -1, sizeof(::resource::AddGroupMemberAccountRsp)},
  { 436, -1, sizeof(::resource::RemoveGroupMemberAccountRqst)},
  { 443, -1, sizeof(::resource::RemoveGroupMemberAccountRsp)},
  { 449, -1, sizeof(::resource::Organization)},
  { 460, -1, sizeof(::resource::CreateOrganizationRqst)},
  { 466, -1, sizeof(::resource::CreateOrganizationRsp)},
  { 472, -1, sizeof(::resource::GetOrganizationsRqst)},
  { 479, -1, sizeof(::resource::GetOrganizationsRsp)},
  { 485, -1, sizeof(::resource::DeleteOrganizationRqst)},
  { 491, -1, sizeof(::resource::DeleteOrganizationRsp)},
  { 497, -1, sizeof(::resource::Peer)},
  { 506, -1, sizeof(::resource::RegisterPeerRqst)},
  { 514, -1, sizeof(::resource::RegisterPeerRsp)},
  { 521, -1, sizeof(::resource::GetPeersRqst)},
  { 528, -1, sizeof(::resource::GetPeersRsp)},
  { 534, -1, sizeof(::resource::DeletePeerRqst)},
  { 540, -1, sizeof(::resource::DeletePeerRsp)},
  { 546, -1, sizeof(::resource::AddRoleActionsRqst)},
  { 553, -1, sizeof(::resource::AddRoleActionsRsp)},
  { 559, -1, sizeof(::resource::RemoveRoleActionRqst)},
  { 566, -1, sizeof(::resource::RemoveRoleActionRsp)},
  { 572, -1, sizeof(::resource::RemoveRolesActionRqst)},
  { 578, -1, sizeof(::resource::RemoveRolesActionRsp)},
  { 584, -1, sizeof(::resource::AddApplicationActionsRqst)},
  { 591, -1, sizeof(::resource::AddApplicationActionsRsp)},
  { 597, -1, sizeof(::resource::RemoveApplicationActionRqst)},
  { 604, -1, sizeof(::resource::RemoveApplicationActionRsp)},
  { 610, -1, sizeof(::resource::RemoveApplicationsActionRqst)},
  { 616, -1, sizeof(::resource::RemoveApplicationsActionRsp)},
  { 622, -1, sizeof(::resource::AddPeerActionsRqst)},
  { 629, -1, sizeof(::resource::AddPeerActionsRsp)},
  { 635, -1, sizeof(::resource::RemovePeerActionRqst)},
  { 642, -1, sizeof(::resource::RemovePeerActionRsp)},
  { 648, -1, sizeof(::resource::RemovePeersActionRqst)},
  { 654, -1, sizeof(::resource::RemovePeersActionRsp)},
  { 660, -1, sizeof(::resource::AddOrganizationAccountRqst)},
  { 667, -1, sizeof(::resource::AddOrganizationAccountRsp)},
  { 673, -1, sizeof(::resource::AddOrganizationGroupRqst)},
  { 680, -1, sizeof(::resource::AddOrganizationGroupRsp)},
  { 686, -1, sizeof(::resource::AddOrganizationRoleRqst)},
  { 693, -1, sizeof(::resource::AddOrganizationRoleRsp)},
  { 699, -1, sizeof(::resource::AddOrganizationApplicationRqst)},
  { 706, -1, sizeof(::resource::AddOrganizationApplicationRsp)},
  { 712, -1, sizeof(::resource::RemoveOrganizationGroupRqst)},
  { 719, -1, sizeof(::resource::RemoveOrganizationGroupRsp)},
  { 725, -1, sizeof(::resource::RemoveOrganizationRoleRqst)},
  { 732, -1, sizeof(::resource::RemoveOrganizationRoleRsp)},
  { 738, -1, sizeof(::resource::RemoveOrganizationApplicationRqst)},
  { 745, -1, sizeof(::resource::RemoveOrganizationApplicationRsp)},
  { 751, -1, sizeof(::resource::RemoveOrganizationAccountRqst)},
  { 758, -1, sizeof(::resource::RemoveOrganizationAccountRsp)},
  { 764, -1, sizeof(::resource::Notification)},
  { 775, -1, sizeof(::resource::CreateNotificationRqst)},
  { 781, -1, sizeof(::resource::CreateNotificationRsp)},
  { 786, -1, sizeof(::resource::GetNotificationsRqst)},
  { 792, -1, sizeof(::resource::GetNotificationsRsp)},
  { 798, -1, sizeof(::resource::DeleteNotificationRqst)},
  { 805, -1, sizeof(::resource::DeleteNotificationRsp)},
  { 810, -1, sizeof(::resource::ClearAllNotificationsRqst)},
  { 816, -1, sizeof(::resource::ClearAllNotificationsRsp)},
  { 821, -1, sizeof(::resource::ClearNotificationsByTypeRqst)},
  { 828, -1, sizeof(::resource::ClearNotificationsByTypeRsp)},
  { 833, -1, sizeof(::resource::GetPackageDescriptorRequest)},
  { 840, -1, sizeof(::resource::GetPackageDescriptorResponse)},
  { 846, -1, sizeof(::resource::GetPackagesDescriptorRequest)},
  { 853, -1, sizeof(::resource::GetPackagesDescriptorResponse)},
  { 859, -1, sizeof(::resource::SetPackageDescriptorRequest)},
  { 865, -1, sizeof(::resource::SetPackageDescriptorResponse)},
  { 871, -1, sizeof(::resource::FindPackagesDescriptorRequest)},
  { 877, -1, sizeof(::resource::FindPackagesDescriptorResponse)},
  { 883, -1, sizeof(::resource::Session)},
  { 892, -1, sizeof(::resource::UpdateSessionRequest)},
  { 898, -1, sizeof(::resource::UpdateSessionResponse)},
  { 903, -1, sizeof(::resource::RemoveSessionRequest)},
  { 909, -1, sizeof(::resource::RemoveSessionResponse)},
  { 914, -1, sizeof(::resource::GetSessionsRequest)},
  { 921, -1, sizeof(::resource::GetSessionsResponse)},
  { 927, -1, sizeof(::resource::GetSessionRequest)},
  { 933, -1, sizeof(::resource::GetSessionResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_PackageBundle_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_PackageDescriptor_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_Account_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_Role_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_RegisterAccountRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_RegisterAccountRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_AccountExistRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_AccountExistRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_GetAccountsRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_GetAccountsRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_GetAccountRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_GetAccountRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_SetAccountPasswordRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_SetAccountPasswordRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_SetEmailRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_SetEmailResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_DeleteAccountRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_DeleteAccountRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_AddAccountRoleRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_AddAccountRoleRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_RemoveAccountRoleRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_RemoveAccountRoleRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_Contact_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_SetAccountContactRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_SetAccountContactRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_CreateRoleRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_CreateRoleRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_GetRolesRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_GetRolesRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_DeleteRoleRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_DeleteRoleRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_Application_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_CreateApplicationRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_CreateApplicationRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_UpdateApplicationRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_UpdateApplicationRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_DeleteApplicationRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_DeleteApplicationRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_GetApplicationsRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_GetApplicationsRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_GetApplicationVersionRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_GetApplicationVersionRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_GetApplicationIconRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_GetApplicationIconRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_GetApplicationAliasRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_GetApplicationAliasRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_IsOrgnanizationMemberRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_IsOrgnanizationMemberRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_SetPackageBundleRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_SetPackageBundleResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_GetPackageBundleChecksumRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_GetPackageBundleChecksumResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_Group_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_CreateGroupRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_CreateGroupRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_UpdateGroupRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_UpdateGroupRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_GetGroupsRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_GetGroupsRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_DeleteGroupRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_DeleteGroupRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_AddGroupMemberAccountRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_AddGroupMemberAccountRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_RemoveGroupMemberAccountRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_RemoveGroupMemberAccountRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_Organization_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_CreateOrganizationRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_CreateOrganizationRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_GetOrganizationsRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_GetOrganizationsRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_DeleteOrganizationRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_DeleteOrganizationRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_Peer_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_RegisterPeerRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_RegisterPeerRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_GetPeersRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_GetPeersRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_DeletePeerRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_DeletePeerRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_AddRoleActionsRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_AddRoleActionsRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_RemoveRoleActionRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_RemoveRoleActionRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_RemoveRolesActionRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_RemoveRolesActionRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_AddApplicationActionsRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_AddApplicationActionsRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_RemoveApplicationActionRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_RemoveApplicationActionRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_RemoveApplicationsActionRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_RemoveApplicationsActionRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_AddPeerActionsRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_AddPeerActionsRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_RemovePeerActionRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_RemovePeerActionRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_RemovePeersActionRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_RemovePeersActionRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_AddOrganizationAccountRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_AddOrganizationAccountRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_AddOrganizationGroupRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_AddOrganizationGroupRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_AddOrganizationRoleRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_AddOrganizationRoleRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_AddOrganizationApplicationRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_AddOrganizationApplicationRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_RemoveOrganizationGroupRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_RemoveOrganizationGroupRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_RemoveOrganizationRoleRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_RemoveOrganizationRoleRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_RemoveOrganizationApplicationRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_RemoveOrganizationApplicationRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_RemoveOrganizationAccountRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_RemoveOrganizationAccountRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_Notification_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_CreateNotificationRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_CreateNotificationRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_GetNotificationsRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_GetNotificationsRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_DeleteNotificationRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_DeleteNotificationRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_ClearAllNotificationsRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_ClearAllNotificationsRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_ClearNotificationsByTypeRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_ClearNotificationsByTypeRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_GetPackageDescriptorRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_GetPackageDescriptorResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_GetPackagesDescriptorRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_GetPackagesDescriptorResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_SetPackageDescriptorRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_SetPackageDescriptorResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_FindPackagesDescriptorRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_FindPackagesDescriptorResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_Session_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_UpdateSessionRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_UpdateSessionResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_RemoveSessionRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_RemoveSessionResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_GetSessionsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_GetSessionsResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_GetSessionRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_GetSessionResponse_default_instance_),
};

const char descriptor_table_protodef_resource_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\016resource.proto\022\010resource\"\235\001\n\rPackageBu"
  "ndle\0226\n\021packageDescriptor\030\001 \001(\0132\033.resour"
  "ce.PackageDescriptor\022\020\n\010checksum\030\002 \001(\t\022\017"
  "\n\007plaform\030\003 \001(\t\022\014\n\004size\030\004 \001(\005\022\020\n\010modifie"
  "d\030\005 \001(\003\022\021\n\tBinairies\030\006 \001(\014\"\270\002\n\021PackageDe"
  "scriptor\022\n\n\002id\030\001 \001(\t\022\014\n\004name\030\002 \001(\t\022#\n\004ty"
  "pe\030\003 \001(\0162\025.resource.PackageType\022\023\n\013publi"
  "sherId\030\004 \001(\t\022\017\n\007version\030\006 \001(\t\022\023\n\013descrip"
  "tion\030\007 \001(\t\022\024\n\014repositories\030\010 \003(\t\022\023\n\013disc"
  "overies\030\t \003(\t\022\020\n\010keywords\030\n \003(\t\022\017\n\007actio"
  "ns\030\013 \003(\t\022\035\n\005roles\030\014 \003(\0132\016.resource.Role\022"
  "\037\n\006groups\030\r \003(\0132\017.resource.Group\022\014\n\004icon"
  "\030\016 \001(\t\022\r\n\005alias\030\017 \001(\t\"z\n\007Account\022\n\n\002id\030\001"
  " \001(\t\022\014\n\004name\030\002 \001(\t\022\r\n\005email\030\003 \001(\t\022\020\n\010pas"
  "sword\030\004 \001(\t\022\025\n\rorganizations\030\006 \003(\t\022\016\n\006gr"
  "oups\030\007 \003(\t\022\r\n\005roles\030\010 \003(\t\"Y\n\004Role\022\n\n\002id\030"
  "\001 \001(\t\022\014\n\004name\030\002 \001(\t\022\017\n\007actions\030\003 \003(\t\022\017\n\007"
  "members\030\004 \003(\t\022\025\n\rorganizations\030\005 \003(\t\"S\n\023"
  "RegisterAccountRqst\022\"\n\007account\030\001 \001(\0132\021.r"
  "esource.Account\022\030\n\020confirm_password\030\003 \001("
  "\t\"$\n\022RegisterAccountRsp\022\016\n\006result\030\001 \001(\t\""
  "\036\n\020AccountExistRqst\022\n\n\002id\030\001 \001(\t\"!\n\017Accou"
  "ntExistRsp\022\016\n\006result\030\001 \001(\010\"1\n\017GetAccount"
  "sRqst\022\r\n\005query\030\001 \001(\t\022\017\n\007options\030\002 \001(\t\"5\n"
  "\016GetAccountsRsp\022#\n\010accounts\030\001 \003(\0132\021.reso"
  "urce.Account\"#\n\016GetAccountRqst\022\021\n\taccoun"
  "tId\030\001 \001(\t\"3\n\rGetAccountRsp\022\"\n\007account\030\001 "
  "\001(\0132\021.resource.Account\"W\n\026SetAccountPass"
  "wordRqst\022\021\n\taccountId\030\001 \001(\t\022\024\n\014old_passw"
  "ord\030\002 \001(\t\022\024\n\014new_password\030\003 \001(\t\"\027\n\025SetAc"
  "countPasswordRsp\"H\n\017SetEmailRequest\022\021\n\ta"
  "ccountId\030\001 \001(\t\022\020\n\010oldEmail\030\002 \001(\t\022\020\n\010newE"
  "mail\030\003 \001(\t\"\022\n\020SetEmailResponse\"\037\n\021Delete"
  "AccountRqst\022\n\n\002id\030\001 \001(\t\"\"\n\020DeleteAccount"
  "Rsp\022\016\n\006result\030\001 \001(\t\"7\n\022AddAccountRoleRqs"
  "t\022\021\n\taccountId\030\001 \001(\t\022\016\n\006roleId\030\002 \001(\t\"#\n\021"
  "AddAccountRoleRsp\022\016\n\006result\030\001 \001(\010\":\n\025Rem"
  "oveAccountRoleRqst\022\021\n\taccountId\030\001 \001(\t\022\016\n"
  "\006roleId\030\002 \001(\t\"&\n\024RemoveAccountRoleRsp\022\016\n"
  "\006result\030\001 \001(\010\"=\n\007Contact\022\n\n\002id\030\001 \001(\t\022\026\n\016"
  "invitationTime\030\002 \001(\003\022\016\n\006status\030\003 \001(\t\"N\n\025"
  "SetAccountContactRqst\022\021\n\taccountId\030\001 \001(\t"
  "\022\"\n\007contact\030\002 \001(\0132\021.resource.Contact\"&\n\024"
  "SetAccountContactRsp\022\016\n\006result\030\001 \001(\010\".\n\016"
  "CreateRoleRqst\022\034\n\004role\030\001 \001(\0132\016.resource."
  "Role\"\037\n\rCreateRoleRsp\022\016\n\006result\030\001 \001(\010\".\n"
  "\014GetRolesRqst\022\r\n\005query\030\001 \001(\t\022\017\n\007options\030"
  "\002 \001(\t\",\n\013GetRolesRsp\022\035\n\005roles\030\001 \003(\0132\016.re"
  "source.Role\" \n\016DeleteRoleRqst\022\016\n\006roleId\030"
  "\001 \001(\t\"\037\n\rDeleteRoleRsp\022\016\n\006result\030\001 \001(\010\"\360"
  "\001\n\013Application\022\n\n\002id\030\001 \001(\t\022\014\n\004name\030\002 \001(\t"
  "\022\020\n\010password\030\003 \001(\t\022\014\n\004path\030\004 \001(\t\022\017\n\007vers"
  "ion\030\005 \001(\t\022\023\n\013description\030\006 \001(\t\022\017\n\007action"
  "s\030\007 \003(\t\022\020\n\010keywords\030\010 \003(\t\022\014\n\004icon\030\t \001(\t\022"
  "\r\n\005alias\030\n \001(\t\022\023\n\013publisherid\030\013 \001(\t\022\025\n\rc"
  "reation_date\030\014 \001(\003\022\025\n\rlast_deployed\030\r \001("
  "\003\"C\n\025CreateApplicationRqst\022*\n\013applicatio"
  "n\030\001 \001(\0132\025.resource.Application\"\026\n\024Create"
  "ApplicationRsp\">\n\025UpdateApplicationRqst\022"
  "\025\n\rapplicationId\030\001 \001(\t\022\016\n\006values\030\002 \001(\t\"&"
  "\n\024UpdateApplicationRsp\022\016\n\006result\030\001 \001(\010\"."
  "\n\025DeleteApplicationRqst\022\025\n\rapplicationId"
  "\030\001 \001(\t\"&\n\024DeleteApplicationRsp\022\016\n\006result"
  "\030\001 \001(\010\"5\n\023GetApplicationsRqst\022\r\n\005query\030\001"
  " \001(\t\022\017\n\007options\030\002 \001(\t\"A\n\022GetApplications"
  "Rsp\022+\n\014applications\030\001 \003(\0132\025.resource.App"
  "lication\"\'\n\031GetApplicationVersionRqst\022\n\n"
  "\002id\030\001 \001(\t\"+\n\030GetApplicationVersionRsp\022\017\n"
  "\007version\030\001 \001(\t\"$\n\026GetApplicationIconRqst"
  "\022\n\n\002id\030\001 \001(\t\"%\n\025GetApplicationIconRsp\022\014\n"
  "\004icon\030\001 \001(\t\"%\n\027GetApplicationAliasRqst\022\n"
  "\n\002id\030\001 \001(\t\"\'\n\026GetApplicationAliasRsp\022\r\n\005"
  "alias\030\001 \001(\t\"F\n\031IsOrgnanizationMemberRqst"
  "\022\026\n\016organizationId\030\001 \001(\t\022\021\n\taccountId\030\002 "
  "\001(\t\"*\n\030IsOrgnanizationMemberRsp\022\016\n\006resul"
  "t\030\001 \001(\010\"B\n\027SetPackageBundleRequest\022\'\n\006bu"
  "ndle\030\001 \001(\0132\027.resource.PackageBundle\"*\n\030S"
  "etPackageBundleResponse\022\016\n\006result\030\001 \001(\010\""
  "-\n\037GetPackageBundleChecksumRequest\022\n\n\002id"
  "\030\001 \001(\t\"4\n GetPackageBundleChecksumRespon"
  "se\022\020\n\010checksum\030\001 \001(\t\"I\n\005Group\022\n\n\002id\030\001 \001("
  "\t\022\014\n\004name\030\002 \001(\t\022\017\n\007members\030\003 \003(\t\022\025\n\rorga"
  "nizations\030\004 \003(\t\"1\n\017CreateGroupRqst\022\036\n\005gr"
  "oup\030\001 \001(\0132\017.resource.Group\" \n\016CreateGrou"
  "pRsp\022\016\n\006result\030\001 \001(\010\"2\n\017UpdateGroupRqst\022"
  "\017\n\007groupId\030\001 \001(\t\022\016\n\006values\030\002 \001(\t\" \n\016Upda"
  "teGroupRsp\022\016\n\006result\030\001 \001(\010\"/\n\rGetGroupsR"
  "qst\022\r\n\005query\030\001 \001(\t\022\017\n\007options\030\002 \001(\t\"/\n\014G"
  "etGroupsRsp\022\037\n\006groups\030\001 \003(\0132\017.resource.G"
  "roup\" \n\017DeleteGroupRqst\022\r\n\005group\030\001 \001(\t\" "
  "\n\016DeleteGroupRsp\022\016\n\006result\030\001 \001(\010\"\?\n\031AddG"
  "roupMemberAccountRqst\022\017\n\007groupId\030\001 \001(\t\022\021"
  "\n\taccountId\030\002 \001(\t\"*\n\030AddGroupMemberAccou"
  "ntRsp\022\016\n\006result\030\001 \001(\010\"B\n\034RemoveGroupMemb"
  "erAccountRqst\022\017\n\007groupId\030\001 \001(\t\022\021\n\taccoun"
  "tId\030\002 \001(\t\"-\n\033RemoveGroupMemberAccountRsp"
  "\022\016\n\006result\030\001 \001(\010\"o\n\014Organization\022\n\n\002id\030\001"
  " \001(\t\022\014\n\004name\030\002 \001(\t\022\020\n\010accounts\030\003 \003(\t\022\016\n\006"
  "groups\030\004 \003(\t\022\r\n\005roles\030\005 \003(\t\022\024\n\014applicati"
  "ons\030\006 \003(\t\"F\n\026CreateOrganizationRqst\022,\n\014o"
  "rganization\030\001 \001(\0132\026.resource.Organizatio"
  "n\"\'\n\025CreateOrganizationRsp\022\016\n\006result\030\001 \001"
  "(\010\"6\n\024GetOrganizationsRqst\022\r\n\005query\030\001 \001("
  "\t\022\017\n\007options\030\002 \001(\t\"D\n\023GetOrganizationsRs"
  "p\022-\n\rorganizations\030\001 \003(\0132\026.resource.Orga"
  "nization\".\n\026DeleteOrganizationRqst\022\024\n\014or"
  "ganization\030\001 \001(\t\"\'\n\025DeleteOrganizationRs"
  "p\022\016\n\006result\030\001 \001(\010\"E\n\004Peer\022\016\n\006domain\030\001 \001("
  "\t\022\017\n\007address\030\002 \001(\t\022\013\n\003mac\030\003 \001(\t\022\017\n\007actio"
  "ns\030\004 \003(\t\"T\n\020RegisterPeerRqst\022\034\n\004peer\030\001 \001"
  "(\0132\016.resource.Peer\022\022\n\npublic_key\030\002 \001(\t\022\016"
  "\n\006secret\030\003 \001(\t\"C\n\017RegisterPeerRsp\022\034\n\004pee"
  "r\030\001 \001(\0132\016.resource.Peer\022\022\n\npublic_key\030\002 "
  "\001(\t\".\n\014GetPeersRqst\022\r\n\005query\030\001 \001(\t\022\017\n\007op"
  "tions\030\002 \001(\t\",\n\013GetPeersRsp\022\035\n\005peers\030\001 \003("
  "\0132\016.resource.Peer\".\n\016DeletePeerRqst\022\034\n\004p"
  "eer\030\001 \001(\0132\016.resource.Peer\"\037\n\rDeletePeerR"
  "sp\022\016\n\006result\030\001 \001(\010\"5\n\022AddRoleActionsRqst"
  "\022\016\n\006roleId\030\001 \001(\t\022\017\n\007actions\030\002 \003(\t\"#\n\021Add"
  "RoleActionsRsp\022\016\n\006result\030\001 \001(\010\"6\n\024Remove"
  "RoleActionRqst\022\016\n\006roleId\030\001 \001(\t\022\016\n\006action"
  "\030\002 \001(\t\"%\n\023RemoveRoleActionRsp\022\016\n\006result\030"
  "\001 \001(\010\"\'\n\025RemoveRolesActionRqst\022\016\n\006action"
  "\030\002 \001(\t\"&\n\024RemoveRolesActionRsp\022\016\n\006result"
  "\030\001 \001(\010\"C\n\031AddApplicationActionsRqst\022\025\n\ra"
  "pplicationId\030\001 \001(\t\022\017\n\007actions\030\002 \003(\t\"*\n\030A"
  "ddApplicationActionsRsp\022\016\n\006result\030\001 \001(\010\""
  "D\n\033RemoveApplicationActionRqst\022\025\n\rapplic"
  "ationId\030\001 \001(\t\022\016\n\006action\030\002 \001(\t\",\n\032RemoveA"
  "pplicationActionRsp\022\016\n\006result\030\001 \001(\010\".\n\034R"
  "emoveApplicationsActionRqst\022\016\n\006action\030\002 "
  "\001(\t\"-\n\033RemoveApplicationsActionRsp\022\016\n\006re"
  "sult\030\001 \001(\010\"5\n\022AddPeerActionsRqst\022\016\n\006doma"
  "in\030\001 \001(\t\022\017\n\007actions\030\002 \003(\t\"#\n\021AddPeerActi"
  "onsRsp\022\016\n\006result\030\001 \001(\010\"6\n\024RemovePeerActi"
  "onRqst\022\016\n\006domain\030\001 \001(\t\022\016\n\006action\030\002 \001(\t\"%"
  "\n\023RemovePeerActionRsp\022\016\n\006result\030\001 \001(\010\"\'\n"
  "\025RemovePeersActionRqst\022\016\n\006action\030\002 \001(\t\"&"
  "\n\024RemovePeersActionRsp\022\016\n\006result\030\001 \001(\010\"G"
  "\n\032AddOrganizationAccountRqst\022\026\n\016organiza"
  "tionId\030\001 \001(\t\022\021\n\taccountId\030\002 \001(\t\"+\n\031AddOr"
  "ganizationAccountRsp\022\016\n\006result\030\001 \001(\010\"C\n\030"
  "AddOrganizationGroupRqst\022\026\n\016organization"
  "Id\030\001 \001(\t\022\017\n\007groupId\030\002 \001(\t\")\n\027AddOrganiza"
  "tionGroupRsp\022\016\n\006result\030\001 \001(\010\"A\n\027AddOrgan"
  "izationRoleRqst\022\026\n\016organizationId\030\001 \001(\t\022"
  "\016\n\006roleId\030\002 \001(\t\"(\n\026AddOrganizationRoleRs"
  "p\022\016\n\006result\030\001 \001(\010\"O\n\036AddOrganizationAppl"
  "icationRqst\022\026\n\016organizationId\030\001 \001(\t\022\025\n\ra"
  "pplicationId\030\002 \001(\t\"/\n\035AddOrganizationApp"
  "licationRsp\022\016\n\006result\030\001 \001(\010\"F\n\033RemoveOrg"
  "anizationGroupRqst\022\026\n\016organizationId\030\001 \001"
  "(\t\022\017\n\007groupId\030\002 \001(\t\",\n\032RemoveOrganizatio"
  "nGroupRsp\022\016\n\006result\030\001 \001(\010\"D\n\032RemoveOrgan"
  "izationRoleRqst\022\026\n\016organizationId\030\001 \001(\t\022"
  "\016\n\006roleId\030\002 \001(\t\"+\n\031RemoveOrganizationRol"
  "eRsp\022\016\n\006result\030\001 \001(\010\"R\n!RemoveOrganizati"
  "onApplicationRqst\022\026\n\016organizationId\030\001 \001("
  "\t\022\025\n\rapplicationId\030\002 \001(\t\"2\n RemoveOrgani"
  "zationApplicationRsp\022\016\n\006result\030\001 \001(\010\"J\n\035"
  "RemoveOrganizationAccountRqst\022\026\n\016organiz"
  "ationId\030\001 \001(\t\022\021\n\taccountId\030\002 \001(\t\".\n\034Remo"
  "veOrganizationAccountRsp\022\016\n\006result\030\001 \001(\010"
  "\"\223\001\n\014Notification\022\n\n\002id\030\001 \001(\t\022\014\n\004date\030\002 "
  "\001(\003\022\017\n\007message\030\003 \001(\t\022\021\n\trecipient\030\004 \001(\t\022"
  "\016\n\006sender\030\005 \001(\t\0225\n\021notification_type\030\006 \001"
  "(\0162\032.resource.NotificationType\"F\n\026Create"
  "NotificationRqst\022,\n\014notification\030\001 \001(\0132\026"
  ".resource.Notification\"\027\n\025CreateNotifica"
  "tionRsp\")\n\024GetNotificationsRqst\022\021\n\trecip"
  "ient\030\001 \001(\t\"D\n\023GetNotificationsRsp\022-\n\rnot"
  "ifications\030\001 \003(\0132\026.resource.Notification"
  "\"7\n\026DeleteNotificationRqst\022\n\n\002id\030\001 \001(\t\022\021"
  "\n\trecipient\030\002 \001(\t\"\027\n\025DeleteNotificationR"
  "sp\".\n\031ClearAllNotificationsRqst\022\021\n\trecip"
  "ient\030\001 \001(\t\"\032\n\030ClearAllNotificationsRsp\"h"
  "\n\034ClearNotificationsByTypeRqst\022\021\n\trecipi"
  "ent\030\001 \001(\t\0225\n\021notification_type\030\002 \001(\0162\032.r"
  "esource.NotificationType\"\035\n\033ClearNotific"
  "ationsByTypeRsp\"E\n\033GetPackageDescriptorR"
  "equest\022\021\n\tserviceId\030\001 \001(\t\022\023\n\013publisherId"
  "\030\002 \001(\t\"L\n\034GetPackageDescriptorResponse\022,"
  "\n\007results\030\001 \003(\0132\033.resource.PackageDescri"
  "ptor\">\n\034GetPackagesDescriptorRequest\022\r\n\005"
  "query\030\001 \001(\t\022\017\n\007options\030\002 \001(\t\"M\n\035GetPacka"
  "gesDescriptorResponse\022,\n\007results\030\001 \003(\0132\033"
  ".resource.PackageDescriptor\"U\n\033SetPackag"
  "eDescriptorRequest\0226\n\021packageDescriptor\030"
  "\001 \001(\0132\033.resource.PackageDescriptor\".\n\034Se"
  "tPackageDescriptorResponse\022\016\n\006result\030\001 \001"
  "(\010\"1\n\035FindPackagesDescriptorRequest\022\020\n\010k"
  "eywords\030\001 \003(\t\"N\n\036FindPackagesDescriptorR"
  "esponse\022,\n\007results\030\001 \003(\0132\033.resource.Pack"
  "ageDescriptor\"o\n\007Session\022\021\n\taccountId\030\001 "
  "\001(\t\022%\n\005state\030\002 \001(\0162\026.resource.SessionSta"
  "te\022\027\n\017last_state_time\030\003 \001(\003\022\021\n\texpire_at"
  "\030\004 \001(\003\":\n\024UpdateSessionRequest\022\"\n\007sessio"
  "n\030\001 \001(\0132\021.resource.Session\"\027\n\025UpdateSess"
  "ionResponse\")\n\024RemoveSessionRequest\022\021\n\ta"
  "ccountId\030\001 \001(\t\"\027\n\025RemoveSessionResponse\""
  "4\n\022GetSessionsRequest\022\r\n\005query\030\001 \001(\t\022\017\n\007"
  "options\030\002 \001(\t\":\n\023GetSessionsResponse\022#\n\010"
  "sessions\030\001 \003(\0132\021.resource.Session\"&\n\021Get"
  "SessionRequest\022\021\n\taccountId\030\001 \001(\t\"8\n\022Get"
  "SessionResponse\022\"\n\007session\030\001 \001(\0132\021.resou"
  "rce.Session*F\n\013PackageType\022\017\n\013UNKNOW_TYP"
  "E\020\000\022\020\n\014SERVICE_TYPE\020\001\022\024\n\020APPLICATION_TYP"
  "E\020\002*`\n\020NotificationType\022\025\n\021USER_NOTIFICA"
  "TION\020\000\022\034\n\030APPLICATION_NOTIFICATION\020\001\022\027\n\023"
  "SYSTEM_NOTIFICATION\020\002*1\n\014SessionState\022\n\n"
  "\006ONLINE\020\000\022\013\n\007OFFLINE\020\001\022\010\n\004AWAY\020\0022\327+\n\017Res"
  "ourceService\022W\n\022CreateOrganization\022 .res"
  "ource.CreateOrganizationRqst\032\037.resource."
  "CreateOrganizationRsp\022S\n\020GetOrganization"
  "s\022\036.resource.GetOrganizationsRqst\032\035.reso"
  "urce.GetOrganizationsRsp0\001\022W\n\022DeleteOrga"
  "nization\022 .resource.DeleteOrganizationRq"
  "st\032\037.resource.DeleteOrganizationRsp\022c\n\026A"
  "ddOrganizationAccount\022$.resource.AddOrga"
  "nizationAccountRqst\032#.resource.AddOrgani"
  "zationAccountRsp\022]\n\024AddOrganizationGroup"
  "\022\".resource.AddOrganizationGroupRqst\032!.r"
  "esource.AddOrganizationGroupRsp\022Z\n\023AddOr"
  "ganizationRole\022!.resource.AddOrganizatio"
  "nRoleRqst\032 .resource.AddOrganizationRole"
  "Rsp\022o\n\032AddOrganizationApplication\022(.reso"
  "urce.AddOrganizationApplicationRqst\032\'.re"
  "source.AddOrganizationApplicationRsp\022l\n\031"
  "RemoveOrganizationAccount\022\'.resource.Rem"
  "oveOrganizationAccountRqst\032&.resource.Re"
  "moveOrganizationAccountRsp\022f\n\027RemoveOrga"
  "nizationGroup\022%.resource.RemoveOrganizat"
  "ionGroupRqst\032$.resource.RemoveOrganizati"
  "onGroupRsp\022c\n\026RemoveOrganizationRole\022$.r"
  "esource.RemoveOrganizationRoleRqst\032#.res"
  "ource.RemoveOrganizationRoleRsp\022x\n\035Remov"
  "eOrganizationApplication\022+.resource.Remo"
  "veOrganizationApplicationRqst\032*.resource"
  ".RemoveOrganizationApplicationRsp\022B\n\013Cre"
  "ateGroup\022\031.resource.CreateGroupRqst\032\030.re"
  "source.CreateGroupRsp\022B\n\013UpdateGroup\022\031.r"
  "esource.UpdateGroupRqst\032\030.resource.Updat"
  "eGroupRsp\022>\n\tGetGroups\022\027.resource.GetGro"
  "upsRqst\032\026.resource.GetGroupsRsp0\001\022B\n\013Del"
  "eteGroup\022\031.resource.DeleteGroupRqst\032\030.re"
  "source.DeleteGroupRsp\022`\n\025AddGroupMemberA"
  "ccount\022#.resource.AddGroupMemberAccountR"
  "qst\032\".resource.AddGroupMemberAccountRsp\022"
  "i\n\030RemoveGroupMemberAccount\022&.resource.R"
  "emoveGroupMemberAccountRqst\032%.resource.R"
  "emoveGroupMemberAccountRsp\022N\n\017RegisterAc"
  "count\022\035.resource.RegisterAccountRqst\032\034.r"
  "esource.RegisterAccountRsp\022H\n\rDeleteAcco"
  "unt\022\033.resource.DeleteAccountRqst\032\032.resou"
  "rce.DeleteAccountRsp\022\?\n\nGetAccount\022\030.res"
  "ource.GetAccountRqst\032\027.resource.GetAccou"
  "ntRsp\022W\n\022SetAccountPassword\022 .resource.S"
  "etAccountPasswordRqst\032\037.resource.SetAcco"
  "untPasswordRsp\022D\n\013GetAccounts\022\031.resource"
  ".GetAccountsRqst\032\030.resource.GetAccountsR"
  "sp0\001\022K\n\016AddAccountRole\022\034.resource.AddAcc"
  "ountRoleRqst\032\033.resource.AddAccountRoleRs"
  "p\022T\n\021RemoveAccountRole\022\037.resource.Remove"
  "AccountRoleRqst\032\036.resource.RemoveAccount"
  "RoleRsp\022T\n\021SetAccountContact\022\037.resource."
  "SetAccountContactRqst\032\036.resource.SetAcco"
  "untContactRsp\022A\n\010SetEmail\022\031.resource.Set"
  "EmailRequest\032\032.resource.SetEmailResponse"
  "\022`\n\025IsOrgnanizationMember\022#.resource.IsO"
  "rgnanizationMemberRqst\032\".resource.IsOrgn"
  "anizationMemberRsp\022\?\n\nCreateRole\022\030.resou"
  "rce.CreateRoleRqst\032\027.resource.CreateRole"
  "Rsp\022;\n\010GetRoles\022\026.resource.GetRolesRqst\032"
  "\025.resource.GetRolesRsp0\001\022\?\n\nDeleteRole\022\030"
  ".resource.DeleteRoleRqst\032\027.resource.Dele"
  "teRoleRsp\022K\n\016AddRoleActions\022\034.resource.A"
  "ddRoleActionsRqst\032\033.resource.AddRoleActi"
  "onsRsp\022Q\n\020RemoveRoleAction\022\036.resource.Re"
  "moveRoleActionRqst\032\035.resource.RemoveRole"
  "ActionRsp\022T\n\021RemoveRolesAction\022\037.resourc"
  "e.RemoveRolesActionRqst\032\036.resource.Remov"
  "eRolesActionRsp\022T\n\021CreateApplication\022\037.r"
  "esource.CreateApplicationRqst\032\036.resource"
  ".CreateApplicationRsp\022T\n\021UpdateApplicati"
  "on\022\037.resource.UpdateApplicationRqst\032\036.re"
  "source.UpdateApplicationRsp\022P\n\017GetApplic"
  "ations\022\035.resource.GetApplicationsRqst\032\034."
  "resource.GetApplicationsRsp0\001\022T\n\021DeleteA"
  "pplication\022\037.resource.DeleteApplicationR"
  "qst\032\036.resource.DeleteApplicationRsp\022`\n\025A"
  "ddApplicationActions\022#.resource.AddAppli"
  "cationActionsRqst\032\".resource.AddApplicat"
  "ionActionsRsp\022f\n\027RemoveApplicationAction"
  "\022%.resource.RemoveApplicationActionRqst\032"
  "$.resource.RemoveApplicationActionRsp\022i\n"
  "\030RemoveApplicationsAction\022&.resource.Rem"
  "oveApplicationsActionRqst\032%.resource.Rem"
  "oveApplicationsActionRsp\022`\n\025GetApplicati"
  "onVersion\022#.resource.GetApplicationVersi"
  "onRqst\032\".resource.GetApplicationVersionR"
  "sp\022Z\n\023GetApplicationAlias\022!.resource.Get"
  "ApplicationAliasRqst\032 .resource.GetAppli"
  "cationAliasRsp\022W\n\022GetApplicationIcon\022 .r"
  "esource.GetApplicationIconRqst\032\037.resourc"
  "e.GetApplicationIconRsp\022E\n\014RegisterPeer\022"
  "\032.resource.RegisterPeerRqst\032\031.resource.R"
  "egisterPeerRsp\022;\n\010GetPeers\022\026.resource.Ge"
  "tPeersRqst\032\025.resource.GetPeersRsp0\001\022\?\n\nD"
  "eletePeer\022\030.resource.DeletePeerRqst\032\027.re"
  "source.DeletePeerRsp\022K\n\016AddPeerActions\022\034"
  ".resource.AddPeerActionsRqst\032\033.resource."
  "AddPeerActionsRsp\022Q\n\020RemovePeerAction\022\036."
  "resource.RemovePeerActionRqst\032\035.resource"
  ".RemovePeerActionRsp\022T\n\021RemovePeersActio"
  "n\022\037.resource.RemovePeersActionRqst\032\036.res"
  "ource.RemovePeersActionRsp\022W\n\022CreateNoti"
  "fication\022 .resource.CreateNotificationRq"
  "st\032\037.resource.CreateNotificationRsp\022S\n\020G"
  "etNotifications\022\036.resource.GetNotificati"
  "onsRqst\032\035.resource.GetNotificationsRsp0\001"
  "\022W\n\022DeleteNotification\022 .resource.Delete"
  "NotificationRqst\032\037.resource.DeleteNotifi"
  "cationRsp\022`\n\025ClearAllNotifications\022#.res"
  "ource.ClearAllNotificationsRqst\032\".resour"
  "ce.ClearAllNotificationsRsp\022i\n\030ClearNoti"
  "ficationsByType\022&.resource.ClearNotifica"
  "tionsByTypeRqst\032%.resource.ClearNotifica"
  "tionsByTypeRsp\022a\n\014FindPackages\022\'.resourc"
  "e.FindPackagesDescriptorRequest\032(.resour"
  "ce.FindPackagesDescriptorResponse\022e\n\024Get"
  "PackageDescriptor\022%.resource.GetPackageD"
  "escriptorRequest\032&.resource.GetPackageDe"
  "scriptorResponse\022j\n\025GetPackagesDescripto"
  "r\022&.resource.GetPackagesDescriptorReques"
  "t\032\'.resource.GetPackagesDescriptorRespon"
  "se0\001\022e\n\024SetPackageDescriptor\022%.resource."
  "SetPackageDescriptorRequest\032&.resource.S"
  "etPackageDescriptorResponse\022Y\n\020SetPackag"
  "eBundle\022!.resource.SetPackageBundleReque"
  "st\032\".resource.SetPackageBundleResponse\022q"
  "\n\030GetPackageBundleChecksum\022).resource.Ge"
  "tPackageBundleChecksumRequest\032*.resource"
  ".GetPackageBundleChecksumResponse\022P\n\rUpd"
  "ateSession\022\036.resource.UpdateSessionReque"
  "st\032\037.resource.UpdateSessionResponse\022J\n\013G"
  "etSessions\022\034.resource.GetSessionsRequest"
  "\032\035.resource.GetSessionsResponse\022P\n\rRemov"
  "eSession\022\036.resource.RemoveSessionRequest"
  "\032\037.resource.RemoveSessionResponse\022G\n\nGet"
  "Session\022\033.resource.GetSessionRequest\032\034.r"
  "esource.GetSessionResponseB\025Z\023resource/r"
  "esourcepbb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_resource_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_resource_2eproto_sccs[141] = {
  &scc_info_Account_resource_2eproto.base,
  &scc_info_AccountExistRqst_resource_2eproto.base,
  &scc_info_AccountExistRsp_resource_2eproto.base,
  &scc_info_AddAccountRoleRqst_resource_2eproto.base,
  &scc_info_AddAccountRoleRsp_resource_2eproto.base,
  &scc_info_AddApplicationActionsRqst_resource_2eproto.base,
  &scc_info_AddApplicationActionsRsp_resource_2eproto.base,
  &scc_info_AddGroupMemberAccountRqst_resource_2eproto.base,
  &scc_info_AddGroupMemberAccountRsp_resource_2eproto.base,
  &scc_info_AddOrganizationAccountRqst_resource_2eproto.base,
  &scc_info_AddOrganizationAccountRsp_resource_2eproto.base,
  &scc_info_AddOrganizationApplicationRqst_resource_2eproto.base,
  &scc_info_AddOrganizationApplicationRsp_resource_2eproto.base,
  &scc_info_AddOrganizationGroupRqst_resource_2eproto.base,
  &scc_info_AddOrganizationGroupRsp_resource_2eproto.base,
  &scc_info_AddOrganizationRoleRqst_resource_2eproto.base,
  &scc_info_AddOrganizationRoleRsp_resource_2eproto.base,
  &scc_info_AddPeerActionsRqst_resource_2eproto.base,
  &scc_info_AddPeerActionsRsp_resource_2eproto.base,
  &scc_info_AddRoleActionsRqst_resource_2eproto.base,
  &scc_info_AddRoleActionsRsp_resource_2eproto.base,
  &scc_info_Application_resource_2eproto.base,
  &scc_info_ClearAllNotificationsRqst_resource_2eproto.base,
  &scc_info_ClearAllNotificationsRsp_resource_2eproto.base,
  &scc_info_ClearNotificationsByTypeRqst_resource_2eproto.base,
  &scc_info_ClearNotificationsByTypeRsp_resource_2eproto.base,
  &scc_info_Contact_resource_2eproto.base,
  &scc_info_CreateApplicationRqst_resource_2eproto.base,
  &scc_info_CreateApplicationRsp_resource_2eproto.base,
  &scc_info_CreateGroupRqst_resource_2eproto.base,
  &scc_info_CreateGroupRsp_resource_2eproto.base,
  &scc_info_CreateNotificationRqst_resource_2eproto.base,
  &scc_info_CreateNotificationRsp_resource_2eproto.base,
  &scc_info_CreateOrganizationRqst_resource_2eproto.base,
  &scc_info_CreateOrganizationRsp_resource_2eproto.base,
  &scc_info_CreateRoleRqst_resource_2eproto.base,
  &scc_info_CreateRoleRsp_resource_2eproto.base,
  &scc_info_DeleteAccountRqst_resource_2eproto.base,
  &scc_info_DeleteAccountRsp_resource_2eproto.base,
  &scc_info_DeleteApplicationRqst_resource_2eproto.base,
  &scc_info_DeleteApplicationRsp_resource_2eproto.base,
  &scc_info_DeleteGroupRqst_resource_2eproto.base,
  &scc_info_DeleteGroupRsp_resource_2eproto.base,
  &scc_info_DeleteNotificationRqst_resource_2eproto.base,
  &scc_info_DeleteNotificationRsp_resource_2eproto.base,
  &scc_info_DeleteOrganizationRqst_resource_2eproto.base,
  &scc_info_DeleteOrganizationRsp_resource_2eproto.base,
  &scc_info_DeletePeerRqst_resource_2eproto.base,
  &scc_info_DeletePeerRsp_resource_2eproto.base,
  &scc_info_DeleteRoleRqst_resource_2eproto.base,
  &scc_info_DeleteRoleRsp_resource_2eproto.base,
  &scc_info_FindPackagesDescriptorRequest_resource_2eproto.base,
  &scc_info_FindPackagesDescriptorResponse_resource_2eproto.base,
  &scc_info_GetAccountRqst_resource_2eproto.base,
  &scc_info_GetAccountRsp_resource_2eproto.base,
  &scc_info_GetAccountsRqst_resource_2eproto.base,
  &scc_info_GetAccountsRsp_resource_2eproto.base,
  &scc_info_GetApplicationAliasRqst_resource_2eproto.base,
  &scc_info_GetApplicationAliasRsp_resource_2eproto.base,
  &scc_info_GetApplicationIconRqst_resource_2eproto.base,
  &scc_info_GetApplicationIconRsp_resource_2eproto.base,
  &scc_info_GetApplicationVersionRqst_resource_2eproto.base,
  &scc_info_GetApplicationVersionRsp_resource_2eproto.base,
  &scc_info_GetApplicationsRqst_resource_2eproto.base,
  &scc_info_GetApplicationsRsp_resource_2eproto.base,
  &scc_info_GetGroupsRqst_resource_2eproto.base,
  &scc_info_GetGroupsRsp_resource_2eproto.base,
  &scc_info_GetNotificationsRqst_resource_2eproto.base,
  &scc_info_GetNotificationsRsp_resource_2eproto.base,
  &scc_info_GetOrganizationsRqst_resource_2eproto.base,
  &scc_info_GetOrganizationsRsp_resource_2eproto.base,
  &scc_info_GetPackageBundleChecksumRequest_resource_2eproto.base,
  &scc_info_GetPackageBundleChecksumResponse_resource_2eproto.base,
  &scc_info_GetPackageDescriptorRequest_resource_2eproto.base,
  &scc_info_GetPackageDescriptorResponse_resource_2eproto.base,
  &scc_info_GetPackagesDescriptorRequest_resource_2eproto.base,
  &scc_info_GetPackagesDescriptorResponse_resource_2eproto.base,
  &scc_info_GetPeersRqst_resource_2eproto.base,
  &scc_info_GetPeersRsp_resource_2eproto.base,
  &scc_info_GetRolesRqst_resource_2eproto.base,
  &scc_info_GetRolesRsp_resource_2eproto.base,
  &scc_info_GetSessionRequest_resource_2eproto.base,
  &scc_info_GetSessionResponse_resource_2eproto.base,
  &scc_info_GetSessionsRequest_resource_2eproto.base,
  &scc_info_GetSessionsResponse_resource_2eproto.base,
  &scc_info_Group_resource_2eproto.base,
  &scc_info_IsOrgnanizationMemberRqst_resource_2eproto.base,
  &scc_info_IsOrgnanizationMemberRsp_resource_2eproto.base,
  &scc_info_Notification_resource_2eproto.base,
  &scc_info_Organization_resource_2eproto.base,
  &scc_info_PackageBundle_resource_2eproto.base,
  &scc_info_PackageDescriptor_resource_2eproto.base,
  &scc_info_Peer_resource_2eproto.base,
  &scc_info_RegisterAccountRqst_resource_2eproto.base,
  &scc_info_RegisterAccountRsp_resource_2eproto.base,
  &scc_info_RegisterPeerRqst_resource_2eproto.base,
  &scc_info_RegisterPeerRsp_resource_2eproto.base,
  &scc_info_RemoveAccountRoleRqst_resource_2eproto.base,
  &scc_info_RemoveAccountRoleRsp_resource_2eproto.base,
  &scc_info_RemoveApplicationActionRqst_resource_2eproto.base,
  &scc_info_RemoveApplicationActionRsp_resource_2eproto.base,
  &scc_info_RemoveApplicationsActionRqst_resource_2eproto.base,
  &scc_info_RemoveApplicationsActionRsp_resource_2eproto.base,
  &scc_info_RemoveGroupMemberAccountRqst_resource_2eproto.base,
  &scc_info_RemoveGroupMemberAccountRsp_resource_2eproto.base,
  &scc_info_RemoveOrganizationAccountRqst_resource_2eproto.base,
  &scc_info_RemoveOrganizationAccountRsp_resource_2eproto.base,
  &scc_info_RemoveOrganizationApplicationRqst_resource_2eproto.base,
  &scc_info_RemoveOrganizationApplicationRsp_resource_2eproto.base,
  &scc_info_RemoveOrganizationGroupRqst_resource_2eproto.base,
  &scc_info_RemoveOrganizationGroupRsp_resource_2eproto.base,
  &scc_info_RemoveOrganizationRoleRqst_resource_2eproto.base,
  &scc_info_RemoveOrganizationRoleRsp_resource_2eproto.base,
  &scc_info_RemovePeerActionRqst_resource_2eproto.base,
  &scc_info_RemovePeerActionRsp_resource_2eproto.base,
  &scc_info_RemovePeersActionRqst_resource_2eproto.base,
  &scc_info_RemovePeersActionRsp_resource_2eproto.base,
  &scc_info_RemoveRoleActionRqst_resource_2eproto.base,
  &scc_info_RemoveRoleActionRsp_resource_2eproto.base,
  &scc_info_RemoveRolesActionRqst_resource_2eproto.base,
  &scc_info_RemoveRolesActionRsp_resource_2eproto.base,
  &scc_info_RemoveSessionRequest_resource_2eproto.base,
  &scc_info_RemoveSessionResponse_resource_2eproto.base,
  &scc_info_Role_resource_2eproto.base,
  &scc_info_Session_resource_2eproto.base,
  &scc_info_SetAccountContactRqst_resource_2eproto.base,
  &scc_info_SetAccountContactRsp_resource_2eproto.base,
  &scc_info_SetAccountPasswordRqst_resource_2eproto.base,
  &scc_info_SetAccountPasswordRsp_resource_2eproto.base,
  &scc_info_SetEmailRequest_resource_2eproto.base,
  &scc_info_SetEmailResponse_resource_2eproto.base,
  &scc_info_SetPackageBundleRequest_resource_2eproto.base,
  &scc_info_SetPackageBundleResponse_resource_2eproto.base,
  &scc_info_SetPackageDescriptorRequest_resource_2eproto.base,
  &scc_info_SetPackageDescriptorResponse_resource_2eproto.base,
  &scc_info_UpdateApplicationRqst_resource_2eproto.base,
  &scc_info_UpdateApplicationRsp_resource_2eproto.base,
  &scc_info_UpdateGroupRqst_resource_2eproto.base,
  &scc_info_UpdateGroupRsp_resource_2eproto.base,
  &scc_info_UpdateSessionRequest_resource_2eproto.base,
  &scc_info_UpdateSessionResponse_resource_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_resource_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_resource_2eproto = {
  false, false, descriptor_table_protodef_resource_2eproto, "resource.proto", 14057,
  &descriptor_table_resource_2eproto_once, descriptor_table_resource_2eproto_sccs, descriptor_table_resource_2eproto_deps, 141, 0,
  schemas, file_default_instances, TableStruct_resource_2eproto::offsets,
  file_level_metadata_resource_2eproto, 141, file_level_enum_descriptors_resource_2eproto, file_level_service_descriptors_resource_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_resource_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_resource_2eproto)), true);
namespace resource {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* PackageType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_resource_2eproto);
  return file_level_enum_descriptors_resource_2eproto[0];
}
bool PackageType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* NotificationType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_resource_2eproto);
  return file_level_enum_descriptors_resource_2eproto[1];
}
bool NotificationType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* SessionState_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_resource_2eproto);
  return file_level_enum_descriptors_resource_2eproto[2];
}
bool SessionState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void PackageBundle::InitAsDefaultInstance() {
  ::resource::_PackageBundle_default_instance_._instance.get_mutable()->packagedescriptor_ = const_cast< ::resource::PackageDescriptor*>(
      ::resource::PackageDescriptor::internal_default_instance());
}
class PackageBundle::_Internal {
 public:
  static const ::resource::PackageDescriptor& packagedescriptor(const PackageBundle* msg);
};

const ::resource::PackageDescriptor&
PackageBundle::_Internal::packagedescriptor(const PackageBundle* msg) {
  return *msg->packagedescriptor_;
}
PackageBundle::PackageBundle(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.PackageBundle)
}
PackageBundle::PackageBundle(const PackageBundle& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  checksum_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_checksum().empty()) {
    checksum_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_checksum(),
      GetArena());
  }
  plaform_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_plaform().empty()) {
    plaform_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_plaform(),
      GetArena());
  }
  binairies_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_binairies().empty()) {
    binairies_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_binairies(),
      GetArena());
  }
  if (from._internal_has_packagedescriptor()) {
    packagedescriptor_ = new ::resource::PackageDescriptor(*from.packagedescriptor_);
  } else {
    packagedescriptor_ = nullptr;
  }
  ::memcpy(&modified_, &from.modified_,
    static_cast<size_t>(reinterpret_cast<char*>(&size_) -
    reinterpret_cast<char*>(&modified_)) + sizeof(size_));
  // @@protoc_insertion_point(copy_constructor:resource.PackageBundle)
}

void PackageBundle::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PackageBundle_resource_2eproto.base);
  checksum_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  plaform_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  binairies_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&packagedescriptor_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&size_) -
      reinterpret_cast<char*>(&packagedescriptor_)) + sizeof(size_));
}

PackageBundle::~PackageBundle() {
  // @@protoc_insertion_point(destructor:resource.PackageBundle)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PackageBundle::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  checksum_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  plaform_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  binairies_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete packagedescriptor_;
}

void PackageBundle::ArenaDtor(void* object) {
  PackageBundle* _this = reinterpret_cast< PackageBundle* >(object);
  (void)_this;
}
void PackageBundle::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PackageBundle::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PackageBundle& PackageBundle::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PackageBundle_resource_2eproto.base);
  return *internal_default_instance();
}


void PackageBundle::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.PackageBundle)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  checksum_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  plaform_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  binairies_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && packagedescriptor_ != nullptr) {
    delete packagedescriptor_;
  }
  packagedescriptor_ = nullptr;
  ::memset(&modified_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&size_) -
      reinterpret_cast<char*>(&modified_)) + sizeof(size_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PackageBundle::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .resource.PackageDescriptor packageDescriptor = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_packagedescriptor(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string checksum = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_checksum();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.PackageBundle.checksum"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string plaform = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_plaform();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.PackageBundle.plaform"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 size = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 modified = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          modified_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes Binairies = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_binairies();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PackageBundle::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.PackageBundle)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .resource.PackageDescriptor packageDescriptor = 1;
  if (this->has_packagedescriptor()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::packagedescriptor(this), target, stream);
  }

  // string checksum = 2;
  if (this->checksum().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_checksum().data(), static_cast<int>(this->_internal_checksum().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.PackageBundle.checksum");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_checksum(), target);
  }

  // string plaform = 3;
  if (this->plaform().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_plaform().data(), static_cast<int>(this->_internal_plaform().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.PackageBundle.plaform");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_plaform(), target);
  }

  // int32 size = 4;
  if (this->size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_size(), target);
  }

  // int64 modified = 5;
  if (this->modified() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(5, this->_internal_modified(), target);
  }

  // bytes Binairies = 6;
  if (this->binairies().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        6, this->_internal_binairies(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.PackageBundle)
  return target;
}

size_t PackageBundle::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.PackageBundle)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string checksum = 2;
  if (this->checksum().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_checksum());
  }

  // string plaform = 3;
  if (this->plaform().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_plaform());
  }

  // bytes Binairies = 6;
  if (this->binairies().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_binairies());
  }

  // .resource.PackageDescriptor packageDescriptor = 1;
  if (this->has_packagedescriptor()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *packagedescriptor_);
  }

  // int64 modified = 5;
  if (this->modified() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_modified());
  }

  // int32 size = 4;
  if (this->size() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_size());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PackageBundle::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.PackageBundle)
  GOOGLE_DCHECK_NE(&from, this);
  const PackageBundle* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PackageBundle>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.PackageBundle)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.PackageBundle)
    MergeFrom(*source);
  }
}

void PackageBundle::MergeFrom(const PackageBundle& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.PackageBundle)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.checksum().size() > 0) {
    _internal_set_checksum(from._internal_checksum());
  }
  if (from.plaform().size() > 0) {
    _internal_set_plaform(from._internal_plaform());
  }
  if (from.binairies().size() > 0) {
    _internal_set_binairies(from._internal_binairies());
  }
  if (from.has_packagedescriptor()) {
    _internal_mutable_packagedescriptor()->::resource::PackageDescriptor::MergeFrom(from._internal_packagedescriptor());
  }
  if (from.modified() != 0) {
    _internal_set_modified(from._internal_modified());
  }
  if (from.size() != 0) {
    _internal_set_size(from._internal_size());
  }
}

void PackageBundle::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.PackageBundle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PackageBundle::CopyFrom(const PackageBundle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.PackageBundle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PackageBundle::IsInitialized() const {
  return true;
}

void PackageBundle::InternalSwap(PackageBundle* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  checksum_.Swap(&other->checksum_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  plaform_.Swap(&other->plaform_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  binairies_.Swap(&other->binairies_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PackageBundle, size_)
      + sizeof(PackageBundle::size_)
      - PROTOBUF_FIELD_OFFSET(PackageBundle, packagedescriptor_)>(
          reinterpret_cast<char*>(&packagedescriptor_),
          reinterpret_cast<char*>(&other->packagedescriptor_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PackageBundle::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PackageDescriptor::InitAsDefaultInstance() {
}
class PackageDescriptor::_Internal {
 public:
};

PackageDescriptor::PackageDescriptor(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  repositories_(arena),
  discoveries_(arena),
  keywords_(arena),
  actions_(arena),
  roles_(arena),
  groups_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.PackageDescriptor)
}
PackageDescriptor::PackageDescriptor(const PackageDescriptor& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      repositories_(from.repositories_),
      discoveries_(from.discoveries_),
      keywords_(from.keywords_),
      actions_(from.actions_),
      roles_(from.roles_),
      groups_(from.groups_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  publisherid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_publisherid().empty()) {
    publisherid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_publisherid(),
      GetArena());
  }
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_version().empty()) {
    version_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_version(),
      GetArena());
  }
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_description().empty()) {
    description_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_description(),
      GetArena());
  }
  icon_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_icon().empty()) {
    icon_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_icon(),
      GetArena());
  }
  alias_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_alias().empty()) {
    alias_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_alias(),
      GetArena());
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:resource.PackageDescriptor)
}

void PackageDescriptor::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PackageDescriptor_resource_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  publisherid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  icon_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  alias_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
}

PackageDescriptor::~PackageDescriptor() {
  // @@protoc_insertion_point(destructor:resource.PackageDescriptor)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PackageDescriptor::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  publisherid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  icon_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  alias_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PackageDescriptor::ArenaDtor(void* object) {
  PackageDescriptor* _this = reinterpret_cast< PackageDescriptor* >(object);
  (void)_this;
}
void PackageDescriptor::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PackageDescriptor::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PackageDescriptor& PackageDescriptor::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PackageDescriptor_resource_2eproto.base);
  return *internal_default_instance();
}


void PackageDescriptor::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.PackageDescriptor)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  repositories_.Clear();
  discoveries_.Clear();
  keywords_.Clear();
  actions_.Clear();
  roles_.Clear();
  groups_.Clear();
  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  publisherid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  version_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  description_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  icon_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  alias_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  type_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PackageDescriptor::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.PackageDescriptor.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.PackageDescriptor.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .resource.PackageType type = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::resource::PackageType>(val));
        } else goto handle_unusual;
        continue;
      // string publisherId = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_publisherid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.PackageDescriptor.publisherId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string version = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_version();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.PackageDescriptor.version"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string description = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_description();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.PackageDescriptor.description"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string repositories = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_repositories();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.PackageDescriptor.repositories"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<66>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated string discoveries = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_discoveries();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.PackageDescriptor.discoveries"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<74>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated string keywords = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_keywords();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.PackageDescriptor.keywords"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<82>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated string actions = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_actions();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.PackageDescriptor.actions"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<90>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .resource.Role roles = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_roles(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<98>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .resource.Group groups = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_groups(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<106>(ptr));
        } else goto handle_unusual;
        continue;
      // string icon = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 114)) {
          auto str = _internal_mutable_icon();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.PackageDescriptor.icon"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string alias = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 122)) {
          auto str = _internal_mutable_alias();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.PackageDescriptor.alias"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PackageDescriptor::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.PackageDescriptor)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.PackageDescriptor.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.PackageDescriptor.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // .resource.PackageType type = 3;
  if (this->type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3, this->_internal_type(), target);
  }

  // string publisherId = 4;
  if (this->publisherid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_publisherid().data(), static_cast<int>(this->_internal_publisherid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.PackageDescriptor.publisherId");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_publisherid(), target);
  }

  // string version = 6;
  if (this->version().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_version().data(), static_cast<int>(this->_internal_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.PackageDescriptor.version");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_version(), target);
  }

  // string description = 7;
  if (this->description().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.PackageDescriptor.description");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_description(), target);
  }

  // repeated string repositories = 8;
  for (int i = 0, n = this->_internal_repositories_size(); i < n; i++) {
    const auto& s = this->_internal_repositories(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.PackageDescriptor.repositories");
    target = stream->WriteString(8, s, target);
  }

  // repeated string discoveries = 9;
  for (int i = 0, n = this->_internal_discoveries_size(); i < n; i++) {
    const auto& s = this->_internal_discoveries(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.PackageDescriptor.discoveries");
    target = stream->WriteString(9, s, target);
  }

  // repeated string keywords = 10;
  for (int i = 0, n = this->_internal_keywords_size(); i < n; i++) {
    const auto& s = this->_internal_keywords(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.PackageDescriptor.keywords");
    target = stream->WriteString(10, s, target);
  }

  // repeated string actions = 11;
  for (int i = 0, n = this->_internal_actions_size(); i < n; i++) {
    const auto& s = this->_internal_actions(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.PackageDescriptor.actions");
    target = stream->WriteString(11, s, target);
  }

  // repeated .resource.Role roles = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_roles_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(12, this->_internal_roles(i), target, stream);
  }

  // repeated .resource.Group groups = 13;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_groups_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(13, this->_internal_groups(i), target, stream);
  }

  // string icon = 14;
  if (this->icon().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_icon().data(), static_cast<int>(this->_internal_icon().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.PackageDescriptor.icon");
    target = stream->WriteStringMaybeAliased(
        14, this->_internal_icon(), target);
  }

  // string alias = 15;
  if (this->alias().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_alias().data(), static_cast<int>(this->_internal_alias().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.PackageDescriptor.alias");
    target = stream->WriteStringMaybeAliased(
        15, this->_internal_alias(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.PackageDescriptor)
  return target;
}

size_t PackageDescriptor::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.PackageDescriptor)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string repositories = 8;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(repositories_.size());
  for (int i = 0, n = repositories_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      repositories_.Get(i));
  }

  // repeated string discoveries = 9;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(discoveries_.size());
  for (int i = 0, n = discoveries_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      discoveries_.Get(i));
  }

  // repeated string keywords = 10;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(keywords_.size());
  for (int i = 0, n = keywords_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      keywords_.Get(i));
  }

  // repeated string actions = 11;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(actions_.size());
  for (int i = 0, n = actions_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      actions_.Get(i));
  }

  // repeated .resource.Role roles = 12;
  total_size += 1UL * this->_internal_roles_size();
  for (const auto& msg : this->roles_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .resource.Group groups = 13;
  total_size += 1UL * this->_internal_groups_size();
  for (const auto& msg : this->groups_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string publisherId = 4;
  if (this->publisherid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_publisherid());
  }

  // string version = 6;
  if (this->version().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_version());
  }

  // string description = 7;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  // string icon = 14;
  if (this->icon().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_icon());
  }

  // string alias = 15;
  if (this->alias().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_alias());
  }

  // .resource.PackageType type = 3;
  if (this->type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_type());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PackageDescriptor::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.PackageDescriptor)
  GOOGLE_DCHECK_NE(&from, this);
  const PackageDescriptor* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PackageDescriptor>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.PackageDescriptor)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.PackageDescriptor)
    MergeFrom(*source);
  }
}

void PackageDescriptor::MergeFrom(const PackageDescriptor& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.PackageDescriptor)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  repositories_.MergeFrom(from.repositories_);
  discoveries_.MergeFrom(from.discoveries_);
  keywords_.MergeFrom(from.keywords_);
  actions_.MergeFrom(from.actions_);
  roles_.MergeFrom(from.roles_);
  groups_.MergeFrom(from.groups_);
  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.publisherid().size() > 0) {
    _internal_set_publisherid(from._internal_publisherid());
  }
  if (from.version().size() > 0) {
    _internal_set_version(from._internal_version());
  }
  if (from.description().size() > 0) {
    _internal_set_description(from._internal_description());
  }
  if (from.icon().size() > 0) {
    _internal_set_icon(from._internal_icon());
  }
  if (from.alias().size() > 0) {
    _internal_set_alias(from._internal_alias());
  }
  if (from.type() != 0) {
    _internal_set_type(from._internal_type());
  }
}

void PackageDescriptor::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.PackageDescriptor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PackageDescriptor::CopyFrom(const PackageDescriptor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.PackageDescriptor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PackageDescriptor::IsInitialized() const {
  return true;
}

void PackageDescriptor::InternalSwap(PackageDescriptor* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  repositories_.InternalSwap(&other->repositories_);
  discoveries_.InternalSwap(&other->discoveries_);
  keywords_.InternalSwap(&other->keywords_);
  actions_.InternalSwap(&other->actions_);
  roles_.InternalSwap(&other->roles_);
  groups_.InternalSwap(&other->groups_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  publisherid_.Swap(&other->publisherid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  version_.Swap(&other->version_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  description_.Swap(&other->description_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  icon_.Swap(&other->icon_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  alias_.Swap(&other->alias_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(type_, other->type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PackageDescriptor::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Account::InitAsDefaultInstance() {
}
class Account::_Internal {
 public:
};

Account::Account(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  organizations_(arena),
  groups_(arena),
  roles_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.Account)
}
Account::Account(const Account& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      organizations_(from.organizations_),
      groups_(from.groups_),
      roles_(from.roles_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  email_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_email().empty()) {
    email_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_email(),
      GetArena());
  }
  password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_password().empty()) {
    password_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_password(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.Account)
}

void Account::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Account_resource_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  email_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Account::~Account() {
  // @@protoc_insertion_point(destructor:resource.Account)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Account::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  email_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Account::ArenaDtor(void* object) {
  Account* _this = reinterpret_cast< Account* >(object);
  (void)_this;
}
void Account::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Account::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Account& Account::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Account_resource_2eproto.base);
  return *internal_default_instance();
}


void Account::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.Account)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  organizations_.Clear();
  groups_.Clear();
  roles_.Clear();
  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  email_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  password_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Account::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Account.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Account.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string email = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_email();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Account.email"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string password = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_password();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Account.password"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string organizations = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_organizations();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Account.organizations"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated string groups = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_groups();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Account.groups"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<58>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated string roles = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_roles();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Account.roles"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<66>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Account::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.Account)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Account.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Account.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // string email = 3;
  if (this->email().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_email().data(), static_cast<int>(this->_internal_email().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Account.email");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_email(), target);
  }

  // string password = 4;
  if (this->password().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_password().data(), static_cast<int>(this->_internal_password().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Account.password");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_password(), target);
  }

  // repeated string organizations = 6;
  for (int i = 0, n = this->_internal_organizations_size(); i < n; i++) {
    const auto& s = this->_internal_organizations(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Account.organizations");
    target = stream->WriteString(6, s, target);
  }

  // repeated string groups = 7;
  for (int i = 0, n = this->_internal_groups_size(); i < n; i++) {
    const auto& s = this->_internal_groups(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Account.groups");
    target = stream->WriteString(7, s, target);
  }

  // repeated string roles = 8;
  for (int i = 0, n = this->_internal_roles_size(); i < n; i++) {
    const auto& s = this->_internal_roles(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Account.roles");
    target = stream->WriteString(8, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.Account)
  return target;
}

size_t Account::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.Account)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string organizations = 6;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(organizations_.size());
  for (int i = 0, n = organizations_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      organizations_.Get(i));
  }

  // repeated string groups = 7;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(groups_.size());
  for (int i = 0, n = groups_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      groups_.Get(i));
  }

  // repeated string roles = 8;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(roles_.size());
  for (int i = 0, n = roles_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      roles_.Get(i));
  }

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string email = 3;
  if (this->email().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_email());
  }

  // string password = 4;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_password());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Account::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.Account)
  GOOGLE_DCHECK_NE(&from, this);
  const Account* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Account>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.Account)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.Account)
    MergeFrom(*source);
  }
}

void Account::MergeFrom(const Account& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.Account)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  organizations_.MergeFrom(from.organizations_);
  groups_.MergeFrom(from.groups_);
  roles_.MergeFrom(from.roles_);
  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.email().size() > 0) {
    _internal_set_email(from._internal_email());
  }
  if (from.password().size() > 0) {
    _internal_set_password(from._internal_password());
  }
}

void Account::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.Account)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Account::CopyFrom(const Account& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.Account)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Account::IsInitialized() const {
  return true;
}

void Account::InternalSwap(Account* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  organizations_.InternalSwap(&other->organizations_);
  groups_.InternalSwap(&other->groups_);
  roles_.InternalSwap(&other->roles_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  email_.Swap(&other->email_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  password_.Swap(&other->password_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata Account::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Role::InitAsDefaultInstance() {
}
class Role::_Internal {
 public:
};

Role::Role(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  actions_(arena),
  members_(arena),
  organizations_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.Role)
}
Role::Role(const Role& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      actions_(from.actions_),
      members_(from.members_),
      organizations_(from.organizations_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.Role)
}

void Role::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Role_resource_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Role::~Role() {
  // @@protoc_insertion_point(destructor:resource.Role)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Role::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Role::ArenaDtor(void* object) {
  Role* _this = reinterpret_cast< Role* >(object);
  (void)_this;
}
void Role::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Role::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Role& Role::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Role_resource_2eproto.base);
  return *internal_default_instance();
}


void Role::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.Role)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  actions_.Clear();
  members_.Clear();
  organizations_.Clear();
  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Role::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Role.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Role.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string actions = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_actions();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Role.actions"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated string members = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_members();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Role.members"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated string organizations = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_organizations();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Role.organizations"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Role::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.Role)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Role.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Role.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // repeated string actions = 3;
  for (int i = 0, n = this->_internal_actions_size(); i < n; i++) {
    const auto& s = this->_internal_actions(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Role.actions");
    target = stream->WriteString(3, s, target);
  }

  // repeated string members = 4;
  for (int i = 0, n = this->_internal_members_size(); i < n; i++) {
    const auto& s = this->_internal_members(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Role.members");
    target = stream->WriteString(4, s, target);
  }

  // repeated string organizations = 5;
  for (int i = 0, n = this->_internal_organizations_size(); i < n; i++) {
    const auto& s = this->_internal_organizations(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Role.organizations");
    target = stream->WriteString(5, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.Role)
  return target;
}

size_t Role::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.Role)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string actions = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(actions_.size());
  for (int i = 0, n = actions_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      actions_.Get(i));
  }

  // repeated string members = 4;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(members_.size());
  for (int i = 0, n = members_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      members_.Get(i));
  }

  // repeated string organizations = 5;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(organizations_.size());
  for (int i = 0, n = organizations_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      organizations_.Get(i));
  }

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Role::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.Role)
  GOOGLE_DCHECK_NE(&from, this);
  const Role* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Role>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.Role)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.Role)
    MergeFrom(*source);
  }
}

void Role::MergeFrom(const Role& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.Role)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  actions_.MergeFrom(from.actions_);
  members_.MergeFrom(from.members_);
  organizations_.MergeFrom(from.organizations_);
  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
}

void Role::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.Role)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Role::CopyFrom(const Role& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.Role)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Role::IsInitialized() const {
  return true;
}

void Role::InternalSwap(Role* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  actions_.InternalSwap(&other->actions_);
  members_.InternalSwap(&other->members_);
  organizations_.InternalSwap(&other->organizations_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata Role::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RegisterAccountRqst::InitAsDefaultInstance() {
  ::resource::_RegisterAccountRqst_default_instance_._instance.get_mutable()->account_ = const_cast< ::resource::Account*>(
      ::resource::Account::internal_default_instance());
}
class RegisterAccountRqst::_Internal {
 public:
  static const ::resource::Account& account(const RegisterAccountRqst* msg);
};

const ::resource::Account&
RegisterAccountRqst::_Internal::account(const RegisterAccountRqst* msg) {
  return *msg->account_;
}
RegisterAccountRqst::RegisterAccountRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.RegisterAccountRqst)
}
RegisterAccountRqst::RegisterAccountRqst(const RegisterAccountRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  confirm_password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_confirm_password().empty()) {
    confirm_password_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_confirm_password(),
      GetArena());
  }
  if (from._internal_has_account()) {
    account_ = new ::resource::Account(*from.account_);
  } else {
    account_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:resource.RegisterAccountRqst)
}

void RegisterAccountRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RegisterAccountRqst_resource_2eproto.base);
  confirm_password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  account_ = nullptr;
}

RegisterAccountRqst::~RegisterAccountRqst() {
  // @@protoc_insertion_point(destructor:resource.RegisterAccountRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RegisterAccountRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  confirm_password_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete account_;
}

void RegisterAccountRqst::ArenaDtor(void* object) {
  RegisterAccountRqst* _this = reinterpret_cast< RegisterAccountRqst* >(object);
  (void)_this;
}
void RegisterAccountRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RegisterAccountRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RegisterAccountRqst& RegisterAccountRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RegisterAccountRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void RegisterAccountRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.RegisterAccountRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  confirm_password_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && account_ != nullptr) {
    delete account_;
  }
  account_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RegisterAccountRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .resource.Account account = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_account(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string confirm_password = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_confirm_password();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.RegisterAccountRqst.confirm_password"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RegisterAccountRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.RegisterAccountRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .resource.Account account = 1;
  if (this->has_account()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::account(this), target, stream);
  }

  // string confirm_password = 3;
  if (this->confirm_password().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_confirm_password().data(), static_cast<int>(this->_internal_confirm_password().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.RegisterAccountRqst.confirm_password");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_confirm_password(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.RegisterAccountRqst)
  return target;
}

size_t RegisterAccountRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.RegisterAccountRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string confirm_password = 3;
  if (this->confirm_password().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_confirm_password());
  }

  // .resource.Account account = 1;
  if (this->has_account()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *account_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RegisterAccountRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.RegisterAccountRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const RegisterAccountRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RegisterAccountRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.RegisterAccountRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.RegisterAccountRqst)
    MergeFrom(*source);
  }
}

void RegisterAccountRqst::MergeFrom(const RegisterAccountRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.RegisterAccountRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.confirm_password().size() > 0) {
    _internal_set_confirm_password(from._internal_confirm_password());
  }
  if (from.has_account()) {
    _internal_mutable_account()->::resource::Account::MergeFrom(from._internal_account());
  }
}

void RegisterAccountRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.RegisterAccountRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegisterAccountRqst::CopyFrom(const RegisterAccountRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.RegisterAccountRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegisterAccountRqst::IsInitialized() const {
  return true;
}

void RegisterAccountRqst::InternalSwap(RegisterAccountRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  confirm_password_.Swap(&other->confirm_password_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(account_, other->account_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RegisterAccountRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RegisterAccountRsp::InitAsDefaultInstance() {
}
class RegisterAccountRsp::_Internal {
 public:
};

RegisterAccountRsp::RegisterAccountRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.RegisterAccountRsp)
}
RegisterAccountRsp::RegisterAccountRsp(const RegisterAccountRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_result().empty()) {
    result_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_result(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.RegisterAccountRsp)
}

void RegisterAccountRsp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RegisterAccountRsp_resource_2eproto.base);
  result_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

RegisterAccountRsp::~RegisterAccountRsp() {
  // @@protoc_insertion_point(destructor:resource.RegisterAccountRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RegisterAccountRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  result_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RegisterAccountRsp::ArenaDtor(void* object) {
  RegisterAccountRsp* _this = reinterpret_cast< RegisterAccountRsp* >(object);
  (void)_this;
}
void RegisterAccountRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RegisterAccountRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RegisterAccountRsp& RegisterAccountRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RegisterAccountRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void RegisterAccountRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.RegisterAccountRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RegisterAccountRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_result();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.RegisterAccountRsp.result"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RegisterAccountRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.RegisterAccountRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string result = 1;
  if (this->result().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_result().data(), static_cast<int>(this->_internal_result().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.RegisterAccountRsp.result");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.RegisterAccountRsp)
  return target;
}

size_t RegisterAccountRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.RegisterAccountRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result = 1;
  if (this->result().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RegisterAccountRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.RegisterAccountRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const RegisterAccountRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RegisterAccountRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.RegisterAccountRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.RegisterAccountRsp)
    MergeFrom(*source);
  }
}

void RegisterAccountRsp::MergeFrom(const RegisterAccountRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.RegisterAccountRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result().size() > 0) {
    _internal_set_result(from._internal_result());
  }
}

void RegisterAccountRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.RegisterAccountRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegisterAccountRsp::CopyFrom(const RegisterAccountRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.RegisterAccountRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegisterAccountRsp::IsInitialized() const {
  return true;
}

void RegisterAccountRsp::InternalSwap(RegisterAccountRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  result_.Swap(&other->result_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata RegisterAccountRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AccountExistRqst::InitAsDefaultInstance() {
}
class AccountExistRqst::_Internal {
 public:
};

AccountExistRqst::AccountExistRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.AccountExistRqst)
}
AccountExistRqst::AccountExistRqst(const AccountExistRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.AccountExistRqst)
}

void AccountExistRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AccountExistRqst_resource_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

AccountExistRqst::~AccountExistRqst() {
  // @@protoc_insertion_point(destructor:resource.AccountExistRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AccountExistRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AccountExistRqst::ArenaDtor(void* object) {
  AccountExistRqst* _this = reinterpret_cast< AccountExistRqst* >(object);
  (void)_this;
}
void AccountExistRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AccountExistRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AccountExistRqst& AccountExistRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AccountExistRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void AccountExistRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.AccountExistRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AccountExistRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.AccountExistRqst.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AccountExistRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.AccountExistRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.AccountExistRqst.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.AccountExistRqst)
  return target;
}

size_t AccountExistRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.AccountExistRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AccountExistRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.AccountExistRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const AccountExistRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AccountExistRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.AccountExistRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.AccountExistRqst)
    MergeFrom(*source);
  }
}

void AccountExistRqst::MergeFrom(const AccountExistRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.AccountExistRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
}

void AccountExistRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.AccountExistRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AccountExistRqst::CopyFrom(const AccountExistRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.AccountExistRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AccountExistRqst::IsInitialized() const {
  return true;
}

void AccountExistRqst::InternalSwap(AccountExistRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata AccountExistRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AccountExistRsp::InitAsDefaultInstance() {
}
class AccountExistRsp::_Internal {
 public:
};

AccountExistRsp::AccountExistRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.AccountExistRsp)
}
AccountExistRsp::AccountExistRsp(const AccountExistRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.AccountExistRsp)
}

void AccountExistRsp::SharedCtor() {
  result_ = false;
}

AccountExistRsp::~AccountExistRsp() {
  // @@protoc_insertion_point(destructor:resource.AccountExistRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AccountExistRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void AccountExistRsp::ArenaDtor(void* object) {
  AccountExistRsp* _this = reinterpret_cast< AccountExistRsp* >(object);
  (void)_this;
}
void AccountExistRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AccountExistRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AccountExistRsp& AccountExistRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AccountExistRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void AccountExistRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.AccountExistRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AccountExistRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AccountExistRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.AccountExistRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.AccountExistRsp)
  return target;
}

size_t AccountExistRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.AccountExistRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AccountExistRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.AccountExistRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const AccountExistRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AccountExistRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.AccountExistRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.AccountExistRsp)
    MergeFrom(*source);
  }
}

void AccountExistRsp::MergeFrom(const AccountExistRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.AccountExistRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void AccountExistRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.AccountExistRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AccountExistRsp::CopyFrom(const AccountExistRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.AccountExistRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AccountExistRsp::IsInitialized() const {
  return true;
}

void AccountExistRsp::InternalSwap(AccountExistRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AccountExistRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetAccountsRqst::InitAsDefaultInstance() {
}
class GetAccountsRqst::_Internal {
 public:
};

GetAccountsRqst::GetAccountsRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.GetAccountsRqst)
}
GetAccountsRqst::GetAccountsRqst(const GetAccountsRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  query_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_query().empty()) {
    query_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_query(),
      GetArena());
  }
  options_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_options().empty()) {
    options_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_options(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.GetAccountsRqst)
}

void GetAccountsRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetAccountsRqst_resource_2eproto.base);
  query_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  options_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetAccountsRqst::~GetAccountsRqst() {
  // @@protoc_insertion_point(destructor:resource.GetAccountsRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetAccountsRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  query_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  options_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetAccountsRqst::ArenaDtor(void* object) {
  GetAccountsRqst* _this = reinterpret_cast< GetAccountsRqst* >(object);
  (void)_this;
}
void GetAccountsRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetAccountsRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetAccountsRqst& GetAccountsRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetAccountsRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void GetAccountsRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.GetAccountsRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  options_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetAccountsRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string query = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_query();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.GetAccountsRqst.query"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string options = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_options();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.GetAccountsRqst.options"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetAccountsRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.GetAccountsRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_query().data(), static_cast<int>(this->_internal_query().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.GetAccountsRqst.query");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_query(), target);
  }

  // string options = 2;
  if (this->options().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_options().data(), static_cast<int>(this->_internal_options().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.GetAccountsRqst.options");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_options(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.GetAccountsRqst)
  return target;
}

size_t GetAccountsRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.GetAccountsRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_query());
  }

  // string options = 2;
  if (this->options().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_options());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetAccountsRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.GetAccountsRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const GetAccountsRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetAccountsRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.GetAccountsRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.GetAccountsRqst)
    MergeFrom(*source);
  }
}

void GetAccountsRqst::MergeFrom(const GetAccountsRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.GetAccountsRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query().size() > 0) {
    _internal_set_query(from._internal_query());
  }
  if (from.options().size() > 0) {
    _internal_set_options(from._internal_options());
  }
}

void GetAccountsRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.GetAccountsRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAccountsRqst::CopyFrom(const GetAccountsRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.GetAccountsRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAccountsRqst::IsInitialized() const {
  return true;
}

void GetAccountsRqst::InternalSwap(GetAccountsRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  query_.Swap(&other->query_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  options_.Swap(&other->options_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetAccountsRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetAccountsRsp::InitAsDefaultInstance() {
}
class GetAccountsRsp::_Internal {
 public:
};

GetAccountsRsp::GetAccountsRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  accounts_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.GetAccountsRsp)
}
GetAccountsRsp::GetAccountsRsp(const GetAccountsRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      accounts_(from.accounts_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:resource.GetAccountsRsp)
}

void GetAccountsRsp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetAccountsRsp_resource_2eproto.base);
}

GetAccountsRsp::~GetAccountsRsp() {
  // @@protoc_insertion_point(destructor:resource.GetAccountsRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetAccountsRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetAccountsRsp::ArenaDtor(void* object) {
  GetAccountsRsp* _this = reinterpret_cast< GetAccountsRsp* >(object);
  (void)_this;
}
void GetAccountsRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetAccountsRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetAccountsRsp& GetAccountsRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetAccountsRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void GetAccountsRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.GetAccountsRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  accounts_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetAccountsRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .resource.Account accounts = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_accounts(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetAccountsRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.GetAccountsRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .resource.Account accounts = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_accounts_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_accounts(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.GetAccountsRsp)
  return target;
}

size_t GetAccountsRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.GetAccountsRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .resource.Account accounts = 1;
  total_size += 1UL * this->_internal_accounts_size();
  for (const auto& msg : this->accounts_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetAccountsRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.GetAccountsRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetAccountsRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetAccountsRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.GetAccountsRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.GetAccountsRsp)
    MergeFrom(*source);
  }
}

void GetAccountsRsp::MergeFrom(const GetAccountsRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.GetAccountsRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  accounts_.MergeFrom(from.accounts_);
}

void GetAccountsRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.GetAccountsRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAccountsRsp::CopyFrom(const GetAccountsRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.GetAccountsRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAccountsRsp::IsInitialized() const {
  return true;
}

void GetAccountsRsp::InternalSwap(GetAccountsRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  accounts_.InternalSwap(&other->accounts_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetAccountsRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetAccountRqst::InitAsDefaultInstance() {
}
class GetAccountRqst::_Internal {
 public:
};

GetAccountRqst::GetAccountRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.GetAccountRqst)
}
GetAccountRqst::GetAccountRqst(const GetAccountRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  accountid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_accountid().empty()) {
    accountid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_accountid(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.GetAccountRqst)
}

void GetAccountRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetAccountRqst_resource_2eproto.base);
  accountid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetAccountRqst::~GetAccountRqst() {
  // @@protoc_insertion_point(destructor:resource.GetAccountRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetAccountRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  accountid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetAccountRqst::ArenaDtor(void* object) {
  GetAccountRqst* _this = reinterpret_cast< GetAccountRqst* >(object);
  (void)_this;
}
void GetAccountRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetAccountRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetAccountRqst& GetAccountRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetAccountRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void GetAccountRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.GetAccountRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  accountid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetAccountRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string accountId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_accountid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.GetAccountRqst.accountId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetAccountRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.GetAccountRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string accountId = 1;
  if (this->accountid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_accountid().data(), static_cast<int>(this->_internal_accountid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.GetAccountRqst.accountId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_accountid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.GetAccountRqst)
  return target;
}

size_t GetAccountRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.GetAccountRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string accountId = 1;
  if (this->accountid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_accountid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetAccountRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.GetAccountRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const GetAccountRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetAccountRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.GetAccountRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.GetAccountRqst)
    MergeFrom(*source);
  }
}

void GetAccountRqst::MergeFrom(const GetAccountRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.GetAccountRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.accountid().size() > 0) {
    _internal_set_accountid(from._internal_accountid());
  }
}

void GetAccountRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.GetAccountRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAccountRqst::CopyFrom(const GetAccountRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.GetAccountRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAccountRqst::IsInitialized() const {
  return true;
}

void GetAccountRqst::InternalSwap(GetAccountRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  accountid_.Swap(&other->accountid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetAccountRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetAccountRsp::InitAsDefaultInstance() {
  ::resource::_GetAccountRsp_default_instance_._instance.get_mutable()->account_ = const_cast< ::resource::Account*>(
      ::resource::Account::internal_default_instance());
}
class GetAccountRsp::_Internal {
 public:
  static const ::resource::Account& account(const GetAccountRsp* msg);
};

const ::resource::Account&
GetAccountRsp::_Internal::account(const GetAccountRsp* msg) {
  return *msg->account_;
}
GetAccountRsp::GetAccountRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.GetAccountRsp)
}
GetAccountRsp::GetAccountRsp(const GetAccountRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_account()) {
    account_ = new ::resource::Account(*from.account_);
  } else {
    account_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:resource.GetAccountRsp)
}

void GetAccountRsp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetAccountRsp_resource_2eproto.base);
  account_ = nullptr;
}

GetAccountRsp::~GetAccountRsp() {
  // @@protoc_insertion_point(destructor:resource.GetAccountRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetAccountRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete account_;
}

void GetAccountRsp::ArenaDtor(void* object) {
  GetAccountRsp* _this = reinterpret_cast< GetAccountRsp* >(object);
  (void)_this;
}
void GetAccountRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetAccountRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetAccountRsp& GetAccountRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetAccountRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void GetAccountRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.GetAccountRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && account_ != nullptr) {
    delete account_;
  }
  account_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetAccountRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .resource.Account account = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_account(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetAccountRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.GetAccountRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .resource.Account account = 1;
  if (this->has_account()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::account(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.GetAccountRsp)
  return target;
}

size_t GetAccountRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.GetAccountRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .resource.Account account = 1;
  if (this->has_account()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *account_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetAccountRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.GetAccountRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetAccountRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetAccountRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.GetAccountRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.GetAccountRsp)
    MergeFrom(*source);
  }
}

void GetAccountRsp::MergeFrom(const GetAccountRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.GetAccountRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_account()) {
    _internal_mutable_account()->::resource::Account::MergeFrom(from._internal_account());
  }
}

void GetAccountRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.GetAccountRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAccountRsp::CopyFrom(const GetAccountRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.GetAccountRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAccountRsp::IsInitialized() const {
  return true;
}

void GetAccountRsp::InternalSwap(GetAccountRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(account_, other->account_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetAccountRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SetAccountPasswordRqst::InitAsDefaultInstance() {
}
class SetAccountPasswordRqst::_Internal {
 public:
};

SetAccountPasswordRqst::SetAccountPasswordRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.SetAccountPasswordRqst)
}
SetAccountPasswordRqst::SetAccountPasswordRqst(const SetAccountPasswordRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  accountid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_accountid().empty()) {
    accountid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_accountid(),
      GetArena());
  }
  old_password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_old_password().empty()) {
    old_password_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_old_password(),
      GetArena());
  }
  new_password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_new_password().empty()) {
    new_password_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_new_password(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.SetAccountPasswordRqst)
}

void SetAccountPasswordRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SetAccountPasswordRqst_resource_2eproto.base);
  accountid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  old_password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  new_password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

SetAccountPasswordRqst::~SetAccountPasswordRqst() {
  // @@protoc_insertion_point(destructor:resource.SetAccountPasswordRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SetAccountPasswordRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  accountid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  old_password_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  new_password_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SetAccountPasswordRqst::ArenaDtor(void* object) {
  SetAccountPasswordRqst* _this = reinterpret_cast< SetAccountPasswordRqst* >(object);
  (void)_this;
}
void SetAccountPasswordRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetAccountPasswordRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetAccountPasswordRqst& SetAccountPasswordRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SetAccountPasswordRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void SetAccountPasswordRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.SetAccountPasswordRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  accountid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  old_password_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  new_password_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetAccountPasswordRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string accountId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_accountid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.SetAccountPasswordRqst.accountId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string old_password = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_old_password();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.SetAccountPasswordRqst.old_password"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string new_password = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_new_password();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.SetAccountPasswordRqst.new_password"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetAccountPasswordRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.SetAccountPasswordRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string accountId = 1;
  if (this->accountid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_accountid().data(), static_cast<int>(this->_internal_accountid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.SetAccountPasswordRqst.accountId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_accountid(), target);
  }

  // string old_password = 2;
  if (this->old_password().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_old_password().data(), static_cast<int>(this->_internal_old_password().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.SetAccountPasswordRqst.old_password");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_old_password(), target);
  }

  // string new_password = 3;
  if (this->new_password().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_new_password().data(), static_cast<int>(this->_internal_new_password().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.SetAccountPasswordRqst.new_password");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_new_password(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.SetAccountPasswordRqst)
  return target;
}

size_t SetAccountPasswordRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.SetAccountPasswordRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string accountId = 1;
  if (this->accountid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_accountid());
  }

  // string old_password = 2;
  if (this->old_password().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_old_password());
  }

  // string new_password = 3;
  if (this->new_password().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_new_password());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetAccountPasswordRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.SetAccountPasswordRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const SetAccountPasswordRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetAccountPasswordRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.SetAccountPasswordRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.SetAccountPasswordRqst)
    MergeFrom(*source);
  }
}

void SetAccountPasswordRqst::MergeFrom(const SetAccountPasswordRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.SetAccountPasswordRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.accountid().size() > 0) {
    _internal_set_accountid(from._internal_accountid());
  }
  if (from.old_password().size() > 0) {
    _internal_set_old_password(from._internal_old_password());
  }
  if (from.new_password().size() > 0) {
    _internal_set_new_password(from._internal_new_password());
  }
}

void SetAccountPasswordRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.SetAccountPasswordRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetAccountPasswordRqst::CopyFrom(const SetAccountPasswordRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.SetAccountPasswordRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetAccountPasswordRqst::IsInitialized() const {
  return true;
}

void SetAccountPasswordRqst::InternalSwap(SetAccountPasswordRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  accountid_.Swap(&other->accountid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  old_password_.Swap(&other->old_password_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  new_password_.Swap(&other->new_password_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata SetAccountPasswordRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SetAccountPasswordRsp::InitAsDefaultInstance() {
}
class SetAccountPasswordRsp::_Internal {
 public:
};

SetAccountPasswordRsp::SetAccountPasswordRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.SetAccountPasswordRsp)
}
SetAccountPasswordRsp::SetAccountPasswordRsp(const SetAccountPasswordRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:resource.SetAccountPasswordRsp)
}

void SetAccountPasswordRsp::SharedCtor() {
}

SetAccountPasswordRsp::~SetAccountPasswordRsp() {
  // @@protoc_insertion_point(destructor:resource.SetAccountPasswordRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SetAccountPasswordRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SetAccountPasswordRsp::ArenaDtor(void* object) {
  SetAccountPasswordRsp* _this = reinterpret_cast< SetAccountPasswordRsp* >(object);
  (void)_this;
}
void SetAccountPasswordRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetAccountPasswordRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetAccountPasswordRsp& SetAccountPasswordRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SetAccountPasswordRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void SetAccountPasswordRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.SetAccountPasswordRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetAccountPasswordRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetAccountPasswordRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.SetAccountPasswordRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.SetAccountPasswordRsp)
  return target;
}

size_t SetAccountPasswordRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.SetAccountPasswordRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetAccountPasswordRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.SetAccountPasswordRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SetAccountPasswordRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetAccountPasswordRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.SetAccountPasswordRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.SetAccountPasswordRsp)
    MergeFrom(*source);
  }
}

void SetAccountPasswordRsp::MergeFrom(const SetAccountPasswordRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.SetAccountPasswordRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void SetAccountPasswordRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.SetAccountPasswordRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetAccountPasswordRsp::CopyFrom(const SetAccountPasswordRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.SetAccountPasswordRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetAccountPasswordRsp::IsInitialized() const {
  return true;
}

void SetAccountPasswordRsp::InternalSwap(SetAccountPasswordRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetAccountPasswordRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SetEmailRequest::InitAsDefaultInstance() {
}
class SetEmailRequest::_Internal {
 public:
};

SetEmailRequest::SetEmailRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.SetEmailRequest)
}
SetEmailRequest::SetEmailRequest(const SetEmailRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  accountid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_accountid().empty()) {
    accountid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_accountid(),
      GetArena());
  }
  oldemail_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_oldemail().empty()) {
    oldemail_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_oldemail(),
      GetArena());
  }
  newemail_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_newemail().empty()) {
    newemail_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_newemail(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.SetEmailRequest)
}

void SetEmailRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SetEmailRequest_resource_2eproto.base);
  accountid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  oldemail_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  newemail_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

SetEmailRequest::~SetEmailRequest() {
  // @@protoc_insertion_point(destructor:resource.SetEmailRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SetEmailRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  accountid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  oldemail_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  newemail_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SetEmailRequest::ArenaDtor(void* object) {
  SetEmailRequest* _this = reinterpret_cast< SetEmailRequest* >(object);
  (void)_this;
}
void SetEmailRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetEmailRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetEmailRequest& SetEmailRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SetEmailRequest_resource_2eproto.base);
  return *internal_default_instance();
}


void SetEmailRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.SetEmailRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  accountid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  oldemail_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  newemail_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetEmailRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string accountId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_accountid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.SetEmailRequest.accountId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string oldEmail = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_oldemail();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.SetEmailRequest.oldEmail"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string newEmail = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_newemail();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.SetEmailRequest.newEmail"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetEmailRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.SetEmailRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string accountId = 1;
  if (this->accountid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_accountid().data(), static_cast<int>(this->_internal_accountid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.SetEmailRequest.accountId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_accountid(), target);
  }

  // string oldEmail = 2;
  if (this->oldemail().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_oldemail().data(), static_cast<int>(this->_internal_oldemail().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.SetEmailRequest.oldEmail");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_oldemail(), target);
  }

  // string newEmail = 3;
  if (this->newemail().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_newemail().data(), static_cast<int>(this->_internal_newemail().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.SetEmailRequest.newEmail");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_newemail(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.SetEmailRequest)
  return target;
}

size_t SetEmailRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.SetEmailRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string accountId = 1;
  if (this->accountid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_accountid());
  }

  // string oldEmail = 2;
  if (this->oldemail().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_oldemail());
  }

  // string newEmail = 3;
  if (this->newemail().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_newemail());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetEmailRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.SetEmailRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SetEmailRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetEmailRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.SetEmailRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.SetEmailRequest)
    MergeFrom(*source);
  }
}

void SetEmailRequest::MergeFrom(const SetEmailRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.SetEmailRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.accountid().size() > 0) {
    _internal_set_accountid(from._internal_accountid());
  }
  if (from.oldemail().size() > 0) {
    _internal_set_oldemail(from._internal_oldemail());
  }
  if (from.newemail().size() > 0) {
    _internal_set_newemail(from._internal_newemail());
  }
}

void SetEmailRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.SetEmailRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetEmailRequest::CopyFrom(const SetEmailRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.SetEmailRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetEmailRequest::IsInitialized() const {
  return true;
}

void SetEmailRequest::InternalSwap(SetEmailRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  accountid_.Swap(&other->accountid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  oldemail_.Swap(&other->oldemail_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  newemail_.Swap(&other->newemail_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata SetEmailRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SetEmailResponse::InitAsDefaultInstance() {
}
class SetEmailResponse::_Internal {
 public:
};

SetEmailResponse::SetEmailResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.SetEmailResponse)
}
SetEmailResponse::SetEmailResponse(const SetEmailResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:resource.SetEmailResponse)
}

void SetEmailResponse::SharedCtor() {
}

SetEmailResponse::~SetEmailResponse() {
  // @@protoc_insertion_point(destructor:resource.SetEmailResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SetEmailResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SetEmailResponse::ArenaDtor(void* object) {
  SetEmailResponse* _this = reinterpret_cast< SetEmailResponse* >(object);
  (void)_this;
}
void SetEmailResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetEmailResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetEmailResponse& SetEmailResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SetEmailResponse_resource_2eproto.base);
  return *internal_default_instance();
}


void SetEmailResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.SetEmailResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetEmailResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetEmailResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.SetEmailResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.SetEmailResponse)
  return target;
}

size_t SetEmailResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.SetEmailResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetEmailResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.SetEmailResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SetEmailResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetEmailResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.SetEmailResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.SetEmailResponse)
    MergeFrom(*source);
  }
}

void SetEmailResponse::MergeFrom(const SetEmailResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.SetEmailResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void SetEmailResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.SetEmailResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetEmailResponse::CopyFrom(const SetEmailResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.SetEmailResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetEmailResponse::IsInitialized() const {
  return true;
}

void SetEmailResponse::InternalSwap(SetEmailResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetEmailResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteAccountRqst::InitAsDefaultInstance() {
}
class DeleteAccountRqst::_Internal {
 public:
};

DeleteAccountRqst::DeleteAccountRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.DeleteAccountRqst)
}
DeleteAccountRqst::DeleteAccountRqst(const DeleteAccountRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.DeleteAccountRqst)
}

void DeleteAccountRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DeleteAccountRqst_resource_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DeleteAccountRqst::~DeleteAccountRqst() {
  // @@protoc_insertion_point(destructor:resource.DeleteAccountRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteAccountRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeleteAccountRqst::ArenaDtor(void* object) {
  DeleteAccountRqst* _this = reinterpret_cast< DeleteAccountRqst* >(object);
  (void)_this;
}
void DeleteAccountRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteAccountRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteAccountRqst& DeleteAccountRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteAccountRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void DeleteAccountRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.DeleteAccountRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteAccountRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.DeleteAccountRqst.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteAccountRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.DeleteAccountRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.DeleteAccountRqst.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.DeleteAccountRqst)
  return target;
}

size_t DeleteAccountRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.DeleteAccountRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteAccountRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.DeleteAccountRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteAccountRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteAccountRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.DeleteAccountRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.DeleteAccountRqst)
    MergeFrom(*source);
  }
}

void DeleteAccountRqst::MergeFrom(const DeleteAccountRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.DeleteAccountRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
}

void DeleteAccountRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.DeleteAccountRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteAccountRqst::CopyFrom(const DeleteAccountRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.DeleteAccountRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteAccountRqst::IsInitialized() const {
  return true;
}

void DeleteAccountRqst::InternalSwap(DeleteAccountRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteAccountRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteAccountRsp::InitAsDefaultInstance() {
}
class DeleteAccountRsp::_Internal {
 public:
};

DeleteAccountRsp::DeleteAccountRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.DeleteAccountRsp)
}
DeleteAccountRsp::DeleteAccountRsp(const DeleteAccountRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_result().empty()) {
    result_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_result(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.DeleteAccountRsp)
}

void DeleteAccountRsp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DeleteAccountRsp_resource_2eproto.base);
  result_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DeleteAccountRsp::~DeleteAccountRsp() {
  // @@protoc_insertion_point(destructor:resource.DeleteAccountRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteAccountRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  result_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeleteAccountRsp::ArenaDtor(void* object) {
  DeleteAccountRsp* _this = reinterpret_cast< DeleteAccountRsp* >(object);
  (void)_this;
}
void DeleteAccountRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteAccountRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteAccountRsp& DeleteAccountRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteAccountRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void DeleteAccountRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.DeleteAccountRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteAccountRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_result();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.DeleteAccountRsp.result"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteAccountRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.DeleteAccountRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string result = 1;
  if (this->result().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_result().data(), static_cast<int>(this->_internal_result().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.DeleteAccountRsp.result");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.DeleteAccountRsp)
  return target;
}

size_t DeleteAccountRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.DeleteAccountRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result = 1;
  if (this->result().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteAccountRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.DeleteAccountRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteAccountRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteAccountRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.DeleteAccountRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.DeleteAccountRsp)
    MergeFrom(*source);
  }
}

void DeleteAccountRsp::MergeFrom(const DeleteAccountRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.DeleteAccountRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result().size() > 0) {
    _internal_set_result(from._internal_result());
  }
}

void DeleteAccountRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.DeleteAccountRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteAccountRsp::CopyFrom(const DeleteAccountRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.DeleteAccountRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteAccountRsp::IsInitialized() const {
  return true;
}

void DeleteAccountRsp::InternalSwap(DeleteAccountRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  result_.Swap(&other->result_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteAccountRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AddAccountRoleRqst::InitAsDefaultInstance() {
}
class AddAccountRoleRqst::_Internal {
 public:
};

AddAccountRoleRqst::AddAccountRoleRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.AddAccountRoleRqst)
}
AddAccountRoleRqst::AddAccountRoleRqst(const AddAccountRoleRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  accountid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_accountid().empty()) {
    accountid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_accountid(),
      GetArena());
  }
  roleid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_roleid().empty()) {
    roleid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_roleid(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.AddAccountRoleRqst)
}

void AddAccountRoleRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AddAccountRoleRqst_resource_2eproto.base);
  accountid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  roleid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

AddAccountRoleRqst::~AddAccountRoleRqst() {
  // @@protoc_insertion_point(destructor:resource.AddAccountRoleRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddAccountRoleRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  accountid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  roleid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AddAccountRoleRqst::ArenaDtor(void* object) {
  AddAccountRoleRqst* _this = reinterpret_cast< AddAccountRoleRqst* >(object);
  (void)_this;
}
void AddAccountRoleRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddAccountRoleRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AddAccountRoleRqst& AddAccountRoleRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AddAccountRoleRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void AddAccountRoleRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.AddAccountRoleRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  accountid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  roleid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddAccountRoleRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string accountId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_accountid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.AddAccountRoleRqst.accountId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string roleId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_roleid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.AddAccountRoleRqst.roleId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddAccountRoleRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.AddAccountRoleRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string accountId = 1;
  if (this->accountid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_accountid().data(), static_cast<int>(this->_internal_accountid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.AddAccountRoleRqst.accountId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_accountid(), target);
  }

  // string roleId = 2;
  if (this->roleid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_roleid().data(), static_cast<int>(this->_internal_roleid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.AddAccountRoleRqst.roleId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_roleid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.AddAccountRoleRqst)
  return target;
}

size_t AddAccountRoleRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.AddAccountRoleRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string accountId = 1;
  if (this->accountid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_accountid());
  }

  // string roleId = 2;
  if (this->roleid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_roleid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddAccountRoleRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.AddAccountRoleRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const AddAccountRoleRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddAccountRoleRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.AddAccountRoleRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.AddAccountRoleRqst)
    MergeFrom(*source);
  }
}

void AddAccountRoleRqst::MergeFrom(const AddAccountRoleRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.AddAccountRoleRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.accountid().size() > 0) {
    _internal_set_accountid(from._internal_accountid());
  }
  if (from.roleid().size() > 0) {
    _internal_set_roleid(from._internal_roleid());
  }
}

void AddAccountRoleRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.AddAccountRoleRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddAccountRoleRqst::CopyFrom(const AddAccountRoleRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.AddAccountRoleRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddAccountRoleRqst::IsInitialized() const {
  return true;
}

void AddAccountRoleRqst::InternalSwap(AddAccountRoleRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  accountid_.Swap(&other->accountid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  roleid_.Swap(&other->roleid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata AddAccountRoleRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AddAccountRoleRsp::InitAsDefaultInstance() {
}
class AddAccountRoleRsp::_Internal {
 public:
};

AddAccountRoleRsp::AddAccountRoleRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.AddAccountRoleRsp)
}
AddAccountRoleRsp::AddAccountRoleRsp(const AddAccountRoleRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.AddAccountRoleRsp)
}

void AddAccountRoleRsp::SharedCtor() {
  result_ = false;
}

AddAccountRoleRsp::~AddAccountRoleRsp() {
  // @@protoc_insertion_point(destructor:resource.AddAccountRoleRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddAccountRoleRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void AddAccountRoleRsp::ArenaDtor(void* object) {
  AddAccountRoleRsp* _this = reinterpret_cast< AddAccountRoleRsp* >(object);
  (void)_this;
}
void AddAccountRoleRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddAccountRoleRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AddAccountRoleRsp& AddAccountRoleRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AddAccountRoleRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void AddAccountRoleRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.AddAccountRoleRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddAccountRoleRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddAccountRoleRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.AddAccountRoleRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.AddAccountRoleRsp)
  return target;
}

size_t AddAccountRoleRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.AddAccountRoleRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddAccountRoleRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.AddAccountRoleRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const AddAccountRoleRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddAccountRoleRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.AddAccountRoleRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.AddAccountRoleRsp)
    MergeFrom(*source);
  }
}

void AddAccountRoleRsp::MergeFrom(const AddAccountRoleRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.AddAccountRoleRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void AddAccountRoleRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.AddAccountRoleRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddAccountRoleRsp::CopyFrom(const AddAccountRoleRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.AddAccountRoleRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddAccountRoleRsp::IsInitialized() const {
  return true;
}

void AddAccountRoleRsp::InternalSwap(AddAccountRoleRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AddAccountRoleRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RemoveAccountRoleRqst::InitAsDefaultInstance() {
}
class RemoveAccountRoleRqst::_Internal {
 public:
};

RemoveAccountRoleRqst::RemoveAccountRoleRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.RemoveAccountRoleRqst)
}
RemoveAccountRoleRqst::RemoveAccountRoleRqst(const RemoveAccountRoleRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  accountid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_accountid().empty()) {
    accountid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_accountid(),
      GetArena());
  }
  roleid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_roleid().empty()) {
    roleid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_roleid(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.RemoveAccountRoleRqst)
}

void RemoveAccountRoleRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RemoveAccountRoleRqst_resource_2eproto.base);
  accountid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  roleid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

RemoveAccountRoleRqst::~RemoveAccountRoleRqst() {
  // @@protoc_insertion_point(destructor:resource.RemoveAccountRoleRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemoveAccountRoleRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  accountid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  roleid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RemoveAccountRoleRqst::ArenaDtor(void* object) {
  RemoveAccountRoleRqst* _this = reinterpret_cast< RemoveAccountRoleRqst* >(object);
  (void)_this;
}
void RemoveAccountRoleRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemoveAccountRoleRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RemoveAccountRoleRqst& RemoveAccountRoleRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RemoveAccountRoleRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void RemoveAccountRoleRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.RemoveAccountRoleRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  accountid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  roleid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveAccountRoleRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string accountId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_accountid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.RemoveAccountRoleRqst.accountId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string roleId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_roleid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.RemoveAccountRoleRqst.roleId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemoveAccountRoleRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.RemoveAccountRoleRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string accountId = 1;
  if (this->accountid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_accountid().data(), static_cast<int>(this->_internal_accountid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.RemoveAccountRoleRqst.accountId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_accountid(), target);
  }

  // string roleId = 2;
  if (this->roleid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_roleid().data(), static_cast<int>(this->_internal_roleid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.RemoveAccountRoleRqst.roleId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_roleid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.RemoveAccountRoleRqst)
  return target;
}

size_t RemoveAccountRoleRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.RemoveAccountRoleRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string accountId = 1;
  if (this->accountid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_accountid());
  }

  // string roleId = 2;
  if (this->roleid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_roleid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveAccountRoleRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.RemoveAccountRoleRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveAccountRoleRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemoveAccountRoleRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.RemoveAccountRoleRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.RemoveAccountRoleRqst)
    MergeFrom(*source);
  }
}

void RemoveAccountRoleRqst::MergeFrom(const RemoveAccountRoleRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.RemoveAccountRoleRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.accountid().size() > 0) {
    _internal_set_accountid(from._internal_accountid());
  }
  if (from.roleid().size() > 0) {
    _internal_set_roleid(from._internal_roleid());
  }
}

void RemoveAccountRoleRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.RemoveAccountRoleRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveAccountRoleRqst::CopyFrom(const RemoveAccountRoleRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.RemoveAccountRoleRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveAccountRoleRqst::IsInitialized() const {
  return true;
}

void RemoveAccountRoleRqst::InternalSwap(RemoveAccountRoleRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  accountid_.Swap(&other->accountid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  roleid_.Swap(&other->roleid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveAccountRoleRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RemoveAccountRoleRsp::InitAsDefaultInstance() {
}
class RemoveAccountRoleRsp::_Internal {
 public:
};

RemoveAccountRoleRsp::RemoveAccountRoleRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.RemoveAccountRoleRsp)
}
RemoveAccountRoleRsp::RemoveAccountRoleRsp(const RemoveAccountRoleRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.RemoveAccountRoleRsp)
}

void RemoveAccountRoleRsp::SharedCtor() {
  result_ = false;
}

RemoveAccountRoleRsp::~RemoveAccountRoleRsp() {
  // @@protoc_insertion_point(destructor:resource.RemoveAccountRoleRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemoveAccountRoleRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RemoveAccountRoleRsp::ArenaDtor(void* object) {
  RemoveAccountRoleRsp* _this = reinterpret_cast< RemoveAccountRoleRsp* >(object);
  (void)_this;
}
void RemoveAccountRoleRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemoveAccountRoleRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RemoveAccountRoleRsp& RemoveAccountRoleRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RemoveAccountRoleRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void RemoveAccountRoleRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.RemoveAccountRoleRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveAccountRoleRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemoveAccountRoleRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.RemoveAccountRoleRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.RemoveAccountRoleRsp)
  return target;
}

size_t RemoveAccountRoleRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.RemoveAccountRoleRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveAccountRoleRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.RemoveAccountRoleRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveAccountRoleRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemoveAccountRoleRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.RemoveAccountRoleRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.RemoveAccountRoleRsp)
    MergeFrom(*source);
  }
}

void RemoveAccountRoleRsp::MergeFrom(const RemoveAccountRoleRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.RemoveAccountRoleRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void RemoveAccountRoleRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.RemoveAccountRoleRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveAccountRoleRsp::CopyFrom(const RemoveAccountRoleRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.RemoveAccountRoleRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveAccountRoleRsp::IsInitialized() const {
  return true;
}

void RemoveAccountRoleRsp::InternalSwap(RemoveAccountRoleRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveAccountRoleRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Contact::InitAsDefaultInstance() {
}
class Contact::_Internal {
 public:
};

Contact::Contact(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.Contact)
}
Contact::Contact(const Contact& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_status().empty()) {
    status_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_status(),
      GetArena());
  }
  invitationtime_ = from.invitationtime_;
  // @@protoc_insertion_point(copy_constructor:resource.Contact)
}

void Contact::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Contact_resource_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  invitationtime_ = PROTOBUF_LONGLONG(0);
}

Contact::~Contact() {
  // @@protoc_insertion_point(destructor:resource.Contact)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Contact::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  status_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Contact::ArenaDtor(void* object) {
  Contact* _this = reinterpret_cast< Contact* >(object);
  (void)_this;
}
void Contact::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Contact::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Contact& Contact::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Contact_resource_2eproto.base);
  return *internal_default_instance();
}


void Contact::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.Contact)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  status_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  invitationtime_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Contact::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Contact.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 invitationTime = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          invitationtime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string status = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_status();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Contact.status"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Contact::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.Contact)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Contact.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // int64 invitationTime = 2;
  if (this->invitationtime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_invitationtime(), target);
  }

  // string status = 3;
  if (this->status().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_status().data(), static_cast<int>(this->_internal_status().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Contact.status");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.Contact)
  return target;
}

size_t Contact::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.Contact)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string status = 3;
  if (this->status().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_status());
  }

  // int64 invitationTime = 2;
  if (this->invitationtime() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_invitationtime());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Contact::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.Contact)
  GOOGLE_DCHECK_NE(&from, this);
  const Contact* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Contact>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.Contact)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.Contact)
    MergeFrom(*source);
  }
}

void Contact::MergeFrom(const Contact& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.Contact)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.status().size() > 0) {
    _internal_set_status(from._internal_status());
  }
  if (from.invitationtime() != 0) {
    _internal_set_invitationtime(from._internal_invitationtime());
  }
}

void Contact::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.Contact)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Contact::CopyFrom(const Contact& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.Contact)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Contact::IsInitialized() const {
  return true;
}

void Contact::InternalSwap(Contact* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  status_.Swap(&other->status_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(invitationtime_, other->invitationtime_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Contact::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SetAccountContactRqst::InitAsDefaultInstance() {
  ::resource::_SetAccountContactRqst_default_instance_._instance.get_mutable()->contact_ = const_cast< ::resource::Contact*>(
      ::resource::Contact::internal_default_instance());
}
class SetAccountContactRqst::_Internal {
 public:
  static const ::resource::Contact& contact(const SetAccountContactRqst* msg);
};

const ::resource::Contact&
SetAccountContactRqst::_Internal::contact(const SetAccountContactRqst* msg) {
  return *msg->contact_;
}
SetAccountContactRqst::SetAccountContactRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.SetAccountContactRqst)
}
SetAccountContactRqst::SetAccountContactRqst(const SetAccountContactRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  accountid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_accountid().empty()) {
    accountid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_accountid(),
      GetArena());
  }
  if (from._internal_has_contact()) {
    contact_ = new ::resource::Contact(*from.contact_);
  } else {
    contact_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:resource.SetAccountContactRqst)
}

void SetAccountContactRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SetAccountContactRqst_resource_2eproto.base);
  accountid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  contact_ = nullptr;
}

SetAccountContactRqst::~SetAccountContactRqst() {
  // @@protoc_insertion_point(destructor:resource.SetAccountContactRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SetAccountContactRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  accountid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete contact_;
}

void SetAccountContactRqst::ArenaDtor(void* object) {
  SetAccountContactRqst* _this = reinterpret_cast< SetAccountContactRqst* >(object);
  (void)_this;
}
void SetAccountContactRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetAccountContactRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetAccountContactRqst& SetAccountContactRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SetAccountContactRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void SetAccountContactRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.SetAccountContactRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  accountid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && contact_ != nullptr) {
    delete contact_;
  }
  contact_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetAccountContactRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string accountId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_accountid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.SetAccountContactRqst.accountId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .resource.Contact contact = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_contact(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetAccountContactRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.SetAccountContactRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string accountId = 1;
  if (this->accountid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_accountid().data(), static_cast<int>(this->_internal_accountid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.SetAccountContactRqst.accountId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_accountid(), target);
  }

  // .resource.Contact contact = 2;
  if (this->has_contact()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::contact(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.SetAccountContactRqst)
  return target;
}

size_t SetAccountContactRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.SetAccountContactRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string accountId = 1;
  if (this->accountid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_accountid());
  }

  // .resource.Contact contact = 2;
  if (this->has_contact()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *contact_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetAccountContactRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.SetAccountContactRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const SetAccountContactRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetAccountContactRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.SetAccountContactRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.SetAccountContactRqst)
    MergeFrom(*source);
  }
}

void SetAccountContactRqst::MergeFrom(const SetAccountContactRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.SetAccountContactRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.accountid().size() > 0) {
    _internal_set_accountid(from._internal_accountid());
  }
  if (from.has_contact()) {
    _internal_mutable_contact()->::resource::Contact::MergeFrom(from._internal_contact());
  }
}

void SetAccountContactRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.SetAccountContactRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetAccountContactRqst::CopyFrom(const SetAccountContactRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.SetAccountContactRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetAccountContactRqst::IsInitialized() const {
  return true;
}

void SetAccountContactRqst::InternalSwap(SetAccountContactRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  accountid_.Swap(&other->accountid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(contact_, other->contact_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetAccountContactRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SetAccountContactRsp::InitAsDefaultInstance() {
}
class SetAccountContactRsp::_Internal {
 public:
};

SetAccountContactRsp::SetAccountContactRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.SetAccountContactRsp)
}
SetAccountContactRsp::SetAccountContactRsp(const SetAccountContactRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.SetAccountContactRsp)
}

void SetAccountContactRsp::SharedCtor() {
  result_ = false;
}

SetAccountContactRsp::~SetAccountContactRsp() {
  // @@protoc_insertion_point(destructor:resource.SetAccountContactRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SetAccountContactRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SetAccountContactRsp::ArenaDtor(void* object) {
  SetAccountContactRsp* _this = reinterpret_cast< SetAccountContactRsp* >(object);
  (void)_this;
}
void SetAccountContactRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetAccountContactRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetAccountContactRsp& SetAccountContactRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SetAccountContactRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void SetAccountContactRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.SetAccountContactRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetAccountContactRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetAccountContactRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.SetAccountContactRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.SetAccountContactRsp)
  return target;
}

size_t SetAccountContactRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.SetAccountContactRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetAccountContactRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.SetAccountContactRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SetAccountContactRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetAccountContactRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.SetAccountContactRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.SetAccountContactRsp)
    MergeFrom(*source);
  }
}

void SetAccountContactRsp::MergeFrom(const SetAccountContactRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.SetAccountContactRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void SetAccountContactRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.SetAccountContactRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetAccountContactRsp::CopyFrom(const SetAccountContactRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.SetAccountContactRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetAccountContactRsp::IsInitialized() const {
  return true;
}

void SetAccountContactRsp::InternalSwap(SetAccountContactRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetAccountContactRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CreateRoleRqst::InitAsDefaultInstance() {
  ::resource::_CreateRoleRqst_default_instance_._instance.get_mutable()->role_ = const_cast< ::resource::Role*>(
      ::resource::Role::internal_default_instance());
}
class CreateRoleRqst::_Internal {
 public:
  static const ::resource::Role& role(const CreateRoleRqst* msg);
};

const ::resource::Role&
CreateRoleRqst::_Internal::role(const CreateRoleRqst* msg) {
  return *msg->role_;
}
CreateRoleRqst::CreateRoleRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.CreateRoleRqst)
}
CreateRoleRqst::CreateRoleRqst(const CreateRoleRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_role()) {
    role_ = new ::resource::Role(*from.role_);
  } else {
    role_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:resource.CreateRoleRqst)
}

void CreateRoleRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CreateRoleRqst_resource_2eproto.base);
  role_ = nullptr;
}

CreateRoleRqst::~CreateRoleRqst() {
  // @@protoc_insertion_point(destructor:resource.CreateRoleRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateRoleRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete role_;
}

void CreateRoleRqst::ArenaDtor(void* object) {
  CreateRoleRqst* _this = reinterpret_cast< CreateRoleRqst* >(object);
  (void)_this;
}
void CreateRoleRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateRoleRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateRoleRqst& CreateRoleRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreateRoleRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void CreateRoleRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.CreateRoleRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && role_ != nullptr) {
    delete role_;
  }
  role_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateRoleRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .resource.Role role = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_role(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateRoleRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.CreateRoleRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .resource.Role role = 1;
  if (this->has_role()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::role(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.CreateRoleRqst)
  return target;
}

size_t CreateRoleRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.CreateRoleRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .resource.Role role = 1;
  if (this->has_role()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *role_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateRoleRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.CreateRoleRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateRoleRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateRoleRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.CreateRoleRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.CreateRoleRqst)
    MergeFrom(*source);
  }
}

void CreateRoleRqst::MergeFrom(const CreateRoleRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.CreateRoleRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_role()) {
    _internal_mutable_role()->::resource::Role::MergeFrom(from._internal_role());
  }
}

void CreateRoleRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.CreateRoleRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateRoleRqst::CopyFrom(const CreateRoleRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.CreateRoleRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateRoleRqst::IsInitialized() const {
  return true;
}

void CreateRoleRqst::InternalSwap(CreateRoleRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(role_, other->role_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateRoleRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CreateRoleRsp::InitAsDefaultInstance() {
}
class CreateRoleRsp::_Internal {
 public:
};

CreateRoleRsp::CreateRoleRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.CreateRoleRsp)
}
CreateRoleRsp::CreateRoleRsp(const CreateRoleRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.CreateRoleRsp)
}

void CreateRoleRsp::SharedCtor() {
  result_ = false;
}

CreateRoleRsp::~CreateRoleRsp() {
  // @@protoc_insertion_point(destructor:resource.CreateRoleRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateRoleRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CreateRoleRsp::ArenaDtor(void* object) {
  CreateRoleRsp* _this = reinterpret_cast< CreateRoleRsp* >(object);
  (void)_this;
}
void CreateRoleRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateRoleRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateRoleRsp& CreateRoleRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreateRoleRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void CreateRoleRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.CreateRoleRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateRoleRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateRoleRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.CreateRoleRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.CreateRoleRsp)
  return target;
}

size_t CreateRoleRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.CreateRoleRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateRoleRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.CreateRoleRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateRoleRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateRoleRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.CreateRoleRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.CreateRoleRsp)
    MergeFrom(*source);
  }
}

void CreateRoleRsp::MergeFrom(const CreateRoleRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.CreateRoleRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void CreateRoleRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.CreateRoleRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateRoleRsp::CopyFrom(const CreateRoleRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.CreateRoleRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateRoleRsp::IsInitialized() const {
  return true;
}

void CreateRoleRsp::InternalSwap(CreateRoleRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateRoleRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetRolesRqst::InitAsDefaultInstance() {
}
class GetRolesRqst::_Internal {
 public:
};

GetRolesRqst::GetRolesRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.GetRolesRqst)
}
GetRolesRqst::GetRolesRqst(const GetRolesRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  query_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_query().empty()) {
    query_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_query(),
      GetArena());
  }
  options_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_options().empty()) {
    options_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_options(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.GetRolesRqst)
}

void GetRolesRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetRolesRqst_resource_2eproto.base);
  query_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  options_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetRolesRqst::~GetRolesRqst() {
  // @@protoc_insertion_point(destructor:resource.GetRolesRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetRolesRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  query_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  options_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetRolesRqst::ArenaDtor(void* object) {
  GetRolesRqst* _this = reinterpret_cast< GetRolesRqst* >(object);
  (void)_this;
}
void GetRolesRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetRolesRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetRolesRqst& GetRolesRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetRolesRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void GetRolesRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.GetRolesRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  options_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetRolesRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string query = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_query();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.GetRolesRqst.query"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string options = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_options();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.GetRolesRqst.options"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetRolesRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.GetRolesRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_query().data(), static_cast<int>(this->_internal_query().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.GetRolesRqst.query");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_query(), target);
  }

  // string options = 2;
  if (this->options().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_options().data(), static_cast<int>(this->_internal_options().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.GetRolesRqst.options");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_options(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.GetRolesRqst)
  return target;
}

size_t GetRolesRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.GetRolesRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_query());
  }

  // string options = 2;
  if (this->options().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_options());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetRolesRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.GetRolesRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const GetRolesRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetRolesRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.GetRolesRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.GetRolesRqst)
    MergeFrom(*source);
  }
}

void GetRolesRqst::MergeFrom(const GetRolesRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.GetRolesRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query().size() > 0) {
    _internal_set_query(from._internal_query());
  }
  if (from.options().size() > 0) {
    _internal_set_options(from._internal_options());
  }
}

void GetRolesRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.GetRolesRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetRolesRqst::CopyFrom(const GetRolesRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.GetRolesRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRolesRqst::IsInitialized() const {
  return true;
}

void GetRolesRqst::InternalSwap(GetRolesRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  query_.Swap(&other->query_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  options_.Swap(&other->options_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetRolesRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetRolesRsp::InitAsDefaultInstance() {
}
class GetRolesRsp::_Internal {
 public:
};

GetRolesRsp::GetRolesRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  roles_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.GetRolesRsp)
}
GetRolesRsp::GetRolesRsp(const GetRolesRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      roles_(from.roles_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:resource.GetRolesRsp)
}

void GetRolesRsp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetRolesRsp_resource_2eproto.base);
}

GetRolesRsp::~GetRolesRsp() {
  // @@protoc_insertion_point(destructor:resource.GetRolesRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetRolesRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetRolesRsp::ArenaDtor(void* object) {
  GetRolesRsp* _this = reinterpret_cast< GetRolesRsp* >(object);
  (void)_this;
}
void GetRolesRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetRolesRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetRolesRsp& GetRolesRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetRolesRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void GetRolesRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.GetRolesRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  roles_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetRolesRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .resource.Role roles = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_roles(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetRolesRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.GetRolesRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .resource.Role roles = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_roles_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_roles(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.GetRolesRsp)
  return target;
}

size_t GetRolesRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.GetRolesRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .resource.Role roles = 1;
  total_size += 1UL * this->_internal_roles_size();
  for (const auto& msg : this->roles_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetRolesRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.GetRolesRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetRolesRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetRolesRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.GetRolesRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.GetRolesRsp)
    MergeFrom(*source);
  }
}

void GetRolesRsp::MergeFrom(const GetRolesRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.GetRolesRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  roles_.MergeFrom(from.roles_);
}

void GetRolesRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.GetRolesRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetRolesRsp::CopyFrom(const GetRolesRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.GetRolesRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRolesRsp::IsInitialized() const {
  return true;
}

void GetRolesRsp::InternalSwap(GetRolesRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  roles_.InternalSwap(&other->roles_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetRolesRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteRoleRqst::InitAsDefaultInstance() {
}
class DeleteRoleRqst::_Internal {
 public:
};

DeleteRoleRqst::DeleteRoleRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.DeleteRoleRqst)
}
DeleteRoleRqst::DeleteRoleRqst(const DeleteRoleRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  roleid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_roleid().empty()) {
    roleid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_roleid(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.DeleteRoleRqst)
}

void DeleteRoleRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DeleteRoleRqst_resource_2eproto.base);
  roleid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DeleteRoleRqst::~DeleteRoleRqst() {
  // @@protoc_insertion_point(destructor:resource.DeleteRoleRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteRoleRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  roleid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeleteRoleRqst::ArenaDtor(void* object) {
  DeleteRoleRqst* _this = reinterpret_cast< DeleteRoleRqst* >(object);
  (void)_this;
}
void DeleteRoleRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteRoleRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteRoleRqst& DeleteRoleRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteRoleRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void DeleteRoleRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.DeleteRoleRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  roleid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteRoleRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string roleId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_roleid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.DeleteRoleRqst.roleId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteRoleRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.DeleteRoleRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string roleId = 1;
  if (this->roleid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_roleid().data(), static_cast<int>(this->_internal_roleid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.DeleteRoleRqst.roleId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_roleid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.DeleteRoleRqst)
  return target;
}

size_t DeleteRoleRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.DeleteRoleRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string roleId = 1;
  if (this->roleid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_roleid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteRoleRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.DeleteRoleRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteRoleRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteRoleRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.DeleteRoleRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.DeleteRoleRqst)
    MergeFrom(*source);
  }
}

void DeleteRoleRqst::MergeFrom(const DeleteRoleRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.DeleteRoleRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.roleid().size() > 0) {
    _internal_set_roleid(from._internal_roleid());
  }
}

void DeleteRoleRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.DeleteRoleRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteRoleRqst::CopyFrom(const DeleteRoleRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.DeleteRoleRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteRoleRqst::IsInitialized() const {
  return true;
}

void DeleteRoleRqst::InternalSwap(DeleteRoleRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  roleid_.Swap(&other->roleid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteRoleRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteRoleRsp::InitAsDefaultInstance() {
}
class DeleteRoleRsp::_Internal {
 public:
};

DeleteRoleRsp::DeleteRoleRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.DeleteRoleRsp)
}
DeleteRoleRsp::DeleteRoleRsp(const DeleteRoleRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.DeleteRoleRsp)
}

void DeleteRoleRsp::SharedCtor() {
  result_ = false;
}

DeleteRoleRsp::~DeleteRoleRsp() {
  // @@protoc_insertion_point(destructor:resource.DeleteRoleRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteRoleRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void DeleteRoleRsp::ArenaDtor(void* object) {
  DeleteRoleRsp* _this = reinterpret_cast< DeleteRoleRsp* >(object);
  (void)_this;
}
void DeleteRoleRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteRoleRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteRoleRsp& DeleteRoleRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteRoleRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void DeleteRoleRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.DeleteRoleRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteRoleRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteRoleRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.DeleteRoleRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.DeleteRoleRsp)
  return target;
}

size_t DeleteRoleRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.DeleteRoleRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteRoleRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.DeleteRoleRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteRoleRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteRoleRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.DeleteRoleRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.DeleteRoleRsp)
    MergeFrom(*source);
  }
}

void DeleteRoleRsp::MergeFrom(const DeleteRoleRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.DeleteRoleRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void DeleteRoleRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.DeleteRoleRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteRoleRsp::CopyFrom(const DeleteRoleRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.DeleteRoleRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteRoleRsp::IsInitialized() const {
  return true;
}

void DeleteRoleRsp::InternalSwap(DeleteRoleRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteRoleRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Application::InitAsDefaultInstance() {
}
class Application::_Internal {
 public:
};

Application::Application(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  actions_(arena),
  keywords_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.Application)
}
Application::Application(const Application& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      actions_(from.actions_),
      keywords_(from.keywords_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_password().empty()) {
    password_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_password(),
      GetArena());
  }
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_path().empty()) {
    path_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_path(),
      GetArena());
  }
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_version().empty()) {
    version_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_version(),
      GetArena());
  }
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_description().empty()) {
    description_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_description(),
      GetArena());
  }
  icon_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_icon().empty()) {
    icon_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_icon(),
      GetArena());
  }
  alias_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_alias().empty()) {
    alias_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_alias(),
      GetArena());
  }
  publisherid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_publisherid().empty()) {
    publisherid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_publisherid(),
      GetArena());
  }
  ::memcpy(&creation_date_, &from.creation_date_,
    static_cast<size_t>(reinterpret_cast<char*>(&last_deployed_) -
    reinterpret_cast<char*>(&creation_date_)) + sizeof(last_deployed_));
  // @@protoc_insertion_point(copy_constructor:resource.Application)
}

void Application::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Application_resource_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  icon_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  alias_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  publisherid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&creation_date_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&last_deployed_) -
      reinterpret_cast<char*>(&creation_date_)) + sizeof(last_deployed_));
}

Application::~Application() {
  // @@protoc_insertion_point(destructor:resource.Application)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Application::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  icon_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  alias_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  publisherid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Application::ArenaDtor(void* object) {
  Application* _this = reinterpret_cast< Application* >(object);
  (void)_this;
}
void Application::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Application::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Application& Application::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Application_resource_2eproto.base);
  return *internal_default_instance();
}


void Application::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.Application)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  actions_.Clear();
  keywords_.Clear();
  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  password_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  path_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  version_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  description_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  icon_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  alias_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  publisherid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&creation_date_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&last_deployed_) -
      reinterpret_cast<char*>(&creation_date_)) + sizeof(last_deployed_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Application::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Application.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Application.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string password = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_password();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Application.password"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string path = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Application.path"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string version = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_version();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Application.version"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string description = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_description();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Application.description"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string actions = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_actions();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Application.actions"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<58>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated string keywords = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_keywords();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Application.keywords"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<66>(ptr));
        } else goto handle_unusual;
        continue;
      // string icon = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          auto str = _internal_mutable_icon();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Application.icon"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string alias = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          auto str = _internal_mutable_alias();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Application.alias"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string publisherid = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          auto str = _internal_mutable_publisherid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Application.publisherid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 creation_date = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          creation_date_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 last_deployed = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 104)) {
          last_deployed_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Application::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.Application)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Application.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Application.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // string password = 3;
  if (this->password().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_password().data(), static_cast<int>(this->_internal_password().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Application.password");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_password(), target);
  }

  // string path = 4;
  if (this->path().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_path().data(), static_cast<int>(this->_internal_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Application.path");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_path(), target);
  }

  // string version = 5;
  if (this->version().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_version().data(), static_cast<int>(this->_internal_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Application.version");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_version(), target);
  }

  // string description = 6;
  if (this->description().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Application.description");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_description(), target);
  }

  // repeated string actions = 7;
  for (int i = 0, n = this->_internal_actions_size(); i < n; i++) {
    const auto& s = this->_internal_actions(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Application.actions");
    target = stream->WriteString(7, s, target);
  }

  // repeated string keywords = 8;
  for (int i = 0, n = this->_internal_keywords_size(); i < n; i++) {
    const auto& s = this->_internal_keywords(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Application.keywords");
    target = stream->WriteString(8, s, target);
  }

  // string icon = 9;
  if (this->icon().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_icon().data(), static_cast<int>(this->_internal_icon().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Application.icon");
    target = stream->WriteStringMaybeAliased(
        9, this->_internal_icon(), target);
  }

  // string alias = 10;
  if (this->alias().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_alias().data(), static_cast<int>(this->_internal_alias().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Application.alias");
    target = stream->WriteStringMaybeAliased(
        10, this->_internal_alias(), target);
  }

  // string publisherid = 11;
  if (this->publisherid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_publisherid().data(), static_cast<int>(this->_internal_publisherid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Application.publisherid");
    target = stream->WriteStringMaybeAliased(
        11, this->_internal_publisherid(), target);
  }

  // int64 creation_date = 12;
  if (this->creation_date() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(12, this->_internal_creation_date(), target);
  }

  // int64 last_deployed = 13;
  if (this->last_deployed() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(13, this->_internal_last_deployed(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.Application)
  return target;
}

size_t Application::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.Application)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string actions = 7;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(actions_.size());
  for (int i = 0, n = actions_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      actions_.Get(i));
  }

  // repeated string keywords = 8;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(keywords_.size());
  for (int i = 0, n = keywords_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      keywords_.Get(i));
  }

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string password = 3;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_password());
  }

  // string path = 4;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_path());
  }

  // string version = 5;
  if (this->version().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_version());
  }

  // string description = 6;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  // string icon = 9;
  if (this->icon().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_icon());
  }

  // string alias = 10;
  if (this->alias().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_alias());
  }

  // string publisherid = 11;
  if (this->publisherid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_publisherid());
  }

  // int64 creation_date = 12;
  if (this->creation_date() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_creation_date());
  }

  // int64 last_deployed = 13;
  if (this->last_deployed() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_last_deployed());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Application::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.Application)
  GOOGLE_DCHECK_NE(&from, this);
  const Application* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Application>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.Application)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.Application)
    MergeFrom(*source);
  }
}

void Application::MergeFrom(const Application& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.Application)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  actions_.MergeFrom(from.actions_);
  keywords_.MergeFrom(from.keywords_);
  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.password().size() > 0) {
    _internal_set_password(from._internal_password());
  }
  if (from.path().size() > 0) {
    _internal_set_path(from._internal_path());
  }
  if (from.version().size() > 0) {
    _internal_set_version(from._internal_version());
  }
  if (from.description().size() > 0) {
    _internal_set_description(from._internal_description());
  }
  if (from.icon().size() > 0) {
    _internal_set_icon(from._internal_icon());
  }
  if (from.alias().size() > 0) {
    _internal_set_alias(from._internal_alias());
  }
  if (from.publisherid().size() > 0) {
    _internal_set_publisherid(from._internal_publisherid());
  }
  if (from.creation_date() != 0) {
    _internal_set_creation_date(from._internal_creation_date());
  }
  if (from.last_deployed() != 0) {
    _internal_set_last_deployed(from._internal_last_deployed());
  }
}

void Application::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.Application)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Application::CopyFrom(const Application& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.Application)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Application::IsInitialized() const {
  return true;
}

void Application::InternalSwap(Application* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  actions_.InternalSwap(&other->actions_);
  keywords_.InternalSwap(&other->keywords_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  password_.Swap(&other->password_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  path_.Swap(&other->path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  version_.Swap(&other->version_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  description_.Swap(&other->description_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  icon_.Swap(&other->icon_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  alias_.Swap(&other->alias_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  publisherid_.Swap(&other->publisherid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Application, last_deployed_)
      + sizeof(Application::last_deployed_)
      - PROTOBUF_FIELD_OFFSET(Application, creation_date_)>(
          reinterpret_cast<char*>(&creation_date_),
          reinterpret_cast<char*>(&other->creation_date_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Application::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CreateApplicationRqst::InitAsDefaultInstance() {
  ::resource::_CreateApplicationRqst_default_instance_._instance.get_mutable()->application_ = const_cast< ::resource::Application*>(
      ::resource::Application::internal_default_instance());
}
class CreateApplicationRqst::_Internal {
 public:
  static const ::resource::Application& application(const CreateApplicationRqst* msg);
};

const ::resource::Application&
CreateApplicationRqst::_Internal::application(const CreateApplicationRqst* msg) {
  return *msg->application_;
}
CreateApplicationRqst::CreateApplicationRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.CreateApplicationRqst)
}
CreateApplicationRqst::CreateApplicationRqst(const CreateApplicationRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_application()) {
    application_ = new ::resource::Application(*from.application_);
  } else {
    application_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:resource.CreateApplicationRqst)
}

void CreateApplicationRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CreateApplicationRqst_resource_2eproto.base);
  application_ = nullptr;
}

CreateApplicationRqst::~CreateApplicationRqst() {
  // @@protoc_insertion_point(destructor:resource.CreateApplicationRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateApplicationRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete application_;
}

void CreateApplicationRqst::ArenaDtor(void* object) {
  CreateApplicationRqst* _this = reinterpret_cast< CreateApplicationRqst* >(object);
  (void)_this;
}
void CreateApplicationRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateApplicationRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateApplicationRqst& CreateApplicationRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreateApplicationRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void CreateApplicationRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.CreateApplicationRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && application_ != nullptr) {
    delete application_;
  }
  application_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateApplicationRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .resource.Application application = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_application(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateApplicationRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.CreateApplicationRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .resource.Application application = 1;
  if (this->has_application()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::application(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.CreateApplicationRqst)
  return target;
}

size_t CreateApplicationRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.CreateApplicationRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .resource.Application application = 1;
  if (this->has_application()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *application_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateApplicationRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.CreateApplicationRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateApplicationRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateApplicationRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.CreateApplicationRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.CreateApplicationRqst)
    MergeFrom(*source);
  }
}

void CreateApplicationRqst::MergeFrom(const CreateApplicationRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.CreateApplicationRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_application()) {
    _internal_mutable_application()->::resource::Application::MergeFrom(from._internal_application());
  }
}

void CreateApplicationRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.CreateApplicationRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateApplicationRqst::CopyFrom(const CreateApplicationRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.CreateApplicationRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateApplicationRqst::IsInitialized() const {
  return true;
}

void CreateApplicationRqst::InternalSwap(CreateApplicationRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(application_, other->application_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateApplicationRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CreateApplicationRsp::InitAsDefaultInstance() {
}
class CreateApplicationRsp::_Internal {
 public:
};

CreateApplicationRsp::CreateApplicationRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.CreateApplicationRsp)
}
CreateApplicationRsp::CreateApplicationRsp(const CreateApplicationRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:resource.CreateApplicationRsp)
}

void CreateApplicationRsp::SharedCtor() {
}

CreateApplicationRsp::~CreateApplicationRsp() {
  // @@protoc_insertion_point(destructor:resource.CreateApplicationRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateApplicationRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CreateApplicationRsp::ArenaDtor(void* object) {
  CreateApplicationRsp* _this = reinterpret_cast< CreateApplicationRsp* >(object);
  (void)_this;
}
void CreateApplicationRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateApplicationRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateApplicationRsp& CreateApplicationRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreateApplicationRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void CreateApplicationRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.CreateApplicationRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateApplicationRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateApplicationRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.CreateApplicationRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.CreateApplicationRsp)
  return target;
}

size_t CreateApplicationRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.CreateApplicationRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateApplicationRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.CreateApplicationRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateApplicationRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateApplicationRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.CreateApplicationRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.CreateApplicationRsp)
    MergeFrom(*source);
  }
}

void CreateApplicationRsp::MergeFrom(const CreateApplicationRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.CreateApplicationRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CreateApplicationRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.CreateApplicationRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateApplicationRsp::CopyFrom(const CreateApplicationRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.CreateApplicationRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateApplicationRsp::IsInitialized() const {
  return true;
}

void CreateApplicationRsp::InternalSwap(CreateApplicationRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateApplicationRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpdateApplicationRqst::InitAsDefaultInstance() {
}
class UpdateApplicationRqst::_Internal {
 public:
};

UpdateApplicationRqst::UpdateApplicationRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.UpdateApplicationRqst)
}
UpdateApplicationRqst::UpdateApplicationRqst(const UpdateApplicationRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  applicationid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_applicationid().empty()) {
    applicationid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_applicationid(),
      GetArena());
  }
  values_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_values().empty()) {
    values_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_values(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.UpdateApplicationRqst)
}

void UpdateApplicationRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UpdateApplicationRqst_resource_2eproto.base);
  applicationid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  values_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

UpdateApplicationRqst::~UpdateApplicationRqst() {
  // @@protoc_insertion_point(destructor:resource.UpdateApplicationRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UpdateApplicationRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  applicationid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  values_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void UpdateApplicationRqst::ArenaDtor(void* object) {
  UpdateApplicationRqst* _this = reinterpret_cast< UpdateApplicationRqst* >(object);
  (void)_this;
}
void UpdateApplicationRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateApplicationRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateApplicationRqst& UpdateApplicationRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpdateApplicationRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void UpdateApplicationRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.UpdateApplicationRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  applicationid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  values_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateApplicationRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string applicationId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_applicationid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.UpdateApplicationRqst.applicationId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string values = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_values();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.UpdateApplicationRqst.values"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateApplicationRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.UpdateApplicationRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string applicationId = 1;
  if (this->applicationid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_applicationid().data(), static_cast<int>(this->_internal_applicationid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.UpdateApplicationRqst.applicationId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_applicationid(), target);
  }

  // string values = 2;
  if (this->values().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_values().data(), static_cast<int>(this->_internal_values().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.UpdateApplicationRqst.values");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_values(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.UpdateApplicationRqst)
  return target;
}

size_t UpdateApplicationRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.UpdateApplicationRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string applicationId = 1;
  if (this->applicationid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_applicationid());
  }

  // string values = 2;
  if (this->values().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_values());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateApplicationRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.UpdateApplicationRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateApplicationRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateApplicationRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.UpdateApplicationRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.UpdateApplicationRqst)
    MergeFrom(*source);
  }
}

void UpdateApplicationRqst::MergeFrom(const UpdateApplicationRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.UpdateApplicationRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.applicationid().size() > 0) {
    _internal_set_applicationid(from._internal_applicationid());
  }
  if (from.values().size() > 0) {
    _internal_set_values(from._internal_values());
  }
}

void UpdateApplicationRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.UpdateApplicationRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateApplicationRqst::CopyFrom(const UpdateApplicationRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.UpdateApplicationRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateApplicationRqst::IsInitialized() const {
  return true;
}

void UpdateApplicationRqst::InternalSwap(UpdateApplicationRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  applicationid_.Swap(&other->applicationid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  values_.Swap(&other->values_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateApplicationRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpdateApplicationRsp::InitAsDefaultInstance() {
}
class UpdateApplicationRsp::_Internal {
 public:
};

UpdateApplicationRsp::UpdateApplicationRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.UpdateApplicationRsp)
}
UpdateApplicationRsp::UpdateApplicationRsp(const UpdateApplicationRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.UpdateApplicationRsp)
}

void UpdateApplicationRsp::SharedCtor() {
  result_ = false;
}

UpdateApplicationRsp::~UpdateApplicationRsp() {
  // @@protoc_insertion_point(destructor:resource.UpdateApplicationRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UpdateApplicationRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void UpdateApplicationRsp::ArenaDtor(void* object) {
  UpdateApplicationRsp* _this = reinterpret_cast< UpdateApplicationRsp* >(object);
  (void)_this;
}
void UpdateApplicationRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateApplicationRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateApplicationRsp& UpdateApplicationRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpdateApplicationRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void UpdateApplicationRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.UpdateApplicationRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateApplicationRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateApplicationRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.UpdateApplicationRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.UpdateApplicationRsp)
  return target;
}

size_t UpdateApplicationRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.UpdateApplicationRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateApplicationRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.UpdateApplicationRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateApplicationRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateApplicationRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.UpdateApplicationRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.UpdateApplicationRsp)
    MergeFrom(*source);
  }
}

void UpdateApplicationRsp::MergeFrom(const UpdateApplicationRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.UpdateApplicationRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void UpdateApplicationRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.UpdateApplicationRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateApplicationRsp::CopyFrom(const UpdateApplicationRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.UpdateApplicationRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateApplicationRsp::IsInitialized() const {
  return true;
}

void UpdateApplicationRsp::InternalSwap(UpdateApplicationRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateApplicationRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteApplicationRqst::InitAsDefaultInstance() {
}
class DeleteApplicationRqst::_Internal {
 public:
};

DeleteApplicationRqst::DeleteApplicationRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.DeleteApplicationRqst)
}
DeleteApplicationRqst::DeleteApplicationRqst(const DeleteApplicationRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  applicationid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_applicationid().empty()) {
    applicationid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_applicationid(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.DeleteApplicationRqst)
}

void DeleteApplicationRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DeleteApplicationRqst_resource_2eproto.base);
  applicationid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DeleteApplicationRqst::~DeleteApplicationRqst() {
  // @@protoc_insertion_point(destructor:resource.DeleteApplicationRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteApplicationRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  applicationid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeleteApplicationRqst::ArenaDtor(void* object) {
  DeleteApplicationRqst* _this = reinterpret_cast< DeleteApplicationRqst* >(object);
  (void)_this;
}
void DeleteApplicationRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteApplicationRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteApplicationRqst& DeleteApplicationRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteApplicationRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void DeleteApplicationRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.DeleteApplicationRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  applicationid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteApplicationRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string applicationId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_applicationid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.DeleteApplicationRqst.applicationId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteApplicationRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.DeleteApplicationRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string applicationId = 1;
  if (this->applicationid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_applicationid().data(), static_cast<int>(this->_internal_applicationid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.DeleteApplicationRqst.applicationId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_applicationid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.DeleteApplicationRqst)
  return target;
}

size_t DeleteApplicationRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.DeleteApplicationRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string applicationId = 1;
  if (this->applicationid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_applicationid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteApplicationRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.DeleteApplicationRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteApplicationRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteApplicationRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.DeleteApplicationRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.DeleteApplicationRqst)
    MergeFrom(*source);
  }
}

void DeleteApplicationRqst::MergeFrom(const DeleteApplicationRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.DeleteApplicationRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.applicationid().size() > 0) {
    _internal_set_applicationid(from._internal_applicationid());
  }
}

void DeleteApplicationRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.DeleteApplicationRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteApplicationRqst::CopyFrom(const DeleteApplicationRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.DeleteApplicationRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteApplicationRqst::IsInitialized() const {
  return true;
}

void DeleteApplicationRqst::InternalSwap(DeleteApplicationRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  applicationid_.Swap(&other->applicationid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteApplicationRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteApplicationRsp::InitAsDefaultInstance() {
}
class DeleteApplicationRsp::_Internal {
 public:
};

DeleteApplicationRsp::DeleteApplicationRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.DeleteApplicationRsp)
}
DeleteApplicationRsp::DeleteApplicationRsp(const DeleteApplicationRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.DeleteApplicationRsp)
}

void DeleteApplicationRsp::SharedCtor() {
  result_ = false;
}

DeleteApplicationRsp::~DeleteApplicationRsp() {
  // @@protoc_insertion_point(destructor:resource.DeleteApplicationRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteApplicationRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void DeleteApplicationRsp::ArenaDtor(void* object) {
  DeleteApplicationRsp* _this = reinterpret_cast< DeleteApplicationRsp* >(object);
  (void)_this;
}
void DeleteApplicationRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteApplicationRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteApplicationRsp& DeleteApplicationRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteApplicationRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void DeleteApplicationRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.DeleteApplicationRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteApplicationRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteApplicationRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.DeleteApplicationRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.DeleteApplicationRsp)
  return target;
}

size_t DeleteApplicationRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.DeleteApplicationRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteApplicationRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.DeleteApplicationRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteApplicationRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteApplicationRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.DeleteApplicationRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.DeleteApplicationRsp)
    MergeFrom(*source);
  }
}

void DeleteApplicationRsp::MergeFrom(const DeleteApplicationRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.DeleteApplicationRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void DeleteApplicationRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.DeleteApplicationRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteApplicationRsp::CopyFrom(const DeleteApplicationRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.DeleteApplicationRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteApplicationRsp::IsInitialized() const {
  return true;
}

void DeleteApplicationRsp::InternalSwap(DeleteApplicationRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteApplicationRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetApplicationsRqst::InitAsDefaultInstance() {
}
class GetApplicationsRqst::_Internal {
 public:
};

GetApplicationsRqst::GetApplicationsRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.GetApplicationsRqst)
}
GetApplicationsRqst::GetApplicationsRqst(const GetApplicationsRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  query_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_query().empty()) {
    query_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_query(),
      GetArena());
  }
  options_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_options().empty()) {
    options_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_options(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.GetApplicationsRqst)
}

void GetApplicationsRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetApplicationsRqst_resource_2eproto.base);
  query_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  options_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetApplicationsRqst::~GetApplicationsRqst() {
  // @@protoc_insertion_point(destructor:resource.GetApplicationsRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetApplicationsRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  query_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  options_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetApplicationsRqst::ArenaDtor(void* object) {
  GetApplicationsRqst* _this = reinterpret_cast< GetApplicationsRqst* >(object);
  (void)_this;
}
void GetApplicationsRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetApplicationsRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetApplicationsRqst& GetApplicationsRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetApplicationsRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void GetApplicationsRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.GetApplicationsRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  options_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetApplicationsRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string query = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_query();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.GetApplicationsRqst.query"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string options = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_options();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.GetApplicationsRqst.options"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetApplicationsRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.GetApplicationsRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_query().data(), static_cast<int>(this->_internal_query().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.GetApplicationsRqst.query");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_query(), target);
  }

  // string options = 2;
  if (this->options().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_options().data(), static_cast<int>(this->_internal_options().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.GetApplicationsRqst.options");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_options(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.GetApplicationsRqst)
  return target;
}

size_t GetApplicationsRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.GetApplicationsRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_query());
  }

  // string options = 2;
  if (this->options().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_options());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetApplicationsRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.GetApplicationsRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const GetApplicationsRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetApplicationsRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.GetApplicationsRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.GetApplicationsRqst)
    MergeFrom(*source);
  }
}

void GetApplicationsRqst::MergeFrom(const GetApplicationsRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.GetApplicationsRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query().size() > 0) {
    _internal_set_query(from._internal_query());
  }
  if (from.options().size() > 0) {
    _internal_set_options(from._internal_options());
  }
}

void GetApplicationsRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.GetApplicationsRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetApplicationsRqst::CopyFrom(const GetApplicationsRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.GetApplicationsRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetApplicationsRqst::IsInitialized() const {
  return true;
}

void GetApplicationsRqst::InternalSwap(GetApplicationsRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  query_.Swap(&other->query_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  options_.Swap(&other->options_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetApplicationsRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetApplicationsRsp::InitAsDefaultInstance() {
}
class GetApplicationsRsp::_Internal {
 public:
};

GetApplicationsRsp::GetApplicationsRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  applications_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.GetApplicationsRsp)
}
GetApplicationsRsp::GetApplicationsRsp(const GetApplicationsRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      applications_(from.applications_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:resource.GetApplicationsRsp)
}

void GetApplicationsRsp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetApplicationsRsp_resource_2eproto.base);
}

GetApplicationsRsp::~GetApplicationsRsp() {
  // @@protoc_insertion_point(destructor:resource.GetApplicationsRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetApplicationsRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetApplicationsRsp::ArenaDtor(void* object) {
  GetApplicationsRsp* _this = reinterpret_cast< GetApplicationsRsp* >(object);
  (void)_this;
}
void GetApplicationsRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetApplicationsRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetApplicationsRsp& GetApplicationsRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetApplicationsRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void GetApplicationsRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.GetApplicationsRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  applications_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetApplicationsRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .resource.Application applications = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_applications(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetApplicationsRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.GetApplicationsRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .resource.Application applications = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_applications_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_applications(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.GetApplicationsRsp)
  return target;
}

size_t GetApplicationsRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.GetApplicationsRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .resource.Application applications = 1;
  total_size += 1UL * this->_internal_applications_size();
  for (const auto& msg : this->applications_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetApplicationsRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.GetApplicationsRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetApplicationsRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetApplicationsRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.GetApplicationsRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.GetApplicationsRsp)
    MergeFrom(*source);
  }
}

void GetApplicationsRsp::MergeFrom(const GetApplicationsRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.GetApplicationsRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  applications_.MergeFrom(from.applications_);
}

void GetApplicationsRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.GetApplicationsRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetApplicationsRsp::CopyFrom(const GetApplicationsRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.GetApplicationsRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetApplicationsRsp::IsInitialized() const {
  return true;
}

void GetApplicationsRsp::InternalSwap(GetApplicationsRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  applications_.InternalSwap(&other->applications_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetApplicationsRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetApplicationVersionRqst::InitAsDefaultInstance() {
}
class GetApplicationVersionRqst::_Internal {
 public:
};

GetApplicationVersionRqst::GetApplicationVersionRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.GetApplicationVersionRqst)
}
GetApplicationVersionRqst::GetApplicationVersionRqst(const GetApplicationVersionRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.GetApplicationVersionRqst)
}

void GetApplicationVersionRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetApplicationVersionRqst_resource_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetApplicationVersionRqst::~GetApplicationVersionRqst() {
  // @@protoc_insertion_point(destructor:resource.GetApplicationVersionRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetApplicationVersionRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetApplicationVersionRqst::ArenaDtor(void* object) {
  GetApplicationVersionRqst* _this = reinterpret_cast< GetApplicationVersionRqst* >(object);
  (void)_this;
}
void GetApplicationVersionRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetApplicationVersionRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetApplicationVersionRqst& GetApplicationVersionRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetApplicationVersionRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void GetApplicationVersionRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.GetApplicationVersionRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetApplicationVersionRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.GetApplicationVersionRqst.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetApplicationVersionRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.GetApplicationVersionRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.GetApplicationVersionRqst.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.GetApplicationVersionRqst)
  return target;
}

size_t GetApplicationVersionRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.GetApplicationVersionRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetApplicationVersionRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.GetApplicationVersionRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const GetApplicationVersionRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetApplicationVersionRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.GetApplicationVersionRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.GetApplicationVersionRqst)
    MergeFrom(*source);
  }
}

void GetApplicationVersionRqst::MergeFrom(const GetApplicationVersionRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.GetApplicationVersionRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
}

void GetApplicationVersionRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.GetApplicationVersionRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetApplicationVersionRqst::CopyFrom(const GetApplicationVersionRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.GetApplicationVersionRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetApplicationVersionRqst::IsInitialized() const {
  return true;
}

void GetApplicationVersionRqst::InternalSwap(GetApplicationVersionRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetApplicationVersionRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetApplicationVersionRsp::InitAsDefaultInstance() {
}
class GetApplicationVersionRsp::_Internal {
 public:
};

GetApplicationVersionRsp::GetApplicationVersionRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.GetApplicationVersionRsp)
}
GetApplicationVersionRsp::GetApplicationVersionRsp(const GetApplicationVersionRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_version().empty()) {
    version_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_version(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.GetApplicationVersionRsp)
}

void GetApplicationVersionRsp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetApplicationVersionRsp_resource_2eproto.base);
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetApplicationVersionRsp::~GetApplicationVersionRsp() {
  // @@protoc_insertion_point(destructor:resource.GetApplicationVersionRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetApplicationVersionRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  version_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetApplicationVersionRsp::ArenaDtor(void* object) {
  GetApplicationVersionRsp* _this = reinterpret_cast< GetApplicationVersionRsp* >(object);
  (void)_this;
}
void GetApplicationVersionRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetApplicationVersionRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetApplicationVersionRsp& GetApplicationVersionRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetApplicationVersionRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void GetApplicationVersionRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.GetApplicationVersionRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  version_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetApplicationVersionRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string version = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_version();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.GetApplicationVersionRsp.version"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetApplicationVersionRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.GetApplicationVersionRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string version = 1;
  if (this->version().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_version().data(), static_cast<int>(this->_internal_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.GetApplicationVersionRsp.version");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_version(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.GetApplicationVersionRsp)
  return target;
}

size_t GetApplicationVersionRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.GetApplicationVersionRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string version = 1;
  if (this->version().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_version());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetApplicationVersionRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.GetApplicationVersionRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetApplicationVersionRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetApplicationVersionRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.GetApplicationVersionRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.GetApplicationVersionRsp)
    MergeFrom(*source);
  }
}

void GetApplicationVersionRsp::MergeFrom(const GetApplicationVersionRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.GetApplicationVersionRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.version().size() > 0) {
    _internal_set_version(from._internal_version());
  }
}

void GetApplicationVersionRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.GetApplicationVersionRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetApplicationVersionRsp::CopyFrom(const GetApplicationVersionRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.GetApplicationVersionRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetApplicationVersionRsp::IsInitialized() const {
  return true;
}

void GetApplicationVersionRsp::InternalSwap(GetApplicationVersionRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  version_.Swap(&other->version_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetApplicationVersionRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetApplicationIconRqst::InitAsDefaultInstance() {
}
class GetApplicationIconRqst::_Internal {
 public:
};

GetApplicationIconRqst::GetApplicationIconRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.GetApplicationIconRqst)
}
GetApplicationIconRqst::GetApplicationIconRqst(const GetApplicationIconRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.GetApplicationIconRqst)
}

void GetApplicationIconRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetApplicationIconRqst_resource_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetApplicationIconRqst::~GetApplicationIconRqst() {
  // @@protoc_insertion_point(destructor:resource.GetApplicationIconRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetApplicationIconRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetApplicationIconRqst::ArenaDtor(void* object) {
  GetApplicationIconRqst* _this = reinterpret_cast< GetApplicationIconRqst* >(object);
  (void)_this;
}
void GetApplicationIconRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetApplicationIconRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetApplicationIconRqst& GetApplicationIconRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetApplicationIconRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void GetApplicationIconRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.GetApplicationIconRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetApplicationIconRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.GetApplicationIconRqst.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetApplicationIconRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.GetApplicationIconRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.GetApplicationIconRqst.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.GetApplicationIconRqst)
  return target;
}

size_t GetApplicationIconRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.GetApplicationIconRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetApplicationIconRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.GetApplicationIconRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const GetApplicationIconRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetApplicationIconRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.GetApplicationIconRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.GetApplicationIconRqst)
    MergeFrom(*source);
  }
}

void GetApplicationIconRqst::MergeFrom(const GetApplicationIconRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.GetApplicationIconRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
}

void GetApplicationIconRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.GetApplicationIconRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetApplicationIconRqst::CopyFrom(const GetApplicationIconRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.GetApplicationIconRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetApplicationIconRqst::IsInitialized() const {
  return true;
}

void GetApplicationIconRqst::InternalSwap(GetApplicationIconRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetApplicationIconRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetApplicationIconRsp::InitAsDefaultInstance() {
}
class GetApplicationIconRsp::_Internal {
 public:
};

GetApplicationIconRsp::GetApplicationIconRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.GetApplicationIconRsp)
}
GetApplicationIconRsp::GetApplicationIconRsp(const GetApplicationIconRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  icon_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_icon().empty()) {
    icon_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_icon(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.GetApplicationIconRsp)
}

void GetApplicationIconRsp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetApplicationIconRsp_resource_2eproto.base);
  icon_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetApplicationIconRsp::~GetApplicationIconRsp() {
  // @@protoc_insertion_point(destructor:resource.GetApplicationIconRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetApplicationIconRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  icon_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetApplicationIconRsp::ArenaDtor(void* object) {
  GetApplicationIconRsp* _this = reinterpret_cast< GetApplicationIconRsp* >(object);
  (void)_this;
}
void GetApplicationIconRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetApplicationIconRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetApplicationIconRsp& GetApplicationIconRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetApplicationIconRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void GetApplicationIconRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.GetApplicationIconRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  icon_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetApplicationIconRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string icon = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_icon();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.GetApplicationIconRsp.icon"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetApplicationIconRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.GetApplicationIconRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string icon = 1;
  if (this->icon().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_icon().data(), static_cast<int>(this->_internal_icon().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.GetApplicationIconRsp.icon");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_icon(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.GetApplicationIconRsp)
  return target;
}

size_t GetApplicationIconRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.GetApplicationIconRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string icon = 1;
  if (this->icon().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_icon());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetApplicationIconRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.GetApplicationIconRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetApplicationIconRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetApplicationIconRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.GetApplicationIconRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.GetApplicationIconRsp)
    MergeFrom(*source);
  }
}

void GetApplicationIconRsp::MergeFrom(const GetApplicationIconRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.GetApplicationIconRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.icon().size() > 0) {
    _internal_set_icon(from._internal_icon());
  }
}

void GetApplicationIconRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.GetApplicationIconRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetApplicationIconRsp::CopyFrom(const GetApplicationIconRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.GetApplicationIconRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetApplicationIconRsp::IsInitialized() const {
  return true;
}

void GetApplicationIconRsp::InternalSwap(GetApplicationIconRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  icon_.Swap(&other->icon_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetApplicationIconRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetApplicationAliasRqst::InitAsDefaultInstance() {
}
class GetApplicationAliasRqst::_Internal {
 public:
};

GetApplicationAliasRqst::GetApplicationAliasRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.GetApplicationAliasRqst)
}
GetApplicationAliasRqst::GetApplicationAliasRqst(const GetApplicationAliasRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.GetApplicationAliasRqst)
}

void GetApplicationAliasRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetApplicationAliasRqst_resource_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetApplicationAliasRqst::~GetApplicationAliasRqst() {
  // @@protoc_insertion_point(destructor:resource.GetApplicationAliasRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetApplicationAliasRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetApplicationAliasRqst::ArenaDtor(void* object) {
  GetApplicationAliasRqst* _this = reinterpret_cast< GetApplicationAliasRqst* >(object);
  (void)_this;
}
void GetApplicationAliasRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetApplicationAliasRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetApplicationAliasRqst& GetApplicationAliasRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetApplicationAliasRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void GetApplicationAliasRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.GetApplicationAliasRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetApplicationAliasRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.GetApplicationAliasRqst.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetApplicationAliasRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.GetApplicationAliasRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.GetApplicationAliasRqst.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.GetApplicationAliasRqst)
  return target;
}

size_t GetApplicationAliasRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.GetApplicationAliasRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetApplicationAliasRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.GetApplicationAliasRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const GetApplicationAliasRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetApplicationAliasRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.GetApplicationAliasRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.GetApplicationAliasRqst)
    MergeFrom(*source);
  }
}

void GetApplicationAliasRqst::MergeFrom(const GetApplicationAliasRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.GetApplicationAliasRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
}

void GetApplicationAliasRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.GetApplicationAliasRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetApplicationAliasRqst::CopyFrom(const GetApplicationAliasRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.GetApplicationAliasRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetApplicationAliasRqst::IsInitialized() const {
  return true;
}

void GetApplicationAliasRqst::InternalSwap(GetApplicationAliasRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetApplicationAliasRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetApplicationAliasRsp::InitAsDefaultInstance() {
}
class GetApplicationAliasRsp::_Internal {
 public:
};

GetApplicationAliasRsp::GetApplicationAliasRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.GetApplicationAliasRsp)
}
GetApplicationAliasRsp::GetApplicationAliasRsp(const GetApplicationAliasRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  alias_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_alias().empty()) {
    alias_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_alias(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.GetApplicationAliasRsp)
}

void GetApplicationAliasRsp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetApplicationAliasRsp_resource_2eproto.base);
  alias_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetApplicationAliasRsp::~GetApplicationAliasRsp() {
  // @@protoc_insertion_point(destructor:resource.GetApplicationAliasRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetApplicationAliasRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  alias_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetApplicationAliasRsp::ArenaDtor(void* object) {
  GetApplicationAliasRsp* _this = reinterpret_cast< GetApplicationAliasRsp* >(object);
  (void)_this;
}
void GetApplicationAliasRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetApplicationAliasRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetApplicationAliasRsp& GetApplicationAliasRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetApplicationAliasRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void GetApplicationAliasRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.GetApplicationAliasRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  alias_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetApplicationAliasRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string alias = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_alias();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.GetApplicationAliasRsp.alias"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetApplicationAliasRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.GetApplicationAliasRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string alias = 1;
  if (this->alias().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_alias().data(), static_cast<int>(this->_internal_alias().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.GetApplicationAliasRsp.alias");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_alias(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.GetApplicationAliasRsp)
  return target;
}

size_t GetApplicationAliasRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.GetApplicationAliasRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string alias = 1;
  if (this->alias().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_alias());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetApplicationAliasRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.GetApplicationAliasRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetApplicationAliasRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetApplicationAliasRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.GetApplicationAliasRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.GetApplicationAliasRsp)
    MergeFrom(*source);
  }
}

void GetApplicationAliasRsp::MergeFrom(const GetApplicationAliasRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.GetApplicationAliasRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.alias().size() > 0) {
    _internal_set_alias(from._internal_alias());
  }
}

void GetApplicationAliasRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.GetApplicationAliasRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetApplicationAliasRsp::CopyFrom(const GetApplicationAliasRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.GetApplicationAliasRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetApplicationAliasRsp::IsInitialized() const {
  return true;
}

void GetApplicationAliasRsp::InternalSwap(GetApplicationAliasRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  alias_.Swap(&other->alias_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetApplicationAliasRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void IsOrgnanizationMemberRqst::InitAsDefaultInstance() {
}
class IsOrgnanizationMemberRqst::_Internal {
 public:
};

IsOrgnanizationMemberRqst::IsOrgnanizationMemberRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.IsOrgnanizationMemberRqst)
}
IsOrgnanizationMemberRqst::IsOrgnanizationMemberRqst(const IsOrgnanizationMemberRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  organizationid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_organizationid().empty()) {
    organizationid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_organizationid(),
      GetArena());
  }
  accountid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_accountid().empty()) {
    accountid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_accountid(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.IsOrgnanizationMemberRqst)
}

void IsOrgnanizationMemberRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_IsOrgnanizationMemberRqst_resource_2eproto.base);
  organizationid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  accountid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

IsOrgnanizationMemberRqst::~IsOrgnanizationMemberRqst() {
  // @@protoc_insertion_point(destructor:resource.IsOrgnanizationMemberRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void IsOrgnanizationMemberRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  organizationid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  accountid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void IsOrgnanizationMemberRqst::ArenaDtor(void* object) {
  IsOrgnanizationMemberRqst* _this = reinterpret_cast< IsOrgnanizationMemberRqst* >(object);
  (void)_this;
}
void IsOrgnanizationMemberRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void IsOrgnanizationMemberRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const IsOrgnanizationMemberRqst& IsOrgnanizationMemberRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_IsOrgnanizationMemberRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void IsOrgnanizationMemberRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.IsOrgnanizationMemberRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  organizationid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  accountid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* IsOrgnanizationMemberRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string organizationId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_organizationid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.IsOrgnanizationMemberRqst.organizationId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string accountId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_accountid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.IsOrgnanizationMemberRqst.accountId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* IsOrgnanizationMemberRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.IsOrgnanizationMemberRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string organizationId = 1;
  if (this->organizationid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organizationid().data(), static_cast<int>(this->_internal_organizationid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.IsOrgnanizationMemberRqst.organizationId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_organizationid(), target);
  }

  // string accountId = 2;
  if (this->accountid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_accountid().data(), static_cast<int>(this->_internal_accountid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.IsOrgnanizationMemberRqst.accountId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_accountid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.IsOrgnanizationMemberRqst)
  return target;
}

size_t IsOrgnanizationMemberRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.IsOrgnanizationMemberRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string organizationId = 1;
  if (this->organizationid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_organizationid());
  }

  // string accountId = 2;
  if (this->accountid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_accountid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IsOrgnanizationMemberRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.IsOrgnanizationMemberRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const IsOrgnanizationMemberRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<IsOrgnanizationMemberRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.IsOrgnanizationMemberRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.IsOrgnanizationMemberRqst)
    MergeFrom(*source);
  }
}

void IsOrgnanizationMemberRqst::MergeFrom(const IsOrgnanizationMemberRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.IsOrgnanizationMemberRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.organizationid().size() > 0) {
    _internal_set_organizationid(from._internal_organizationid());
  }
  if (from.accountid().size() > 0) {
    _internal_set_accountid(from._internal_accountid());
  }
}

void IsOrgnanizationMemberRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.IsOrgnanizationMemberRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IsOrgnanizationMemberRqst::CopyFrom(const IsOrgnanizationMemberRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.IsOrgnanizationMemberRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IsOrgnanizationMemberRqst::IsInitialized() const {
  return true;
}

void IsOrgnanizationMemberRqst::InternalSwap(IsOrgnanizationMemberRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  organizationid_.Swap(&other->organizationid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  accountid_.Swap(&other->accountid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata IsOrgnanizationMemberRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void IsOrgnanizationMemberRsp::InitAsDefaultInstance() {
}
class IsOrgnanizationMemberRsp::_Internal {
 public:
};

IsOrgnanizationMemberRsp::IsOrgnanizationMemberRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.IsOrgnanizationMemberRsp)
}
IsOrgnanizationMemberRsp::IsOrgnanizationMemberRsp(const IsOrgnanizationMemberRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.IsOrgnanizationMemberRsp)
}

void IsOrgnanizationMemberRsp::SharedCtor() {
  result_ = false;
}

IsOrgnanizationMemberRsp::~IsOrgnanizationMemberRsp() {
  // @@protoc_insertion_point(destructor:resource.IsOrgnanizationMemberRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void IsOrgnanizationMemberRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void IsOrgnanizationMemberRsp::ArenaDtor(void* object) {
  IsOrgnanizationMemberRsp* _this = reinterpret_cast< IsOrgnanizationMemberRsp* >(object);
  (void)_this;
}
void IsOrgnanizationMemberRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void IsOrgnanizationMemberRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const IsOrgnanizationMemberRsp& IsOrgnanizationMemberRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_IsOrgnanizationMemberRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void IsOrgnanizationMemberRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.IsOrgnanizationMemberRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* IsOrgnanizationMemberRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* IsOrgnanizationMemberRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.IsOrgnanizationMemberRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.IsOrgnanizationMemberRsp)
  return target;
}

size_t IsOrgnanizationMemberRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.IsOrgnanizationMemberRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IsOrgnanizationMemberRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.IsOrgnanizationMemberRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const IsOrgnanizationMemberRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<IsOrgnanizationMemberRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.IsOrgnanizationMemberRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.IsOrgnanizationMemberRsp)
    MergeFrom(*source);
  }
}

void IsOrgnanizationMemberRsp::MergeFrom(const IsOrgnanizationMemberRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.IsOrgnanizationMemberRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void IsOrgnanizationMemberRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.IsOrgnanizationMemberRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IsOrgnanizationMemberRsp::CopyFrom(const IsOrgnanizationMemberRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.IsOrgnanizationMemberRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IsOrgnanizationMemberRsp::IsInitialized() const {
  return true;
}

void IsOrgnanizationMemberRsp::InternalSwap(IsOrgnanizationMemberRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata IsOrgnanizationMemberRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SetPackageBundleRequest::InitAsDefaultInstance() {
  ::resource::_SetPackageBundleRequest_default_instance_._instance.get_mutable()->bundle_ = const_cast< ::resource::PackageBundle*>(
      ::resource::PackageBundle::internal_default_instance());
}
class SetPackageBundleRequest::_Internal {
 public:
  static const ::resource::PackageBundle& bundle(const SetPackageBundleRequest* msg);
};

const ::resource::PackageBundle&
SetPackageBundleRequest::_Internal::bundle(const SetPackageBundleRequest* msg) {
  return *msg->bundle_;
}
SetPackageBundleRequest::SetPackageBundleRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.SetPackageBundleRequest)
}
SetPackageBundleRequest::SetPackageBundleRequest(const SetPackageBundleRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_bundle()) {
    bundle_ = new ::resource::PackageBundle(*from.bundle_);
  } else {
    bundle_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:resource.SetPackageBundleRequest)
}

void SetPackageBundleRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SetPackageBundleRequest_resource_2eproto.base);
  bundle_ = nullptr;
}

SetPackageBundleRequest::~SetPackageBundleRequest() {
  // @@protoc_insertion_point(destructor:resource.SetPackageBundleRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SetPackageBundleRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete bundle_;
}

void SetPackageBundleRequest::ArenaDtor(void* object) {
  SetPackageBundleRequest* _this = reinterpret_cast< SetPackageBundleRequest* >(object);
  (void)_this;
}
void SetPackageBundleRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetPackageBundleRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetPackageBundleRequest& SetPackageBundleRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SetPackageBundleRequest_resource_2eproto.base);
  return *internal_default_instance();
}


void SetPackageBundleRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.SetPackageBundleRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && bundle_ != nullptr) {
    delete bundle_;
  }
  bundle_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetPackageBundleRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .resource.PackageBundle bundle = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_bundle(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetPackageBundleRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.SetPackageBundleRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .resource.PackageBundle bundle = 1;
  if (this->has_bundle()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::bundle(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.SetPackageBundleRequest)
  return target;
}

size_t SetPackageBundleRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.SetPackageBundleRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .resource.PackageBundle bundle = 1;
  if (this->has_bundle()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *bundle_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetPackageBundleRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.SetPackageBundleRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SetPackageBundleRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetPackageBundleRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.SetPackageBundleRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.SetPackageBundleRequest)
    MergeFrom(*source);
  }
}

void SetPackageBundleRequest::MergeFrom(const SetPackageBundleRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.SetPackageBundleRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_bundle()) {
    _internal_mutable_bundle()->::resource::PackageBundle::MergeFrom(from._internal_bundle());
  }
}

void SetPackageBundleRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.SetPackageBundleRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetPackageBundleRequest::CopyFrom(const SetPackageBundleRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.SetPackageBundleRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetPackageBundleRequest::IsInitialized() const {
  return true;
}

void SetPackageBundleRequest::InternalSwap(SetPackageBundleRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(bundle_, other->bundle_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetPackageBundleRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SetPackageBundleResponse::InitAsDefaultInstance() {
}
class SetPackageBundleResponse::_Internal {
 public:
};

SetPackageBundleResponse::SetPackageBundleResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.SetPackageBundleResponse)
}
SetPackageBundleResponse::SetPackageBundleResponse(const SetPackageBundleResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.SetPackageBundleResponse)
}

void SetPackageBundleResponse::SharedCtor() {
  result_ = false;
}

SetPackageBundleResponse::~SetPackageBundleResponse() {
  // @@protoc_insertion_point(destructor:resource.SetPackageBundleResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SetPackageBundleResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SetPackageBundleResponse::ArenaDtor(void* object) {
  SetPackageBundleResponse* _this = reinterpret_cast< SetPackageBundleResponse* >(object);
  (void)_this;
}
void SetPackageBundleResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetPackageBundleResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetPackageBundleResponse& SetPackageBundleResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SetPackageBundleResponse_resource_2eproto.base);
  return *internal_default_instance();
}


void SetPackageBundleResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.SetPackageBundleResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetPackageBundleResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetPackageBundleResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.SetPackageBundleResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.SetPackageBundleResponse)
  return target;
}

size_t SetPackageBundleResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.SetPackageBundleResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetPackageBundleResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.SetPackageBundleResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SetPackageBundleResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetPackageBundleResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.SetPackageBundleResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.SetPackageBundleResponse)
    MergeFrom(*source);
  }
}

void SetPackageBundleResponse::MergeFrom(const SetPackageBundleResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.SetPackageBundleResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void SetPackageBundleResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.SetPackageBundleResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetPackageBundleResponse::CopyFrom(const SetPackageBundleResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.SetPackageBundleResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetPackageBundleResponse::IsInitialized() const {
  return true;
}

void SetPackageBundleResponse::InternalSwap(SetPackageBundleResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetPackageBundleResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetPackageBundleChecksumRequest::InitAsDefaultInstance() {
}
class GetPackageBundleChecksumRequest::_Internal {
 public:
};

GetPackageBundleChecksumRequest::GetPackageBundleChecksumRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.GetPackageBundleChecksumRequest)
}
GetPackageBundleChecksumRequest::GetPackageBundleChecksumRequest(const GetPackageBundleChecksumRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.GetPackageBundleChecksumRequest)
}

void GetPackageBundleChecksumRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetPackageBundleChecksumRequest_resource_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetPackageBundleChecksumRequest::~GetPackageBundleChecksumRequest() {
  // @@protoc_insertion_point(destructor:resource.GetPackageBundleChecksumRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetPackageBundleChecksumRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetPackageBundleChecksumRequest::ArenaDtor(void* object) {
  GetPackageBundleChecksumRequest* _this = reinterpret_cast< GetPackageBundleChecksumRequest* >(object);
  (void)_this;
}
void GetPackageBundleChecksumRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetPackageBundleChecksumRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetPackageBundleChecksumRequest& GetPackageBundleChecksumRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetPackageBundleChecksumRequest_resource_2eproto.base);
  return *internal_default_instance();
}


void GetPackageBundleChecksumRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.GetPackageBundleChecksumRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetPackageBundleChecksumRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.GetPackageBundleChecksumRequest.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetPackageBundleChecksumRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.GetPackageBundleChecksumRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.GetPackageBundleChecksumRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.GetPackageBundleChecksumRequest)
  return target;
}

size_t GetPackageBundleChecksumRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.GetPackageBundleChecksumRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetPackageBundleChecksumRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.GetPackageBundleChecksumRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetPackageBundleChecksumRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetPackageBundleChecksumRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.GetPackageBundleChecksumRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.GetPackageBundleChecksumRequest)
    MergeFrom(*source);
  }
}

void GetPackageBundleChecksumRequest::MergeFrom(const GetPackageBundleChecksumRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.GetPackageBundleChecksumRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
}

void GetPackageBundleChecksumRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.GetPackageBundleChecksumRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetPackageBundleChecksumRequest::CopyFrom(const GetPackageBundleChecksumRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.GetPackageBundleChecksumRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPackageBundleChecksumRequest::IsInitialized() const {
  return true;
}

void GetPackageBundleChecksumRequest::InternalSwap(GetPackageBundleChecksumRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetPackageBundleChecksumRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetPackageBundleChecksumResponse::InitAsDefaultInstance() {
}
class GetPackageBundleChecksumResponse::_Internal {
 public:
};

GetPackageBundleChecksumResponse::GetPackageBundleChecksumResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.GetPackageBundleChecksumResponse)
}
GetPackageBundleChecksumResponse::GetPackageBundleChecksumResponse(const GetPackageBundleChecksumResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  checksum_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_checksum().empty()) {
    checksum_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_checksum(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.GetPackageBundleChecksumResponse)
}

void GetPackageBundleChecksumResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetPackageBundleChecksumResponse_resource_2eproto.base);
  checksum_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetPackageBundleChecksumResponse::~GetPackageBundleChecksumResponse() {
  // @@protoc_insertion_point(destructor:resource.GetPackageBundleChecksumResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetPackageBundleChecksumResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  checksum_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetPackageBundleChecksumResponse::ArenaDtor(void* object) {
  GetPackageBundleChecksumResponse* _this = reinterpret_cast< GetPackageBundleChecksumResponse* >(object);
  (void)_this;
}
void GetPackageBundleChecksumResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetPackageBundleChecksumResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetPackageBundleChecksumResponse& GetPackageBundleChecksumResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetPackageBundleChecksumResponse_resource_2eproto.base);
  return *internal_default_instance();
}


void GetPackageBundleChecksumResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.GetPackageBundleChecksumResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  checksum_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetPackageBundleChecksumResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string checksum = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_checksum();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.GetPackageBundleChecksumResponse.checksum"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetPackageBundleChecksumResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.GetPackageBundleChecksumResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string checksum = 1;
  if (this->checksum().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_checksum().data(), static_cast<int>(this->_internal_checksum().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.GetPackageBundleChecksumResponse.checksum");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_checksum(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.GetPackageBundleChecksumResponse)
  return target;
}

size_t GetPackageBundleChecksumResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.GetPackageBundleChecksumResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string checksum = 1;
  if (this->checksum().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_checksum());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetPackageBundleChecksumResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.GetPackageBundleChecksumResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetPackageBundleChecksumResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetPackageBundleChecksumResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.GetPackageBundleChecksumResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.GetPackageBundleChecksumResponse)
    MergeFrom(*source);
  }
}

void GetPackageBundleChecksumResponse::MergeFrom(const GetPackageBundleChecksumResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.GetPackageBundleChecksumResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.checksum().size() > 0) {
    _internal_set_checksum(from._internal_checksum());
  }
}

void GetPackageBundleChecksumResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.GetPackageBundleChecksumResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetPackageBundleChecksumResponse::CopyFrom(const GetPackageBundleChecksumResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.GetPackageBundleChecksumResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPackageBundleChecksumResponse::IsInitialized() const {
  return true;
}

void GetPackageBundleChecksumResponse::InternalSwap(GetPackageBundleChecksumResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  checksum_.Swap(&other->checksum_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetPackageBundleChecksumResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Group::InitAsDefaultInstance() {
}
class Group::_Internal {
 public:
};

Group::Group(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  members_(arena),
  organizations_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.Group)
}
Group::Group(const Group& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      members_(from.members_),
      organizations_(from.organizations_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.Group)
}

void Group::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Group_resource_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Group::~Group() {
  // @@protoc_insertion_point(destructor:resource.Group)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Group::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Group::ArenaDtor(void* object) {
  Group* _this = reinterpret_cast< Group* >(object);
  (void)_this;
}
void Group::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Group::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Group& Group::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Group_resource_2eproto.base);
  return *internal_default_instance();
}


void Group::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.Group)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  members_.Clear();
  organizations_.Clear();
  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Group::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Group.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Group.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string members = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_members();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Group.members"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated string organizations = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_organizations();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Group.organizations"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Group::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.Group)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Group.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Group.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // repeated string members = 3;
  for (int i = 0, n = this->_internal_members_size(); i < n; i++) {
    const auto& s = this->_internal_members(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Group.members");
    target = stream->WriteString(3, s, target);
  }

  // repeated string organizations = 4;
  for (int i = 0, n = this->_internal_organizations_size(); i < n; i++) {
    const auto& s = this->_internal_organizations(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Group.organizations");
    target = stream->WriteString(4, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.Group)
  return target;
}

size_t Group::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.Group)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string members = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(members_.size());
  for (int i = 0, n = members_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      members_.Get(i));
  }

  // repeated string organizations = 4;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(organizations_.size());
  for (int i = 0, n = organizations_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      organizations_.Get(i));
  }

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Group::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.Group)
  GOOGLE_DCHECK_NE(&from, this);
  const Group* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Group>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.Group)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.Group)
    MergeFrom(*source);
  }
}

void Group::MergeFrom(const Group& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.Group)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  members_.MergeFrom(from.members_);
  organizations_.MergeFrom(from.organizations_);
  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
}

void Group::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.Group)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Group::CopyFrom(const Group& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.Group)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Group::IsInitialized() const {
  return true;
}

void Group::InternalSwap(Group* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  members_.InternalSwap(&other->members_);
  organizations_.InternalSwap(&other->organizations_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata Group::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CreateGroupRqst::InitAsDefaultInstance() {
  ::resource::_CreateGroupRqst_default_instance_._instance.get_mutable()->group_ = const_cast< ::resource::Group*>(
      ::resource::Group::internal_default_instance());
}
class CreateGroupRqst::_Internal {
 public:
  static const ::resource::Group& group(const CreateGroupRqst* msg);
};

const ::resource::Group&
CreateGroupRqst::_Internal::group(const CreateGroupRqst* msg) {
  return *msg->group_;
}
CreateGroupRqst::CreateGroupRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.CreateGroupRqst)
}
CreateGroupRqst::CreateGroupRqst(const CreateGroupRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_group()) {
    group_ = new ::resource::Group(*from.group_);
  } else {
    group_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:resource.CreateGroupRqst)
}

void CreateGroupRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CreateGroupRqst_resource_2eproto.base);
  group_ = nullptr;
}

CreateGroupRqst::~CreateGroupRqst() {
  // @@protoc_insertion_point(destructor:resource.CreateGroupRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateGroupRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete group_;
}

void CreateGroupRqst::ArenaDtor(void* object) {
  CreateGroupRqst* _this = reinterpret_cast< CreateGroupRqst* >(object);
  (void)_this;
}
void CreateGroupRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateGroupRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateGroupRqst& CreateGroupRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreateGroupRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void CreateGroupRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.CreateGroupRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && group_ != nullptr) {
    delete group_;
  }
  group_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateGroupRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .resource.Group group = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_group(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateGroupRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.CreateGroupRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .resource.Group group = 1;
  if (this->has_group()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::group(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.CreateGroupRqst)
  return target;
}

size_t CreateGroupRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.CreateGroupRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .resource.Group group = 1;
  if (this->has_group()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *group_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateGroupRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.CreateGroupRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateGroupRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateGroupRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.CreateGroupRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.CreateGroupRqst)
    MergeFrom(*source);
  }
}

void CreateGroupRqst::MergeFrom(const CreateGroupRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.CreateGroupRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_group()) {
    _internal_mutable_group()->::resource::Group::MergeFrom(from._internal_group());
  }
}

void CreateGroupRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.CreateGroupRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateGroupRqst::CopyFrom(const CreateGroupRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.CreateGroupRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateGroupRqst::IsInitialized() const {
  return true;
}

void CreateGroupRqst::InternalSwap(CreateGroupRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(group_, other->group_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateGroupRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CreateGroupRsp::InitAsDefaultInstance() {
}
class CreateGroupRsp::_Internal {
 public:
};

CreateGroupRsp::CreateGroupRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.CreateGroupRsp)
}
CreateGroupRsp::CreateGroupRsp(const CreateGroupRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.CreateGroupRsp)
}

void CreateGroupRsp::SharedCtor() {
  result_ = false;
}

CreateGroupRsp::~CreateGroupRsp() {
  // @@protoc_insertion_point(destructor:resource.CreateGroupRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateGroupRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CreateGroupRsp::ArenaDtor(void* object) {
  CreateGroupRsp* _this = reinterpret_cast< CreateGroupRsp* >(object);
  (void)_this;
}
void CreateGroupRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateGroupRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateGroupRsp& CreateGroupRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreateGroupRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void CreateGroupRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.CreateGroupRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateGroupRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateGroupRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.CreateGroupRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.CreateGroupRsp)
  return target;
}

size_t CreateGroupRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.CreateGroupRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateGroupRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.CreateGroupRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateGroupRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateGroupRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.CreateGroupRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.CreateGroupRsp)
    MergeFrom(*source);
  }
}

void CreateGroupRsp::MergeFrom(const CreateGroupRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.CreateGroupRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void CreateGroupRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.CreateGroupRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateGroupRsp::CopyFrom(const CreateGroupRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.CreateGroupRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateGroupRsp::IsInitialized() const {
  return true;
}

void CreateGroupRsp::InternalSwap(CreateGroupRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateGroupRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpdateGroupRqst::InitAsDefaultInstance() {
}
class UpdateGroupRqst::_Internal {
 public:
};

UpdateGroupRqst::UpdateGroupRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.UpdateGroupRqst)
}
UpdateGroupRqst::UpdateGroupRqst(const UpdateGroupRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  groupid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_groupid().empty()) {
    groupid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_groupid(),
      GetArena());
  }
  values_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_values().empty()) {
    values_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_values(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.UpdateGroupRqst)
}

void UpdateGroupRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UpdateGroupRqst_resource_2eproto.base);
  groupid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  values_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

UpdateGroupRqst::~UpdateGroupRqst() {
  // @@protoc_insertion_point(destructor:resource.UpdateGroupRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UpdateGroupRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  groupid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  values_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void UpdateGroupRqst::ArenaDtor(void* object) {
  UpdateGroupRqst* _this = reinterpret_cast< UpdateGroupRqst* >(object);
  (void)_this;
}
void UpdateGroupRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateGroupRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateGroupRqst& UpdateGroupRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpdateGroupRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void UpdateGroupRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.UpdateGroupRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  groupid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  values_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateGroupRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string groupId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_groupid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.UpdateGroupRqst.groupId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string values = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_values();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.UpdateGroupRqst.values"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateGroupRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.UpdateGroupRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string groupId = 1;
  if (this->groupid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_groupid().data(), static_cast<int>(this->_internal_groupid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.UpdateGroupRqst.groupId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_groupid(), target);
  }

  // string values = 2;
  if (this->values().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_values().data(), static_cast<int>(this->_internal_values().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.UpdateGroupRqst.values");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_values(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.UpdateGroupRqst)
  return target;
}

size_t UpdateGroupRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.UpdateGroupRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string groupId = 1;
  if (this->groupid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_groupid());
  }

  // string values = 2;
  if (this->values().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_values());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateGroupRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.UpdateGroupRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateGroupRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateGroupRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.UpdateGroupRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.UpdateGroupRqst)
    MergeFrom(*source);
  }
}

void UpdateGroupRqst::MergeFrom(const UpdateGroupRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.UpdateGroupRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.groupid().size() > 0) {
    _internal_set_groupid(from._internal_groupid());
  }
  if (from.values().size() > 0) {
    _internal_set_values(from._internal_values());
  }
}

void UpdateGroupRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.UpdateGroupRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateGroupRqst::CopyFrom(const UpdateGroupRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.UpdateGroupRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateGroupRqst::IsInitialized() const {
  return true;
}

void UpdateGroupRqst::InternalSwap(UpdateGroupRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  groupid_.Swap(&other->groupid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  values_.Swap(&other->values_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateGroupRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpdateGroupRsp::InitAsDefaultInstance() {
}
class UpdateGroupRsp::_Internal {
 public:
};

UpdateGroupRsp::UpdateGroupRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.UpdateGroupRsp)
}
UpdateGroupRsp::UpdateGroupRsp(const UpdateGroupRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.UpdateGroupRsp)
}

void UpdateGroupRsp::SharedCtor() {
  result_ = false;
}

UpdateGroupRsp::~UpdateGroupRsp() {
  // @@protoc_insertion_point(destructor:resource.UpdateGroupRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UpdateGroupRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void UpdateGroupRsp::ArenaDtor(void* object) {
  UpdateGroupRsp* _this = reinterpret_cast< UpdateGroupRsp* >(object);
  (void)_this;
}
void UpdateGroupRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateGroupRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateGroupRsp& UpdateGroupRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpdateGroupRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void UpdateGroupRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.UpdateGroupRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateGroupRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateGroupRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.UpdateGroupRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.UpdateGroupRsp)
  return target;
}

size_t UpdateGroupRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.UpdateGroupRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateGroupRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.UpdateGroupRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateGroupRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateGroupRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.UpdateGroupRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.UpdateGroupRsp)
    MergeFrom(*source);
  }
}

void UpdateGroupRsp::MergeFrom(const UpdateGroupRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.UpdateGroupRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void UpdateGroupRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.UpdateGroupRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateGroupRsp::CopyFrom(const UpdateGroupRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.UpdateGroupRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateGroupRsp::IsInitialized() const {
  return true;
}

void UpdateGroupRsp::InternalSwap(UpdateGroupRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateGroupRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetGroupsRqst::InitAsDefaultInstance() {
}
class GetGroupsRqst::_Internal {
 public:
};

GetGroupsRqst::GetGroupsRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.GetGroupsRqst)
}
GetGroupsRqst::GetGroupsRqst(const GetGroupsRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  query_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_query().empty()) {
    query_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_query(),
      GetArena());
  }
  options_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_options().empty()) {
    options_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_options(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.GetGroupsRqst)
}

void GetGroupsRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetGroupsRqst_resource_2eproto.base);
  query_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  options_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetGroupsRqst::~GetGroupsRqst() {
  // @@protoc_insertion_point(destructor:resource.GetGroupsRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetGroupsRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  query_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  options_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetGroupsRqst::ArenaDtor(void* object) {
  GetGroupsRqst* _this = reinterpret_cast< GetGroupsRqst* >(object);
  (void)_this;
}
void GetGroupsRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetGroupsRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetGroupsRqst& GetGroupsRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetGroupsRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void GetGroupsRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.GetGroupsRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  options_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetGroupsRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string query = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_query();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.GetGroupsRqst.query"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string options = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_options();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.GetGroupsRqst.options"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetGroupsRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.GetGroupsRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_query().data(), static_cast<int>(this->_internal_query().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.GetGroupsRqst.query");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_query(), target);
  }

  // string options = 2;
  if (this->options().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_options().data(), static_cast<int>(this->_internal_options().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.GetGroupsRqst.options");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_options(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.GetGroupsRqst)
  return target;
}

size_t GetGroupsRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.GetGroupsRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_query());
  }

  // string options = 2;
  if (this->options().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_options());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetGroupsRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.GetGroupsRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const GetGroupsRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetGroupsRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.GetGroupsRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.GetGroupsRqst)
    MergeFrom(*source);
  }
}

void GetGroupsRqst::MergeFrom(const GetGroupsRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.GetGroupsRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query().size() > 0) {
    _internal_set_query(from._internal_query());
  }
  if (from.options().size() > 0) {
    _internal_set_options(from._internal_options());
  }
}

void GetGroupsRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.GetGroupsRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetGroupsRqst::CopyFrom(const GetGroupsRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.GetGroupsRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetGroupsRqst::IsInitialized() const {
  return true;
}

void GetGroupsRqst::InternalSwap(GetGroupsRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  query_.Swap(&other->query_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  options_.Swap(&other->options_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetGroupsRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetGroupsRsp::InitAsDefaultInstance() {
}
class GetGroupsRsp::_Internal {
 public:
};

GetGroupsRsp::GetGroupsRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  groups_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.GetGroupsRsp)
}
GetGroupsRsp::GetGroupsRsp(const GetGroupsRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      groups_(from.groups_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:resource.GetGroupsRsp)
}

void GetGroupsRsp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetGroupsRsp_resource_2eproto.base);
}

GetGroupsRsp::~GetGroupsRsp() {
  // @@protoc_insertion_point(destructor:resource.GetGroupsRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetGroupsRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetGroupsRsp::ArenaDtor(void* object) {
  GetGroupsRsp* _this = reinterpret_cast< GetGroupsRsp* >(object);
  (void)_this;
}
void GetGroupsRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetGroupsRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetGroupsRsp& GetGroupsRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetGroupsRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void GetGroupsRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.GetGroupsRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  groups_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetGroupsRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .resource.Group groups = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_groups(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetGroupsRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.GetGroupsRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .resource.Group groups = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_groups_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_groups(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.GetGroupsRsp)
  return target;
}

size_t GetGroupsRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.GetGroupsRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .resource.Group groups = 1;
  total_size += 1UL * this->_internal_groups_size();
  for (const auto& msg : this->groups_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetGroupsRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.GetGroupsRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetGroupsRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetGroupsRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.GetGroupsRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.GetGroupsRsp)
    MergeFrom(*source);
  }
}

void GetGroupsRsp::MergeFrom(const GetGroupsRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.GetGroupsRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  groups_.MergeFrom(from.groups_);
}

void GetGroupsRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.GetGroupsRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetGroupsRsp::CopyFrom(const GetGroupsRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.GetGroupsRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetGroupsRsp::IsInitialized() const {
  return true;
}

void GetGroupsRsp::InternalSwap(GetGroupsRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  groups_.InternalSwap(&other->groups_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetGroupsRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteGroupRqst::InitAsDefaultInstance() {
}
class DeleteGroupRqst::_Internal {
 public:
};

DeleteGroupRqst::DeleteGroupRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.DeleteGroupRqst)
}
DeleteGroupRqst::DeleteGroupRqst(const DeleteGroupRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  group_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_group().empty()) {
    group_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_group(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.DeleteGroupRqst)
}

void DeleteGroupRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DeleteGroupRqst_resource_2eproto.base);
  group_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DeleteGroupRqst::~DeleteGroupRqst() {
  // @@protoc_insertion_point(destructor:resource.DeleteGroupRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteGroupRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  group_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeleteGroupRqst::ArenaDtor(void* object) {
  DeleteGroupRqst* _this = reinterpret_cast< DeleteGroupRqst* >(object);
  (void)_this;
}
void DeleteGroupRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteGroupRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteGroupRqst& DeleteGroupRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteGroupRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void DeleteGroupRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.DeleteGroupRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  group_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteGroupRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string group = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_group();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.DeleteGroupRqst.group"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteGroupRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.DeleteGroupRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string group = 1;
  if (this->group().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_group().data(), static_cast<int>(this->_internal_group().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.DeleteGroupRqst.group");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_group(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.DeleteGroupRqst)
  return target;
}

size_t DeleteGroupRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.DeleteGroupRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string group = 1;
  if (this->group().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_group());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteGroupRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.DeleteGroupRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteGroupRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteGroupRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.DeleteGroupRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.DeleteGroupRqst)
    MergeFrom(*source);
  }
}

void DeleteGroupRqst::MergeFrom(const DeleteGroupRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.DeleteGroupRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.group().size() > 0) {
    _internal_set_group(from._internal_group());
  }
}

void DeleteGroupRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.DeleteGroupRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteGroupRqst::CopyFrom(const DeleteGroupRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.DeleteGroupRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteGroupRqst::IsInitialized() const {
  return true;
}

void DeleteGroupRqst::InternalSwap(DeleteGroupRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  group_.Swap(&other->group_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteGroupRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteGroupRsp::InitAsDefaultInstance() {
}
class DeleteGroupRsp::_Internal {
 public:
};

DeleteGroupRsp::DeleteGroupRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.DeleteGroupRsp)
}
DeleteGroupRsp::DeleteGroupRsp(const DeleteGroupRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.DeleteGroupRsp)
}

void DeleteGroupRsp::SharedCtor() {
  result_ = false;
}

DeleteGroupRsp::~DeleteGroupRsp() {
  // @@protoc_insertion_point(destructor:resource.DeleteGroupRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteGroupRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void DeleteGroupRsp::ArenaDtor(void* object) {
  DeleteGroupRsp* _this = reinterpret_cast< DeleteGroupRsp* >(object);
  (void)_this;
}
void DeleteGroupRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteGroupRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteGroupRsp& DeleteGroupRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteGroupRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void DeleteGroupRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.DeleteGroupRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteGroupRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteGroupRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.DeleteGroupRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.DeleteGroupRsp)
  return target;
}

size_t DeleteGroupRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.DeleteGroupRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteGroupRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.DeleteGroupRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteGroupRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteGroupRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.DeleteGroupRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.DeleteGroupRsp)
    MergeFrom(*source);
  }
}

void DeleteGroupRsp::MergeFrom(const DeleteGroupRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.DeleteGroupRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void DeleteGroupRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.DeleteGroupRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteGroupRsp::CopyFrom(const DeleteGroupRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.DeleteGroupRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteGroupRsp::IsInitialized() const {
  return true;
}

void DeleteGroupRsp::InternalSwap(DeleteGroupRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteGroupRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AddGroupMemberAccountRqst::InitAsDefaultInstance() {
}
class AddGroupMemberAccountRqst::_Internal {
 public:
};

AddGroupMemberAccountRqst::AddGroupMemberAccountRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.AddGroupMemberAccountRqst)
}
AddGroupMemberAccountRqst::AddGroupMemberAccountRqst(const AddGroupMemberAccountRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  groupid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_groupid().empty()) {
    groupid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_groupid(),
      GetArena());
  }
  accountid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_accountid().empty()) {
    accountid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_accountid(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.AddGroupMemberAccountRqst)
}

void AddGroupMemberAccountRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AddGroupMemberAccountRqst_resource_2eproto.base);
  groupid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  accountid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

AddGroupMemberAccountRqst::~AddGroupMemberAccountRqst() {
  // @@protoc_insertion_point(destructor:resource.AddGroupMemberAccountRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddGroupMemberAccountRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  groupid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  accountid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AddGroupMemberAccountRqst::ArenaDtor(void* object) {
  AddGroupMemberAccountRqst* _this = reinterpret_cast< AddGroupMemberAccountRqst* >(object);
  (void)_this;
}
void AddGroupMemberAccountRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddGroupMemberAccountRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AddGroupMemberAccountRqst& AddGroupMemberAccountRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AddGroupMemberAccountRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void AddGroupMemberAccountRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.AddGroupMemberAccountRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  groupid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  accountid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddGroupMemberAccountRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string groupId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_groupid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.AddGroupMemberAccountRqst.groupId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string accountId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_accountid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.AddGroupMemberAccountRqst.accountId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddGroupMemberAccountRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.AddGroupMemberAccountRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string groupId = 1;
  if (this->groupid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_groupid().data(), static_cast<int>(this->_internal_groupid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.AddGroupMemberAccountRqst.groupId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_groupid(), target);
  }

  // string accountId = 2;
  if (this->accountid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_accountid().data(), static_cast<int>(this->_internal_accountid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.AddGroupMemberAccountRqst.accountId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_accountid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.AddGroupMemberAccountRqst)
  return target;
}

size_t AddGroupMemberAccountRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.AddGroupMemberAccountRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string groupId = 1;
  if (this->groupid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_groupid());
  }

  // string accountId = 2;
  if (this->accountid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_accountid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddGroupMemberAccountRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.AddGroupMemberAccountRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const AddGroupMemberAccountRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddGroupMemberAccountRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.AddGroupMemberAccountRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.AddGroupMemberAccountRqst)
    MergeFrom(*source);
  }
}

void AddGroupMemberAccountRqst::MergeFrom(const AddGroupMemberAccountRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.AddGroupMemberAccountRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.groupid().size() > 0) {
    _internal_set_groupid(from._internal_groupid());
  }
  if (from.accountid().size() > 0) {
    _internal_set_accountid(from._internal_accountid());
  }
}

void AddGroupMemberAccountRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.AddGroupMemberAccountRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddGroupMemberAccountRqst::CopyFrom(const AddGroupMemberAccountRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.AddGroupMemberAccountRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddGroupMemberAccountRqst::IsInitialized() const {
  return true;
}

void AddGroupMemberAccountRqst::InternalSwap(AddGroupMemberAccountRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  groupid_.Swap(&other->groupid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  accountid_.Swap(&other->accountid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata AddGroupMemberAccountRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AddGroupMemberAccountRsp::InitAsDefaultInstance() {
}
class AddGroupMemberAccountRsp::_Internal {
 public:
};

AddGroupMemberAccountRsp::AddGroupMemberAccountRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.AddGroupMemberAccountRsp)
}
AddGroupMemberAccountRsp::AddGroupMemberAccountRsp(const AddGroupMemberAccountRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.AddGroupMemberAccountRsp)
}

void AddGroupMemberAccountRsp::SharedCtor() {
  result_ = false;
}

AddGroupMemberAccountRsp::~AddGroupMemberAccountRsp() {
  // @@protoc_insertion_point(destructor:resource.AddGroupMemberAccountRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddGroupMemberAccountRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void AddGroupMemberAccountRsp::ArenaDtor(void* object) {
  AddGroupMemberAccountRsp* _this = reinterpret_cast< AddGroupMemberAccountRsp* >(object);
  (void)_this;
}
void AddGroupMemberAccountRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddGroupMemberAccountRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AddGroupMemberAccountRsp& AddGroupMemberAccountRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AddGroupMemberAccountRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void AddGroupMemberAccountRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.AddGroupMemberAccountRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddGroupMemberAccountRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddGroupMemberAccountRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.AddGroupMemberAccountRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.AddGroupMemberAccountRsp)
  return target;
}

size_t AddGroupMemberAccountRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.AddGroupMemberAccountRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddGroupMemberAccountRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.AddGroupMemberAccountRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const AddGroupMemberAccountRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddGroupMemberAccountRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.AddGroupMemberAccountRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.AddGroupMemberAccountRsp)
    MergeFrom(*source);
  }
}

void AddGroupMemberAccountRsp::MergeFrom(const AddGroupMemberAccountRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.AddGroupMemberAccountRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void AddGroupMemberAccountRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.AddGroupMemberAccountRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddGroupMemberAccountRsp::CopyFrom(const AddGroupMemberAccountRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.AddGroupMemberAccountRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddGroupMemberAccountRsp::IsInitialized() const {
  return true;
}

void AddGroupMemberAccountRsp::InternalSwap(AddGroupMemberAccountRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AddGroupMemberAccountRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RemoveGroupMemberAccountRqst::InitAsDefaultInstance() {
}
class RemoveGroupMemberAccountRqst::_Internal {
 public:
};

RemoveGroupMemberAccountRqst::RemoveGroupMemberAccountRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.RemoveGroupMemberAccountRqst)
}
RemoveGroupMemberAccountRqst::RemoveGroupMemberAccountRqst(const RemoveGroupMemberAccountRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  groupid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_groupid().empty()) {
    groupid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_groupid(),
      GetArena());
  }
  accountid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_accountid().empty()) {
    accountid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_accountid(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.RemoveGroupMemberAccountRqst)
}

void RemoveGroupMemberAccountRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RemoveGroupMemberAccountRqst_resource_2eproto.base);
  groupid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  accountid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

RemoveGroupMemberAccountRqst::~RemoveGroupMemberAccountRqst() {
  // @@protoc_insertion_point(destructor:resource.RemoveGroupMemberAccountRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemoveGroupMemberAccountRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  groupid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  accountid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RemoveGroupMemberAccountRqst::ArenaDtor(void* object) {
  RemoveGroupMemberAccountRqst* _this = reinterpret_cast< RemoveGroupMemberAccountRqst* >(object);
  (void)_this;
}
void RemoveGroupMemberAccountRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemoveGroupMemberAccountRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RemoveGroupMemberAccountRqst& RemoveGroupMemberAccountRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RemoveGroupMemberAccountRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void RemoveGroupMemberAccountRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.RemoveGroupMemberAccountRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  groupid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  accountid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveGroupMemberAccountRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string groupId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_groupid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.RemoveGroupMemberAccountRqst.groupId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string accountId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_accountid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.RemoveGroupMemberAccountRqst.accountId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemoveGroupMemberAccountRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.RemoveGroupMemberAccountRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string groupId = 1;
  if (this->groupid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_groupid().data(), static_cast<int>(this->_internal_groupid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.RemoveGroupMemberAccountRqst.groupId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_groupid(), target);
  }

  // string accountId = 2;
  if (this->accountid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_accountid().data(), static_cast<int>(this->_internal_accountid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.RemoveGroupMemberAccountRqst.accountId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_accountid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.RemoveGroupMemberAccountRqst)
  return target;
}

size_t RemoveGroupMemberAccountRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.RemoveGroupMemberAccountRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string groupId = 1;
  if (this->groupid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_groupid());
  }

  // string accountId = 2;
  if (this->accountid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_accountid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveGroupMemberAccountRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.RemoveGroupMemberAccountRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveGroupMemberAccountRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemoveGroupMemberAccountRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.RemoveGroupMemberAccountRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.RemoveGroupMemberAccountRqst)
    MergeFrom(*source);
  }
}

void RemoveGroupMemberAccountRqst::MergeFrom(const RemoveGroupMemberAccountRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.RemoveGroupMemberAccountRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.groupid().size() > 0) {
    _internal_set_groupid(from._internal_groupid());
  }
  if (from.accountid().size() > 0) {
    _internal_set_accountid(from._internal_accountid());
  }
}

void RemoveGroupMemberAccountRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.RemoveGroupMemberAccountRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveGroupMemberAccountRqst::CopyFrom(const RemoveGroupMemberAccountRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.RemoveGroupMemberAccountRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveGroupMemberAccountRqst::IsInitialized() const {
  return true;
}

void RemoveGroupMemberAccountRqst::InternalSwap(RemoveGroupMemberAccountRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  groupid_.Swap(&other->groupid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  accountid_.Swap(&other->accountid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveGroupMemberAccountRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RemoveGroupMemberAccountRsp::InitAsDefaultInstance() {
}
class RemoveGroupMemberAccountRsp::_Internal {
 public:
};

RemoveGroupMemberAccountRsp::RemoveGroupMemberAccountRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.RemoveGroupMemberAccountRsp)
}
RemoveGroupMemberAccountRsp::RemoveGroupMemberAccountRsp(const RemoveGroupMemberAccountRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.RemoveGroupMemberAccountRsp)
}

void RemoveGroupMemberAccountRsp::SharedCtor() {
  result_ = false;
}

RemoveGroupMemberAccountRsp::~RemoveGroupMemberAccountRsp() {
  // @@protoc_insertion_point(destructor:resource.RemoveGroupMemberAccountRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemoveGroupMemberAccountRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RemoveGroupMemberAccountRsp::ArenaDtor(void* object) {
  RemoveGroupMemberAccountRsp* _this = reinterpret_cast< RemoveGroupMemberAccountRsp* >(object);
  (void)_this;
}
void RemoveGroupMemberAccountRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemoveGroupMemberAccountRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RemoveGroupMemberAccountRsp& RemoveGroupMemberAccountRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RemoveGroupMemberAccountRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void RemoveGroupMemberAccountRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.RemoveGroupMemberAccountRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveGroupMemberAccountRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemoveGroupMemberAccountRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.RemoveGroupMemberAccountRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.RemoveGroupMemberAccountRsp)
  return target;
}

size_t RemoveGroupMemberAccountRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.RemoveGroupMemberAccountRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveGroupMemberAccountRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.RemoveGroupMemberAccountRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveGroupMemberAccountRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemoveGroupMemberAccountRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.RemoveGroupMemberAccountRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.RemoveGroupMemberAccountRsp)
    MergeFrom(*source);
  }
}

void RemoveGroupMemberAccountRsp::MergeFrom(const RemoveGroupMemberAccountRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.RemoveGroupMemberAccountRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void RemoveGroupMemberAccountRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.RemoveGroupMemberAccountRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveGroupMemberAccountRsp::CopyFrom(const RemoveGroupMemberAccountRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.RemoveGroupMemberAccountRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveGroupMemberAccountRsp::IsInitialized() const {
  return true;
}

void RemoveGroupMemberAccountRsp::InternalSwap(RemoveGroupMemberAccountRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveGroupMemberAccountRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Organization::InitAsDefaultInstance() {
}
class Organization::_Internal {
 public:
};

Organization::Organization(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  accounts_(arena),
  groups_(arena),
  roles_(arena),
  applications_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.Organization)
}
Organization::Organization(const Organization& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      accounts_(from.accounts_),
      groups_(from.groups_),
      roles_(from.roles_),
      applications_(from.applications_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.Organization)
}

void Organization::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Organization_resource_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Organization::~Organization() {
  // @@protoc_insertion_point(destructor:resource.Organization)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Organization::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Organization::ArenaDtor(void* object) {
  Organization* _this = reinterpret_cast< Organization* >(object);
  (void)_this;
}
void Organization::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Organization::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Organization& Organization::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Organization_resource_2eproto.base);
  return *internal_default_instance();
}


void Organization::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.Organization)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  accounts_.Clear();
  groups_.Clear();
  roles_.Clear();
  applications_.Clear();
  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Organization::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Organization.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Organization.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string accounts = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_accounts();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Organization.accounts"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated string groups = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_groups();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Organization.groups"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated string roles = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_roles();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Organization.roles"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated string applications = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_applications();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Organization.applications"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Organization::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.Organization)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Organization.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Organization.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // repeated string accounts = 3;
  for (int i = 0, n = this->_internal_accounts_size(); i < n; i++) {
    const auto& s = this->_internal_accounts(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Organization.accounts");
    target = stream->WriteString(3, s, target);
  }

  // repeated string groups = 4;
  for (int i = 0, n = this->_internal_groups_size(); i < n; i++) {
    const auto& s = this->_internal_groups(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Organization.groups");
    target = stream->WriteString(4, s, target);
  }

  // repeated string roles = 5;
  for (int i = 0, n = this->_internal_roles_size(); i < n; i++) {
    const auto& s = this->_internal_roles(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Organization.roles");
    target = stream->WriteString(5, s, target);
  }

  // repeated string applications = 6;
  for (int i = 0, n = this->_internal_applications_size(); i < n; i++) {
    const auto& s = this->_internal_applications(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Organization.applications");
    target = stream->WriteString(6, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.Organization)
  return target;
}

size_t Organization::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.Organization)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string accounts = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(accounts_.size());
  for (int i = 0, n = accounts_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      accounts_.Get(i));
  }

  // repeated string groups = 4;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(groups_.size());
  for (int i = 0, n = groups_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      groups_.Get(i));
  }

  // repeated string roles = 5;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(roles_.size());
  for (int i = 0, n = roles_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      roles_.Get(i));
  }

  // repeated string applications = 6;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(applications_.size());
  for (int i = 0, n = applications_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      applications_.Get(i));
  }

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Organization::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.Organization)
  GOOGLE_DCHECK_NE(&from, this);
  const Organization* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Organization>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.Organization)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.Organization)
    MergeFrom(*source);
  }
}

void Organization::MergeFrom(const Organization& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.Organization)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  accounts_.MergeFrom(from.accounts_);
  groups_.MergeFrom(from.groups_);
  roles_.MergeFrom(from.roles_);
  applications_.MergeFrom(from.applications_);
  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
}

void Organization::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.Organization)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Organization::CopyFrom(const Organization& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.Organization)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Organization::IsInitialized() const {
  return true;
}

void Organization::InternalSwap(Organization* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  accounts_.InternalSwap(&other->accounts_);
  groups_.InternalSwap(&other->groups_);
  roles_.InternalSwap(&other->roles_);
  applications_.InternalSwap(&other->applications_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata Organization::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CreateOrganizationRqst::InitAsDefaultInstance() {
  ::resource::_CreateOrganizationRqst_default_instance_._instance.get_mutable()->organization_ = const_cast< ::resource::Organization*>(
      ::resource::Organization::internal_default_instance());
}
class CreateOrganizationRqst::_Internal {
 public:
  static const ::resource::Organization& organization(const CreateOrganizationRqst* msg);
};

const ::resource::Organization&
CreateOrganizationRqst::_Internal::organization(const CreateOrganizationRqst* msg) {
  return *msg->organization_;
}
CreateOrganizationRqst::CreateOrganizationRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.CreateOrganizationRqst)
}
CreateOrganizationRqst::CreateOrganizationRqst(const CreateOrganizationRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_organization()) {
    organization_ = new ::resource::Organization(*from.organization_);
  } else {
    organization_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:resource.CreateOrganizationRqst)
}

void CreateOrganizationRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CreateOrganizationRqst_resource_2eproto.base);
  organization_ = nullptr;
}

CreateOrganizationRqst::~CreateOrganizationRqst() {
  // @@protoc_insertion_point(destructor:resource.CreateOrganizationRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateOrganizationRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete organization_;
}

void CreateOrganizationRqst::ArenaDtor(void* object) {
  CreateOrganizationRqst* _this = reinterpret_cast< CreateOrganizationRqst* >(object);
  (void)_this;
}
void CreateOrganizationRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateOrganizationRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateOrganizationRqst& CreateOrganizationRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreateOrganizationRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void CreateOrganizationRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.CreateOrganizationRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && organization_ != nullptr) {
    delete organization_;
  }
  organization_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateOrganizationRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .resource.Organization organization = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_organization(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateOrganizationRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.CreateOrganizationRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .resource.Organization organization = 1;
  if (this->has_organization()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::organization(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.CreateOrganizationRqst)
  return target;
}

size_t CreateOrganizationRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.CreateOrganizationRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .resource.Organization organization = 1;
  if (this->has_organization()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *organization_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateOrganizationRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.CreateOrganizationRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateOrganizationRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateOrganizationRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.CreateOrganizationRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.CreateOrganizationRqst)
    MergeFrom(*source);
  }
}

void CreateOrganizationRqst::MergeFrom(const CreateOrganizationRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.CreateOrganizationRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_organization()) {
    _internal_mutable_organization()->::resource::Organization::MergeFrom(from._internal_organization());
  }
}

void CreateOrganizationRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.CreateOrganizationRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateOrganizationRqst::CopyFrom(const CreateOrganizationRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.CreateOrganizationRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateOrganizationRqst::IsInitialized() const {
  return true;
}

void CreateOrganizationRqst::InternalSwap(CreateOrganizationRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(organization_, other->organization_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateOrganizationRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CreateOrganizationRsp::InitAsDefaultInstance() {
}
class CreateOrganizationRsp::_Internal {
 public:
};

CreateOrganizationRsp::CreateOrganizationRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.CreateOrganizationRsp)
}
CreateOrganizationRsp::CreateOrganizationRsp(const CreateOrganizationRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.CreateOrganizationRsp)
}

void CreateOrganizationRsp::SharedCtor() {
  result_ = false;
}

CreateOrganizationRsp::~CreateOrganizationRsp() {
  // @@protoc_insertion_point(destructor:resource.CreateOrganizationRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateOrganizationRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CreateOrganizationRsp::ArenaDtor(void* object) {
  CreateOrganizationRsp* _this = reinterpret_cast< CreateOrganizationRsp* >(object);
  (void)_this;
}
void CreateOrganizationRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateOrganizationRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateOrganizationRsp& CreateOrganizationRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreateOrganizationRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void CreateOrganizationRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.CreateOrganizationRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateOrganizationRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateOrganizationRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.CreateOrganizationRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.CreateOrganizationRsp)
  return target;
}

size_t CreateOrganizationRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.CreateOrganizationRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateOrganizationRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.CreateOrganizationRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateOrganizationRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateOrganizationRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.CreateOrganizationRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.CreateOrganizationRsp)
    MergeFrom(*source);
  }
}

void CreateOrganizationRsp::MergeFrom(const CreateOrganizationRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.CreateOrganizationRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void CreateOrganizationRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.CreateOrganizationRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateOrganizationRsp::CopyFrom(const CreateOrganizationRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.CreateOrganizationRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateOrganizationRsp::IsInitialized() const {
  return true;
}

void CreateOrganizationRsp::InternalSwap(CreateOrganizationRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateOrganizationRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetOrganizationsRqst::InitAsDefaultInstance() {
}
class GetOrganizationsRqst::_Internal {
 public:
};

GetOrganizationsRqst::GetOrganizationsRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.GetOrganizationsRqst)
}
GetOrganizationsRqst::GetOrganizationsRqst(const GetOrganizationsRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  query_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_query().empty()) {
    query_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_query(),
      GetArena());
  }
  options_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_options().empty()) {
    options_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_options(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.GetOrganizationsRqst)
}

void GetOrganizationsRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetOrganizationsRqst_resource_2eproto.base);
  query_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  options_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetOrganizationsRqst::~GetOrganizationsRqst() {
  // @@protoc_insertion_point(destructor:resource.GetOrganizationsRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetOrganizationsRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  query_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  options_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetOrganizationsRqst::ArenaDtor(void* object) {
  GetOrganizationsRqst* _this = reinterpret_cast< GetOrganizationsRqst* >(object);
  (void)_this;
}
void GetOrganizationsRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetOrganizationsRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetOrganizationsRqst& GetOrganizationsRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetOrganizationsRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void GetOrganizationsRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.GetOrganizationsRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  options_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetOrganizationsRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string query = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_query();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.GetOrganizationsRqst.query"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string options = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_options();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.GetOrganizationsRqst.options"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetOrganizationsRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.GetOrganizationsRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_query().data(), static_cast<int>(this->_internal_query().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.GetOrganizationsRqst.query");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_query(), target);
  }

  // string options = 2;
  if (this->options().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_options().data(), static_cast<int>(this->_internal_options().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.GetOrganizationsRqst.options");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_options(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.GetOrganizationsRqst)
  return target;
}

size_t GetOrganizationsRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.GetOrganizationsRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_query());
  }

  // string options = 2;
  if (this->options().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_options());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetOrganizationsRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.GetOrganizationsRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const GetOrganizationsRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetOrganizationsRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.GetOrganizationsRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.GetOrganizationsRqst)
    MergeFrom(*source);
  }
}

void GetOrganizationsRqst::MergeFrom(const GetOrganizationsRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.GetOrganizationsRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query().size() > 0) {
    _internal_set_query(from._internal_query());
  }
  if (from.options().size() > 0) {
    _internal_set_options(from._internal_options());
  }
}

void GetOrganizationsRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.GetOrganizationsRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetOrganizationsRqst::CopyFrom(const GetOrganizationsRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.GetOrganizationsRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetOrganizationsRqst::IsInitialized() const {
  return true;
}

void GetOrganizationsRqst::InternalSwap(GetOrganizationsRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  query_.Swap(&other->query_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  options_.Swap(&other->options_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetOrganizationsRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetOrganizationsRsp::InitAsDefaultInstance() {
}
class GetOrganizationsRsp::_Internal {
 public:
};

GetOrganizationsRsp::GetOrganizationsRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  organizations_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.GetOrganizationsRsp)
}
GetOrganizationsRsp::GetOrganizationsRsp(const GetOrganizationsRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      organizations_(from.organizations_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:resource.GetOrganizationsRsp)
}

void GetOrganizationsRsp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetOrganizationsRsp_resource_2eproto.base);
}

GetOrganizationsRsp::~GetOrganizationsRsp() {
  // @@protoc_insertion_point(destructor:resource.GetOrganizationsRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetOrganizationsRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetOrganizationsRsp::ArenaDtor(void* object) {
  GetOrganizationsRsp* _this = reinterpret_cast< GetOrganizationsRsp* >(object);
  (void)_this;
}
void GetOrganizationsRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetOrganizationsRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetOrganizationsRsp& GetOrganizationsRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetOrganizationsRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void GetOrganizationsRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.GetOrganizationsRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  organizations_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetOrganizationsRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .resource.Organization organizations = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_organizations(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetOrganizationsRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.GetOrganizationsRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .resource.Organization organizations = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_organizations_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_organizations(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.GetOrganizationsRsp)
  return target;
}

size_t GetOrganizationsRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.GetOrganizationsRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .resource.Organization organizations = 1;
  total_size += 1UL * this->_internal_organizations_size();
  for (const auto& msg : this->organizations_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetOrganizationsRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.GetOrganizationsRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetOrganizationsRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetOrganizationsRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.GetOrganizationsRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.GetOrganizationsRsp)
    MergeFrom(*source);
  }
}

void GetOrganizationsRsp::MergeFrom(const GetOrganizationsRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.GetOrganizationsRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  organizations_.MergeFrom(from.organizations_);
}

void GetOrganizationsRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.GetOrganizationsRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetOrganizationsRsp::CopyFrom(const GetOrganizationsRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.GetOrganizationsRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetOrganizationsRsp::IsInitialized() const {
  return true;
}

void GetOrganizationsRsp::InternalSwap(GetOrganizationsRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  organizations_.InternalSwap(&other->organizations_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetOrganizationsRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteOrganizationRqst::InitAsDefaultInstance() {
}
class DeleteOrganizationRqst::_Internal {
 public:
};

DeleteOrganizationRqst::DeleteOrganizationRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.DeleteOrganizationRqst)
}
DeleteOrganizationRqst::DeleteOrganizationRqst(const DeleteOrganizationRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  organization_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_organization().empty()) {
    organization_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_organization(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.DeleteOrganizationRqst)
}

void DeleteOrganizationRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DeleteOrganizationRqst_resource_2eproto.base);
  organization_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DeleteOrganizationRqst::~DeleteOrganizationRqst() {
  // @@protoc_insertion_point(destructor:resource.DeleteOrganizationRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteOrganizationRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  organization_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeleteOrganizationRqst::ArenaDtor(void* object) {
  DeleteOrganizationRqst* _this = reinterpret_cast< DeleteOrganizationRqst* >(object);
  (void)_this;
}
void DeleteOrganizationRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteOrganizationRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteOrganizationRqst& DeleteOrganizationRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteOrganizationRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void DeleteOrganizationRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.DeleteOrganizationRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  organization_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteOrganizationRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string organization = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_organization();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.DeleteOrganizationRqst.organization"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteOrganizationRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.DeleteOrganizationRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string organization = 1;
  if (this->organization().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organization().data(), static_cast<int>(this->_internal_organization().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.DeleteOrganizationRqst.organization");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_organization(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.DeleteOrganizationRqst)
  return target;
}

size_t DeleteOrganizationRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.DeleteOrganizationRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string organization = 1;
  if (this->organization().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_organization());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteOrganizationRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.DeleteOrganizationRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteOrganizationRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteOrganizationRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.DeleteOrganizationRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.DeleteOrganizationRqst)
    MergeFrom(*source);
  }
}

void DeleteOrganizationRqst::MergeFrom(const DeleteOrganizationRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.DeleteOrganizationRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.organization().size() > 0) {
    _internal_set_organization(from._internal_organization());
  }
}

void DeleteOrganizationRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.DeleteOrganizationRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteOrganizationRqst::CopyFrom(const DeleteOrganizationRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.DeleteOrganizationRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteOrganizationRqst::IsInitialized() const {
  return true;
}

void DeleteOrganizationRqst::InternalSwap(DeleteOrganizationRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  organization_.Swap(&other->organization_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteOrganizationRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteOrganizationRsp::InitAsDefaultInstance() {
}
class DeleteOrganizationRsp::_Internal {
 public:
};

DeleteOrganizationRsp::DeleteOrganizationRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.DeleteOrganizationRsp)
}
DeleteOrganizationRsp::DeleteOrganizationRsp(const DeleteOrganizationRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.DeleteOrganizationRsp)
}

void DeleteOrganizationRsp::SharedCtor() {
  result_ = false;
}

DeleteOrganizationRsp::~DeleteOrganizationRsp() {
  // @@protoc_insertion_point(destructor:resource.DeleteOrganizationRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteOrganizationRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void DeleteOrganizationRsp::ArenaDtor(void* object) {
  DeleteOrganizationRsp* _this = reinterpret_cast< DeleteOrganizationRsp* >(object);
  (void)_this;
}
void DeleteOrganizationRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteOrganizationRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteOrganizationRsp& DeleteOrganizationRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteOrganizationRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void DeleteOrganizationRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.DeleteOrganizationRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteOrganizationRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteOrganizationRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.DeleteOrganizationRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.DeleteOrganizationRsp)
  return target;
}

size_t DeleteOrganizationRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.DeleteOrganizationRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteOrganizationRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.DeleteOrganizationRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteOrganizationRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteOrganizationRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.DeleteOrganizationRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.DeleteOrganizationRsp)
    MergeFrom(*source);
  }
}

void DeleteOrganizationRsp::MergeFrom(const DeleteOrganizationRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.DeleteOrganizationRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void DeleteOrganizationRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.DeleteOrganizationRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteOrganizationRsp::CopyFrom(const DeleteOrganizationRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.DeleteOrganizationRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteOrganizationRsp::IsInitialized() const {
  return true;
}

void DeleteOrganizationRsp::InternalSwap(DeleteOrganizationRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteOrganizationRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Peer::InitAsDefaultInstance() {
}
class Peer::_Internal {
 public:
};

Peer::Peer(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  actions_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.Peer)
}
Peer::Peer(const Peer& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      actions_(from.actions_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  domain_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_domain().empty()) {
    domain_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_domain(),
      GetArena());
  }
  address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_address().empty()) {
    address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_address(),
      GetArena());
  }
  mac_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_mac().empty()) {
    mac_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_mac(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.Peer)
}

void Peer::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Peer_resource_2eproto.base);
  domain_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  mac_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Peer::~Peer() {
  // @@protoc_insertion_point(destructor:resource.Peer)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Peer::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  domain_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  address_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  mac_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Peer::ArenaDtor(void* object) {
  Peer* _this = reinterpret_cast< Peer* >(object);
  (void)_this;
}
void Peer::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Peer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Peer& Peer::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Peer_resource_2eproto.base);
  return *internal_default_instance();
}


void Peer::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.Peer)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  actions_.Clear();
  domain_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  address_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  mac_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Peer::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string domain = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_domain();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Peer.domain"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string address = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_address();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Peer.address"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string mac = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_mac();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Peer.mac"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string actions = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_actions();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Peer.actions"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Peer::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.Peer)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string domain = 1;
  if (this->domain().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_domain().data(), static_cast<int>(this->_internal_domain().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Peer.domain");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_domain(), target);
  }

  // string address = 2;
  if (this->address().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_address().data(), static_cast<int>(this->_internal_address().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Peer.address");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_address(), target);
  }

  // string mac = 3;
  if (this->mac().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_mac().data(), static_cast<int>(this->_internal_mac().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Peer.mac");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_mac(), target);
  }

  // repeated string actions = 4;
  for (int i = 0, n = this->_internal_actions_size(); i < n; i++) {
    const auto& s = this->_internal_actions(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Peer.actions");
    target = stream->WriteString(4, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.Peer)
  return target;
}

size_t Peer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.Peer)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string actions = 4;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(actions_.size());
  for (int i = 0, n = actions_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      actions_.Get(i));
  }

  // string domain = 1;
  if (this->domain().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_domain());
  }

  // string address = 2;
  if (this->address().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_address());
  }

  // string mac = 3;
  if (this->mac().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_mac());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Peer::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.Peer)
  GOOGLE_DCHECK_NE(&from, this);
  const Peer* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Peer>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.Peer)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.Peer)
    MergeFrom(*source);
  }
}

void Peer::MergeFrom(const Peer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.Peer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  actions_.MergeFrom(from.actions_);
  if (from.domain().size() > 0) {
    _internal_set_domain(from._internal_domain());
  }
  if (from.address().size() > 0) {
    _internal_set_address(from._internal_address());
  }
  if (from.mac().size() > 0) {
    _internal_set_mac(from._internal_mac());
  }
}

void Peer::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.Peer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Peer::CopyFrom(const Peer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.Peer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Peer::IsInitialized() const {
  return true;
}

void Peer::InternalSwap(Peer* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  actions_.InternalSwap(&other->actions_);
  domain_.Swap(&other->domain_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  address_.Swap(&other->address_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  mac_.Swap(&other->mac_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata Peer::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RegisterPeerRqst::InitAsDefaultInstance() {
  ::resource::_RegisterPeerRqst_default_instance_._instance.get_mutable()->peer_ = const_cast< ::resource::Peer*>(
      ::resource::Peer::internal_default_instance());
}
class RegisterPeerRqst::_Internal {
 public:
  static const ::resource::Peer& peer(const RegisterPeerRqst* msg);
};

const ::resource::Peer&
RegisterPeerRqst::_Internal::peer(const RegisterPeerRqst* msg) {
  return *msg->peer_;
}
RegisterPeerRqst::RegisterPeerRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.RegisterPeerRqst)
}
RegisterPeerRqst::RegisterPeerRqst(const RegisterPeerRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  public_key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_public_key().empty()) {
    public_key_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_public_key(),
      GetArena());
  }
  secret_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_secret().empty()) {
    secret_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_secret(),
      GetArena());
  }
  if (from._internal_has_peer()) {
    peer_ = new ::resource::Peer(*from.peer_);
  } else {
    peer_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:resource.RegisterPeerRqst)
}

void RegisterPeerRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RegisterPeerRqst_resource_2eproto.base);
  public_key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  secret_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  peer_ = nullptr;
}

RegisterPeerRqst::~RegisterPeerRqst() {
  // @@protoc_insertion_point(destructor:resource.RegisterPeerRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RegisterPeerRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  public_key_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  secret_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete peer_;
}

void RegisterPeerRqst::ArenaDtor(void* object) {
  RegisterPeerRqst* _this = reinterpret_cast< RegisterPeerRqst* >(object);
  (void)_this;
}
void RegisterPeerRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RegisterPeerRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RegisterPeerRqst& RegisterPeerRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RegisterPeerRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void RegisterPeerRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.RegisterPeerRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  public_key_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  secret_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && peer_ != nullptr) {
    delete peer_;
  }
  peer_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RegisterPeerRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .resource.Peer peer = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_peer(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string public_key = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_public_key();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.RegisterPeerRqst.public_key"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string secret = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_secret();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.RegisterPeerRqst.secret"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RegisterPeerRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.RegisterPeerRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .resource.Peer peer = 1;
  if (this->has_peer()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::peer(this), target, stream);
  }

  // string public_key = 2;
  if (this->public_key().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_public_key().data(), static_cast<int>(this->_internal_public_key().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.RegisterPeerRqst.public_key");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_public_key(), target);
  }

  // string secret = 3;
  if (this->secret().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_secret().data(), static_cast<int>(this->_internal_secret().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.RegisterPeerRqst.secret");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_secret(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.RegisterPeerRqst)
  return target;
}

size_t RegisterPeerRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.RegisterPeerRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string public_key = 2;
  if (this->public_key().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_public_key());
  }

  // string secret = 3;
  if (this->secret().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_secret());
  }

  // .resource.Peer peer = 1;
  if (this->has_peer()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *peer_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RegisterPeerRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.RegisterPeerRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const RegisterPeerRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RegisterPeerRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.RegisterPeerRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.RegisterPeerRqst)
    MergeFrom(*source);
  }
}

void RegisterPeerRqst::MergeFrom(const RegisterPeerRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.RegisterPeerRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.public_key().size() > 0) {
    _internal_set_public_key(from._internal_public_key());
  }
  if (from.secret().size() > 0) {
    _internal_set_secret(from._internal_secret());
  }
  if (from.has_peer()) {
    _internal_mutable_peer()->::resource::Peer::MergeFrom(from._internal_peer());
  }
}

void RegisterPeerRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.RegisterPeerRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegisterPeerRqst::CopyFrom(const RegisterPeerRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.RegisterPeerRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegisterPeerRqst::IsInitialized() const {
  return true;
}

void RegisterPeerRqst::InternalSwap(RegisterPeerRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  public_key_.Swap(&other->public_key_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  secret_.Swap(&other->secret_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(peer_, other->peer_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RegisterPeerRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RegisterPeerRsp::InitAsDefaultInstance() {
  ::resource::_RegisterPeerRsp_default_instance_._instance.get_mutable()->peer_ = const_cast< ::resource::Peer*>(
      ::resource::Peer::internal_default_instance());
}
class RegisterPeerRsp::_Internal {
 public:
  static const ::resource::Peer& peer(const RegisterPeerRsp* msg);
};

const ::resource::Peer&
RegisterPeerRsp::_Internal::peer(const RegisterPeerRsp* msg) {
  return *msg->peer_;
}
RegisterPeerRsp::RegisterPeerRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.RegisterPeerRsp)
}
RegisterPeerRsp::RegisterPeerRsp(const RegisterPeerRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  public_key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_public_key().empty()) {
    public_key_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_public_key(),
      GetArena());
  }
  if (from._internal_has_peer()) {
    peer_ = new ::resource::Peer(*from.peer_);
  } else {
    peer_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:resource.RegisterPeerRsp)
}

void RegisterPeerRsp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RegisterPeerRsp_resource_2eproto.base);
  public_key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  peer_ = nullptr;
}

RegisterPeerRsp::~RegisterPeerRsp() {
  // @@protoc_insertion_point(destructor:resource.RegisterPeerRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RegisterPeerRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  public_key_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete peer_;
}

void RegisterPeerRsp::ArenaDtor(void* object) {
  RegisterPeerRsp* _this = reinterpret_cast< RegisterPeerRsp* >(object);
  (void)_this;
}
void RegisterPeerRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RegisterPeerRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RegisterPeerRsp& RegisterPeerRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RegisterPeerRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void RegisterPeerRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.RegisterPeerRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  public_key_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && peer_ != nullptr) {
    delete peer_;
  }
  peer_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RegisterPeerRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .resource.Peer peer = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_peer(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string public_key = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_public_key();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.RegisterPeerRsp.public_key"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RegisterPeerRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.RegisterPeerRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .resource.Peer peer = 1;
  if (this->has_peer()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::peer(this), target, stream);
  }

  // string public_key = 2;
  if (this->public_key().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_public_key().data(), static_cast<int>(this->_internal_public_key().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.RegisterPeerRsp.public_key");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_public_key(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.RegisterPeerRsp)
  return target;
}

size_t RegisterPeerRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.RegisterPeerRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string public_key = 2;
  if (this->public_key().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_public_key());
  }

  // .resource.Peer peer = 1;
  if (this->has_peer()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *peer_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RegisterPeerRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.RegisterPeerRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const RegisterPeerRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RegisterPeerRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.RegisterPeerRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.RegisterPeerRsp)
    MergeFrom(*source);
  }
}

void RegisterPeerRsp::MergeFrom(const RegisterPeerRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.RegisterPeerRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.public_key().size() > 0) {
    _internal_set_public_key(from._internal_public_key());
  }
  if (from.has_peer()) {
    _internal_mutable_peer()->::resource::Peer::MergeFrom(from._internal_peer());
  }
}

void RegisterPeerRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.RegisterPeerRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegisterPeerRsp::CopyFrom(const RegisterPeerRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.RegisterPeerRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegisterPeerRsp::IsInitialized() const {
  return true;
}

void RegisterPeerRsp::InternalSwap(RegisterPeerRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  public_key_.Swap(&other->public_key_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(peer_, other->peer_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RegisterPeerRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetPeersRqst::InitAsDefaultInstance() {
}
class GetPeersRqst::_Internal {
 public:
};

GetPeersRqst::GetPeersRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.GetPeersRqst)
}
GetPeersRqst::GetPeersRqst(const GetPeersRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  query_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_query().empty()) {
    query_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_query(),
      GetArena());
  }
  options_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_options().empty()) {
    options_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_options(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.GetPeersRqst)
}

void GetPeersRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetPeersRqst_resource_2eproto.base);
  query_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  options_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetPeersRqst::~GetPeersRqst() {
  // @@protoc_insertion_point(destructor:resource.GetPeersRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetPeersRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  query_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  options_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetPeersRqst::ArenaDtor(void* object) {
  GetPeersRqst* _this = reinterpret_cast< GetPeersRqst* >(object);
  (void)_this;
}
void GetPeersRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetPeersRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetPeersRqst& GetPeersRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetPeersRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void GetPeersRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.GetPeersRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  options_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetPeersRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string query = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_query();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.GetPeersRqst.query"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string options = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_options();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.GetPeersRqst.options"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetPeersRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.GetPeersRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_query().data(), static_cast<int>(this->_internal_query().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.GetPeersRqst.query");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_query(), target);
  }

  // string options = 2;
  if (this->options().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_options().data(), static_cast<int>(this->_internal_options().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.GetPeersRqst.options");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_options(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.GetPeersRqst)
  return target;
}

size_t GetPeersRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.GetPeersRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_query());
  }

  // string options = 2;
  if (this->options().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_options());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetPeersRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.GetPeersRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const GetPeersRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetPeersRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.GetPeersRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.GetPeersRqst)
    MergeFrom(*source);
  }
}

void GetPeersRqst::MergeFrom(const GetPeersRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.GetPeersRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query().size() > 0) {
    _internal_set_query(from._internal_query());
  }
  if (from.options().size() > 0) {
    _internal_set_options(from._internal_options());
  }
}

void GetPeersRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.GetPeersRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetPeersRqst::CopyFrom(const GetPeersRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.GetPeersRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPeersRqst::IsInitialized() const {
  return true;
}

void GetPeersRqst::InternalSwap(GetPeersRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  query_.Swap(&other->query_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  options_.Swap(&other->options_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetPeersRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetPeersRsp::InitAsDefaultInstance() {
}
class GetPeersRsp::_Internal {
 public:
};

GetPeersRsp::GetPeersRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  peers_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.GetPeersRsp)
}
GetPeersRsp::GetPeersRsp(const GetPeersRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      peers_(from.peers_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:resource.GetPeersRsp)
}

void GetPeersRsp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetPeersRsp_resource_2eproto.base);
}

GetPeersRsp::~GetPeersRsp() {
  // @@protoc_insertion_point(destructor:resource.GetPeersRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetPeersRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetPeersRsp::ArenaDtor(void* object) {
  GetPeersRsp* _this = reinterpret_cast< GetPeersRsp* >(object);
  (void)_this;
}
void GetPeersRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetPeersRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetPeersRsp& GetPeersRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetPeersRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void GetPeersRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.GetPeersRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  peers_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetPeersRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .resource.Peer peers = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_peers(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetPeersRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.GetPeersRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .resource.Peer peers = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_peers_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_peers(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.GetPeersRsp)
  return target;
}

size_t GetPeersRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.GetPeersRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .resource.Peer peers = 1;
  total_size += 1UL * this->_internal_peers_size();
  for (const auto& msg : this->peers_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetPeersRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.GetPeersRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetPeersRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetPeersRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.GetPeersRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.GetPeersRsp)
    MergeFrom(*source);
  }
}

void GetPeersRsp::MergeFrom(const GetPeersRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.GetPeersRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  peers_.MergeFrom(from.peers_);
}

void GetPeersRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.GetPeersRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetPeersRsp::CopyFrom(const GetPeersRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.GetPeersRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPeersRsp::IsInitialized() const {
  return true;
}

void GetPeersRsp::InternalSwap(GetPeersRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  peers_.InternalSwap(&other->peers_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetPeersRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeletePeerRqst::InitAsDefaultInstance() {
  ::resource::_DeletePeerRqst_default_instance_._instance.get_mutable()->peer_ = const_cast< ::resource::Peer*>(
      ::resource::Peer::internal_default_instance());
}
class DeletePeerRqst::_Internal {
 public:
  static const ::resource::Peer& peer(const DeletePeerRqst* msg);
};

const ::resource::Peer&
DeletePeerRqst::_Internal::peer(const DeletePeerRqst* msg) {
  return *msg->peer_;
}
DeletePeerRqst::DeletePeerRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.DeletePeerRqst)
}
DeletePeerRqst::DeletePeerRqst(const DeletePeerRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_peer()) {
    peer_ = new ::resource::Peer(*from.peer_);
  } else {
    peer_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:resource.DeletePeerRqst)
}

void DeletePeerRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DeletePeerRqst_resource_2eproto.base);
  peer_ = nullptr;
}

DeletePeerRqst::~DeletePeerRqst() {
  // @@protoc_insertion_point(destructor:resource.DeletePeerRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeletePeerRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete peer_;
}

void DeletePeerRqst::ArenaDtor(void* object) {
  DeletePeerRqst* _this = reinterpret_cast< DeletePeerRqst* >(object);
  (void)_this;
}
void DeletePeerRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeletePeerRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeletePeerRqst& DeletePeerRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeletePeerRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void DeletePeerRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.DeletePeerRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && peer_ != nullptr) {
    delete peer_;
  }
  peer_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeletePeerRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .resource.Peer peer = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_peer(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeletePeerRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.DeletePeerRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .resource.Peer peer = 1;
  if (this->has_peer()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::peer(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.DeletePeerRqst)
  return target;
}

size_t DeletePeerRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.DeletePeerRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .resource.Peer peer = 1;
  if (this->has_peer()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *peer_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeletePeerRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.DeletePeerRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const DeletePeerRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeletePeerRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.DeletePeerRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.DeletePeerRqst)
    MergeFrom(*source);
  }
}

void DeletePeerRqst::MergeFrom(const DeletePeerRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.DeletePeerRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_peer()) {
    _internal_mutable_peer()->::resource::Peer::MergeFrom(from._internal_peer());
  }
}

void DeletePeerRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.DeletePeerRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeletePeerRqst::CopyFrom(const DeletePeerRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.DeletePeerRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeletePeerRqst::IsInitialized() const {
  return true;
}

void DeletePeerRqst::InternalSwap(DeletePeerRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(peer_, other->peer_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeletePeerRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeletePeerRsp::InitAsDefaultInstance() {
}
class DeletePeerRsp::_Internal {
 public:
};

DeletePeerRsp::DeletePeerRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.DeletePeerRsp)
}
DeletePeerRsp::DeletePeerRsp(const DeletePeerRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.DeletePeerRsp)
}

void DeletePeerRsp::SharedCtor() {
  result_ = false;
}

DeletePeerRsp::~DeletePeerRsp() {
  // @@protoc_insertion_point(destructor:resource.DeletePeerRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeletePeerRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void DeletePeerRsp::ArenaDtor(void* object) {
  DeletePeerRsp* _this = reinterpret_cast< DeletePeerRsp* >(object);
  (void)_this;
}
void DeletePeerRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeletePeerRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeletePeerRsp& DeletePeerRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeletePeerRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void DeletePeerRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.DeletePeerRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeletePeerRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeletePeerRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.DeletePeerRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.DeletePeerRsp)
  return target;
}

size_t DeletePeerRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.DeletePeerRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeletePeerRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.DeletePeerRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const DeletePeerRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeletePeerRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.DeletePeerRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.DeletePeerRsp)
    MergeFrom(*source);
  }
}

void DeletePeerRsp::MergeFrom(const DeletePeerRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.DeletePeerRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void DeletePeerRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.DeletePeerRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeletePeerRsp::CopyFrom(const DeletePeerRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.DeletePeerRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeletePeerRsp::IsInitialized() const {
  return true;
}

void DeletePeerRsp::InternalSwap(DeletePeerRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeletePeerRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AddRoleActionsRqst::InitAsDefaultInstance() {
}
class AddRoleActionsRqst::_Internal {
 public:
};

AddRoleActionsRqst::AddRoleActionsRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  actions_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.AddRoleActionsRqst)
}
AddRoleActionsRqst::AddRoleActionsRqst(const AddRoleActionsRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      actions_(from.actions_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  roleid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_roleid().empty()) {
    roleid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_roleid(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.AddRoleActionsRqst)
}

void AddRoleActionsRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AddRoleActionsRqst_resource_2eproto.base);
  roleid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

AddRoleActionsRqst::~AddRoleActionsRqst() {
  // @@protoc_insertion_point(destructor:resource.AddRoleActionsRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddRoleActionsRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  roleid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AddRoleActionsRqst::ArenaDtor(void* object) {
  AddRoleActionsRqst* _this = reinterpret_cast< AddRoleActionsRqst* >(object);
  (void)_this;
}
void AddRoleActionsRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddRoleActionsRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AddRoleActionsRqst& AddRoleActionsRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AddRoleActionsRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void AddRoleActionsRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.AddRoleActionsRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  actions_.Clear();
  roleid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddRoleActionsRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string roleId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_roleid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.AddRoleActionsRqst.roleId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string actions = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_actions();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.AddRoleActionsRqst.actions"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddRoleActionsRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.AddRoleActionsRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string roleId = 1;
  if (this->roleid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_roleid().data(), static_cast<int>(this->_internal_roleid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.AddRoleActionsRqst.roleId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_roleid(), target);
  }

  // repeated string actions = 2;
  for (int i = 0, n = this->_internal_actions_size(); i < n; i++) {
    const auto& s = this->_internal_actions(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.AddRoleActionsRqst.actions");
    target = stream->WriteString(2, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.AddRoleActionsRqst)
  return target;
}

size_t AddRoleActionsRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.AddRoleActionsRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string actions = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(actions_.size());
  for (int i = 0, n = actions_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      actions_.Get(i));
  }

  // string roleId = 1;
  if (this->roleid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_roleid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddRoleActionsRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.AddRoleActionsRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const AddRoleActionsRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddRoleActionsRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.AddRoleActionsRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.AddRoleActionsRqst)
    MergeFrom(*source);
  }
}

void AddRoleActionsRqst::MergeFrom(const AddRoleActionsRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.AddRoleActionsRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  actions_.MergeFrom(from.actions_);
  if (from.roleid().size() > 0) {
    _internal_set_roleid(from._internal_roleid());
  }
}

void AddRoleActionsRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.AddRoleActionsRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddRoleActionsRqst::CopyFrom(const AddRoleActionsRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.AddRoleActionsRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddRoleActionsRqst::IsInitialized() const {
  return true;
}

void AddRoleActionsRqst::InternalSwap(AddRoleActionsRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  actions_.InternalSwap(&other->actions_);
  roleid_.Swap(&other->roleid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata AddRoleActionsRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AddRoleActionsRsp::InitAsDefaultInstance() {
}
class AddRoleActionsRsp::_Internal {
 public:
};

AddRoleActionsRsp::AddRoleActionsRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.AddRoleActionsRsp)
}
AddRoleActionsRsp::AddRoleActionsRsp(const AddRoleActionsRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.AddRoleActionsRsp)
}

void AddRoleActionsRsp::SharedCtor() {
  result_ = false;
}

AddRoleActionsRsp::~AddRoleActionsRsp() {
  // @@protoc_insertion_point(destructor:resource.AddRoleActionsRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddRoleActionsRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void AddRoleActionsRsp::ArenaDtor(void* object) {
  AddRoleActionsRsp* _this = reinterpret_cast< AddRoleActionsRsp* >(object);
  (void)_this;
}
void AddRoleActionsRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddRoleActionsRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AddRoleActionsRsp& AddRoleActionsRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AddRoleActionsRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void AddRoleActionsRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.AddRoleActionsRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddRoleActionsRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddRoleActionsRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.AddRoleActionsRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.AddRoleActionsRsp)
  return target;
}

size_t AddRoleActionsRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.AddRoleActionsRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddRoleActionsRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.AddRoleActionsRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const AddRoleActionsRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddRoleActionsRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.AddRoleActionsRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.AddRoleActionsRsp)
    MergeFrom(*source);
  }
}

void AddRoleActionsRsp::MergeFrom(const AddRoleActionsRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.AddRoleActionsRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void AddRoleActionsRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.AddRoleActionsRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddRoleActionsRsp::CopyFrom(const AddRoleActionsRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.AddRoleActionsRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddRoleActionsRsp::IsInitialized() const {
  return true;
}

void AddRoleActionsRsp::InternalSwap(AddRoleActionsRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AddRoleActionsRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RemoveRoleActionRqst::InitAsDefaultInstance() {
}
class RemoveRoleActionRqst::_Internal {
 public:
};

RemoveRoleActionRqst::RemoveRoleActionRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.RemoveRoleActionRqst)
}
RemoveRoleActionRqst::RemoveRoleActionRqst(const RemoveRoleActionRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  roleid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_roleid().empty()) {
    roleid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_roleid(),
      GetArena());
  }
  action_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_action().empty()) {
    action_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_action(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.RemoveRoleActionRqst)
}

void RemoveRoleActionRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RemoveRoleActionRqst_resource_2eproto.base);
  roleid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  action_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

RemoveRoleActionRqst::~RemoveRoleActionRqst() {
  // @@protoc_insertion_point(destructor:resource.RemoveRoleActionRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemoveRoleActionRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  roleid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  action_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RemoveRoleActionRqst::ArenaDtor(void* object) {
  RemoveRoleActionRqst* _this = reinterpret_cast< RemoveRoleActionRqst* >(object);
  (void)_this;
}
void RemoveRoleActionRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemoveRoleActionRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RemoveRoleActionRqst& RemoveRoleActionRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RemoveRoleActionRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void RemoveRoleActionRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.RemoveRoleActionRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  roleid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  action_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveRoleActionRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string roleId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_roleid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.RemoveRoleActionRqst.roleId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string action = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_action();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.RemoveRoleActionRqst.action"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemoveRoleActionRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.RemoveRoleActionRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string roleId = 1;
  if (this->roleid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_roleid().data(), static_cast<int>(this->_internal_roleid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.RemoveRoleActionRqst.roleId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_roleid(), target);
  }

  // string action = 2;
  if (this->action().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_action().data(), static_cast<int>(this->_internal_action().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.RemoveRoleActionRqst.action");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_action(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.RemoveRoleActionRqst)
  return target;
}

size_t RemoveRoleActionRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.RemoveRoleActionRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string roleId = 1;
  if (this->roleid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_roleid());
  }

  // string action = 2;
  if (this->action().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_action());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveRoleActionRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.RemoveRoleActionRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveRoleActionRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemoveRoleActionRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.RemoveRoleActionRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.RemoveRoleActionRqst)
    MergeFrom(*source);
  }
}

void RemoveRoleActionRqst::MergeFrom(const RemoveRoleActionRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.RemoveRoleActionRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.roleid().size() > 0) {
    _internal_set_roleid(from._internal_roleid());
  }
  if (from.action().size() > 0) {
    _internal_set_action(from._internal_action());
  }
}

void RemoveRoleActionRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.RemoveRoleActionRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveRoleActionRqst::CopyFrom(const RemoveRoleActionRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.RemoveRoleActionRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveRoleActionRqst::IsInitialized() const {
  return true;
}

void RemoveRoleActionRqst::InternalSwap(RemoveRoleActionRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  roleid_.Swap(&other->roleid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  action_.Swap(&other->action_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveRoleActionRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RemoveRoleActionRsp::InitAsDefaultInstance() {
}
class RemoveRoleActionRsp::_Internal {
 public:
};

RemoveRoleActionRsp::RemoveRoleActionRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.RemoveRoleActionRsp)
}
RemoveRoleActionRsp::RemoveRoleActionRsp(const RemoveRoleActionRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.RemoveRoleActionRsp)
}

void RemoveRoleActionRsp::SharedCtor() {
  result_ = false;
}

RemoveRoleActionRsp::~RemoveRoleActionRsp() {
  // @@protoc_insertion_point(destructor:resource.RemoveRoleActionRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemoveRoleActionRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RemoveRoleActionRsp::ArenaDtor(void* object) {
  RemoveRoleActionRsp* _this = reinterpret_cast< RemoveRoleActionRsp* >(object);
  (void)_this;
}
void RemoveRoleActionRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemoveRoleActionRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RemoveRoleActionRsp& RemoveRoleActionRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RemoveRoleActionRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void RemoveRoleActionRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.RemoveRoleActionRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveRoleActionRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemoveRoleActionRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.RemoveRoleActionRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.RemoveRoleActionRsp)
  return target;
}

size_t RemoveRoleActionRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.RemoveRoleActionRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveRoleActionRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.RemoveRoleActionRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveRoleActionRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemoveRoleActionRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.RemoveRoleActionRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.RemoveRoleActionRsp)
    MergeFrom(*source);
  }
}

void RemoveRoleActionRsp::MergeFrom(const RemoveRoleActionRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.RemoveRoleActionRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void RemoveRoleActionRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.RemoveRoleActionRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveRoleActionRsp::CopyFrom(const RemoveRoleActionRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.RemoveRoleActionRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveRoleActionRsp::IsInitialized() const {
  return true;
}

void RemoveRoleActionRsp::InternalSwap(RemoveRoleActionRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveRoleActionRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RemoveRolesActionRqst::InitAsDefaultInstance() {
}
class RemoveRolesActionRqst::_Internal {
 public:
};

RemoveRolesActionRqst::RemoveRolesActionRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.RemoveRolesActionRqst)
}
RemoveRolesActionRqst::RemoveRolesActionRqst(const RemoveRolesActionRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  action_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_action().empty()) {
    action_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_action(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.RemoveRolesActionRqst)
}

void RemoveRolesActionRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RemoveRolesActionRqst_resource_2eproto.base);
  action_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

RemoveRolesActionRqst::~RemoveRolesActionRqst() {
  // @@protoc_insertion_point(destructor:resource.RemoveRolesActionRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemoveRolesActionRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  action_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RemoveRolesActionRqst::ArenaDtor(void* object) {
  RemoveRolesActionRqst* _this = reinterpret_cast< RemoveRolesActionRqst* >(object);
  (void)_this;
}
void RemoveRolesActionRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemoveRolesActionRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RemoveRolesActionRqst& RemoveRolesActionRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RemoveRolesActionRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void RemoveRolesActionRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.RemoveRolesActionRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  action_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveRolesActionRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string action = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_action();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.RemoveRolesActionRqst.action"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemoveRolesActionRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.RemoveRolesActionRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string action = 2;
  if (this->action().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_action().data(), static_cast<int>(this->_internal_action().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.RemoveRolesActionRqst.action");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_action(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.RemoveRolesActionRqst)
  return target;
}

size_t RemoveRolesActionRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.RemoveRolesActionRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string action = 2;
  if (this->action().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_action());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveRolesActionRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.RemoveRolesActionRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveRolesActionRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemoveRolesActionRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.RemoveRolesActionRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.RemoveRolesActionRqst)
    MergeFrom(*source);
  }
}

void RemoveRolesActionRqst::MergeFrom(const RemoveRolesActionRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.RemoveRolesActionRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.action().size() > 0) {
    _internal_set_action(from._internal_action());
  }
}

void RemoveRolesActionRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.RemoveRolesActionRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveRolesActionRqst::CopyFrom(const RemoveRolesActionRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.RemoveRolesActionRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveRolesActionRqst::IsInitialized() const {
  return true;
}

void RemoveRolesActionRqst::InternalSwap(RemoveRolesActionRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  action_.Swap(&other->action_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveRolesActionRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RemoveRolesActionRsp::InitAsDefaultInstance() {
}
class RemoveRolesActionRsp::_Internal {
 public:
};

RemoveRolesActionRsp::RemoveRolesActionRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.RemoveRolesActionRsp)
}
RemoveRolesActionRsp::RemoveRolesActionRsp(const RemoveRolesActionRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.RemoveRolesActionRsp)
}

void RemoveRolesActionRsp::SharedCtor() {
  result_ = false;
}

RemoveRolesActionRsp::~RemoveRolesActionRsp() {
  // @@protoc_insertion_point(destructor:resource.RemoveRolesActionRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemoveRolesActionRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RemoveRolesActionRsp::ArenaDtor(void* object) {
  RemoveRolesActionRsp* _this = reinterpret_cast< RemoveRolesActionRsp* >(object);
  (void)_this;
}
void RemoveRolesActionRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemoveRolesActionRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RemoveRolesActionRsp& RemoveRolesActionRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RemoveRolesActionRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void RemoveRolesActionRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.RemoveRolesActionRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveRolesActionRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemoveRolesActionRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.RemoveRolesActionRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.RemoveRolesActionRsp)
  return target;
}

size_t RemoveRolesActionRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.RemoveRolesActionRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveRolesActionRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.RemoveRolesActionRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveRolesActionRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemoveRolesActionRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.RemoveRolesActionRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.RemoveRolesActionRsp)
    MergeFrom(*source);
  }
}

void RemoveRolesActionRsp::MergeFrom(const RemoveRolesActionRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.RemoveRolesActionRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void RemoveRolesActionRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.RemoveRolesActionRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveRolesActionRsp::CopyFrom(const RemoveRolesActionRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.RemoveRolesActionRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveRolesActionRsp::IsInitialized() const {
  return true;
}

void RemoveRolesActionRsp::InternalSwap(RemoveRolesActionRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveRolesActionRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AddApplicationActionsRqst::InitAsDefaultInstance() {
}
class AddApplicationActionsRqst::_Internal {
 public:
};

AddApplicationActionsRqst::AddApplicationActionsRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  actions_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.AddApplicationActionsRqst)
}
AddApplicationActionsRqst::AddApplicationActionsRqst(const AddApplicationActionsRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      actions_(from.actions_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  applicationid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_applicationid().empty()) {
    applicationid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_applicationid(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.AddApplicationActionsRqst)
}

void AddApplicationActionsRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AddApplicationActionsRqst_resource_2eproto.base);
  applicationid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

AddApplicationActionsRqst::~AddApplicationActionsRqst() {
  // @@protoc_insertion_point(destructor:resource.AddApplicationActionsRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddApplicationActionsRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  applicationid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AddApplicationActionsRqst::ArenaDtor(void* object) {
  AddApplicationActionsRqst* _this = reinterpret_cast< AddApplicationActionsRqst* >(object);
  (void)_this;
}
void AddApplicationActionsRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddApplicationActionsRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AddApplicationActionsRqst& AddApplicationActionsRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AddApplicationActionsRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void AddApplicationActionsRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.AddApplicationActionsRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  actions_.Clear();
  applicationid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddApplicationActionsRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string applicationId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_applicationid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.AddApplicationActionsRqst.applicationId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string actions = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_actions();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.AddApplicationActionsRqst.actions"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddApplicationActionsRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.AddApplicationActionsRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string applicationId = 1;
  if (this->applicationid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_applicationid().data(), static_cast<int>(this->_internal_applicationid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.AddApplicationActionsRqst.applicationId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_applicationid(), target);
  }

  // repeated string actions = 2;
  for (int i = 0, n = this->_internal_actions_size(); i < n; i++) {
    const auto& s = this->_internal_actions(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.AddApplicationActionsRqst.actions");
    target = stream->WriteString(2, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.AddApplicationActionsRqst)
  return target;
}

size_t AddApplicationActionsRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.AddApplicationActionsRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string actions = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(actions_.size());
  for (int i = 0, n = actions_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      actions_.Get(i));
  }

  // string applicationId = 1;
  if (this->applicationid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_applicationid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddApplicationActionsRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.AddApplicationActionsRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const AddApplicationActionsRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddApplicationActionsRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.AddApplicationActionsRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.AddApplicationActionsRqst)
    MergeFrom(*source);
  }
}

void AddApplicationActionsRqst::MergeFrom(const AddApplicationActionsRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.AddApplicationActionsRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  actions_.MergeFrom(from.actions_);
  if (from.applicationid().size() > 0) {
    _internal_set_applicationid(from._internal_applicationid());
  }
}

void AddApplicationActionsRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.AddApplicationActionsRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddApplicationActionsRqst::CopyFrom(const AddApplicationActionsRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.AddApplicationActionsRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddApplicationActionsRqst::IsInitialized() const {
  return true;
}

void AddApplicationActionsRqst::InternalSwap(AddApplicationActionsRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  actions_.InternalSwap(&other->actions_);
  applicationid_.Swap(&other->applicationid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata AddApplicationActionsRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AddApplicationActionsRsp::InitAsDefaultInstance() {
}
class AddApplicationActionsRsp::_Internal {
 public:
};

AddApplicationActionsRsp::AddApplicationActionsRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.AddApplicationActionsRsp)
}
AddApplicationActionsRsp::AddApplicationActionsRsp(const AddApplicationActionsRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.AddApplicationActionsRsp)
}

void AddApplicationActionsRsp::SharedCtor() {
  result_ = false;
}

AddApplicationActionsRsp::~AddApplicationActionsRsp() {
  // @@protoc_insertion_point(destructor:resource.AddApplicationActionsRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddApplicationActionsRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void AddApplicationActionsRsp::ArenaDtor(void* object) {
  AddApplicationActionsRsp* _this = reinterpret_cast< AddApplicationActionsRsp* >(object);
  (void)_this;
}
void AddApplicationActionsRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddApplicationActionsRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AddApplicationActionsRsp& AddApplicationActionsRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AddApplicationActionsRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void AddApplicationActionsRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.AddApplicationActionsRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddApplicationActionsRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddApplicationActionsRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.AddApplicationActionsRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.AddApplicationActionsRsp)
  return target;
}

size_t AddApplicationActionsRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.AddApplicationActionsRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddApplicationActionsRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.AddApplicationActionsRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const AddApplicationActionsRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddApplicationActionsRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.AddApplicationActionsRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.AddApplicationActionsRsp)
    MergeFrom(*source);
  }
}

void AddApplicationActionsRsp::MergeFrom(const AddApplicationActionsRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.AddApplicationActionsRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void AddApplicationActionsRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.AddApplicationActionsRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddApplicationActionsRsp::CopyFrom(const AddApplicationActionsRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.AddApplicationActionsRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddApplicationActionsRsp::IsInitialized() const {
  return true;
}

void AddApplicationActionsRsp::InternalSwap(AddApplicationActionsRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AddApplicationActionsRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RemoveApplicationActionRqst::InitAsDefaultInstance() {
}
class RemoveApplicationActionRqst::_Internal {
 public:
};

RemoveApplicationActionRqst::RemoveApplicationActionRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.RemoveApplicationActionRqst)
}
RemoveApplicationActionRqst::RemoveApplicationActionRqst(const RemoveApplicationActionRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  applicationid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_applicationid().empty()) {
    applicationid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_applicationid(),
      GetArena());
  }
  action_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_action().empty()) {
    action_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_action(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.RemoveApplicationActionRqst)
}

void RemoveApplicationActionRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RemoveApplicationActionRqst_resource_2eproto.base);
  applicationid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  action_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

RemoveApplicationActionRqst::~RemoveApplicationActionRqst() {
  // @@protoc_insertion_point(destructor:resource.RemoveApplicationActionRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemoveApplicationActionRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  applicationid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  action_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RemoveApplicationActionRqst::ArenaDtor(void* object) {
  RemoveApplicationActionRqst* _this = reinterpret_cast< RemoveApplicationActionRqst* >(object);
  (void)_this;
}
void RemoveApplicationActionRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemoveApplicationActionRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RemoveApplicationActionRqst& RemoveApplicationActionRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RemoveApplicationActionRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void RemoveApplicationActionRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.RemoveApplicationActionRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  applicationid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  action_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveApplicationActionRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string applicationId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_applicationid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.RemoveApplicationActionRqst.applicationId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string action = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_action();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.RemoveApplicationActionRqst.action"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemoveApplicationActionRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.RemoveApplicationActionRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string applicationId = 1;
  if (this->applicationid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_applicationid().data(), static_cast<int>(this->_internal_applicationid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.RemoveApplicationActionRqst.applicationId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_applicationid(), target);
  }

  // string action = 2;
  if (this->action().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_action().data(), static_cast<int>(this->_internal_action().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.RemoveApplicationActionRqst.action");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_action(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.RemoveApplicationActionRqst)
  return target;
}

size_t RemoveApplicationActionRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.RemoveApplicationActionRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string applicationId = 1;
  if (this->applicationid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_applicationid());
  }

  // string action = 2;
  if (this->action().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_action());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveApplicationActionRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.RemoveApplicationActionRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveApplicationActionRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemoveApplicationActionRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.RemoveApplicationActionRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.RemoveApplicationActionRqst)
    MergeFrom(*source);
  }
}

void RemoveApplicationActionRqst::MergeFrom(const RemoveApplicationActionRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.RemoveApplicationActionRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.applicationid().size() > 0) {
    _internal_set_applicationid(from._internal_applicationid());
  }
  if (from.action().size() > 0) {
    _internal_set_action(from._internal_action());
  }
}

void RemoveApplicationActionRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.RemoveApplicationActionRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveApplicationActionRqst::CopyFrom(const RemoveApplicationActionRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.RemoveApplicationActionRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveApplicationActionRqst::IsInitialized() const {
  return true;
}

void RemoveApplicationActionRqst::InternalSwap(RemoveApplicationActionRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  applicationid_.Swap(&other->applicationid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  action_.Swap(&other->action_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveApplicationActionRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RemoveApplicationActionRsp::InitAsDefaultInstance() {
}
class RemoveApplicationActionRsp::_Internal {
 public:
};

RemoveApplicationActionRsp::RemoveApplicationActionRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.RemoveApplicationActionRsp)
}
RemoveApplicationActionRsp::RemoveApplicationActionRsp(const RemoveApplicationActionRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.RemoveApplicationActionRsp)
}

void RemoveApplicationActionRsp::SharedCtor() {
  result_ = false;
}

RemoveApplicationActionRsp::~RemoveApplicationActionRsp() {
  // @@protoc_insertion_point(destructor:resource.RemoveApplicationActionRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemoveApplicationActionRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RemoveApplicationActionRsp::ArenaDtor(void* object) {
  RemoveApplicationActionRsp* _this = reinterpret_cast< RemoveApplicationActionRsp* >(object);
  (void)_this;
}
void RemoveApplicationActionRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemoveApplicationActionRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RemoveApplicationActionRsp& RemoveApplicationActionRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RemoveApplicationActionRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void RemoveApplicationActionRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.RemoveApplicationActionRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveApplicationActionRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemoveApplicationActionRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.RemoveApplicationActionRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.RemoveApplicationActionRsp)
  return target;
}

size_t RemoveApplicationActionRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.RemoveApplicationActionRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveApplicationActionRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.RemoveApplicationActionRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveApplicationActionRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemoveApplicationActionRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.RemoveApplicationActionRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.RemoveApplicationActionRsp)
    MergeFrom(*source);
  }
}

void RemoveApplicationActionRsp::MergeFrom(const RemoveApplicationActionRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.RemoveApplicationActionRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void RemoveApplicationActionRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.RemoveApplicationActionRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveApplicationActionRsp::CopyFrom(const RemoveApplicationActionRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.RemoveApplicationActionRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveApplicationActionRsp::IsInitialized() const {
  return true;
}

void RemoveApplicationActionRsp::InternalSwap(RemoveApplicationActionRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveApplicationActionRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RemoveApplicationsActionRqst::InitAsDefaultInstance() {
}
class RemoveApplicationsActionRqst::_Internal {
 public:
};

RemoveApplicationsActionRqst::RemoveApplicationsActionRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.RemoveApplicationsActionRqst)
}
RemoveApplicationsActionRqst::RemoveApplicationsActionRqst(const RemoveApplicationsActionRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  action_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_action().empty()) {
    action_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_action(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.RemoveApplicationsActionRqst)
}

void RemoveApplicationsActionRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RemoveApplicationsActionRqst_resource_2eproto.base);
  action_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

RemoveApplicationsActionRqst::~RemoveApplicationsActionRqst() {
  // @@protoc_insertion_point(destructor:resource.RemoveApplicationsActionRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemoveApplicationsActionRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  action_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RemoveApplicationsActionRqst::ArenaDtor(void* object) {
  RemoveApplicationsActionRqst* _this = reinterpret_cast< RemoveApplicationsActionRqst* >(object);
  (void)_this;
}
void RemoveApplicationsActionRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemoveApplicationsActionRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RemoveApplicationsActionRqst& RemoveApplicationsActionRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RemoveApplicationsActionRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void RemoveApplicationsActionRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.RemoveApplicationsActionRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  action_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveApplicationsActionRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string action = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_action();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.RemoveApplicationsActionRqst.action"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemoveApplicationsActionRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.RemoveApplicationsActionRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string action = 2;
  if (this->action().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_action().data(), static_cast<int>(this->_internal_action().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.RemoveApplicationsActionRqst.action");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_action(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.RemoveApplicationsActionRqst)
  return target;
}

size_t RemoveApplicationsActionRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.RemoveApplicationsActionRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string action = 2;
  if (this->action().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_action());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveApplicationsActionRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.RemoveApplicationsActionRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveApplicationsActionRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemoveApplicationsActionRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.RemoveApplicationsActionRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.RemoveApplicationsActionRqst)
    MergeFrom(*source);
  }
}

void RemoveApplicationsActionRqst::MergeFrom(const RemoveApplicationsActionRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.RemoveApplicationsActionRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.action().size() > 0) {
    _internal_set_action(from._internal_action());
  }
}

void RemoveApplicationsActionRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.RemoveApplicationsActionRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveApplicationsActionRqst::CopyFrom(const RemoveApplicationsActionRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.RemoveApplicationsActionRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveApplicationsActionRqst::IsInitialized() const {
  return true;
}

void RemoveApplicationsActionRqst::InternalSwap(RemoveApplicationsActionRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  action_.Swap(&other->action_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveApplicationsActionRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RemoveApplicationsActionRsp::InitAsDefaultInstance() {
}
class RemoveApplicationsActionRsp::_Internal {
 public:
};

RemoveApplicationsActionRsp::RemoveApplicationsActionRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.RemoveApplicationsActionRsp)
}
RemoveApplicationsActionRsp::RemoveApplicationsActionRsp(const RemoveApplicationsActionRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.RemoveApplicationsActionRsp)
}

void RemoveApplicationsActionRsp::SharedCtor() {
  result_ = false;
}

RemoveApplicationsActionRsp::~RemoveApplicationsActionRsp() {
  // @@protoc_insertion_point(destructor:resource.RemoveApplicationsActionRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemoveApplicationsActionRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RemoveApplicationsActionRsp::ArenaDtor(void* object) {
  RemoveApplicationsActionRsp* _this = reinterpret_cast< RemoveApplicationsActionRsp* >(object);
  (void)_this;
}
void RemoveApplicationsActionRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemoveApplicationsActionRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RemoveApplicationsActionRsp& RemoveApplicationsActionRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RemoveApplicationsActionRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void RemoveApplicationsActionRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.RemoveApplicationsActionRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveApplicationsActionRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemoveApplicationsActionRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.RemoveApplicationsActionRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.RemoveApplicationsActionRsp)
  return target;
}

size_t RemoveApplicationsActionRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.RemoveApplicationsActionRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveApplicationsActionRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.RemoveApplicationsActionRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveApplicationsActionRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemoveApplicationsActionRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.RemoveApplicationsActionRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.RemoveApplicationsActionRsp)
    MergeFrom(*source);
  }
}

void RemoveApplicationsActionRsp::MergeFrom(const RemoveApplicationsActionRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.RemoveApplicationsActionRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void RemoveApplicationsActionRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.RemoveApplicationsActionRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveApplicationsActionRsp::CopyFrom(const RemoveApplicationsActionRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.RemoveApplicationsActionRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveApplicationsActionRsp::IsInitialized() const {
  return true;
}

void RemoveApplicationsActionRsp::InternalSwap(RemoveApplicationsActionRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveApplicationsActionRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AddPeerActionsRqst::InitAsDefaultInstance() {
}
class AddPeerActionsRqst::_Internal {
 public:
};

AddPeerActionsRqst::AddPeerActionsRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  actions_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.AddPeerActionsRqst)
}
AddPeerActionsRqst::AddPeerActionsRqst(const AddPeerActionsRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      actions_(from.actions_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  domain_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_domain().empty()) {
    domain_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_domain(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.AddPeerActionsRqst)
}

void AddPeerActionsRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AddPeerActionsRqst_resource_2eproto.base);
  domain_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

AddPeerActionsRqst::~AddPeerActionsRqst() {
  // @@protoc_insertion_point(destructor:resource.AddPeerActionsRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddPeerActionsRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  domain_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AddPeerActionsRqst::ArenaDtor(void* object) {
  AddPeerActionsRqst* _this = reinterpret_cast< AddPeerActionsRqst* >(object);
  (void)_this;
}
void AddPeerActionsRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddPeerActionsRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AddPeerActionsRqst& AddPeerActionsRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AddPeerActionsRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void AddPeerActionsRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.AddPeerActionsRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  actions_.Clear();
  domain_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddPeerActionsRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string domain = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_domain();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.AddPeerActionsRqst.domain"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string actions = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_actions();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.AddPeerActionsRqst.actions"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddPeerActionsRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.AddPeerActionsRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string domain = 1;
  if (this->domain().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_domain().data(), static_cast<int>(this->_internal_domain().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.AddPeerActionsRqst.domain");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_domain(), target);
  }

  // repeated string actions = 2;
  for (int i = 0, n = this->_internal_actions_size(); i < n; i++) {
    const auto& s = this->_internal_actions(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.AddPeerActionsRqst.actions");
    target = stream->WriteString(2, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.AddPeerActionsRqst)
  return target;
}

size_t AddPeerActionsRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.AddPeerActionsRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string actions = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(actions_.size());
  for (int i = 0, n = actions_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      actions_.Get(i));
  }

  // string domain = 1;
  if (this->domain().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_domain());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddPeerActionsRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.AddPeerActionsRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const AddPeerActionsRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddPeerActionsRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.AddPeerActionsRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.AddPeerActionsRqst)
    MergeFrom(*source);
  }
}

void AddPeerActionsRqst::MergeFrom(const AddPeerActionsRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.AddPeerActionsRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  actions_.MergeFrom(from.actions_);
  if (from.domain().size() > 0) {
    _internal_set_domain(from._internal_domain());
  }
}

void AddPeerActionsRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.AddPeerActionsRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddPeerActionsRqst::CopyFrom(const AddPeerActionsRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.AddPeerActionsRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddPeerActionsRqst::IsInitialized() const {
  return true;
}

void AddPeerActionsRqst::InternalSwap(AddPeerActionsRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  actions_.InternalSwap(&other->actions_);
  domain_.Swap(&other->domain_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata AddPeerActionsRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AddPeerActionsRsp::InitAsDefaultInstance() {
}
class AddPeerActionsRsp::_Internal {
 public:
};

AddPeerActionsRsp::AddPeerActionsRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.AddPeerActionsRsp)
}
AddPeerActionsRsp::AddPeerActionsRsp(const AddPeerActionsRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.AddPeerActionsRsp)
}

void AddPeerActionsRsp::SharedCtor() {
  result_ = false;
}

AddPeerActionsRsp::~AddPeerActionsRsp() {
  // @@protoc_insertion_point(destructor:resource.AddPeerActionsRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddPeerActionsRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void AddPeerActionsRsp::ArenaDtor(void* object) {
  AddPeerActionsRsp* _this = reinterpret_cast< AddPeerActionsRsp* >(object);
  (void)_this;
}
void AddPeerActionsRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddPeerActionsRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AddPeerActionsRsp& AddPeerActionsRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AddPeerActionsRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void AddPeerActionsRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.AddPeerActionsRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddPeerActionsRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddPeerActionsRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.AddPeerActionsRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.AddPeerActionsRsp)
  return target;
}

size_t AddPeerActionsRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.AddPeerActionsRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddPeerActionsRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.AddPeerActionsRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const AddPeerActionsRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddPeerActionsRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.AddPeerActionsRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.AddPeerActionsRsp)
    MergeFrom(*source);
  }
}

void AddPeerActionsRsp::MergeFrom(const AddPeerActionsRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.AddPeerActionsRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void AddPeerActionsRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.AddPeerActionsRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddPeerActionsRsp::CopyFrom(const AddPeerActionsRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.AddPeerActionsRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddPeerActionsRsp::IsInitialized() const {
  return true;
}

void AddPeerActionsRsp::InternalSwap(AddPeerActionsRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AddPeerActionsRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RemovePeerActionRqst::InitAsDefaultInstance() {
}
class RemovePeerActionRqst::_Internal {
 public:
};

RemovePeerActionRqst::RemovePeerActionRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.RemovePeerActionRqst)
}
RemovePeerActionRqst::RemovePeerActionRqst(const RemovePeerActionRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  domain_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_domain().empty()) {
    domain_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_domain(),
      GetArena());
  }
  action_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_action().empty()) {
    action_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_action(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.RemovePeerActionRqst)
}

void RemovePeerActionRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RemovePeerActionRqst_resource_2eproto.base);
  domain_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  action_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

RemovePeerActionRqst::~RemovePeerActionRqst() {
  // @@protoc_insertion_point(destructor:resource.RemovePeerActionRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemovePeerActionRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  domain_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  action_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RemovePeerActionRqst::ArenaDtor(void* object) {
  RemovePeerActionRqst* _this = reinterpret_cast< RemovePeerActionRqst* >(object);
  (void)_this;
}
void RemovePeerActionRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemovePeerActionRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RemovePeerActionRqst& RemovePeerActionRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RemovePeerActionRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void RemovePeerActionRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.RemovePeerActionRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  domain_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  action_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemovePeerActionRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string domain = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_domain();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.RemovePeerActionRqst.domain"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string action = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_action();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.RemovePeerActionRqst.action"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemovePeerActionRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.RemovePeerActionRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string domain = 1;
  if (this->domain().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_domain().data(), static_cast<int>(this->_internal_domain().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.RemovePeerActionRqst.domain");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_domain(), target);
  }

  // string action = 2;
  if (this->action().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_action().data(), static_cast<int>(this->_internal_action().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.RemovePeerActionRqst.action");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_action(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.RemovePeerActionRqst)
  return target;
}

size_t RemovePeerActionRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.RemovePeerActionRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string domain = 1;
  if (this->domain().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_domain());
  }

  // string action = 2;
  if (this->action().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_action());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemovePeerActionRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.RemovePeerActionRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const RemovePeerActionRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemovePeerActionRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.RemovePeerActionRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.RemovePeerActionRqst)
    MergeFrom(*source);
  }
}

void RemovePeerActionRqst::MergeFrom(const RemovePeerActionRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.RemovePeerActionRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.domain().size() > 0) {
    _internal_set_domain(from._internal_domain());
  }
  if (from.action().size() > 0) {
    _internal_set_action(from._internal_action());
  }
}

void RemovePeerActionRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.RemovePeerActionRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemovePeerActionRqst::CopyFrom(const RemovePeerActionRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.RemovePeerActionRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemovePeerActionRqst::IsInitialized() const {
  return true;
}

void RemovePeerActionRqst::InternalSwap(RemovePeerActionRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  domain_.Swap(&other->domain_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  action_.Swap(&other->action_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata RemovePeerActionRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RemovePeerActionRsp::InitAsDefaultInstance() {
}
class RemovePeerActionRsp::_Internal {
 public:
};

RemovePeerActionRsp::RemovePeerActionRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.RemovePeerActionRsp)
}
RemovePeerActionRsp::RemovePeerActionRsp(const RemovePeerActionRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.RemovePeerActionRsp)
}

void RemovePeerActionRsp::SharedCtor() {
  result_ = false;
}

RemovePeerActionRsp::~RemovePeerActionRsp() {
  // @@protoc_insertion_point(destructor:resource.RemovePeerActionRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemovePeerActionRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RemovePeerActionRsp::ArenaDtor(void* object) {
  RemovePeerActionRsp* _this = reinterpret_cast< RemovePeerActionRsp* >(object);
  (void)_this;
}
void RemovePeerActionRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemovePeerActionRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RemovePeerActionRsp& RemovePeerActionRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RemovePeerActionRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void RemovePeerActionRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.RemovePeerActionRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemovePeerActionRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemovePeerActionRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.RemovePeerActionRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.RemovePeerActionRsp)
  return target;
}

size_t RemovePeerActionRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.RemovePeerActionRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemovePeerActionRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.RemovePeerActionRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const RemovePeerActionRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemovePeerActionRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.RemovePeerActionRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.RemovePeerActionRsp)
    MergeFrom(*source);
  }
}

void RemovePeerActionRsp::MergeFrom(const RemovePeerActionRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.RemovePeerActionRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void RemovePeerActionRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.RemovePeerActionRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemovePeerActionRsp::CopyFrom(const RemovePeerActionRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.RemovePeerActionRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemovePeerActionRsp::IsInitialized() const {
  return true;
}

void RemovePeerActionRsp::InternalSwap(RemovePeerActionRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RemovePeerActionRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RemovePeersActionRqst::InitAsDefaultInstance() {
}
class RemovePeersActionRqst::_Internal {
 public:
};

RemovePeersActionRqst::RemovePeersActionRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.RemovePeersActionRqst)
}
RemovePeersActionRqst::RemovePeersActionRqst(const RemovePeersActionRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  action_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_action().empty()) {
    action_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_action(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.RemovePeersActionRqst)
}

void RemovePeersActionRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RemovePeersActionRqst_resource_2eproto.base);
  action_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

RemovePeersActionRqst::~RemovePeersActionRqst() {
  // @@protoc_insertion_point(destructor:resource.RemovePeersActionRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemovePeersActionRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  action_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RemovePeersActionRqst::ArenaDtor(void* object) {
  RemovePeersActionRqst* _this = reinterpret_cast< RemovePeersActionRqst* >(object);
  (void)_this;
}
void RemovePeersActionRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemovePeersActionRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RemovePeersActionRqst& RemovePeersActionRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RemovePeersActionRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void RemovePeersActionRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.RemovePeersActionRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  action_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemovePeersActionRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string action = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_action();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.RemovePeersActionRqst.action"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemovePeersActionRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.RemovePeersActionRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string action = 2;
  if (this->action().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_action().data(), static_cast<int>(this->_internal_action().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.RemovePeersActionRqst.action");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_action(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.RemovePeersActionRqst)
  return target;
}

size_t RemovePeersActionRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.RemovePeersActionRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string action = 2;
  if (this->action().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_action());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemovePeersActionRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.RemovePeersActionRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const RemovePeersActionRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemovePeersActionRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.RemovePeersActionRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.RemovePeersActionRqst)
    MergeFrom(*source);
  }
}

void RemovePeersActionRqst::MergeFrom(const RemovePeersActionRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.RemovePeersActionRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.action().size() > 0) {
    _internal_set_action(from._internal_action());
  }
}

void RemovePeersActionRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.RemovePeersActionRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemovePeersActionRqst::CopyFrom(const RemovePeersActionRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.RemovePeersActionRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemovePeersActionRqst::IsInitialized() const {
  return true;
}

void RemovePeersActionRqst::InternalSwap(RemovePeersActionRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  action_.Swap(&other->action_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata RemovePeersActionRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RemovePeersActionRsp::InitAsDefaultInstance() {
}
class RemovePeersActionRsp::_Internal {
 public:
};

RemovePeersActionRsp::RemovePeersActionRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.RemovePeersActionRsp)
}
RemovePeersActionRsp::RemovePeersActionRsp(const RemovePeersActionRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.RemovePeersActionRsp)
}

void RemovePeersActionRsp::SharedCtor() {
  result_ = false;
}

RemovePeersActionRsp::~RemovePeersActionRsp() {
  // @@protoc_insertion_point(destructor:resource.RemovePeersActionRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemovePeersActionRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RemovePeersActionRsp::ArenaDtor(void* object) {
  RemovePeersActionRsp* _this = reinterpret_cast< RemovePeersActionRsp* >(object);
  (void)_this;
}
void RemovePeersActionRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemovePeersActionRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RemovePeersActionRsp& RemovePeersActionRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RemovePeersActionRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void RemovePeersActionRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.RemovePeersActionRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemovePeersActionRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemovePeersActionRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.RemovePeersActionRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.RemovePeersActionRsp)
  return target;
}

size_t RemovePeersActionRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.RemovePeersActionRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemovePeersActionRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.RemovePeersActionRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const RemovePeersActionRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemovePeersActionRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.RemovePeersActionRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.RemovePeersActionRsp)
    MergeFrom(*source);
  }
}

void RemovePeersActionRsp::MergeFrom(const RemovePeersActionRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.RemovePeersActionRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void RemovePeersActionRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.RemovePeersActionRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemovePeersActionRsp::CopyFrom(const RemovePeersActionRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.RemovePeersActionRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemovePeersActionRsp::IsInitialized() const {
  return true;
}

void RemovePeersActionRsp::InternalSwap(RemovePeersActionRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RemovePeersActionRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AddOrganizationAccountRqst::InitAsDefaultInstance() {
}
class AddOrganizationAccountRqst::_Internal {
 public:
};

AddOrganizationAccountRqst::AddOrganizationAccountRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.AddOrganizationAccountRqst)
}
AddOrganizationAccountRqst::AddOrganizationAccountRqst(const AddOrganizationAccountRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  organizationid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_organizationid().empty()) {
    organizationid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_organizationid(),
      GetArena());
  }
  accountid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_accountid().empty()) {
    accountid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_accountid(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.AddOrganizationAccountRqst)
}

void AddOrganizationAccountRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AddOrganizationAccountRqst_resource_2eproto.base);
  organizationid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  accountid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

AddOrganizationAccountRqst::~AddOrganizationAccountRqst() {
  // @@protoc_insertion_point(destructor:resource.AddOrganizationAccountRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddOrganizationAccountRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  organizationid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  accountid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AddOrganizationAccountRqst::ArenaDtor(void* object) {
  AddOrganizationAccountRqst* _this = reinterpret_cast< AddOrganizationAccountRqst* >(object);
  (void)_this;
}
void AddOrganizationAccountRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddOrganizationAccountRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AddOrganizationAccountRqst& AddOrganizationAccountRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AddOrganizationAccountRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void AddOrganizationAccountRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.AddOrganizationAccountRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  organizationid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  accountid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddOrganizationAccountRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string organizationId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_organizationid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.AddOrganizationAccountRqst.organizationId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string accountId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_accountid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.AddOrganizationAccountRqst.accountId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddOrganizationAccountRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.AddOrganizationAccountRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string organizationId = 1;
  if (this->organizationid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organizationid().data(), static_cast<int>(this->_internal_organizationid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.AddOrganizationAccountRqst.organizationId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_organizationid(), target);
  }

  // string accountId = 2;
  if (this->accountid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_accountid().data(), static_cast<int>(this->_internal_accountid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.AddOrganizationAccountRqst.accountId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_accountid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.AddOrganizationAccountRqst)
  return target;
}

size_t AddOrganizationAccountRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.AddOrganizationAccountRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string organizationId = 1;
  if (this->organizationid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_organizationid());
  }

  // string accountId = 2;
  if (this->accountid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_accountid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddOrganizationAccountRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.AddOrganizationAccountRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const AddOrganizationAccountRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddOrganizationAccountRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.AddOrganizationAccountRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.AddOrganizationAccountRqst)
    MergeFrom(*source);
  }
}

void AddOrganizationAccountRqst::MergeFrom(const AddOrganizationAccountRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.AddOrganizationAccountRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.organizationid().size() > 0) {
    _internal_set_organizationid(from._internal_organizationid());
  }
  if (from.accountid().size() > 0) {
    _internal_set_accountid(from._internal_accountid());
  }
}

void AddOrganizationAccountRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.AddOrganizationAccountRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddOrganizationAccountRqst::CopyFrom(const AddOrganizationAccountRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.AddOrganizationAccountRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddOrganizationAccountRqst::IsInitialized() const {
  return true;
}

void AddOrganizationAccountRqst::InternalSwap(AddOrganizationAccountRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  organizationid_.Swap(&other->organizationid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  accountid_.Swap(&other->accountid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata AddOrganizationAccountRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AddOrganizationAccountRsp::InitAsDefaultInstance() {
}
class AddOrganizationAccountRsp::_Internal {
 public:
};

AddOrganizationAccountRsp::AddOrganizationAccountRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.AddOrganizationAccountRsp)
}
AddOrganizationAccountRsp::AddOrganizationAccountRsp(const AddOrganizationAccountRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.AddOrganizationAccountRsp)
}

void AddOrganizationAccountRsp::SharedCtor() {
  result_ = false;
}

AddOrganizationAccountRsp::~AddOrganizationAccountRsp() {
  // @@protoc_insertion_point(destructor:resource.AddOrganizationAccountRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddOrganizationAccountRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void AddOrganizationAccountRsp::ArenaDtor(void* object) {
  AddOrganizationAccountRsp* _this = reinterpret_cast< AddOrganizationAccountRsp* >(object);
  (void)_this;
}
void AddOrganizationAccountRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddOrganizationAccountRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AddOrganizationAccountRsp& AddOrganizationAccountRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AddOrganizationAccountRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void AddOrganizationAccountRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.AddOrganizationAccountRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddOrganizationAccountRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddOrganizationAccountRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.AddOrganizationAccountRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.AddOrganizationAccountRsp)
  return target;
}

size_t AddOrganizationAccountRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.AddOrganizationAccountRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddOrganizationAccountRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.AddOrganizationAccountRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const AddOrganizationAccountRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddOrganizationAccountRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.AddOrganizationAccountRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.AddOrganizationAccountRsp)
    MergeFrom(*source);
  }
}

void AddOrganizationAccountRsp::MergeFrom(const AddOrganizationAccountRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.AddOrganizationAccountRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void AddOrganizationAccountRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.AddOrganizationAccountRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddOrganizationAccountRsp::CopyFrom(const AddOrganizationAccountRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.AddOrganizationAccountRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddOrganizationAccountRsp::IsInitialized() const {
  return true;
}

void AddOrganizationAccountRsp::InternalSwap(AddOrganizationAccountRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AddOrganizationAccountRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AddOrganizationGroupRqst::InitAsDefaultInstance() {
}
class AddOrganizationGroupRqst::_Internal {
 public:
};

AddOrganizationGroupRqst::AddOrganizationGroupRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.AddOrganizationGroupRqst)
}
AddOrganizationGroupRqst::AddOrganizationGroupRqst(const AddOrganizationGroupRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  organizationid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_organizationid().empty()) {
    organizationid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_organizationid(),
      GetArena());
  }
  groupid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_groupid().empty()) {
    groupid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_groupid(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.AddOrganizationGroupRqst)
}

void AddOrganizationGroupRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AddOrganizationGroupRqst_resource_2eproto.base);
  organizationid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  groupid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

AddOrganizationGroupRqst::~AddOrganizationGroupRqst() {
  // @@protoc_insertion_point(destructor:resource.AddOrganizationGroupRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddOrganizationGroupRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  organizationid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  groupid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AddOrganizationGroupRqst::ArenaDtor(void* object) {
  AddOrganizationGroupRqst* _this = reinterpret_cast< AddOrganizationGroupRqst* >(object);
  (void)_this;
}
void AddOrganizationGroupRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddOrganizationGroupRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AddOrganizationGroupRqst& AddOrganizationGroupRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AddOrganizationGroupRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void AddOrganizationGroupRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.AddOrganizationGroupRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  organizationid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  groupid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddOrganizationGroupRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string organizationId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_organizationid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.AddOrganizationGroupRqst.organizationId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string groupId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_groupid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.AddOrganizationGroupRqst.groupId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddOrganizationGroupRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.AddOrganizationGroupRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string organizationId = 1;
  if (this->organizationid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organizationid().data(), static_cast<int>(this->_internal_organizationid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.AddOrganizationGroupRqst.organizationId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_organizationid(), target);
  }

  // string groupId = 2;
  if (this->groupid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_groupid().data(), static_cast<int>(this->_internal_groupid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.AddOrganizationGroupRqst.groupId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_groupid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.AddOrganizationGroupRqst)
  return target;
}

size_t AddOrganizationGroupRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.AddOrganizationGroupRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string organizationId = 1;
  if (this->organizationid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_organizationid());
  }

  // string groupId = 2;
  if (this->groupid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_groupid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddOrganizationGroupRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.AddOrganizationGroupRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const AddOrganizationGroupRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddOrganizationGroupRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.AddOrganizationGroupRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.AddOrganizationGroupRqst)
    MergeFrom(*source);
  }
}

void AddOrganizationGroupRqst::MergeFrom(const AddOrganizationGroupRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.AddOrganizationGroupRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.organizationid().size() > 0) {
    _internal_set_organizationid(from._internal_organizationid());
  }
  if (from.groupid().size() > 0) {
    _internal_set_groupid(from._internal_groupid());
  }
}

void AddOrganizationGroupRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.AddOrganizationGroupRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddOrganizationGroupRqst::CopyFrom(const AddOrganizationGroupRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.AddOrganizationGroupRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddOrganizationGroupRqst::IsInitialized() const {
  return true;
}

void AddOrganizationGroupRqst::InternalSwap(AddOrganizationGroupRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  organizationid_.Swap(&other->organizationid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  groupid_.Swap(&other->groupid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata AddOrganizationGroupRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AddOrganizationGroupRsp::InitAsDefaultInstance() {
}
class AddOrganizationGroupRsp::_Internal {
 public:
};

AddOrganizationGroupRsp::AddOrganizationGroupRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.AddOrganizationGroupRsp)
}
AddOrganizationGroupRsp::AddOrganizationGroupRsp(const AddOrganizationGroupRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.AddOrganizationGroupRsp)
}

void AddOrganizationGroupRsp::SharedCtor() {
  result_ = false;
}

AddOrganizationGroupRsp::~AddOrganizationGroupRsp() {
  // @@protoc_insertion_point(destructor:resource.AddOrganizationGroupRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddOrganizationGroupRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void AddOrganizationGroupRsp::ArenaDtor(void* object) {
  AddOrganizationGroupRsp* _this = reinterpret_cast< AddOrganizationGroupRsp* >(object);
  (void)_this;
}
void AddOrganizationGroupRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddOrganizationGroupRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AddOrganizationGroupRsp& AddOrganizationGroupRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AddOrganizationGroupRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void AddOrganizationGroupRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.AddOrganizationGroupRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddOrganizationGroupRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddOrganizationGroupRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.AddOrganizationGroupRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.AddOrganizationGroupRsp)
  return target;
}

size_t AddOrganizationGroupRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.AddOrganizationGroupRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddOrganizationGroupRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.AddOrganizationGroupRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const AddOrganizationGroupRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddOrganizationGroupRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.AddOrganizationGroupRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.AddOrganizationGroupRsp)
    MergeFrom(*source);
  }
}

void AddOrganizationGroupRsp::MergeFrom(const AddOrganizationGroupRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.AddOrganizationGroupRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void AddOrganizationGroupRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.AddOrganizationGroupRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddOrganizationGroupRsp::CopyFrom(const AddOrganizationGroupRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.AddOrganizationGroupRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddOrganizationGroupRsp::IsInitialized() const {
  return true;
}

void AddOrganizationGroupRsp::InternalSwap(AddOrganizationGroupRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AddOrganizationGroupRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AddOrganizationRoleRqst::InitAsDefaultInstance() {
}
class AddOrganizationRoleRqst::_Internal {
 public:
};

AddOrganizationRoleRqst::AddOrganizationRoleRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.AddOrganizationRoleRqst)
}
AddOrganizationRoleRqst::AddOrganizationRoleRqst(const AddOrganizationRoleRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  organizationid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_organizationid().empty()) {
    organizationid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_organizationid(),
      GetArena());
  }
  roleid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_roleid().empty()) {
    roleid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_roleid(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.AddOrganizationRoleRqst)
}

void AddOrganizationRoleRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AddOrganizationRoleRqst_resource_2eproto.base);
  organizationid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  roleid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

AddOrganizationRoleRqst::~AddOrganizationRoleRqst() {
  // @@protoc_insertion_point(destructor:resource.AddOrganizationRoleRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddOrganizationRoleRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  organizationid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  roleid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AddOrganizationRoleRqst::ArenaDtor(void* object) {
  AddOrganizationRoleRqst* _this = reinterpret_cast< AddOrganizationRoleRqst* >(object);
  (void)_this;
}
void AddOrganizationRoleRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddOrganizationRoleRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AddOrganizationRoleRqst& AddOrganizationRoleRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AddOrganizationRoleRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void AddOrganizationRoleRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.AddOrganizationRoleRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  organizationid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  roleid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddOrganizationRoleRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string organizationId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_organizationid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.AddOrganizationRoleRqst.organizationId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string roleId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_roleid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.AddOrganizationRoleRqst.roleId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddOrganizationRoleRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.AddOrganizationRoleRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string organizationId = 1;
  if (this->organizationid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organizationid().data(), static_cast<int>(this->_internal_organizationid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.AddOrganizationRoleRqst.organizationId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_organizationid(), target);
  }

  // string roleId = 2;
  if (this->roleid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_roleid().data(), static_cast<int>(this->_internal_roleid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.AddOrganizationRoleRqst.roleId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_roleid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.AddOrganizationRoleRqst)
  return target;
}

size_t AddOrganizationRoleRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.AddOrganizationRoleRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string organizationId = 1;
  if (this->organizationid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_organizationid());
  }

  // string roleId = 2;
  if (this->roleid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_roleid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddOrganizationRoleRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.AddOrganizationRoleRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const AddOrganizationRoleRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddOrganizationRoleRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.AddOrganizationRoleRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.AddOrganizationRoleRqst)
    MergeFrom(*source);
  }
}

void AddOrganizationRoleRqst::MergeFrom(const AddOrganizationRoleRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.AddOrganizationRoleRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.organizationid().size() > 0) {
    _internal_set_organizationid(from._internal_organizationid());
  }
  if (from.roleid().size() > 0) {
    _internal_set_roleid(from._internal_roleid());
  }
}

void AddOrganizationRoleRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.AddOrganizationRoleRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddOrganizationRoleRqst::CopyFrom(const AddOrganizationRoleRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.AddOrganizationRoleRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddOrganizationRoleRqst::IsInitialized() const {
  return true;
}

void AddOrganizationRoleRqst::InternalSwap(AddOrganizationRoleRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  organizationid_.Swap(&other->organizationid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  roleid_.Swap(&other->roleid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata AddOrganizationRoleRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AddOrganizationRoleRsp::InitAsDefaultInstance() {
}
class AddOrganizationRoleRsp::_Internal {
 public:
};

AddOrganizationRoleRsp::AddOrganizationRoleRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.AddOrganizationRoleRsp)
}
AddOrganizationRoleRsp::AddOrganizationRoleRsp(const AddOrganizationRoleRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.AddOrganizationRoleRsp)
}

void AddOrganizationRoleRsp::SharedCtor() {
  result_ = false;
}

AddOrganizationRoleRsp::~AddOrganizationRoleRsp() {
  // @@protoc_insertion_point(destructor:resource.AddOrganizationRoleRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddOrganizationRoleRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void AddOrganizationRoleRsp::ArenaDtor(void* object) {
  AddOrganizationRoleRsp* _this = reinterpret_cast< AddOrganizationRoleRsp* >(object);
  (void)_this;
}
void AddOrganizationRoleRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddOrganizationRoleRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AddOrganizationRoleRsp& AddOrganizationRoleRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AddOrganizationRoleRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void AddOrganizationRoleRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.AddOrganizationRoleRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddOrganizationRoleRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddOrganizationRoleRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.AddOrganizationRoleRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.AddOrganizationRoleRsp)
  return target;
}

size_t AddOrganizationRoleRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.AddOrganizationRoleRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddOrganizationRoleRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.AddOrganizationRoleRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const AddOrganizationRoleRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddOrganizationRoleRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.AddOrganizationRoleRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.AddOrganizationRoleRsp)
    MergeFrom(*source);
  }
}

void AddOrganizationRoleRsp::MergeFrom(const AddOrganizationRoleRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.AddOrganizationRoleRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void AddOrganizationRoleRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.AddOrganizationRoleRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddOrganizationRoleRsp::CopyFrom(const AddOrganizationRoleRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.AddOrganizationRoleRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddOrganizationRoleRsp::IsInitialized() const {
  return true;
}

void AddOrganizationRoleRsp::InternalSwap(AddOrganizationRoleRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AddOrganizationRoleRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AddOrganizationApplicationRqst::InitAsDefaultInstance() {
}
class AddOrganizationApplicationRqst::_Internal {
 public:
};

AddOrganizationApplicationRqst::AddOrganizationApplicationRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.AddOrganizationApplicationRqst)
}
AddOrganizationApplicationRqst::AddOrganizationApplicationRqst(const AddOrganizationApplicationRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  organizationid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_organizationid().empty()) {
    organizationid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_organizationid(),
      GetArena());
  }
  applicationid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_applicationid().empty()) {
    applicationid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_applicationid(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.AddOrganizationApplicationRqst)
}

void AddOrganizationApplicationRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AddOrganizationApplicationRqst_resource_2eproto.base);
  organizationid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  applicationid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

AddOrganizationApplicationRqst::~AddOrganizationApplicationRqst() {
  // @@protoc_insertion_point(destructor:resource.AddOrganizationApplicationRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddOrganizationApplicationRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  organizationid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  applicationid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AddOrganizationApplicationRqst::ArenaDtor(void* object) {
  AddOrganizationApplicationRqst* _this = reinterpret_cast< AddOrganizationApplicationRqst* >(object);
  (void)_this;
}
void AddOrganizationApplicationRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddOrganizationApplicationRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AddOrganizationApplicationRqst& AddOrganizationApplicationRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AddOrganizationApplicationRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void AddOrganizationApplicationRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.AddOrganizationApplicationRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  organizationid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  applicationid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddOrganizationApplicationRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string organizationId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_organizationid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.AddOrganizationApplicationRqst.organizationId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string applicationId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_applicationid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.AddOrganizationApplicationRqst.applicationId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddOrganizationApplicationRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.AddOrganizationApplicationRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string organizationId = 1;
  if (this->organizationid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organizationid().data(), static_cast<int>(this->_internal_organizationid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.AddOrganizationApplicationRqst.organizationId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_organizationid(), target);
  }

  // string applicationId = 2;
  if (this->applicationid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_applicationid().data(), static_cast<int>(this->_internal_applicationid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.AddOrganizationApplicationRqst.applicationId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_applicationid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.AddOrganizationApplicationRqst)
  return target;
}

size_t AddOrganizationApplicationRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.AddOrganizationApplicationRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string organizationId = 1;
  if (this->organizationid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_organizationid());
  }

  // string applicationId = 2;
  if (this->applicationid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_applicationid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddOrganizationApplicationRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.AddOrganizationApplicationRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const AddOrganizationApplicationRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddOrganizationApplicationRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.AddOrganizationApplicationRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.AddOrganizationApplicationRqst)
    MergeFrom(*source);
  }
}

void AddOrganizationApplicationRqst::MergeFrom(const AddOrganizationApplicationRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.AddOrganizationApplicationRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.organizationid().size() > 0) {
    _internal_set_organizationid(from._internal_organizationid());
  }
  if (from.applicationid().size() > 0) {
    _internal_set_applicationid(from._internal_applicationid());
  }
}

void AddOrganizationApplicationRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.AddOrganizationApplicationRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddOrganizationApplicationRqst::CopyFrom(const AddOrganizationApplicationRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.AddOrganizationApplicationRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddOrganizationApplicationRqst::IsInitialized() const {
  return true;
}

void AddOrganizationApplicationRqst::InternalSwap(AddOrganizationApplicationRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  organizationid_.Swap(&other->organizationid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  applicationid_.Swap(&other->applicationid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata AddOrganizationApplicationRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AddOrganizationApplicationRsp::InitAsDefaultInstance() {
}
class AddOrganizationApplicationRsp::_Internal {
 public:
};

AddOrganizationApplicationRsp::AddOrganizationApplicationRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.AddOrganizationApplicationRsp)
}
AddOrganizationApplicationRsp::AddOrganizationApplicationRsp(const AddOrganizationApplicationRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.AddOrganizationApplicationRsp)
}

void AddOrganizationApplicationRsp::SharedCtor() {
  result_ = false;
}

AddOrganizationApplicationRsp::~AddOrganizationApplicationRsp() {
  // @@protoc_insertion_point(destructor:resource.AddOrganizationApplicationRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddOrganizationApplicationRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void AddOrganizationApplicationRsp::ArenaDtor(void* object) {
  AddOrganizationApplicationRsp* _this = reinterpret_cast< AddOrganizationApplicationRsp* >(object);
  (void)_this;
}
void AddOrganizationApplicationRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddOrganizationApplicationRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AddOrganizationApplicationRsp& AddOrganizationApplicationRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AddOrganizationApplicationRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void AddOrganizationApplicationRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.AddOrganizationApplicationRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddOrganizationApplicationRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddOrganizationApplicationRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.AddOrganizationApplicationRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.AddOrganizationApplicationRsp)
  return target;
}

size_t AddOrganizationApplicationRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.AddOrganizationApplicationRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddOrganizationApplicationRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.AddOrganizationApplicationRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const AddOrganizationApplicationRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddOrganizationApplicationRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.AddOrganizationApplicationRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.AddOrganizationApplicationRsp)
    MergeFrom(*source);
  }
}

void AddOrganizationApplicationRsp::MergeFrom(const AddOrganizationApplicationRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.AddOrganizationApplicationRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void AddOrganizationApplicationRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.AddOrganizationApplicationRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddOrganizationApplicationRsp::CopyFrom(const AddOrganizationApplicationRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.AddOrganizationApplicationRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddOrganizationApplicationRsp::IsInitialized() const {
  return true;
}

void AddOrganizationApplicationRsp::InternalSwap(AddOrganizationApplicationRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AddOrganizationApplicationRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RemoveOrganizationGroupRqst::InitAsDefaultInstance() {
}
class RemoveOrganizationGroupRqst::_Internal {
 public:
};

RemoveOrganizationGroupRqst::RemoveOrganizationGroupRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.RemoveOrganizationGroupRqst)
}
RemoveOrganizationGroupRqst::RemoveOrganizationGroupRqst(const RemoveOrganizationGroupRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  organizationid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_organizationid().empty()) {
    organizationid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_organizationid(),
      GetArena());
  }
  groupid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_groupid().empty()) {
    groupid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_groupid(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.RemoveOrganizationGroupRqst)
}

void RemoveOrganizationGroupRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RemoveOrganizationGroupRqst_resource_2eproto.base);
  organizationid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  groupid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

RemoveOrganizationGroupRqst::~RemoveOrganizationGroupRqst() {
  // @@protoc_insertion_point(destructor:resource.RemoveOrganizationGroupRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemoveOrganizationGroupRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  organizationid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  groupid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RemoveOrganizationGroupRqst::ArenaDtor(void* object) {
  RemoveOrganizationGroupRqst* _this = reinterpret_cast< RemoveOrganizationGroupRqst* >(object);
  (void)_this;
}
void RemoveOrganizationGroupRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemoveOrganizationGroupRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RemoveOrganizationGroupRqst& RemoveOrganizationGroupRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RemoveOrganizationGroupRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void RemoveOrganizationGroupRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.RemoveOrganizationGroupRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  organizationid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  groupid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveOrganizationGroupRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string organizationId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_organizationid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.RemoveOrganizationGroupRqst.organizationId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string groupId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_groupid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.RemoveOrganizationGroupRqst.groupId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemoveOrganizationGroupRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.RemoveOrganizationGroupRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string organizationId = 1;
  if (this->organizationid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organizationid().data(), static_cast<int>(this->_internal_organizationid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.RemoveOrganizationGroupRqst.organizationId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_organizationid(), target);
  }

  // string groupId = 2;
  if (this->groupid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_groupid().data(), static_cast<int>(this->_internal_groupid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.RemoveOrganizationGroupRqst.groupId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_groupid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.RemoveOrganizationGroupRqst)
  return target;
}

size_t RemoveOrganizationGroupRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.RemoveOrganizationGroupRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string organizationId = 1;
  if (this->organizationid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_organizationid());
  }

  // string groupId = 2;
  if (this->groupid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_groupid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveOrganizationGroupRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.RemoveOrganizationGroupRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveOrganizationGroupRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemoveOrganizationGroupRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.RemoveOrganizationGroupRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.RemoveOrganizationGroupRqst)
    MergeFrom(*source);
  }
}

void RemoveOrganizationGroupRqst::MergeFrom(const RemoveOrganizationGroupRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.RemoveOrganizationGroupRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.organizationid().size() > 0) {
    _internal_set_organizationid(from._internal_organizationid());
  }
  if (from.groupid().size() > 0) {
    _internal_set_groupid(from._internal_groupid());
  }
}

void RemoveOrganizationGroupRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.RemoveOrganizationGroupRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveOrganizationGroupRqst::CopyFrom(const RemoveOrganizationGroupRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.RemoveOrganizationGroupRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveOrganizationGroupRqst::IsInitialized() const {
  return true;
}

void RemoveOrganizationGroupRqst::InternalSwap(RemoveOrganizationGroupRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  organizationid_.Swap(&other->organizationid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  groupid_.Swap(&other->groupid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveOrganizationGroupRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RemoveOrganizationGroupRsp::InitAsDefaultInstance() {
}
class RemoveOrganizationGroupRsp::_Internal {
 public:
};

RemoveOrganizationGroupRsp::RemoveOrganizationGroupRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.RemoveOrganizationGroupRsp)
}
RemoveOrganizationGroupRsp::RemoveOrganizationGroupRsp(const RemoveOrganizationGroupRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.RemoveOrganizationGroupRsp)
}

void RemoveOrganizationGroupRsp::SharedCtor() {
  result_ = false;
}

RemoveOrganizationGroupRsp::~RemoveOrganizationGroupRsp() {
  // @@protoc_insertion_point(destructor:resource.RemoveOrganizationGroupRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemoveOrganizationGroupRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RemoveOrganizationGroupRsp::ArenaDtor(void* object) {
  RemoveOrganizationGroupRsp* _this = reinterpret_cast< RemoveOrganizationGroupRsp* >(object);
  (void)_this;
}
void RemoveOrganizationGroupRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemoveOrganizationGroupRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RemoveOrganizationGroupRsp& RemoveOrganizationGroupRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RemoveOrganizationGroupRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void RemoveOrganizationGroupRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.RemoveOrganizationGroupRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveOrganizationGroupRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemoveOrganizationGroupRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.RemoveOrganizationGroupRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.RemoveOrganizationGroupRsp)
  return target;
}

size_t RemoveOrganizationGroupRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.RemoveOrganizationGroupRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveOrganizationGroupRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.RemoveOrganizationGroupRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveOrganizationGroupRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemoveOrganizationGroupRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.RemoveOrganizationGroupRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.RemoveOrganizationGroupRsp)
    MergeFrom(*source);
  }
}

void RemoveOrganizationGroupRsp::MergeFrom(const RemoveOrganizationGroupRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.RemoveOrganizationGroupRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void RemoveOrganizationGroupRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.RemoveOrganizationGroupRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveOrganizationGroupRsp::CopyFrom(const RemoveOrganizationGroupRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.RemoveOrganizationGroupRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveOrganizationGroupRsp::IsInitialized() const {
  return true;
}

void RemoveOrganizationGroupRsp::InternalSwap(RemoveOrganizationGroupRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveOrganizationGroupRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RemoveOrganizationRoleRqst::InitAsDefaultInstance() {
}
class RemoveOrganizationRoleRqst::_Internal {
 public:
};

RemoveOrganizationRoleRqst::RemoveOrganizationRoleRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.RemoveOrganizationRoleRqst)
}
RemoveOrganizationRoleRqst::RemoveOrganizationRoleRqst(const RemoveOrganizationRoleRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  organizationid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_organizationid().empty()) {
    organizationid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_organizationid(),
      GetArena());
  }
  roleid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_roleid().empty()) {
    roleid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_roleid(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.RemoveOrganizationRoleRqst)
}

void RemoveOrganizationRoleRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RemoveOrganizationRoleRqst_resource_2eproto.base);
  organizationid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  roleid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

RemoveOrganizationRoleRqst::~RemoveOrganizationRoleRqst() {
  // @@protoc_insertion_point(destructor:resource.RemoveOrganizationRoleRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemoveOrganizationRoleRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  organizationid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  roleid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RemoveOrganizationRoleRqst::ArenaDtor(void* object) {
  RemoveOrganizationRoleRqst* _this = reinterpret_cast< RemoveOrganizationRoleRqst* >(object);
  (void)_this;
}
void RemoveOrganizationRoleRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemoveOrganizationRoleRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RemoveOrganizationRoleRqst& RemoveOrganizationRoleRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RemoveOrganizationRoleRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void RemoveOrganizationRoleRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.RemoveOrganizationRoleRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  organizationid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  roleid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveOrganizationRoleRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string organizationId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_organizationid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.RemoveOrganizationRoleRqst.organizationId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string roleId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_roleid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.RemoveOrganizationRoleRqst.roleId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemoveOrganizationRoleRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.RemoveOrganizationRoleRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string organizationId = 1;
  if (this->organizationid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organizationid().data(), static_cast<int>(this->_internal_organizationid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.RemoveOrganizationRoleRqst.organizationId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_organizationid(), target);
  }

  // string roleId = 2;
  if (this->roleid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_roleid().data(), static_cast<int>(this->_internal_roleid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.RemoveOrganizationRoleRqst.roleId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_roleid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.RemoveOrganizationRoleRqst)
  return target;
}

size_t RemoveOrganizationRoleRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.RemoveOrganizationRoleRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string organizationId = 1;
  if (this->organizationid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_organizationid());
  }

  // string roleId = 2;
  if (this->roleid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_roleid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveOrganizationRoleRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.RemoveOrganizationRoleRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveOrganizationRoleRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemoveOrganizationRoleRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.RemoveOrganizationRoleRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.RemoveOrganizationRoleRqst)
    MergeFrom(*source);
  }
}

void RemoveOrganizationRoleRqst::MergeFrom(const RemoveOrganizationRoleRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.RemoveOrganizationRoleRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.organizationid().size() > 0) {
    _internal_set_organizationid(from._internal_organizationid());
  }
  if (from.roleid().size() > 0) {
    _internal_set_roleid(from._internal_roleid());
  }
}

void RemoveOrganizationRoleRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.RemoveOrganizationRoleRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveOrganizationRoleRqst::CopyFrom(const RemoveOrganizationRoleRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.RemoveOrganizationRoleRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveOrganizationRoleRqst::IsInitialized() const {
  return true;
}

void RemoveOrganizationRoleRqst::InternalSwap(RemoveOrganizationRoleRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  organizationid_.Swap(&other->organizationid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  roleid_.Swap(&other->roleid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveOrganizationRoleRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RemoveOrganizationRoleRsp::InitAsDefaultInstance() {
}
class RemoveOrganizationRoleRsp::_Internal {
 public:
};

RemoveOrganizationRoleRsp::RemoveOrganizationRoleRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.RemoveOrganizationRoleRsp)
}
RemoveOrganizationRoleRsp::RemoveOrganizationRoleRsp(const RemoveOrganizationRoleRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.RemoveOrganizationRoleRsp)
}

void RemoveOrganizationRoleRsp::SharedCtor() {
  result_ = false;
}

RemoveOrganizationRoleRsp::~RemoveOrganizationRoleRsp() {
  // @@protoc_insertion_point(destructor:resource.RemoveOrganizationRoleRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemoveOrganizationRoleRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RemoveOrganizationRoleRsp::ArenaDtor(void* object) {
  RemoveOrganizationRoleRsp* _this = reinterpret_cast< RemoveOrganizationRoleRsp* >(object);
  (void)_this;
}
void RemoveOrganizationRoleRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemoveOrganizationRoleRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RemoveOrganizationRoleRsp& RemoveOrganizationRoleRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RemoveOrganizationRoleRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void RemoveOrganizationRoleRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.RemoveOrganizationRoleRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveOrganizationRoleRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemoveOrganizationRoleRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.RemoveOrganizationRoleRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.RemoveOrganizationRoleRsp)
  return target;
}

size_t RemoveOrganizationRoleRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.RemoveOrganizationRoleRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveOrganizationRoleRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.RemoveOrganizationRoleRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveOrganizationRoleRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemoveOrganizationRoleRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.RemoveOrganizationRoleRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.RemoveOrganizationRoleRsp)
    MergeFrom(*source);
  }
}

void RemoveOrganizationRoleRsp::MergeFrom(const RemoveOrganizationRoleRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.RemoveOrganizationRoleRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void RemoveOrganizationRoleRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.RemoveOrganizationRoleRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveOrganizationRoleRsp::CopyFrom(const RemoveOrganizationRoleRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.RemoveOrganizationRoleRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveOrganizationRoleRsp::IsInitialized() const {
  return true;
}

void RemoveOrganizationRoleRsp::InternalSwap(RemoveOrganizationRoleRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveOrganizationRoleRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RemoveOrganizationApplicationRqst::InitAsDefaultInstance() {
}
class RemoveOrganizationApplicationRqst::_Internal {
 public:
};

RemoveOrganizationApplicationRqst::RemoveOrganizationApplicationRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.RemoveOrganizationApplicationRqst)
}
RemoveOrganizationApplicationRqst::RemoveOrganizationApplicationRqst(const RemoveOrganizationApplicationRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  organizationid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_organizationid().empty()) {
    organizationid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_organizationid(),
      GetArena());
  }
  applicationid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_applicationid().empty()) {
    applicationid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_applicationid(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.RemoveOrganizationApplicationRqst)
}

void RemoveOrganizationApplicationRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RemoveOrganizationApplicationRqst_resource_2eproto.base);
  organizationid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  applicationid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

RemoveOrganizationApplicationRqst::~RemoveOrganizationApplicationRqst() {
  // @@protoc_insertion_point(destructor:resource.RemoveOrganizationApplicationRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemoveOrganizationApplicationRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  organizationid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  applicationid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RemoveOrganizationApplicationRqst::ArenaDtor(void* object) {
  RemoveOrganizationApplicationRqst* _this = reinterpret_cast< RemoveOrganizationApplicationRqst* >(object);
  (void)_this;
}
void RemoveOrganizationApplicationRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemoveOrganizationApplicationRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RemoveOrganizationApplicationRqst& RemoveOrganizationApplicationRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RemoveOrganizationApplicationRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void RemoveOrganizationApplicationRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.RemoveOrganizationApplicationRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  organizationid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  applicationid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveOrganizationApplicationRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string organizationId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_organizationid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.RemoveOrganizationApplicationRqst.organizationId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string applicationId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_applicationid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.RemoveOrganizationApplicationRqst.applicationId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemoveOrganizationApplicationRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.RemoveOrganizationApplicationRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string organizationId = 1;
  if (this->organizationid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organizationid().data(), static_cast<int>(this->_internal_organizationid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.RemoveOrganizationApplicationRqst.organizationId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_organizationid(), target);
  }

  // string applicationId = 2;
  if (this->applicationid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_applicationid().data(), static_cast<int>(this->_internal_applicationid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.RemoveOrganizationApplicationRqst.applicationId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_applicationid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.RemoveOrganizationApplicationRqst)
  return target;
}

size_t RemoveOrganizationApplicationRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.RemoveOrganizationApplicationRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string organizationId = 1;
  if (this->organizationid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_organizationid());
  }

  // string applicationId = 2;
  if (this->applicationid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_applicationid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveOrganizationApplicationRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.RemoveOrganizationApplicationRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveOrganizationApplicationRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemoveOrganizationApplicationRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.RemoveOrganizationApplicationRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.RemoveOrganizationApplicationRqst)
    MergeFrom(*source);
  }
}

void RemoveOrganizationApplicationRqst::MergeFrom(const RemoveOrganizationApplicationRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.RemoveOrganizationApplicationRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.organizationid().size() > 0) {
    _internal_set_organizationid(from._internal_organizationid());
  }
  if (from.applicationid().size() > 0) {
    _internal_set_applicationid(from._internal_applicationid());
  }
}

void RemoveOrganizationApplicationRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.RemoveOrganizationApplicationRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveOrganizationApplicationRqst::CopyFrom(const RemoveOrganizationApplicationRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.RemoveOrganizationApplicationRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveOrganizationApplicationRqst::IsInitialized() const {
  return true;
}

void RemoveOrganizationApplicationRqst::InternalSwap(RemoveOrganizationApplicationRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  organizationid_.Swap(&other->organizationid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  applicationid_.Swap(&other->applicationid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveOrganizationApplicationRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RemoveOrganizationApplicationRsp::InitAsDefaultInstance() {
}
class RemoveOrganizationApplicationRsp::_Internal {
 public:
};

RemoveOrganizationApplicationRsp::RemoveOrganizationApplicationRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.RemoveOrganizationApplicationRsp)
}
RemoveOrganizationApplicationRsp::RemoveOrganizationApplicationRsp(const RemoveOrganizationApplicationRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.RemoveOrganizationApplicationRsp)
}

void RemoveOrganizationApplicationRsp::SharedCtor() {
  result_ = false;
}

RemoveOrganizationApplicationRsp::~RemoveOrganizationApplicationRsp() {
  // @@protoc_insertion_point(destructor:resource.RemoveOrganizationApplicationRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemoveOrganizationApplicationRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RemoveOrganizationApplicationRsp::ArenaDtor(void* object) {
  RemoveOrganizationApplicationRsp* _this = reinterpret_cast< RemoveOrganizationApplicationRsp* >(object);
  (void)_this;
}
void RemoveOrganizationApplicationRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemoveOrganizationApplicationRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RemoveOrganizationApplicationRsp& RemoveOrganizationApplicationRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RemoveOrganizationApplicationRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void RemoveOrganizationApplicationRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.RemoveOrganizationApplicationRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveOrganizationApplicationRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemoveOrganizationApplicationRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.RemoveOrganizationApplicationRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.RemoveOrganizationApplicationRsp)
  return target;
}

size_t RemoveOrganizationApplicationRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.RemoveOrganizationApplicationRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveOrganizationApplicationRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.RemoveOrganizationApplicationRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveOrganizationApplicationRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemoveOrganizationApplicationRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.RemoveOrganizationApplicationRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.RemoveOrganizationApplicationRsp)
    MergeFrom(*source);
  }
}

void RemoveOrganizationApplicationRsp::MergeFrom(const RemoveOrganizationApplicationRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.RemoveOrganizationApplicationRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void RemoveOrganizationApplicationRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.RemoveOrganizationApplicationRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveOrganizationApplicationRsp::CopyFrom(const RemoveOrganizationApplicationRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.RemoveOrganizationApplicationRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveOrganizationApplicationRsp::IsInitialized() const {
  return true;
}

void RemoveOrganizationApplicationRsp::InternalSwap(RemoveOrganizationApplicationRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveOrganizationApplicationRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RemoveOrganizationAccountRqst::InitAsDefaultInstance() {
}
class RemoveOrganizationAccountRqst::_Internal {
 public:
};

RemoveOrganizationAccountRqst::RemoveOrganizationAccountRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.RemoveOrganizationAccountRqst)
}
RemoveOrganizationAccountRqst::RemoveOrganizationAccountRqst(const RemoveOrganizationAccountRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  organizationid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_organizationid().empty()) {
    organizationid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_organizationid(),
      GetArena());
  }
  accountid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_accountid().empty()) {
    accountid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_accountid(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.RemoveOrganizationAccountRqst)
}

void RemoveOrganizationAccountRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RemoveOrganizationAccountRqst_resource_2eproto.base);
  organizationid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  accountid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

RemoveOrganizationAccountRqst::~RemoveOrganizationAccountRqst() {
  // @@protoc_insertion_point(destructor:resource.RemoveOrganizationAccountRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemoveOrganizationAccountRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  organizationid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  accountid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RemoveOrganizationAccountRqst::ArenaDtor(void* object) {
  RemoveOrganizationAccountRqst* _this = reinterpret_cast< RemoveOrganizationAccountRqst* >(object);
  (void)_this;
}
void RemoveOrganizationAccountRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemoveOrganizationAccountRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RemoveOrganizationAccountRqst& RemoveOrganizationAccountRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RemoveOrganizationAccountRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void RemoveOrganizationAccountRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.RemoveOrganizationAccountRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  organizationid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  accountid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveOrganizationAccountRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string organizationId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_organizationid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.RemoveOrganizationAccountRqst.organizationId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string accountId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_accountid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.RemoveOrganizationAccountRqst.accountId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemoveOrganizationAccountRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.RemoveOrganizationAccountRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string organizationId = 1;
  if (this->organizationid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organizationid().data(), static_cast<int>(this->_internal_organizationid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.RemoveOrganizationAccountRqst.organizationId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_organizationid(), target);
  }

  // string accountId = 2;
  if (this->accountid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_accountid().data(), static_cast<int>(this->_internal_accountid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.RemoveOrganizationAccountRqst.accountId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_accountid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.RemoveOrganizationAccountRqst)
  return target;
}

size_t RemoveOrganizationAccountRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.RemoveOrganizationAccountRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string organizationId = 1;
  if (this->organizationid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_organizationid());
  }

  // string accountId = 2;
  if (this->accountid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_accountid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveOrganizationAccountRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.RemoveOrganizationAccountRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveOrganizationAccountRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemoveOrganizationAccountRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.RemoveOrganizationAccountRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.RemoveOrganizationAccountRqst)
    MergeFrom(*source);
  }
}

void RemoveOrganizationAccountRqst::MergeFrom(const RemoveOrganizationAccountRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.RemoveOrganizationAccountRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.organizationid().size() > 0) {
    _internal_set_organizationid(from._internal_organizationid());
  }
  if (from.accountid().size() > 0) {
    _internal_set_accountid(from._internal_accountid());
  }
}

void RemoveOrganizationAccountRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.RemoveOrganizationAccountRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveOrganizationAccountRqst::CopyFrom(const RemoveOrganizationAccountRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.RemoveOrganizationAccountRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveOrganizationAccountRqst::IsInitialized() const {
  return true;
}

void RemoveOrganizationAccountRqst::InternalSwap(RemoveOrganizationAccountRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  organizationid_.Swap(&other->organizationid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  accountid_.Swap(&other->accountid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveOrganizationAccountRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RemoveOrganizationAccountRsp::InitAsDefaultInstance() {
}
class RemoveOrganizationAccountRsp::_Internal {
 public:
};

RemoveOrganizationAccountRsp::RemoveOrganizationAccountRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.RemoveOrganizationAccountRsp)
}
RemoveOrganizationAccountRsp::RemoveOrganizationAccountRsp(const RemoveOrganizationAccountRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.RemoveOrganizationAccountRsp)
}

void RemoveOrganizationAccountRsp::SharedCtor() {
  result_ = false;
}

RemoveOrganizationAccountRsp::~RemoveOrganizationAccountRsp() {
  // @@protoc_insertion_point(destructor:resource.RemoveOrganizationAccountRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemoveOrganizationAccountRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RemoveOrganizationAccountRsp::ArenaDtor(void* object) {
  RemoveOrganizationAccountRsp* _this = reinterpret_cast< RemoveOrganizationAccountRsp* >(object);
  (void)_this;
}
void RemoveOrganizationAccountRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemoveOrganizationAccountRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RemoveOrganizationAccountRsp& RemoveOrganizationAccountRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RemoveOrganizationAccountRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void RemoveOrganizationAccountRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.RemoveOrganizationAccountRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveOrganizationAccountRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemoveOrganizationAccountRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.RemoveOrganizationAccountRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.RemoveOrganizationAccountRsp)
  return target;
}

size_t RemoveOrganizationAccountRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.RemoveOrganizationAccountRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveOrganizationAccountRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.RemoveOrganizationAccountRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveOrganizationAccountRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemoveOrganizationAccountRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.RemoveOrganizationAccountRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.RemoveOrganizationAccountRsp)
    MergeFrom(*source);
  }
}

void RemoveOrganizationAccountRsp::MergeFrom(const RemoveOrganizationAccountRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.RemoveOrganizationAccountRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void RemoveOrganizationAccountRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.RemoveOrganizationAccountRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveOrganizationAccountRsp::CopyFrom(const RemoveOrganizationAccountRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.RemoveOrganizationAccountRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveOrganizationAccountRsp::IsInitialized() const {
  return true;
}

void RemoveOrganizationAccountRsp::InternalSwap(RemoveOrganizationAccountRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveOrganizationAccountRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Notification::InitAsDefaultInstance() {
}
class Notification::_Internal {
 public:
};

Notification::Notification(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.Notification)
}
Notification::Notification(const Notification& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_message().empty()) {
    message_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_message(),
      GetArena());
  }
  recipient_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_recipient().empty()) {
    recipient_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_recipient(),
      GetArena());
  }
  sender_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_sender().empty()) {
    sender_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_sender(),
      GetArena());
  }
  ::memcpy(&date_, &from.date_,
    static_cast<size_t>(reinterpret_cast<char*>(&notification_type_) -
    reinterpret_cast<char*>(&date_)) + sizeof(notification_type_));
  // @@protoc_insertion_point(copy_constructor:resource.Notification)
}

void Notification::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Notification_resource_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  recipient_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sender_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&date_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&notification_type_) -
      reinterpret_cast<char*>(&date_)) + sizeof(notification_type_));
}

Notification::~Notification() {
  // @@protoc_insertion_point(destructor:resource.Notification)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Notification::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  message_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  recipient_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sender_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Notification::ArenaDtor(void* object) {
  Notification* _this = reinterpret_cast< Notification* >(object);
  (void)_this;
}
void Notification::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Notification::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Notification& Notification::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Notification_resource_2eproto.base);
  return *internal_default_instance();
}


void Notification::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.Notification)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  message_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  recipient_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  sender_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&date_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&notification_type_) -
      reinterpret_cast<char*>(&date_)) + sizeof(notification_type_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Notification::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Notification.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 date = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          date_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string message = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_message();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Notification.message"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string recipient = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_recipient();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Notification.recipient"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string sender = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_sender();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Notification.sender"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .resource.NotificationType notification_type = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_notification_type(static_cast<::resource::NotificationType>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Notification::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.Notification)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Notification.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // int64 date = 2;
  if (this->date() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_date(), target);
  }

  // string message = 3;
  if (this->message().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Notification.message");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_message(), target);
  }

  // string recipient = 4;
  if (this->recipient().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_recipient().data(), static_cast<int>(this->_internal_recipient().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Notification.recipient");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_recipient(), target);
  }

  // string sender = 5;
  if (this->sender().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_sender().data(), static_cast<int>(this->_internal_sender().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Notification.sender");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_sender(), target);
  }

  // .resource.NotificationType notification_type = 6;
  if (this->notification_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      6, this->_internal_notification_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.Notification)
  return target;
}

size_t Notification::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.Notification)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string message = 3;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  // string recipient = 4;
  if (this->recipient().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_recipient());
  }

  // string sender = 5;
  if (this->sender().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_sender());
  }

  // int64 date = 2;
  if (this->date() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_date());
  }

  // .resource.NotificationType notification_type = 6;
  if (this->notification_type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_notification_type());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Notification::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.Notification)
  GOOGLE_DCHECK_NE(&from, this);
  const Notification* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Notification>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.Notification)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.Notification)
    MergeFrom(*source);
  }
}

void Notification::MergeFrom(const Notification& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.Notification)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.message().size() > 0) {
    _internal_set_message(from._internal_message());
  }
  if (from.recipient().size() > 0) {
    _internal_set_recipient(from._internal_recipient());
  }
  if (from.sender().size() > 0) {
    _internal_set_sender(from._internal_sender());
  }
  if (from.date() != 0) {
    _internal_set_date(from._internal_date());
  }
  if (from.notification_type() != 0) {
    _internal_set_notification_type(from._internal_notification_type());
  }
}

void Notification::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.Notification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Notification::CopyFrom(const Notification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.Notification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Notification::IsInitialized() const {
  return true;
}

void Notification::InternalSwap(Notification* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  message_.Swap(&other->message_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  recipient_.Swap(&other->recipient_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  sender_.Swap(&other->sender_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Notification, notification_type_)
      + sizeof(Notification::notification_type_)
      - PROTOBUF_FIELD_OFFSET(Notification, date_)>(
          reinterpret_cast<char*>(&date_),
          reinterpret_cast<char*>(&other->date_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Notification::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CreateNotificationRqst::InitAsDefaultInstance() {
  ::resource::_CreateNotificationRqst_default_instance_._instance.get_mutable()->notification_ = const_cast< ::resource::Notification*>(
      ::resource::Notification::internal_default_instance());
}
class CreateNotificationRqst::_Internal {
 public:
  static const ::resource::Notification& notification(const CreateNotificationRqst* msg);
};

const ::resource::Notification&
CreateNotificationRqst::_Internal::notification(const CreateNotificationRqst* msg) {
  return *msg->notification_;
}
CreateNotificationRqst::CreateNotificationRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.CreateNotificationRqst)
}
CreateNotificationRqst::CreateNotificationRqst(const CreateNotificationRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_notification()) {
    notification_ = new ::resource::Notification(*from.notification_);
  } else {
    notification_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:resource.CreateNotificationRqst)
}

void CreateNotificationRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CreateNotificationRqst_resource_2eproto.base);
  notification_ = nullptr;
}

CreateNotificationRqst::~CreateNotificationRqst() {
  // @@protoc_insertion_point(destructor:resource.CreateNotificationRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateNotificationRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete notification_;
}

void CreateNotificationRqst::ArenaDtor(void* object) {
  CreateNotificationRqst* _this = reinterpret_cast< CreateNotificationRqst* >(object);
  (void)_this;
}
void CreateNotificationRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateNotificationRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateNotificationRqst& CreateNotificationRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreateNotificationRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void CreateNotificationRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.CreateNotificationRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && notification_ != nullptr) {
    delete notification_;
  }
  notification_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateNotificationRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .resource.Notification notification = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_notification(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateNotificationRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.CreateNotificationRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .resource.Notification notification = 1;
  if (this->has_notification()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::notification(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.CreateNotificationRqst)
  return target;
}

size_t CreateNotificationRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.CreateNotificationRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .resource.Notification notification = 1;
  if (this->has_notification()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *notification_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateNotificationRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.CreateNotificationRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateNotificationRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateNotificationRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.CreateNotificationRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.CreateNotificationRqst)
    MergeFrom(*source);
  }
}

void CreateNotificationRqst::MergeFrom(const CreateNotificationRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.CreateNotificationRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_notification()) {
    _internal_mutable_notification()->::resource::Notification::MergeFrom(from._internal_notification());
  }
}

void CreateNotificationRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.CreateNotificationRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateNotificationRqst::CopyFrom(const CreateNotificationRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.CreateNotificationRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateNotificationRqst::IsInitialized() const {
  return true;
}

void CreateNotificationRqst::InternalSwap(CreateNotificationRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(notification_, other->notification_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateNotificationRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CreateNotificationRsp::InitAsDefaultInstance() {
}
class CreateNotificationRsp::_Internal {
 public:
};

CreateNotificationRsp::CreateNotificationRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.CreateNotificationRsp)
}
CreateNotificationRsp::CreateNotificationRsp(const CreateNotificationRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:resource.CreateNotificationRsp)
}

void CreateNotificationRsp::SharedCtor() {
}

CreateNotificationRsp::~CreateNotificationRsp() {
  // @@protoc_insertion_point(destructor:resource.CreateNotificationRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateNotificationRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CreateNotificationRsp::ArenaDtor(void* object) {
  CreateNotificationRsp* _this = reinterpret_cast< CreateNotificationRsp* >(object);
  (void)_this;
}
void CreateNotificationRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateNotificationRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateNotificationRsp& CreateNotificationRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreateNotificationRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void CreateNotificationRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.CreateNotificationRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateNotificationRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateNotificationRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.CreateNotificationRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.CreateNotificationRsp)
  return target;
}

size_t CreateNotificationRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.CreateNotificationRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateNotificationRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.CreateNotificationRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateNotificationRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateNotificationRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.CreateNotificationRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.CreateNotificationRsp)
    MergeFrom(*source);
  }
}

void CreateNotificationRsp::MergeFrom(const CreateNotificationRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.CreateNotificationRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CreateNotificationRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.CreateNotificationRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateNotificationRsp::CopyFrom(const CreateNotificationRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.CreateNotificationRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateNotificationRsp::IsInitialized() const {
  return true;
}

void CreateNotificationRsp::InternalSwap(CreateNotificationRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateNotificationRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetNotificationsRqst::InitAsDefaultInstance() {
}
class GetNotificationsRqst::_Internal {
 public:
};

GetNotificationsRqst::GetNotificationsRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.GetNotificationsRqst)
}
GetNotificationsRqst::GetNotificationsRqst(const GetNotificationsRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  recipient_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_recipient().empty()) {
    recipient_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_recipient(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.GetNotificationsRqst)
}

void GetNotificationsRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetNotificationsRqst_resource_2eproto.base);
  recipient_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetNotificationsRqst::~GetNotificationsRqst() {
  // @@protoc_insertion_point(destructor:resource.GetNotificationsRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetNotificationsRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  recipient_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetNotificationsRqst::ArenaDtor(void* object) {
  GetNotificationsRqst* _this = reinterpret_cast< GetNotificationsRqst* >(object);
  (void)_this;
}
void GetNotificationsRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetNotificationsRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetNotificationsRqst& GetNotificationsRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetNotificationsRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void GetNotificationsRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.GetNotificationsRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  recipient_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetNotificationsRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string recipient = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_recipient();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.GetNotificationsRqst.recipient"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetNotificationsRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.GetNotificationsRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string recipient = 1;
  if (this->recipient().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_recipient().data(), static_cast<int>(this->_internal_recipient().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.GetNotificationsRqst.recipient");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_recipient(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.GetNotificationsRqst)
  return target;
}

size_t GetNotificationsRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.GetNotificationsRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string recipient = 1;
  if (this->recipient().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_recipient());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetNotificationsRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.GetNotificationsRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const GetNotificationsRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetNotificationsRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.GetNotificationsRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.GetNotificationsRqst)
    MergeFrom(*source);
  }
}

void GetNotificationsRqst::MergeFrom(const GetNotificationsRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.GetNotificationsRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.recipient().size() > 0) {
    _internal_set_recipient(from._internal_recipient());
  }
}

void GetNotificationsRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.GetNotificationsRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetNotificationsRqst::CopyFrom(const GetNotificationsRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.GetNotificationsRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetNotificationsRqst::IsInitialized() const {
  return true;
}

void GetNotificationsRqst::InternalSwap(GetNotificationsRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  recipient_.Swap(&other->recipient_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetNotificationsRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetNotificationsRsp::InitAsDefaultInstance() {
}
class GetNotificationsRsp::_Internal {
 public:
};

GetNotificationsRsp::GetNotificationsRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  notifications_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.GetNotificationsRsp)
}
GetNotificationsRsp::GetNotificationsRsp(const GetNotificationsRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      notifications_(from.notifications_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:resource.GetNotificationsRsp)
}

void GetNotificationsRsp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetNotificationsRsp_resource_2eproto.base);
}

GetNotificationsRsp::~GetNotificationsRsp() {
  // @@protoc_insertion_point(destructor:resource.GetNotificationsRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetNotificationsRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetNotificationsRsp::ArenaDtor(void* object) {
  GetNotificationsRsp* _this = reinterpret_cast< GetNotificationsRsp* >(object);
  (void)_this;
}
void GetNotificationsRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetNotificationsRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetNotificationsRsp& GetNotificationsRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetNotificationsRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void GetNotificationsRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.GetNotificationsRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  notifications_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetNotificationsRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .resource.Notification notifications = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_notifications(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetNotificationsRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.GetNotificationsRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .resource.Notification notifications = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_notifications_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_notifications(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.GetNotificationsRsp)
  return target;
}

size_t GetNotificationsRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.GetNotificationsRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .resource.Notification notifications = 1;
  total_size += 1UL * this->_internal_notifications_size();
  for (const auto& msg : this->notifications_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetNotificationsRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.GetNotificationsRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetNotificationsRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetNotificationsRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.GetNotificationsRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.GetNotificationsRsp)
    MergeFrom(*source);
  }
}

void GetNotificationsRsp::MergeFrom(const GetNotificationsRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.GetNotificationsRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  notifications_.MergeFrom(from.notifications_);
}

void GetNotificationsRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.GetNotificationsRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetNotificationsRsp::CopyFrom(const GetNotificationsRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.GetNotificationsRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetNotificationsRsp::IsInitialized() const {
  return true;
}

void GetNotificationsRsp::InternalSwap(GetNotificationsRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  notifications_.InternalSwap(&other->notifications_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetNotificationsRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteNotificationRqst::InitAsDefaultInstance() {
}
class DeleteNotificationRqst::_Internal {
 public:
};

DeleteNotificationRqst::DeleteNotificationRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.DeleteNotificationRqst)
}
DeleteNotificationRqst::DeleteNotificationRqst(const DeleteNotificationRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  recipient_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_recipient().empty()) {
    recipient_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_recipient(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.DeleteNotificationRqst)
}

void DeleteNotificationRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DeleteNotificationRqst_resource_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  recipient_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DeleteNotificationRqst::~DeleteNotificationRqst() {
  // @@protoc_insertion_point(destructor:resource.DeleteNotificationRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteNotificationRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  recipient_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeleteNotificationRqst::ArenaDtor(void* object) {
  DeleteNotificationRqst* _this = reinterpret_cast< DeleteNotificationRqst* >(object);
  (void)_this;
}
void DeleteNotificationRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteNotificationRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteNotificationRqst& DeleteNotificationRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteNotificationRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void DeleteNotificationRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.DeleteNotificationRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  recipient_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteNotificationRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.DeleteNotificationRqst.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string recipient = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_recipient();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.DeleteNotificationRqst.recipient"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteNotificationRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.DeleteNotificationRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.DeleteNotificationRqst.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string recipient = 2;
  if (this->recipient().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_recipient().data(), static_cast<int>(this->_internal_recipient().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.DeleteNotificationRqst.recipient");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_recipient(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.DeleteNotificationRqst)
  return target;
}

size_t DeleteNotificationRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.DeleteNotificationRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string recipient = 2;
  if (this->recipient().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_recipient());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteNotificationRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.DeleteNotificationRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteNotificationRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteNotificationRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.DeleteNotificationRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.DeleteNotificationRqst)
    MergeFrom(*source);
  }
}

void DeleteNotificationRqst::MergeFrom(const DeleteNotificationRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.DeleteNotificationRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.recipient().size() > 0) {
    _internal_set_recipient(from._internal_recipient());
  }
}

void DeleteNotificationRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.DeleteNotificationRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteNotificationRqst::CopyFrom(const DeleteNotificationRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.DeleteNotificationRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteNotificationRqst::IsInitialized() const {
  return true;
}

void DeleteNotificationRqst::InternalSwap(DeleteNotificationRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  recipient_.Swap(&other->recipient_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteNotificationRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteNotificationRsp::InitAsDefaultInstance() {
}
class DeleteNotificationRsp::_Internal {
 public:
};

DeleteNotificationRsp::DeleteNotificationRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.DeleteNotificationRsp)
}
DeleteNotificationRsp::DeleteNotificationRsp(const DeleteNotificationRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:resource.DeleteNotificationRsp)
}

void DeleteNotificationRsp::SharedCtor() {
}

DeleteNotificationRsp::~DeleteNotificationRsp() {
  // @@protoc_insertion_point(destructor:resource.DeleteNotificationRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteNotificationRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void DeleteNotificationRsp::ArenaDtor(void* object) {
  DeleteNotificationRsp* _this = reinterpret_cast< DeleteNotificationRsp* >(object);
  (void)_this;
}
void DeleteNotificationRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteNotificationRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteNotificationRsp& DeleteNotificationRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteNotificationRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void DeleteNotificationRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.DeleteNotificationRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteNotificationRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteNotificationRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.DeleteNotificationRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.DeleteNotificationRsp)
  return target;
}

size_t DeleteNotificationRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.DeleteNotificationRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteNotificationRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.DeleteNotificationRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteNotificationRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteNotificationRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.DeleteNotificationRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.DeleteNotificationRsp)
    MergeFrom(*source);
  }
}

void DeleteNotificationRsp::MergeFrom(const DeleteNotificationRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.DeleteNotificationRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void DeleteNotificationRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.DeleteNotificationRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteNotificationRsp::CopyFrom(const DeleteNotificationRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.DeleteNotificationRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteNotificationRsp::IsInitialized() const {
  return true;
}

void DeleteNotificationRsp::InternalSwap(DeleteNotificationRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteNotificationRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ClearAllNotificationsRqst::InitAsDefaultInstance() {
}
class ClearAllNotificationsRqst::_Internal {
 public:
};

ClearAllNotificationsRqst::ClearAllNotificationsRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.ClearAllNotificationsRqst)
}
ClearAllNotificationsRqst::ClearAllNotificationsRqst(const ClearAllNotificationsRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  recipient_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_recipient().empty()) {
    recipient_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_recipient(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.ClearAllNotificationsRqst)
}

void ClearAllNotificationsRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ClearAllNotificationsRqst_resource_2eproto.base);
  recipient_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ClearAllNotificationsRqst::~ClearAllNotificationsRqst() {
  // @@protoc_insertion_point(destructor:resource.ClearAllNotificationsRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ClearAllNotificationsRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  recipient_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ClearAllNotificationsRqst::ArenaDtor(void* object) {
  ClearAllNotificationsRqst* _this = reinterpret_cast< ClearAllNotificationsRqst* >(object);
  (void)_this;
}
void ClearAllNotificationsRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ClearAllNotificationsRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ClearAllNotificationsRqst& ClearAllNotificationsRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ClearAllNotificationsRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void ClearAllNotificationsRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.ClearAllNotificationsRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  recipient_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ClearAllNotificationsRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string recipient = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_recipient();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.ClearAllNotificationsRqst.recipient"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ClearAllNotificationsRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.ClearAllNotificationsRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string recipient = 1;
  if (this->recipient().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_recipient().data(), static_cast<int>(this->_internal_recipient().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.ClearAllNotificationsRqst.recipient");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_recipient(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.ClearAllNotificationsRqst)
  return target;
}

size_t ClearAllNotificationsRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.ClearAllNotificationsRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string recipient = 1;
  if (this->recipient().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_recipient());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClearAllNotificationsRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.ClearAllNotificationsRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const ClearAllNotificationsRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ClearAllNotificationsRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.ClearAllNotificationsRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.ClearAllNotificationsRqst)
    MergeFrom(*source);
  }
}

void ClearAllNotificationsRqst::MergeFrom(const ClearAllNotificationsRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.ClearAllNotificationsRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.recipient().size() > 0) {
    _internal_set_recipient(from._internal_recipient());
  }
}

void ClearAllNotificationsRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.ClearAllNotificationsRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClearAllNotificationsRqst::CopyFrom(const ClearAllNotificationsRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.ClearAllNotificationsRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClearAllNotificationsRqst::IsInitialized() const {
  return true;
}

void ClearAllNotificationsRqst::InternalSwap(ClearAllNotificationsRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  recipient_.Swap(&other->recipient_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ClearAllNotificationsRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ClearAllNotificationsRsp::InitAsDefaultInstance() {
}
class ClearAllNotificationsRsp::_Internal {
 public:
};

ClearAllNotificationsRsp::ClearAllNotificationsRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.ClearAllNotificationsRsp)
}
ClearAllNotificationsRsp::ClearAllNotificationsRsp(const ClearAllNotificationsRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:resource.ClearAllNotificationsRsp)
}

void ClearAllNotificationsRsp::SharedCtor() {
}

ClearAllNotificationsRsp::~ClearAllNotificationsRsp() {
  // @@protoc_insertion_point(destructor:resource.ClearAllNotificationsRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ClearAllNotificationsRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ClearAllNotificationsRsp::ArenaDtor(void* object) {
  ClearAllNotificationsRsp* _this = reinterpret_cast< ClearAllNotificationsRsp* >(object);
  (void)_this;
}
void ClearAllNotificationsRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ClearAllNotificationsRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ClearAllNotificationsRsp& ClearAllNotificationsRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ClearAllNotificationsRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void ClearAllNotificationsRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.ClearAllNotificationsRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ClearAllNotificationsRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ClearAllNotificationsRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.ClearAllNotificationsRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.ClearAllNotificationsRsp)
  return target;
}

size_t ClearAllNotificationsRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.ClearAllNotificationsRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClearAllNotificationsRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.ClearAllNotificationsRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ClearAllNotificationsRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ClearAllNotificationsRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.ClearAllNotificationsRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.ClearAllNotificationsRsp)
    MergeFrom(*source);
  }
}

void ClearAllNotificationsRsp::MergeFrom(const ClearAllNotificationsRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.ClearAllNotificationsRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ClearAllNotificationsRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.ClearAllNotificationsRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClearAllNotificationsRsp::CopyFrom(const ClearAllNotificationsRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.ClearAllNotificationsRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClearAllNotificationsRsp::IsInitialized() const {
  return true;
}

void ClearAllNotificationsRsp::InternalSwap(ClearAllNotificationsRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ClearAllNotificationsRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ClearNotificationsByTypeRqst::InitAsDefaultInstance() {
}
class ClearNotificationsByTypeRqst::_Internal {
 public:
};

ClearNotificationsByTypeRqst::ClearNotificationsByTypeRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.ClearNotificationsByTypeRqst)
}
ClearNotificationsByTypeRqst::ClearNotificationsByTypeRqst(const ClearNotificationsByTypeRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  recipient_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_recipient().empty()) {
    recipient_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_recipient(),
      GetArena());
  }
  notification_type_ = from.notification_type_;
  // @@protoc_insertion_point(copy_constructor:resource.ClearNotificationsByTypeRqst)
}

void ClearNotificationsByTypeRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ClearNotificationsByTypeRqst_resource_2eproto.base);
  recipient_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  notification_type_ = 0;
}

ClearNotificationsByTypeRqst::~ClearNotificationsByTypeRqst() {
  // @@protoc_insertion_point(destructor:resource.ClearNotificationsByTypeRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ClearNotificationsByTypeRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  recipient_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ClearNotificationsByTypeRqst::ArenaDtor(void* object) {
  ClearNotificationsByTypeRqst* _this = reinterpret_cast< ClearNotificationsByTypeRqst* >(object);
  (void)_this;
}
void ClearNotificationsByTypeRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ClearNotificationsByTypeRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ClearNotificationsByTypeRqst& ClearNotificationsByTypeRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ClearNotificationsByTypeRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void ClearNotificationsByTypeRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.ClearNotificationsByTypeRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  recipient_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  notification_type_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ClearNotificationsByTypeRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string recipient = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_recipient();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.ClearNotificationsByTypeRqst.recipient"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .resource.NotificationType notification_type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_notification_type(static_cast<::resource::NotificationType>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ClearNotificationsByTypeRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.ClearNotificationsByTypeRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string recipient = 1;
  if (this->recipient().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_recipient().data(), static_cast<int>(this->_internal_recipient().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.ClearNotificationsByTypeRqst.recipient");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_recipient(), target);
  }

  // .resource.NotificationType notification_type = 2;
  if (this->notification_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_notification_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.ClearNotificationsByTypeRqst)
  return target;
}

size_t ClearNotificationsByTypeRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.ClearNotificationsByTypeRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string recipient = 1;
  if (this->recipient().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_recipient());
  }

  // .resource.NotificationType notification_type = 2;
  if (this->notification_type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_notification_type());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClearNotificationsByTypeRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.ClearNotificationsByTypeRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const ClearNotificationsByTypeRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ClearNotificationsByTypeRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.ClearNotificationsByTypeRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.ClearNotificationsByTypeRqst)
    MergeFrom(*source);
  }
}

void ClearNotificationsByTypeRqst::MergeFrom(const ClearNotificationsByTypeRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.ClearNotificationsByTypeRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.recipient().size() > 0) {
    _internal_set_recipient(from._internal_recipient());
  }
  if (from.notification_type() != 0) {
    _internal_set_notification_type(from._internal_notification_type());
  }
}

void ClearNotificationsByTypeRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.ClearNotificationsByTypeRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClearNotificationsByTypeRqst::CopyFrom(const ClearNotificationsByTypeRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.ClearNotificationsByTypeRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClearNotificationsByTypeRqst::IsInitialized() const {
  return true;
}

void ClearNotificationsByTypeRqst::InternalSwap(ClearNotificationsByTypeRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  recipient_.Swap(&other->recipient_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(notification_type_, other->notification_type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ClearNotificationsByTypeRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ClearNotificationsByTypeRsp::InitAsDefaultInstance() {
}
class ClearNotificationsByTypeRsp::_Internal {
 public:
};

ClearNotificationsByTypeRsp::ClearNotificationsByTypeRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.ClearNotificationsByTypeRsp)
}
ClearNotificationsByTypeRsp::ClearNotificationsByTypeRsp(const ClearNotificationsByTypeRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:resource.ClearNotificationsByTypeRsp)
}

void ClearNotificationsByTypeRsp::SharedCtor() {
}

ClearNotificationsByTypeRsp::~ClearNotificationsByTypeRsp() {
  // @@protoc_insertion_point(destructor:resource.ClearNotificationsByTypeRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ClearNotificationsByTypeRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ClearNotificationsByTypeRsp::ArenaDtor(void* object) {
  ClearNotificationsByTypeRsp* _this = reinterpret_cast< ClearNotificationsByTypeRsp* >(object);
  (void)_this;
}
void ClearNotificationsByTypeRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ClearNotificationsByTypeRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ClearNotificationsByTypeRsp& ClearNotificationsByTypeRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ClearNotificationsByTypeRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void ClearNotificationsByTypeRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.ClearNotificationsByTypeRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ClearNotificationsByTypeRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ClearNotificationsByTypeRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.ClearNotificationsByTypeRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.ClearNotificationsByTypeRsp)
  return target;
}

size_t ClearNotificationsByTypeRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.ClearNotificationsByTypeRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClearNotificationsByTypeRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.ClearNotificationsByTypeRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ClearNotificationsByTypeRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ClearNotificationsByTypeRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.ClearNotificationsByTypeRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.ClearNotificationsByTypeRsp)
    MergeFrom(*source);
  }
}

void ClearNotificationsByTypeRsp::MergeFrom(const ClearNotificationsByTypeRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.ClearNotificationsByTypeRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ClearNotificationsByTypeRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.ClearNotificationsByTypeRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClearNotificationsByTypeRsp::CopyFrom(const ClearNotificationsByTypeRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.ClearNotificationsByTypeRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClearNotificationsByTypeRsp::IsInitialized() const {
  return true;
}

void ClearNotificationsByTypeRsp::InternalSwap(ClearNotificationsByTypeRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ClearNotificationsByTypeRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetPackageDescriptorRequest::InitAsDefaultInstance() {
}
class GetPackageDescriptorRequest::_Internal {
 public:
};

GetPackageDescriptorRequest::GetPackageDescriptorRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.GetPackageDescriptorRequest)
}
GetPackageDescriptorRequest::GetPackageDescriptorRequest(const GetPackageDescriptorRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  serviceid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_serviceid().empty()) {
    serviceid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_serviceid(),
      GetArena());
  }
  publisherid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_publisherid().empty()) {
    publisherid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_publisherid(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.GetPackageDescriptorRequest)
}

void GetPackageDescriptorRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetPackageDescriptorRequest_resource_2eproto.base);
  serviceid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  publisherid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetPackageDescriptorRequest::~GetPackageDescriptorRequest() {
  // @@protoc_insertion_point(destructor:resource.GetPackageDescriptorRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetPackageDescriptorRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  serviceid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  publisherid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetPackageDescriptorRequest::ArenaDtor(void* object) {
  GetPackageDescriptorRequest* _this = reinterpret_cast< GetPackageDescriptorRequest* >(object);
  (void)_this;
}
void GetPackageDescriptorRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetPackageDescriptorRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetPackageDescriptorRequest& GetPackageDescriptorRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetPackageDescriptorRequest_resource_2eproto.base);
  return *internal_default_instance();
}


void GetPackageDescriptorRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.GetPackageDescriptorRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  serviceid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  publisherid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetPackageDescriptorRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string serviceId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_serviceid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.GetPackageDescriptorRequest.serviceId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string publisherId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_publisherid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.GetPackageDescriptorRequest.publisherId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetPackageDescriptorRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.GetPackageDescriptorRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string serviceId = 1;
  if (this->serviceid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_serviceid().data(), static_cast<int>(this->_internal_serviceid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.GetPackageDescriptorRequest.serviceId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_serviceid(), target);
  }

  // string publisherId = 2;
  if (this->publisherid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_publisherid().data(), static_cast<int>(this->_internal_publisherid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.GetPackageDescriptorRequest.publisherId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_publisherid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.GetPackageDescriptorRequest)
  return target;
}

size_t GetPackageDescriptorRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.GetPackageDescriptorRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string serviceId = 1;
  if (this->serviceid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_serviceid());
  }

  // string publisherId = 2;
  if (this->publisherid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_publisherid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetPackageDescriptorRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.GetPackageDescriptorRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetPackageDescriptorRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetPackageDescriptorRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.GetPackageDescriptorRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.GetPackageDescriptorRequest)
    MergeFrom(*source);
  }
}

void GetPackageDescriptorRequest::MergeFrom(const GetPackageDescriptorRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.GetPackageDescriptorRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.serviceid().size() > 0) {
    _internal_set_serviceid(from._internal_serviceid());
  }
  if (from.publisherid().size() > 0) {
    _internal_set_publisherid(from._internal_publisherid());
  }
}

void GetPackageDescriptorRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.GetPackageDescriptorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetPackageDescriptorRequest::CopyFrom(const GetPackageDescriptorRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.GetPackageDescriptorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPackageDescriptorRequest::IsInitialized() const {
  return true;
}

void GetPackageDescriptorRequest::InternalSwap(GetPackageDescriptorRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  serviceid_.Swap(&other->serviceid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  publisherid_.Swap(&other->publisherid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetPackageDescriptorRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetPackageDescriptorResponse::InitAsDefaultInstance() {
}
class GetPackageDescriptorResponse::_Internal {
 public:
};

GetPackageDescriptorResponse::GetPackageDescriptorResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  results_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.GetPackageDescriptorResponse)
}
GetPackageDescriptorResponse::GetPackageDescriptorResponse(const GetPackageDescriptorResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      results_(from.results_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:resource.GetPackageDescriptorResponse)
}

void GetPackageDescriptorResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetPackageDescriptorResponse_resource_2eproto.base);
}

GetPackageDescriptorResponse::~GetPackageDescriptorResponse() {
  // @@protoc_insertion_point(destructor:resource.GetPackageDescriptorResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetPackageDescriptorResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetPackageDescriptorResponse::ArenaDtor(void* object) {
  GetPackageDescriptorResponse* _this = reinterpret_cast< GetPackageDescriptorResponse* >(object);
  (void)_this;
}
void GetPackageDescriptorResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetPackageDescriptorResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetPackageDescriptorResponse& GetPackageDescriptorResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetPackageDescriptorResponse_resource_2eproto.base);
  return *internal_default_instance();
}


void GetPackageDescriptorResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.GetPackageDescriptorResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  results_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetPackageDescriptorResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .resource.PackageDescriptor results = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_results(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetPackageDescriptorResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.GetPackageDescriptorResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .resource.PackageDescriptor results = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_results_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_results(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.GetPackageDescriptorResponse)
  return target;
}

size_t GetPackageDescriptorResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.GetPackageDescriptorResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .resource.PackageDescriptor results = 1;
  total_size += 1UL * this->_internal_results_size();
  for (const auto& msg : this->results_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetPackageDescriptorResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.GetPackageDescriptorResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetPackageDescriptorResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetPackageDescriptorResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.GetPackageDescriptorResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.GetPackageDescriptorResponse)
    MergeFrom(*source);
  }
}

void GetPackageDescriptorResponse::MergeFrom(const GetPackageDescriptorResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.GetPackageDescriptorResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  results_.MergeFrom(from.results_);
}

void GetPackageDescriptorResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.GetPackageDescriptorResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetPackageDescriptorResponse::CopyFrom(const GetPackageDescriptorResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.GetPackageDescriptorResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPackageDescriptorResponse::IsInitialized() const {
  return true;
}

void GetPackageDescriptorResponse::InternalSwap(GetPackageDescriptorResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  results_.InternalSwap(&other->results_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetPackageDescriptorResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetPackagesDescriptorRequest::InitAsDefaultInstance() {
}
class GetPackagesDescriptorRequest::_Internal {
 public:
};

GetPackagesDescriptorRequest::GetPackagesDescriptorRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.GetPackagesDescriptorRequest)
}
GetPackagesDescriptorRequest::GetPackagesDescriptorRequest(const GetPackagesDescriptorRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  query_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_query().empty()) {
    query_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_query(),
      GetArena());
  }
  options_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_options().empty()) {
    options_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_options(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.GetPackagesDescriptorRequest)
}

void GetPackagesDescriptorRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetPackagesDescriptorRequest_resource_2eproto.base);
  query_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  options_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetPackagesDescriptorRequest::~GetPackagesDescriptorRequest() {
  // @@protoc_insertion_point(destructor:resource.GetPackagesDescriptorRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetPackagesDescriptorRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  query_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  options_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetPackagesDescriptorRequest::ArenaDtor(void* object) {
  GetPackagesDescriptorRequest* _this = reinterpret_cast< GetPackagesDescriptorRequest* >(object);
  (void)_this;
}
void GetPackagesDescriptorRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetPackagesDescriptorRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetPackagesDescriptorRequest& GetPackagesDescriptorRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetPackagesDescriptorRequest_resource_2eproto.base);
  return *internal_default_instance();
}


void GetPackagesDescriptorRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.GetPackagesDescriptorRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  options_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetPackagesDescriptorRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string query = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_query();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.GetPackagesDescriptorRequest.query"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string options = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_options();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.GetPackagesDescriptorRequest.options"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetPackagesDescriptorRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.GetPackagesDescriptorRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_query().data(), static_cast<int>(this->_internal_query().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.GetPackagesDescriptorRequest.query");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_query(), target);
  }

  // string options = 2;
  if (this->options().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_options().data(), static_cast<int>(this->_internal_options().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.GetPackagesDescriptorRequest.options");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_options(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.GetPackagesDescriptorRequest)
  return target;
}

size_t GetPackagesDescriptorRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.GetPackagesDescriptorRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_query());
  }

  // string options = 2;
  if (this->options().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_options());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetPackagesDescriptorRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.GetPackagesDescriptorRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetPackagesDescriptorRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetPackagesDescriptorRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.GetPackagesDescriptorRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.GetPackagesDescriptorRequest)
    MergeFrom(*source);
  }
}

void GetPackagesDescriptorRequest::MergeFrom(const GetPackagesDescriptorRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.GetPackagesDescriptorRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query().size() > 0) {
    _internal_set_query(from._internal_query());
  }
  if (from.options().size() > 0) {
    _internal_set_options(from._internal_options());
  }
}

void GetPackagesDescriptorRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.GetPackagesDescriptorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetPackagesDescriptorRequest::CopyFrom(const GetPackagesDescriptorRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.GetPackagesDescriptorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPackagesDescriptorRequest::IsInitialized() const {
  return true;
}

void GetPackagesDescriptorRequest::InternalSwap(GetPackagesDescriptorRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  query_.Swap(&other->query_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  options_.Swap(&other->options_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetPackagesDescriptorRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetPackagesDescriptorResponse::InitAsDefaultInstance() {
}
class GetPackagesDescriptorResponse::_Internal {
 public:
};

GetPackagesDescriptorResponse::GetPackagesDescriptorResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  results_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.GetPackagesDescriptorResponse)
}
GetPackagesDescriptorResponse::GetPackagesDescriptorResponse(const GetPackagesDescriptorResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      results_(from.results_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:resource.GetPackagesDescriptorResponse)
}

void GetPackagesDescriptorResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetPackagesDescriptorResponse_resource_2eproto.base);
}

GetPackagesDescriptorResponse::~GetPackagesDescriptorResponse() {
  // @@protoc_insertion_point(destructor:resource.GetPackagesDescriptorResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetPackagesDescriptorResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetPackagesDescriptorResponse::ArenaDtor(void* object) {
  GetPackagesDescriptorResponse* _this = reinterpret_cast< GetPackagesDescriptorResponse* >(object);
  (void)_this;
}
void GetPackagesDescriptorResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetPackagesDescriptorResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetPackagesDescriptorResponse& GetPackagesDescriptorResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetPackagesDescriptorResponse_resource_2eproto.base);
  return *internal_default_instance();
}


void GetPackagesDescriptorResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.GetPackagesDescriptorResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  results_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetPackagesDescriptorResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .resource.PackageDescriptor results = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_results(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetPackagesDescriptorResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.GetPackagesDescriptorResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .resource.PackageDescriptor results = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_results_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_results(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.GetPackagesDescriptorResponse)
  return target;
}

size_t GetPackagesDescriptorResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.GetPackagesDescriptorResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .resource.PackageDescriptor results = 1;
  total_size += 1UL * this->_internal_results_size();
  for (const auto& msg : this->results_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetPackagesDescriptorResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.GetPackagesDescriptorResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetPackagesDescriptorResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetPackagesDescriptorResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.GetPackagesDescriptorResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.GetPackagesDescriptorResponse)
    MergeFrom(*source);
  }
}

void GetPackagesDescriptorResponse::MergeFrom(const GetPackagesDescriptorResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.GetPackagesDescriptorResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  results_.MergeFrom(from.results_);
}

void GetPackagesDescriptorResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.GetPackagesDescriptorResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetPackagesDescriptorResponse::CopyFrom(const GetPackagesDescriptorResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.GetPackagesDescriptorResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPackagesDescriptorResponse::IsInitialized() const {
  return true;
}

void GetPackagesDescriptorResponse::InternalSwap(GetPackagesDescriptorResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  results_.InternalSwap(&other->results_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetPackagesDescriptorResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SetPackageDescriptorRequest::InitAsDefaultInstance() {
  ::resource::_SetPackageDescriptorRequest_default_instance_._instance.get_mutable()->packagedescriptor_ = const_cast< ::resource::PackageDescriptor*>(
      ::resource::PackageDescriptor::internal_default_instance());
}
class SetPackageDescriptorRequest::_Internal {
 public:
  static const ::resource::PackageDescriptor& packagedescriptor(const SetPackageDescriptorRequest* msg);
};

const ::resource::PackageDescriptor&
SetPackageDescriptorRequest::_Internal::packagedescriptor(const SetPackageDescriptorRequest* msg) {
  return *msg->packagedescriptor_;
}
SetPackageDescriptorRequest::SetPackageDescriptorRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.SetPackageDescriptorRequest)
}
SetPackageDescriptorRequest::SetPackageDescriptorRequest(const SetPackageDescriptorRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_packagedescriptor()) {
    packagedescriptor_ = new ::resource::PackageDescriptor(*from.packagedescriptor_);
  } else {
    packagedescriptor_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:resource.SetPackageDescriptorRequest)
}

void SetPackageDescriptorRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SetPackageDescriptorRequest_resource_2eproto.base);
  packagedescriptor_ = nullptr;
}

SetPackageDescriptorRequest::~SetPackageDescriptorRequest() {
  // @@protoc_insertion_point(destructor:resource.SetPackageDescriptorRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SetPackageDescriptorRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete packagedescriptor_;
}

void SetPackageDescriptorRequest::ArenaDtor(void* object) {
  SetPackageDescriptorRequest* _this = reinterpret_cast< SetPackageDescriptorRequest* >(object);
  (void)_this;
}
void SetPackageDescriptorRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetPackageDescriptorRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetPackageDescriptorRequest& SetPackageDescriptorRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SetPackageDescriptorRequest_resource_2eproto.base);
  return *internal_default_instance();
}


void SetPackageDescriptorRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.SetPackageDescriptorRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && packagedescriptor_ != nullptr) {
    delete packagedescriptor_;
  }
  packagedescriptor_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetPackageDescriptorRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .resource.PackageDescriptor packageDescriptor = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_packagedescriptor(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetPackageDescriptorRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.SetPackageDescriptorRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .resource.PackageDescriptor packageDescriptor = 1;
  if (this->has_packagedescriptor()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::packagedescriptor(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.SetPackageDescriptorRequest)
  return target;
}

size_t SetPackageDescriptorRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.SetPackageDescriptorRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .resource.PackageDescriptor packageDescriptor = 1;
  if (this->has_packagedescriptor()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *packagedescriptor_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetPackageDescriptorRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.SetPackageDescriptorRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SetPackageDescriptorRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetPackageDescriptorRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.SetPackageDescriptorRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.SetPackageDescriptorRequest)
    MergeFrom(*source);
  }
}

void SetPackageDescriptorRequest::MergeFrom(const SetPackageDescriptorRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.SetPackageDescriptorRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_packagedescriptor()) {
    _internal_mutable_packagedescriptor()->::resource::PackageDescriptor::MergeFrom(from._internal_packagedescriptor());
  }
}

void SetPackageDescriptorRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.SetPackageDescriptorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetPackageDescriptorRequest::CopyFrom(const SetPackageDescriptorRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.SetPackageDescriptorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetPackageDescriptorRequest::IsInitialized() const {
  return true;
}

void SetPackageDescriptorRequest::InternalSwap(SetPackageDescriptorRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(packagedescriptor_, other->packagedescriptor_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetPackageDescriptorRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SetPackageDescriptorResponse::InitAsDefaultInstance() {
}
class SetPackageDescriptorResponse::_Internal {
 public:
};

SetPackageDescriptorResponse::SetPackageDescriptorResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.SetPackageDescriptorResponse)
}
SetPackageDescriptorResponse::SetPackageDescriptorResponse(const SetPackageDescriptorResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.SetPackageDescriptorResponse)
}

void SetPackageDescriptorResponse::SharedCtor() {
  result_ = false;
}

SetPackageDescriptorResponse::~SetPackageDescriptorResponse() {
  // @@protoc_insertion_point(destructor:resource.SetPackageDescriptorResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SetPackageDescriptorResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SetPackageDescriptorResponse::ArenaDtor(void* object) {
  SetPackageDescriptorResponse* _this = reinterpret_cast< SetPackageDescriptorResponse* >(object);
  (void)_this;
}
void SetPackageDescriptorResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetPackageDescriptorResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetPackageDescriptorResponse& SetPackageDescriptorResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SetPackageDescriptorResponse_resource_2eproto.base);
  return *internal_default_instance();
}


void SetPackageDescriptorResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.SetPackageDescriptorResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetPackageDescriptorResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetPackageDescriptorResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.SetPackageDescriptorResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.SetPackageDescriptorResponse)
  return target;
}

size_t SetPackageDescriptorResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.SetPackageDescriptorResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetPackageDescriptorResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.SetPackageDescriptorResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SetPackageDescriptorResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetPackageDescriptorResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.SetPackageDescriptorResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.SetPackageDescriptorResponse)
    MergeFrom(*source);
  }
}

void SetPackageDescriptorResponse::MergeFrom(const SetPackageDescriptorResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.SetPackageDescriptorResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void SetPackageDescriptorResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.SetPackageDescriptorResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetPackageDescriptorResponse::CopyFrom(const SetPackageDescriptorResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.SetPackageDescriptorResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetPackageDescriptorResponse::IsInitialized() const {
  return true;
}

void SetPackageDescriptorResponse::InternalSwap(SetPackageDescriptorResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetPackageDescriptorResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void FindPackagesDescriptorRequest::InitAsDefaultInstance() {
}
class FindPackagesDescriptorRequest::_Internal {
 public:
};

FindPackagesDescriptorRequest::FindPackagesDescriptorRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  keywords_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.FindPackagesDescriptorRequest)
}
FindPackagesDescriptorRequest::FindPackagesDescriptorRequest(const FindPackagesDescriptorRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      keywords_(from.keywords_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:resource.FindPackagesDescriptorRequest)
}

void FindPackagesDescriptorRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_FindPackagesDescriptorRequest_resource_2eproto.base);
}

FindPackagesDescriptorRequest::~FindPackagesDescriptorRequest() {
  // @@protoc_insertion_point(destructor:resource.FindPackagesDescriptorRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FindPackagesDescriptorRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void FindPackagesDescriptorRequest::ArenaDtor(void* object) {
  FindPackagesDescriptorRequest* _this = reinterpret_cast< FindPackagesDescriptorRequest* >(object);
  (void)_this;
}
void FindPackagesDescriptorRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FindPackagesDescriptorRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FindPackagesDescriptorRequest& FindPackagesDescriptorRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_FindPackagesDescriptorRequest_resource_2eproto.base);
  return *internal_default_instance();
}


void FindPackagesDescriptorRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.FindPackagesDescriptorRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  keywords_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FindPackagesDescriptorRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated string keywords = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_keywords();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.FindPackagesDescriptorRequest.keywords"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FindPackagesDescriptorRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.FindPackagesDescriptorRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string keywords = 1;
  for (int i = 0, n = this->_internal_keywords_size(); i < n; i++) {
    const auto& s = this->_internal_keywords(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.FindPackagesDescriptorRequest.keywords");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.FindPackagesDescriptorRequest)
  return target;
}

size_t FindPackagesDescriptorRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.FindPackagesDescriptorRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string keywords = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(keywords_.size());
  for (int i = 0, n = keywords_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      keywords_.Get(i));
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FindPackagesDescriptorRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.FindPackagesDescriptorRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const FindPackagesDescriptorRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FindPackagesDescriptorRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.FindPackagesDescriptorRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.FindPackagesDescriptorRequest)
    MergeFrom(*source);
  }
}

void FindPackagesDescriptorRequest::MergeFrom(const FindPackagesDescriptorRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.FindPackagesDescriptorRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  keywords_.MergeFrom(from.keywords_);
}

void FindPackagesDescriptorRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.FindPackagesDescriptorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FindPackagesDescriptorRequest::CopyFrom(const FindPackagesDescriptorRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.FindPackagesDescriptorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FindPackagesDescriptorRequest::IsInitialized() const {
  return true;
}

void FindPackagesDescriptorRequest::InternalSwap(FindPackagesDescriptorRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  keywords_.InternalSwap(&other->keywords_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FindPackagesDescriptorRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void FindPackagesDescriptorResponse::InitAsDefaultInstance() {
}
class FindPackagesDescriptorResponse::_Internal {
 public:
};

FindPackagesDescriptorResponse::FindPackagesDescriptorResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  results_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.FindPackagesDescriptorResponse)
}
FindPackagesDescriptorResponse::FindPackagesDescriptorResponse(const FindPackagesDescriptorResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      results_(from.results_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:resource.FindPackagesDescriptorResponse)
}

void FindPackagesDescriptorResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_FindPackagesDescriptorResponse_resource_2eproto.base);
}

FindPackagesDescriptorResponse::~FindPackagesDescriptorResponse() {
  // @@protoc_insertion_point(destructor:resource.FindPackagesDescriptorResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FindPackagesDescriptorResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void FindPackagesDescriptorResponse::ArenaDtor(void* object) {
  FindPackagesDescriptorResponse* _this = reinterpret_cast< FindPackagesDescriptorResponse* >(object);
  (void)_this;
}
void FindPackagesDescriptorResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FindPackagesDescriptorResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FindPackagesDescriptorResponse& FindPackagesDescriptorResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_FindPackagesDescriptorResponse_resource_2eproto.base);
  return *internal_default_instance();
}


void FindPackagesDescriptorResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.FindPackagesDescriptorResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  results_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FindPackagesDescriptorResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .resource.PackageDescriptor results = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_results(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FindPackagesDescriptorResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.FindPackagesDescriptorResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .resource.PackageDescriptor results = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_results_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_results(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.FindPackagesDescriptorResponse)
  return target;
}

size_t FindPackagesDescriptorResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.FindPackagesDescriptorResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .resource.PackageDescriptor results = 1;
  total_size += 1UL * this->_internal_results_size();
  for (const auto& msg : this->results_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FindPackagesDescriptorResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.FindPackagesDescriptorResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const FindPackagesDescriptorResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FindPackagesDescriptorResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.FindPackagesDescriptorResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.FindPackagesDescriptorResponse)
    MergeFrom(*source);
  }
}

void FindPackagesDescriptorResponse::MergeFrom(const FindPackagesDescriptorResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.FindPackagesDescriptorResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  results_.MergeFrom(from.results_);
}

void FindPackagesDescriptorResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.FindPackagesDescriptorResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FindPackagesDescriptorResponse::CopyFrom(const FindPackagesDescriptorResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.FindPackagesDescriptorResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FindPackagesDescriptorResponse::IsInitialized() const {
  return true;
}

void FindPackagesDescriptorResponse::InternalSwap(FindPackagesDescriptorResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  results_.InternalSwap(&other->results_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FindPackagesDescriptorResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Session::InitAsDefaultInstance() {
}
class Session::_Internal {
 public:
};

Session::Session(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.Session)
}
Session::Session(const Session& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  accountid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_accountid().empty()) {
    accountid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_accountid(),
      GetArena());
  }
  ::memcpy(&last_state_time_, &from.last_state_time_,
    static_cast<size_t>(reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&last_state_time_)) + sizeof(state_));
  // @@protoc_insertion_point(copy_constructor:resource.Session)
}

void Session::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Session_resource_2eproto.base);
  accountid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&last_state_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&last_state_time_)) + sizeof(state_));
}

Session::~Session() {
  // @@protoc_insertion_point(destructor:resource.Session)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Session::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  accountid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Session::ArenaDtor(void* object) {
  Session* _this = reinterpret_cast< Session* >(object);
  (void)_this;
}
void Session::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Session::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Session& Session::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Session_resource_2eproto.base);
  return *internal_default_instance();
}


void Session::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.Session)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  accountid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&last_state_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&last_state_time_)) + sizeof(state_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Session::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string accountId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_accountid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Session.accountId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .resource.SessionState state = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_state(static_cast<::resource::SessionState>(val));
        } else goto handle_unusual;
        continue;
      // int64 last_state_time = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          last_state_time_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 expire_at = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          expire_at_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Session::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.Session)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string accountId = 1;
  if (this->accountid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_accountid().data(), static_cast<int>(this->_internal_accountid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Session.accountId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_accountid(), target);
  }

  // .resource.SessionState state = 2;
  if (this->state() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_state(), target);
  }

  // int64 last_state_time = 3;
  if (this->last_state_time() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_last_state_time(), target);
  }

  // int64 expire_at = 4;
  if (this->expire_at() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(4, this->_internal_expire_at(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.Session)
  return target;
}

size_t Session::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.Session)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string accountId = 1;
  if (this->accountid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_accountid());
  }

  // int64 last_state_time = 3;
  if (this->last_state_time() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_last_state_time());
  }

  // int64 expire_at = 4;
  if (this->expire_at() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_expire_at());
  }

  // .resource.SessionState state = 2;
  if (this->state() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_state());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Session::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.Session)
  GOOGLE_DCHECK_NE(&from, this);
  const Session* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Session>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.Session)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.Session)
    MergeFrom(*source);
  }
}

void Session::MergeFrom(const Session& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.Session)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.accountid().size() > 0) {
    _internal_set_accountid(from._internal_accountid());
  }
  if (from.last_state_time() != 0) {
    _internal_set_last_state_time(from._internal_last_state_time());
  }
  if (from.expire_at() != 0) {
    _internal_set_expire_at(from._internal_expire_at());
  }
  if (from.state() != 0) {
    _internal_set_state(from._internal_state());
  }
}

void Session::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.Session)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Session::CopyFrom(const Session& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.Session)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Session::IsInitialized() const {
  return true;
}

void Session::InternalSwap(Session* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  accountid_.Swap(&other->accountid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Session, state_)
      + sizeof(Session::state_)
      - PROTOBUF_FIELD_OFFSET(Session, last_state_time_)>(
          reinterpret_cast<char*>(&last_state_time_),
          reinterpret_cast<char*>(&other->last_state_time_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Session::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpdateSessionRequest::InitAsDefaultInstance() {
  ::resource::_UpdateSessionRequest_default_instance_._instance.get_mutable()->session_ = const_cast< ::resource::Session*>(
      ::resource::Session::internal_default_instance());
}
class UpdateSessionRequest::_Internal {
 public:
  static const ::resource::Session& session(const UpdateSessionRequest* msg);
};

const ::resource::Session&
UpdateSessionRequest::_Internal::session(const UpdateSessionRequest* msg) {
  return *msg->session_;
}
UpdateSessionRequest::UpdateSessionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.UpdateSessionRequest)
}
UpdateSessionRequest::UpdateSessionRequest(const UpdateSessionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_session()) {
    session_ = new ::resource::Session(*from.session_);
  } else {
    session_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:resource.UpdateSessionRequest)
}

void UpdateSessionRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UpdateSessionRequest_resource_2eproto.base);
  session_ = nullptr;
}

UpdateSessionRequest::~UpdateSessionRequest() {
  // @@protoc_insertion_point(destructor:resource.UpdateSessionRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UpdateSessionRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete session_;
}

void UpdateSessionRequest::ArenaDtor(void* object) {
  UpdateSessionRequest* _this = reinterpret_cast< UpdateSessionRequest* >(object);
  (void)_this;
}
void UpdateSessionRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateSessionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateSessionRequest& UpdateSessionRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpdateSessionRequest_resource_2eproto.base);
  return *internal_default_instance();
}


void UpdateSessionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.UpdateSessionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && session_ != nullptr) {
    delete session_;
  }
  session_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateSessionRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .resource.Session session = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_session(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateSessionRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.UpdateSessionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .resource.Session session = 1;
  if (this->has_session()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::session(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.UpdateSessionRequest)
  return target;
}

size_t UpdateSessionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.UpdateSessionRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .resource.Session session = 1;
  if (this->has_session()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *session_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateSessionRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.UpdateSessionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateSessionRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateSessionRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.UpdateSessionRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.UpdateSessionRequest)
    MergeFrom(*source);
  }
}

void UpdateSessionRequest::MergeFrom(const UpdateSessionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.UpdateSessionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_session()) {
    _internal_mutable_session()->::resource::Session::MergeFrom(from._internal_session());
  }
}

void UpdateSessionRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.UpdateSessionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateSessionRequest::CopyFrom(const UpdateSessionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.UpdateSessionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateSessionRequest::IsInitialized() const {
  return true;
}

void UpdateSessionRequest::InternalSwap(UpdateSessionRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(session_, other->session_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateSessionRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpdateSessionResponse::InitAsDefaultInstance() {
}
class UpdateSessionResponse::_Internal {
 public:
};

UpdateSessionResponse::UpdateSessionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.UpdateSessionResponse)
}
UpdateSessionResponse::UpdateSessionResponse(const UpdateSessionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:resource.UpdateSessionResponse)
}

void UpdateSessionResponse::SharedCtor() {
}

UpdateSessionResponse::~UpdateSessionResponse() {
  // @@protoc_insertion_point(destructor:resource.UpdateSessionResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UpdateSessionResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void UpdateSessionResponse::ArenaDtor(void* object) {
  UpdateSessionResponse* _this = reinterpret_cast< UpdateSessionResponse* >(object);
  (void)_this;
}
void UpdateSessionResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateSessionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateSessionResponse& UpdateSessionResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpdateSessionResponse_resource_2eproto.base);
  return *internal_default_instance();
}


void UpdateSessionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.UpdateSessionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateSessionResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateSessionResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.UpdateSessionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.UpdateSessionResponse)
  return target;
}

size_t UpdateSessionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.UpdateSessionResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateSessionResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.UpdateSessionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateSessionResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateSessionResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.UpdateSessionResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.UpdateSessionResponse)
    MergeFrom(*source);
  }
}

void UpdateSessionResponse::MergeFrom(const UpdateSessionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.UpdateSessionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void UpdateSessionResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.UpdateSessionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateSessionResponse::CopyFrom(const UpdateSessionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.UpdateSessionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateSessionResponse::IsInitialized() const {
  return true;
}

void UpdateSessionResponse::InternalSwap(UpdateSessionResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateSessionResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RemoveSessionRequest::InitAsDefaultInstance() {
}
class RemoveSessionRequest::_Internal {
 public:
};

RemoveSessionRequest::RemoveSessionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.RemoveSessionRequest)
}
RemoveSessionRequest::RemoveSessionRequest(const RemoveSessionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  accountid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_accountid().empty()) {
    accountid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_accountid(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.RemoveSessionRequest)
}

void RemoveSessionRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RemoveSessionRequest_resource_2eproto.base);
  accountid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

RemoveSessionRequest::~RemoveSessionRequest() {
  // @@protoc_insertion_point(destructor:resource.RemoveSessionRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemoveSessionRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  accountid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RemoveSessionRequest::ArenaDtor(void* object) {
  RemoveSessionRequest* _this = reinterpret_cast< RemoveSessionRequest* >(object);
  (void)_this;
}
void RemoveSessionRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemoveSessionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RemoveSessionRequest& RemoveSessionRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RemoveSessionRequest_resource_2eproto.base);
  return *internal_default_instance();
}


void RemoveSessionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.RemoveSessionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  accountid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveSessionRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string accountId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_accountid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.RemoveSessionRequest.accountId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemoveSessionRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.RemoveSessionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string accountId = 1;
  if (this->accountid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_accountid().data(), static_cast<int>(this->_internal_accountid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.RemoveSessionRequest.accountId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_accountid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.RemoveSessionRequest)
  return target;
}

size_t RemoveSessionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.RemoveSessionRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string accountId = 1;
  if (this->accountid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_accountid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveSessionRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.RemoveSessionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveSessionRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemoveSessionRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.RemoveSessionRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.RemoveSessionRequest)
    MergeFrom(*source);
  }
}

void RemoveSessionRequest::MergeFrom(const RemoveSessionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.RemoveSessionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.accountid().size() > 0) {
    _internal_set_accountid(from._internal_accountid());
  }
}

void RemoveSessionRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.RemoveSessionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveSessionRequest::CopyFrom(const RemoveSessionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.RemoveSessionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveSessionRequest::IsInitialized() const {
  return true;
}

void RemoveSessionRequest::InternalSwap(RemoveSessionRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  accountid_.Swap(&other->accountid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveSessionRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RemoveSessionResponse::InitAsDefaultInstance() {
}
class RemoveSessionResponse::_Internal {
 public:
};

RemoveSessionResponse::RemoveSessionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.RemoveSessionResponse)
}
RemoveSessionResponse::RemoveSessionResponse(const RemoveSessionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:resource.RemoveSessionResponse)
}

void RemoveSessionResponse::SharedCtor() {
}

RemoveSessionResponse::~RemoveSessionResponse() {
  // @@protoc_insertion_point(destructor:resource.RemoveSessionResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemoveSessionResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RemoveSessionResponse::ArenaDtor(void* object) {
  RemoveSessionResponse* _this = reinterpret_cast< RemoveSessionResponse* >(object);
  (void)_this;
}
void RemoveSessionResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemoveSessionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RemoveSessionResponse& RemoveSessionResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RemoveSessionResponse_resource_2eproto.base);
  return *internal_default_instance();
}


void RemoveSessionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.RemoveSessionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveSessionResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemoveSessionResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.RemoveSessionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.RemoveSessionResponse)
  return target;
}

size_t RemoveSessionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.RemoveSessionResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveSessionResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.RemoveSessionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveSessionResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemoveSessionResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.RemoveSessionResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.RemoveSessionResponse)
    MergeFrom(*source);
  }
}

void RemoveSessionResponse::MergeFrom(const RemoveSessionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.RemoveSessionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void RemoveSessionResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.RemoveSessionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveSessionResponse::CopyFrom(const RemoveSessionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.RemoveSessionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveSessionResponse::IsInitialized() const {
  return true;
}

void RemoveSessionResponse::InternalSwap(RemoveSessionResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveSessionResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetSessionsRequest::InitAsDefaultInstance() {
}
class GetSessionsRequest::_Internal {
 public:
};

GetSessionsRequest::GetSessionsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.GetSessionsRequest)
}
GetSessionsRequest::GetSessionsRequest(const GetSessionsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  query_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_query().empty()) {
    query_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_query(),
      GetArena());
  }
  options_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_options().empty()) {
    options_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_options(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.GetSessionsRequest)
}

void GetSessionsRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetSessionsRequest_resource_2eproto.base);
  query_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  options_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetSessionsRequest::~GetSessionsRequest() {
  // @@protoc_insertion_point(destructor:resource.GetSessionsRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetSessionsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  query_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  options_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetSessionsRequest::ArenaDtor(void* object) {
  GetSessionsRequest* _this = reinterpret_cast< GetSessionsRequest* >(object);
  (void)_this;
}
void GetSessionsRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetSessionsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetSessionsRequest& GetSessionsRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetSessionsRequest_resource_2eproto.base);
  return *internal_default_instance();
}


void GetSessionsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.GetSessionsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  options_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetSessionsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string query = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_query();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.GetSessionsRequest.query"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string options = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_options();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.GetSessionsRequest.options"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetSessionsRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.GetSessionsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_query().data(), static_cast<int>(this->_internal_query().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.GetSessionsRequest.query");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_query(), target);
  }

  // string options = 2;
  if (this->options().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_options().data(), static_cast<int>(this->_internal_options().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.GetSessionsRequest.options");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_options(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.GetSessionsRequest)
  return target;
}

size_t GetSessionsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.GetSessionsRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_query());
  }

  // string options = 2;
  if (this->options().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_options());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetSessionsRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.GetSessionsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetSessionsRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetSessionsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.GetSessionsRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.GetSessionsRequest)
    MergeFrom(*source);
  }
}

void GetSessionsRequest::MergeFrom(const GetSessionsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.GetSessionsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query().size() > 0) {
    _internal_set_query(from._internal_query());
  }
  if (from.options().size() > 0) {
    _internal_set_options(from._internal_options());
  }
}

void GetSessionsRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.GetSessionsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetSessionsRequest::CopyFrom(const GetSessionsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.GetSessionsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSessionsRequest::IsInitialized() const {
  return true;
}

void GetSessionsRequest::InternalSwap(GetSessionsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  query_.Swap(&other->query_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  options_.Swap(&other->options_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetSessionsRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetSessionsResponse::InitAsDefaultInstance() {
}
class GetSessionsResponse::_Internal {
 public:
};

GetSessionsResponse::GetSessionsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  sessions_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.GetSessionsResponse)
}
GetSessionsResponse::GetSessionsResponse(const GetSessionsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      sessions_(from.sessions_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:resource.GetSessionsResponse)
}

void GetSessionsResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetSessionsResponse_resource_2eproto.base);
}

GetSessionsResponse::~GetSessionsResponse() {
  // @@protoc_insertion_point(destructor:resource.GetSessionsResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetSessionsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetSessionsResponse::ArenaDtor(void* object) {
  GetSessionsResponse* _this = reinterpret_cast< GetSessionsResponse* >(object);
  (void)_this;
}
void GetSessionsResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetSessionsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetSessionsResponse& GetSessionsResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetSessionsResponse_resource_2eproto.base);
  return *internal_default_instance();
}


void GetSessionsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.GetSessionsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sessions_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetSessionsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .resource.Session sessions = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_sessions(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetSessionsResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.GetSessionsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .resource.Session sessions = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_sessions_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_sessions(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.GetSessionsResponse)
  return target;
}

size_t GetSessionsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.GetSessionsResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .resource.Session sessions = 1;
  total_size += 1UL * this->_internal_sessions_size();
  for (const auto& msg : this->sessions_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetSessionsResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.GetSessionsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetSessionsResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetSessionsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.GetSessionsResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.GetSessionsResponse)
    MergeFrom(*source);
  }
}

void GetSessionsResponse::MergeFrom(const GetSessionsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.GetSessionsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  sessions_.MergeFrom(from.sessions_);
}

void GetSessionsResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.GetSessionsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetSessionsResponse::CopyFrom(const GetSessionsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.GetSessionsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSessionsResponse::IsInitialized() const {
  return true;
}

void GetSessionsResponse::InternalSwap(GetSessionsResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  sessions_.InternalSwap(&other->sessions_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetSessionsResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetSessionRequest::InitAsDefaultInstance() {
}
class GetSessionRequest::_Internal {
 public:
};

GetSessionRequest::GetSessionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.GetSessionRequest)
}
GetSessionRequest::GetSessionRequest(const GetSessionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  accountid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_accountid().empty()) {
    accountid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_accountid(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.GetSessionRequest)
}

void GetSessionRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetSessionRequest_resource_2eproto.base);
  accountid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetSessionRequest::~GetSessionRequest() {
  // @@protoc_insertion_point(destructor:resource.GetSessionRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetSessionRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  accountid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetSessionRequest::ArenaDtor(void* object) {
  GetSessionRequest* _this = reinterpret_cast< GetSessionRequest* >(object);
  (void)_this;
}
void GetSessionRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetSessionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetSessionRequest& GetSessionRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetSessionRequest_resource_2eproto.base);
  return *internal_default_instance();
}


void GetSessionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.GetSessionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  accountid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetSessionRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string accountId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_accountid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.GetSessionRequest.accountId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetSessionRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.GetSessionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string accountId = 1;
  if (this->accountid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_accountid().data(), static_cast<int>(this->_internal_accountid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.GetSessionRequest.accountId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_accountid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.GetSessionRequest)
  return target;
}

size_t GetSessionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.GetSessionRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string accountId = 1;
  if (this->accountid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_accountid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetSessionRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.GetSessionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetSessionRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetSessionRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.GetSessionRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.GetSessionRequest)
    MergeFrom(*source);
  }
}

void GetSessionRequest::MergeFrom(const GetSessionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.GetSessionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.accountid().size() > 0) {
    _internal_set_accountid(from._internal_accountid());
  }
}

void GetSessionRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.GetSessionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetSessionRequest::CopyFrom(const GetSessionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.GetSessionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSessionRequest::IsInitialized() const {
  return true;
}

void GetSessionRequest::InternalSwap(GetSessionRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  accountid_.Swap(&other->accountid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetSessionRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetSessionResponse::InitAsDefaultInstance() {
  ::resource::_GetSessionResponse_default_instance_._instance.get_mutable()->session_ = const_cast< ::resource::Session*>(
      ::resource::Session::internal_default_instance());
}
class GetSessionResponse::_Internal {
 public:
  static const ::resource::Session& session(const GetSessionResponse* msg);
};

const ::resource::Session&
GetSessionResponse::_Internal::session(const GetSessionResponse* msg) {
  return *msg->session_;
}
GetSessionResponse::GetSessionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.GetSessionResponse)
}
GetSessionResponse::GetSessionResponse(const GetSessionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_session()) {
    session_ = new ::resource::Session(*from.session_);
  } else {
    session_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:resource.GetSessionResponse)
}

void GetSessionResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetSessionResponse_resource_2eproto.base);
  session_ = nullptr;
}

GetSessionResponse::~GetSessionResponse() {
  // @@protoc_insertion_point(destructor:resource.GetSessionResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetSessionResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete session_;
}

void GetSessionResponse::ArenaDtor(void* object) {
  GetSessionResponse* _this = reinterpret_cast< GetSessionResponse* >(object);
  (void)_this;
}
void GetSessionResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetSessionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetSessionResponse& GetSessionResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetSessionResponse_resource_2eproto.base);
  return *internal_default_instance();
}


void GetSessionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.GetSessionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && session_ != nullptr) {
    delete session_;
  }
  session_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetSessionResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .resource.Session session = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_session(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetSessionResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.GetSessionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .resource.Session session = 1;
  if (this->has_session()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::session(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.GetSessionResponse)
  return target;
}

size_t GetSessionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.GetSessionResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .resource.Session session = 1;
  if (this->has_session()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *session_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetSessionResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.GetSessionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetSessionResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetSessionResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.GetSessionResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.GetSessionResponse)
    MergeFrom(*source);
  }
}

void GetSessionResponse::MergeFrom(const GetSessionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.GetSessionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_session()) {
    _internal_mutable_session()->::resource::Session::MergeFrom(from._internal_session());
  }
}

void GetSessionResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.GetSessionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetSessionResponse::CopyFrom(const GetSessionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.GetSessionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSessionResponse::IsInitialized() const {
  return true;
}

void GetSessionResponse::InternalSwap(GetSessionResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(session_, other->session_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetSessionResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace resource
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::resource::PackageBundle* Arena::CreateMaybeMessage< ::resource::PackageBundle >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::PackageBundle >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::PackageDescriptor* Arena::CreateMaybeMessage< ::resource::PackageDescriptor >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::PackageDescriptor >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::Account* Arena::CreateMaybeMessage< ::resource::Account >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::Account >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::Role* Arena::CreateMaybeMessage< ::resource::Role >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::Role >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::RegisterAccountRqst* Arena::CreateMaybeMessage< ::resource::RegisterAccountRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::RegisterAccountRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::RegisterAccountRsp* Arena::CreateMaybeMessage< ::resource::RegisterAccountRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::RegisterAccountRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::AccountExistRqst* Arena::CreateMaybeMessage< ::resource::AccountExistRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::AccountExistRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::AccountExistRsp* Arena::CreateMaybeMessage< ::resource::AccountExistRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::AccountExistRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::GetAccountsRqst* Arena::CreateMaybeMessage< ::resource::GetAccountsRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::GetAccountsRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::GetAccountsRsp* Arena::CreateMaybeMessage< ::resource::GetAccountsRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::GetAccountsRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::GetAccountRqst* Arena::CreateMaybeMessage< ::resource::GetAccountRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::GetAccountRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::GetAccountRsp* Arena::CreateMaybeMessage< ::resource::GetAccountRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::GetAccountRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::SetAccountPasswordRqst* Arena::CreateMaybeMessage< ::resource::SetAccountPasswordRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::SetAccountPasswordRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::SetAccountPasswordRsp* Arena::CreateMaybeMessage< ::resource::SetAccountPasswordRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::SetAccountPasswordRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::SetEmailRequest* Arena::CreateMaybeMessage< ::resource::SetEmailRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::SetEmailRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::SetEmailResponse* Arena::CreateMaybeMessage< ::resource::SetEmailResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::SetEmailResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::DeleteAccountRqst* Arena::CreateMaybeMessage< ::resource::DeleteAccountRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::DeleteAccountRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::DeleteAccountRsp* Arena::CreateMaybeMessage< ::resource::DeleteAccountRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::DeleteAccountRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::AddAccountRoleRqst* Arena::CreateMaybeMessage< ::resource::AddAccountRoleRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::AddAccountRoleRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::AddAccountRoleRsp* Arena::CreateMaybeMessage< ::resource::AddAccountRoleRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::AddAccountRoleRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::RemoveAccountRoleRqst* Arena::CreateMaybeMessage< ::resource::RemoveAccountRoleRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::RemoveAccountRoleRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::RemoveAccountRoleRsp* Arena::CreateMaybeMessage< ::resource::RemoveAccountRoleRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::RemoveAccountRoleRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::Contact* Arena::CreateMaybeMessage< ::resource::Contact >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::Contact >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::SetAccountContactRqst* Arena::CreateMaybeMessage< ::resource::SetAccountContactRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::SetAccountContactRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::SetAccountContactRsp* Arena::CreateMaybeMessage< ::resource::SetAccountContactRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::SetAccountContactRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::CreateRoleRqst* Arena::CreateMaybeMessage< ::resource::CreateRoleRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::CreateRoleRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::CreateRoleRsp* Arena::CreateMaybeMessage< ::resource::CreateRoleRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::CreateRoleRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::GetRolesRqst* Arena::CreateMaybeMessage< ::resource::GetRolesRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::GetRolesRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::GetRolesRsp* Arena::CreateMaybeMessage< ::resource::GetRolesRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::GetRolesRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::DeleteRoleRqst* Arena::CreateMaybeMessage< ::resource::DeleteRoleRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::DeleteRoleRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::DeleteRoleRsp* Arena::CreateMaybeMessage< ::resource::DeleteRoleRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::DeleteRoleRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::Application* Arena::CreateMaybeMessage< ::resource::Application >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::Application >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::CreateApplicationRqst* Arena::CreateMaybeMessage< ::resource::CreateApplicationRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::CreateApplicationRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::CreateApplicationRsp* Arena::CreateMaybeMessage< ::resource::CreateApplicationRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::CreateApplicationRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::UpdateApplicationRqst* Arena::CreateMaybeMessage< ::resource::UpdateApplicationRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::UpdateApplicationRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::UpdateApplicationRsp* Arena::CreateMaybeMessage< ::resource::UpdateApplicationRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::UpdateApplicationRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::DeleteApplicationRqst* Arena::CreateMaybeMessage< ::resource::DeleteApplicationRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::DeleteApplicationRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::DeleteApplicationRsp* Arena::CreateMaybeMessage< ::resource::DeleteApplicationRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::DeleteApplicationRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::GetApplicationsRqst* Arena::CreateMaybeMessage< ::resource::GetApplicationsRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::GetApplicationsRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::GetApplicationsRsp* Arena::CreateMaybeMessage< ::resource::GetApplicationsRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::GetApplicationsRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::GetApplicationVersionRqst* Arena::CreateMaybeMessage< ::resource::GetApplicationVersionRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::GetApplicationVersionRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::GetApplicationVersionRsp* Arena::CreateMaybeMessage< ::resource::GetApplicationVersionRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::GetApplicationVersionRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::GetApplicationIconRqst* Arena::CreateMaybeMessage< ::resource::GetApplicationIconRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::GetApplicationIconRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::GetApplicationIconRsp* Arena::CreateMaybeMessage< ::resource::GetApplicationIconRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::GetApplicationIconRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::GetApplicationAliasRqst* Arena::CreateMaybeMessage< ::resource::GetApplicationAliasRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::GetApplicationAliasRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::GetApplicationAliasRsp* Arena::CreateMaybeMessage< ::resource::GetApplicationAliasRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::GetApplicationAliasRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::IsOrgnanizationMemberRqst* Arena::CreateMaybeMessage< ::resource::IsOrgnanizationMemberRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::IsOrgnanizationMemberRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::IsOrgnanizationMemberRsp* Arena::CreateMaybeMessage< ::resource::IsOrgnanizationMemberRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::IsOrgnanizationMemberRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::SetPackageBundleRequest* Arena::CreateMaybeMessage< ::resource::SetPackageBundleRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::SetPackageBundleRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::SetPackageBundleResponse* Arena::CreateMaybeMessage< ::resource::SetPackageBundleResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::SetPackageBundleResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::GetPackageBundleChecksumRequest* Arena::CreateMaybeMessage< ::resource::GetPackageBundleChecksumRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::GetPackageBundleChecksumRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::GetPackageBundleChecksumResponse* Arena::CreateMaybeMessage< ::resource::GetPackageBundleChecksumResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::GetPackageBundleChecksumResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::Group* Arena::CreateMaybeMessage< ::resource::Group >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::Group >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::CreateGroupRqst* Arena::CreateMaybeMessage< ::resource::CreateGroupRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::CreateGroupRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::CreateGroupRsp* Arena::CreateMaybeMessage< ::resource::CreateGroupRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::CreateGroupRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::UpdateGroupRqst* Arena::CreateMaybeMessage< ::resource::UpdateGroupRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::UpdateGroupRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::UpdateGroupRsp* Arena::CreateMaybeMessage< ::resource::UpdateGroupRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::UpdateGroupRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::GetGroupsRqst* Arena::CreateMaybeMessage< ::resource::GetGroupsRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::GetGroupsRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::GetGroupsRsp* Arena::CreateMaybeMessage< ::resource::GetGroupsRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::GetGroupsRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::DeleteGroupRqst* Arena::CreateMaybeMessage< ::resource::DeleteGroupRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::DeleteGroupRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::DeleteGroupRsp* Arena::CreateMaybeMessage< ::resource::DeleteGroupRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::DeleteGroupRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::AddGroupMemberAccountRqst* Arena::CreateMaybeMessage< ::resource::AddGroupMemberAccountRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::AddGroupMemberAccountRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::AddGroupMemberAccountRsp* Arena::CreateMaybeMessage< ::resource::AddGroupMemberAccountRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::AddGroupMemberAccountRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::RemoveGroupMemberAccountRqst* Arena::CreateMaybeMessage< ::resource::RemoveGroupMemberAccountRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::RemoveGroupMemberAccountRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::RemoveGroupMemberAccountRsp* Arena::CreateMaybeMessage< ::resource::RemoveGroupMemberAccountRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::RemoveGroupMemberAccountRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::Organization* Arena::CreateMaybeMessage< ::resource::Organization >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::Organization >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::CreateOrganizationRqst* Arena::CreateMaybeMessage< ::resource::CreateOrganizationRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::CreateOrganizationRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::CreateOrganizationRsp* Arena::CreateMaybeMessage< ::resource::CreateOrganizationRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::CreateOrganizationRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::GetOrganizationsRqst* Arena::CreateMaybeMessage< ::resource::GetOrganizationsRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::GetOrganizationsRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::GetOrganizationsRsp* Arena::CreateMaybeMessage< ::resource::GetOrganizationsRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::GetOrganizationsRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::DeleteOrganizationRqst* Arena::CreateMaybeMessage< ::resource::DeleteOrganizationRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::DeleteOrganizationRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::DeleteOrganizationRsp* Arena::CreateMaybeMessage< ::resource::DeleteOrganizationRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::DeleteOrganizationRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::Peer* Arena::CreateMaybeMessage< ::resource::Peer >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::Peer >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::RegisterPeerRqst* Arena::CreateMaybeMessage< ::resource::RegisterPeerRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::RegisterPeerRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::RegisterPeerRsp* Arena::CreateMaybeMessage< ::resource::RegisterPeerRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::RegisterPeerRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::GetPeersRqst* Arena::CreateMaybeMessage< ::resource::GetPeersRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::GetPeersRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::GetPeersRsp* Arena::CreateMaybeMessage< ::resource::GetPeersRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::GetPeersRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::DeletePeerRqst* Arena::CreateMaybeMessage< ::resource::DeletePeerRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::DeletePeerRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::DeletePeerRsp* Arena::CreateMaybeMessage< ::resource::DeletePeerRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::DeletePeerRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::AddRoleActionsRqst* Arena::CreateMaybeMessage< ::resource::AddRoleActionsRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::AddRoleActionsRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::AddRoleActionsRsp* Arena::CreateMaybeMessage< ::resource::AddRoleActionsRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::AddRoleActionsRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::RemoveRoleActionRqst* Arena::CreateMaybeMessage< ::resource::RemoveRoleActionRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::RemoveRoleActionRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::RemoveRoleActionRsp* Arena::CreateMaybeMessage< ::resource::RemoveRoleActionRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::RemoveRoleActionRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::RemoveRolesActionRqst* Arena::CreateMaybeMessage< ::resource::RemoveRolesActionRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::RemoveRolesActionRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::RemoveRolesActionRsp* Arena::CreateMaybeMessage< ::resource::RemoveRolesActionRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::RemoveRolesActionRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::AddApplicationActionsRqst* Arena::CreateMaybeMessage< ::resource::AddApplicationActionsRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::AddApplicationActionsRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::AddApplicationActionsRsp* Arena::CreateMaybeMessage< ::resource::AddApplicationActionsRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::AddApplicationActionsRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::RemoveApplicationActionRqst* Arena::CreateMaybeMessage< ::resource::RemoveApplicationActionRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::RemoveApplicationActionRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::RemoveApplicationActionRsp* Arena::CreateMaybeMessage< ::resource::RemoveApplicationActionRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::RemoveApplicationActionRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::RemoveApplicationsActionRqst* Arena::CreateMaybeMessage< ::resource::RemoveApplicationsActionRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::RemoveApplicationsActionRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::RemoveApplicationsActionRsp* Arena::CreateMaybeMessage< ::resource::RemoveApplicationsActionRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::RemoveApplicationsActionRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::AddPeerActionsRqst* Arena::CreateMaybeMessage< ::resource::AddPeerActionsRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::AddPeerActionsRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::AddPeerActionsRsp* Arena::CreateMaybeMessage< ::resource::AddPeerActionsRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::AddPeerActionsRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::RemovePeerActionRqst* Arena::CreateMaybeMessage< ::resource::RemovePeerActionRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::RemovePeerActionRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::RemovePeerActionRsp* Arena::CreateMaybeMessage< ::resource::RemovePeerActionRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::RemovePeerActionRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::RemovePeersActionRqst* Arena::CreateMaybeMessage< ::resource::RemovePeersActionRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::RemovePeersActionRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::RemovePeersActionRsp* Arena::CreateMaybeMessage< ::resource::RemovePeersActionRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::RemovePeersActionRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::AddOrganizationAccountRqst* Arena::CreateMaybeMessage< ::resource::AddOrganizationAccountRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::AddOrganizationAccountRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::AddOrganizationAccountRsp* Arena::CreateMaybeMessage< ::resource::AddOrganizationAccountRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::AddOrganizationAccountRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::AddOrganizationGroupRqst* Arena::CreateMaybeMessage< ::resource::AddOrganizationGroupRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::AddOrganizationGroupRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::AddOrganizationGroupRsp* Arena::CreateMaybeMessage< ::resource::AddOrganizationGroupRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::AddOrganizationGroupRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::AddOrganizationRoleRqst* Arena::CreateMaybeMessage< ::resource::AddOrganizationRoleRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::AddOrganizationRoleRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::AddOrganizationRoleRsp* Arena::CreateMaybeMessage< ::resource::AddOrganizationRoleRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::AddOrganizationRoleRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::AddOrganizationApplicationRqst* Arena::CreateMaybeMessage< ::resource::AddOrganizationApplicationRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::AddOrganizationApplicationRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::AddOrganizationApplicationRsp* Arena::CreateMaybeMessage< ::resource::AddOrganizationApplicationRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::AddOrganizationApplicationRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::RemoveOrganizationGroupRqst* Arena::CreateMaybeMessage< ::resource::RemoveOrganizationGroupRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::RemoveOrganizationGroupRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::RemoveOrganizationGroupRsp* Arena::CreateMaybeMessage< ::resource::RemoveOrganizationGroupRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::RemoveOrganizationGroupRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::RemoveOrganizationRoleRqst* Arena::CreateMaybeMessage< ::resource::RemoveOrganizationRoleRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::RemoveOrganizationRoleRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::RemoveOrganizationRoleRsp* Arena::CreateMaybeMessage< ::resource::RemoveOrganizationRoleRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::RemoveOrganizationRoleRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::RemoveOrganizationApplicationRqst* Arena::CreateMaybeMessage< ::resource::RemoveOrganizationApplicationRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::RemoveOrganizationApplicationRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::RemoveOrganizationApplicationRsp* Arena::CreateMaybeMessage< ::resource::RemoveOrganizationApplicationRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::RemoveOrganizationApplicationRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::RemoveOrganizationAccountRqst* Arena::CreateMaybeMessage< ::resource::RemoveOrganizationAccountRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::RemoveOrganizationAccountRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::RemoveOrganizationAccountRsp* Arena::CreateMaybeMessage< ::resource::RemoveOrganizationAccountRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::RemoveOrganizationAccountRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::Notification* Arena::CreateMaybeMessage< ::resource::Notification >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::Notification >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::CreateNotificationRqst* Arena::CreateMaybeMessage< ::resource::CreateNotificationRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::CreateNotificationRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::CreateNotificationRsp* Arena::CreateMaybeMessage< ::resource::CreateNotificationRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::CreateNotificationRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::GetNotificationsRqst* Arena::CreateMaybeMessage< ::resource::GetNotificationsRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::GetNotificationsRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::GetNotificationsRsp* Arena::CreateMaybeMessage< ::resource::GetNotificationsRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::GetNotificationsRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::DeleteNotificationRqst* Arena::CreateMaybeMessage< ::resource::DeleteNotificationRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::DeleteNotificationRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::DeleteNotificationRsp* Arena::CreateMaybeMessage< ::resource::DeleteNotificationRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::DeleteNotificationRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::ClearAllNotificationsRqst* Arena::CreateMaybeMessage< ::resource::ClearAllNotificationsRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::ClearAllNotificationsRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::ClearAllNotificationsRsp* Arena::CreateMaybeMessage< ::resource::ClearAllNotificationsRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::ClearAllNotificationsRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::ClearNotificationsByTypeRqst* Arena::CreateMaybeMessage< ::resource::ClearNotificationsByTypeRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::ClearNotificationsByTypeRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::ClearNotificationsByTypeRsp* Arena::CreateMaybeMessage< ::resource::ClearNotificationsByTypeRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::ClearNotificationsByTypeRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::GetPackageDescriptorRequest* Arena::CreateMaybeMessage< ::resource::GetPackageDescriptorRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::GetPackageDescriptorRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::GetPackageDescriptorResponse* Arena::CreateMaybeMessage< ::resource::GetPackageDescriptorResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::GetPackageDescriptorResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::GetPackagesDescriptorRequest* Arena::CreateMaybeMessage< ::resource::GetPackagesDescriptorRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::GetPackagesDescriptorRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::GetPackagesDescriptorResponse* Arena::CreateMaybeMessage< ::resource::GetPackagesDescriptorResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::GetPackagesDescriptorResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::SetPackageDescriptorRequest* Arena::CreateMaybeMessage< ::resource::SetPackageDescriptorRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::SetPackageDescriptorRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::SetPackageDescriptorResponse* Arena::CreateMaybeMessage< ::resource::SetPackageDescriptorResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::SetPackageDescriptorResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::FindPackagesDescriptorRequest* Arena::CreateMaybeMessage< ::resource::FindPackagesDescriptorRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::FindPackagesDescriptorRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::FindPackagesDescriptorResponse* Arena::CreateMaybeMessage< ::resource::FindPackagesDescriptorResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::FindPackagesDescriptorResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::Session* Arena::CreateMaybeMessage< ::resource::Session >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::Session >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::UpdateSessionRequest* Arena::CreateMaybeMessage< ::resource::UpdateSessionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::UpdateSessionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::UpdateSessionResponse* Arena::CreateMaybeMessage< ::resource::UpdateSessionResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::UpdateSessionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::RemoveSessionRequest* Arena::CreateMaybeMessage< ::resource::RemoveSessionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::RemoveSessionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::RemoveSessionResponse* Arena::CreateMaybeMessage< ::resource::RemoveSessionResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::RemoveSessionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::GetSessionsRequest* Arena::CreateMaybeMessage< ::resource::GetSessionsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::GetSessionsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::GetSessionsResponse* Arena::CreateMaybeMessage< ::resource::GetSessionsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::GetSessionsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::GetSessionRequest* Arena::CreateMaybeMessage< ::resource::GetSessionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::GetSessionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::GetSessionResponse* Arena::CreateMaybeMessage< ::resource::GetSessionResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::GetSessionResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
